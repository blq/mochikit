/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base");
}
var MochiKit=MochiKit||{};
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
MochiKit.NAME="MochiKit";
MochiKit.VERSION="1.5";
MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.Base=MochiKit.Base||{};
MochiKit.Base.module=function(_1,_2,_3,_4){
var _5=_1[_2]=_1[_2]||{};
var _6=(_1.NAME?_1.NAME+".":"");
_5.NAME=_6+_2;
_5.VERSION=_3;
_5.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_5.toString=function(){
return this.__repr__();
};
for(var i=0;_4!=null&&i<_4.length;i++){
if(!(_4[i] in _1)){
throw _5.NAME+" depends on "+_6+_4[i]+"!";
}
}
return _5;
};
MochiKit.Base.module(MochiKit,"Base","1.5",[]);
MochiKit.Base.update=function(_8,_9){
if(_8===null||_8===undefined){
_8={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_8[k]=o[k];
}
}
}
return _8;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_d){
var _e=_d.split("-");
var cc=_e[0];
for(var i=1;i<_e.length;i++){
cc+=_e[i].charAt(0).toUpperCase()+_e[i].substring(1);
}
return cc;
},counter:function(n,_12){
if(arguments.length===0){
n=1;
}
if(arguments.length<2){
_12=1;
}
return function(){
var c=n;
n+=_12;
return c;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _1e=m.extend(null,arguments);
while(_1e.length){
var o=_1e.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_1e.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_21,obj,_23){
if(!_23){
_23=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_21){
_21=[];
}
for(var i=_23;i<l;i++){
_21.push(obj[i]);
}
}
return _21;
},updatetree:function(_26,obj){
if(_26===null||_26===undefined){
_26={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_26[k])=="object"&&typeof (v)=="object"&&!MochiKit.Base.isDateLike(v)&&!(v instanceof Array)){
arguments.callee(_26[k],v);
}else{
_26[k]=v;
}
}
}
}
return _26;
},setdefault:function(_2c,obj){
if(_2c===null||_2c===undefined){
_2c={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _2c)){
_2c[k]=o[k];
}
}
}
return _2c;
},keys:function(obj){
var _32=[];
for(var _33 in obj){
_32.push(_33);
}
return _32;
},values:function(obj){
var _35=[];
for(var _36 in obj){
_35.push(obj[_36]);
}
return _35;
},items:function(obj){
var _38=[];
for(var _39 in obj){
var v;
try{
v=obj[_39];
}
catch(e){
continue;
}
_38.push([_39,v]);
}
return _38;
},_newNamedError:function(_3b,_3c,_3d){
_3d.prototype=new MochiKit.Base.NamedError(_3b.NAME+"."+_3c);
_3d.prototype.constructor=_3d;
_3b[_3c]=_3d;
},operator:{NAME:"operator",truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},floordiv:function(a,b){
return Math.floor(a/b);
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},pow:function(a,b){
return Math.pow(a,b);
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},getitem:function(a,b){
return a[b];
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
},concat:function(a,b){
return MochiKit.Base.concat(a,b);
},iconcat:function(a,b){
return a.concat(b);
},setitem:function(a,b,c){
return a[b]=c;
},delitem:function(a,b){
delete a[b];
}},forwardCall:function(_8a){
return function(){
return this[_8a].apply(this,arguments);
};
},itemgetter:function(_8b){
return function(arg){
return arg[_8b];
};
},bool:function(_8d){
if(typeof (_8d)==="boolean"||_8d instanceof Boolean){
return _8d.valueOf();
}else{
if(typeof (_8d)==="string"||_8d instanceof String){
return _8d.length>0&&_8d!="false"&&_8d!="null"&&_8d!="undefined"&&_8d!="0";
}else{
if(typeof (_8d)==="number"||_8d instanceof Number){
return !isNaN(_8d)&&_8d!=0;
}else{
if(_8d!=null&&typeof (_8d.length)==="number"){
return _8d.length!==0;
}else{
return _8d!=null;
}
}
}
}
},typeMatcher:function(){
var _8e={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_8e[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _8e)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj,_97){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(arr,_9b){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(_9f,_a0){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _a4=[];
for(var i=1;i<arguments.length;i++){
_a4.push(fn(arguments[i]));
}
return _a4;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _aa=m.isArrayLike;
if(arguments.length<=2){
if(!_aa(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _ab=[];
for(var i=0;i<lst.length;i++){
_ab.push(fn(lst[i]));
}
return _ab;
}else{
if(fn===null){
fn=Array;
}
var _ad=null;
for(var i=1;i<arguments.length;i++){
if(!_aa(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_ad===null||_ad>l){
_ad=l;
}
}
_ab=[];
for(var i=0;i<_ad;i++){
var _af=[];
for(var j=1;j<arguments.length;j++){
_af.push(arguments[j][i]);
}
_ab.push(fn.apply(this,_af));
}
return _ab;
}
},xfilter:function(fn){
var _b2=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_b2.push(o);
}
}
return _b2;
},filter:function(fn,lst,_b7){
var _b8=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_b7);
}else{
if(typeof (_b7)=="undefined"||_b7===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_b8.push(o);
}
}
}else{
for(var i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_b7,o)){
_b8.push(o);
}
}
}
}
return _b8;
},_wrapDumbFunction:function(_bc){
return function(){
switch(arguments.length){
case 0:
return _bc();
case 1:
return _bc(arguments[0]);
case 2:
return _bc(arguments[0],arguments[1]);
case 3:
return _bc(arguments[0],arguments[1],arguments[2]);
}
var _bd=[];
for(var i=0;i<arguments.length;i++){
_bd.push("arguments["+i+"]");
}
return eval("(func("+_bd.join(",")+"))");
};
},methodcaller:function(_bf){
var _c0=MochiKit.Base.extend(null,arguments,1);
if(typeof (_bf)=="function"){
return function(obj){
return _bf.apply(obj,_c0);
};
}else{
return function(obj){
return obj[_bf].apply(obj,_c0);
};
}
},method:function(_c3,_c4){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_c4,_c3],arguments,2));
},compose:function(f1,f2){
var _c8=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_c8.push(fn);
}
return function(){
var _cc=arguments;
for(var i=_c8.length-1;i>=0;i--){
_cc=[_c8[i].apply(this,_cc)];
}
return _cc[0];
};
},bind:function(_ce,_cf){
if(typeof (_ce)=="string"){
_ce=_cf[_ce];
}
var _d0=_ce.im_func;
var _d1=_ce.im_preargs;
var _d2=_ce.im_self;
var m=MochiKit.Base;
if(typeof (_ce)=="function"&&typeof (_ce.apply)=="undefined"){
_ce=m._wrapDumbFunction(_ce);
}
if(typeof (_d0)!="function"){
_d0=_ce;
}
if(typeof (_cf)!="undefined"){
_d2=_cf;
}
if(typeof (_d1)=="undefined"){
_d1=[];
}else{
_d1=_d1.slice();
}
m.extend(_d1,arguments,2);
var _d4=function(){
var _d5=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_d5=m.concat(me.im_preargs,_d5);
}
var _d7=me.im_self;
if(!_d7){
_d7=this;
}
return me.im_func.apply(_d7,_d5);
};
_d4.im_self=_d2;
_d4.im_func=_d0;
_d4.im_preargs=_d1;
if(typeof (_d0.NAME)=="string"){
_d4.NAME="bind("+_d0.NAME+",...)";
}
return _d4;
},bindLate:function(_d8,_d9){
var m=MochiKit.Base;
var _db=arguments;
if(typeof (_d8)==="string"){
_db=m.extend([m.forwardCall(_d8)],arguments,1);
return m.bind.apply(this,_db);
}
return m.bind.apply(this,_db);
},bindMethods:function(_dc){
var _dd=MochiKit.Base.bind;
for(var k in _dc){
var _df=_dc[k];
if(typeof (_df)=="function"){
_dc[k]=_dd(_df,_dc);
}
}
},registerComparator:function(_e0,_e1,_e2,_e3){
MochiKit.Base.comparatorRegistry.register(_e0,_e1,_e2,_e3);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _e6=(typeof (a)=="undefined"||a===null);
var _e7=(typeof (b)=="undefined"||b===null);
if(_e6&&_e7){
return 0;
}else{
if(_e6){
return -1;
}else{
if(_e7){
return 1;
}
}
}
var m=MochiKit.Base;
var _e9=m._primitives;
if(!(typeof (a) in _e9&&typeof (b) in _e9)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _ea=m.repr;
throw new TypeError(_ea(a)+" and "+_ea(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _ef=MochiKit.Base.compare;
var _f0=a.length;
var _f1=0;
if(_f0>b.length){
_f1=1;
_f0=b.length;
}else{
if(_f0<b.length){
_f1=-1;
}
}
for(var i=0;i<_f0;i++){
var cmp=_ef(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _f1;
},registerRepr:function(_f4,_f5,_f6,_f7){
MochiKit.Base.reprRegistry.register(_f4,_f5,_f6,_f7);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
try{
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
catch(ignore){
}
}
try{
var _f9=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_f9=_f9.replace(/^\s+/,"").replace(/\s+/g," ");
_f9=_f9.replace(/,(\S)/,", $1");
var idx=_f9.indexOf("{");
if(idx!=-1){
_f9=_f9.substr(0,idx)+"{...}";
}
}
return _f9;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_ff,_100,wrap,_102){
MochiKit.Base.jsonRegistry.register(_ff,_100,wrap,_102);
},evalJSON:function(_103){
return eval("("+MochiKit.Base._filterJSON(_103)+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
return (m)?m[1]:s;
},serializeJSON:function(o){
var _107=typeof (o);
if(_107=="number"||_107=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_107=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _10d;
if(typeof (o.toJSON)=="function"){
_10d=o.toJSON();
if(o!==_10d){
return me(_10d);
}
}
if(typeof (o.__json__)=="function"){
_10d=o.__json__();
if(o!==_10d){
return me(_10d);
}
}
if(typeof (o.json)=="function"){
_10d=o.json();
if(o!==_10d){
return me(_10d);
}
}
if(_107!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_10d=m.jsonRegistry.match(o);
if(o!==_10d){
return me(_10d);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_107=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_107=="function"){
return null;
}
res=[];
for(var k in o){
if(o.hasOwnProperty(k)){
var _111;
if(typeof (k)=="number"){
_111="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_111=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_111+":"+val);
}
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(self,arr){
if(self.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(self,arr)===0);
},concat:function(){
var rval=[];
var _117=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_117(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _11b=m.compare;
if(arguments.length==1){
return function(a,b){
return _11b(a[key],b[key]);
};
}
var _11e=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_11e.length);i++){
var key=_11e[i];
rval=_11b(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _125=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _125(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_12a,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _12d=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_12d(o,cur)==_12a){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_131,_132,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_132)=="undefined"||_132===null){
_132=0;
}
for(var i=_132;i<end;i++){
if(lst[i]===_131){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _138=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_138+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_138<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_138;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(MochiKit.Base.compare);
if(data.length%2==0){
var _13c=data.length/2;
return (data[_13c]+data[_13c-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_13e,_13f,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_13f)=="undefined"||_13f===null){
_13f=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_13f;i<end;i++){
if(cmp(lst[i],_13e)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_144){
var _145=[node];
var _146=MochiKit.Base.extend;
while(_145.length){
var res=_144(_145.shift());
if(res){
_146(_145,res);
}
}
},nameFunctions:function(_148){
var base=_148.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _148){
var o=_148[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_14c,_14d){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_14c)=="string"||(typeof (_14c.nodeType)!="undefined"&&_14c.nodeType>0))){
var kv=MochiKit.DOM.formContents(_14c);
_14c=kv[0];
_14d=kv[1];
}else{
if(arguments.length==1){
if(typeof (_14c.length)=="number"&&_14c.length==2){
return arguments.callee(_14c[0],_14c[1]);
}
var o=_14c;
_14c=[];
_14d=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_14c.push(k);
_14d.push(v[i]);
}
}else{
_14c.push(k);
_14d.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_14c.length,_14d.length);
var _155=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_14d[i];
if(typeof (v)!="undefined"&&v!==null){
if(MochiKit.Base.isDateLike(v)){
v=MochiKit.DateTime.toISOTimestamp(v,true);
}
rval.push(_155(_14c[i])+"="+_155(v));
}
}
return rval.join("&");
},parseQueryString:function(_156,_157){
var qstr=(_156.charAt(0)=="?")?_156.substring(1):_156;
var _159=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _15b;
if(typeof (decodeURIComponent)!="undefined"){
_15b=decodeURIComponent;
}else{
_15b=unescape;
}
if(_157){
for(var i=0;i<_159.length;i++){
var pair=_159[i].split("=");
var name=_15b(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_15b(pair.join("=")));
}
}else{
for(var i=0;i<_159.length;i++){
pair=_159[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_15b(name)]=_15b(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_161,wrap,_163){
if(_163){
this.pairs.unshift([name,_161,wrap]);
}else{
this.pairs.push([name,_161,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.moduleExport=function(_169,_16a){
var SKIP={toString:true,NAME:true,VERSION:true};
var mods=MochiKit.Base.extend([],arguments,1);
while((_16a=mods.shift())!=null){
for(var k in _16a){
var v=_16a[k];
if(v!=null){
var _16f=(typeof (v.__export__)=="boolean");
var _170=(k[0]!=="_"&&!SKIP[k]);
if(_16f?v.__export__:_170){
if(typeof (v)=="object"&&v.NAME&&v.VERSION){
mods.push(v);
}else{
_169[k]=_16a[k];
}
}
}
}
}
return _169;
};
MochiKit.Base._exportSymbols=function(_171,_172){
if(MochiKit.__export__!==false&&_172.__export__!==false){
MochiKit.Base.moduleExport(_171,_172);
}
};
MochiKit.Base._deprecated=function(_173,name,_175,_176,_177){
if(typeof (_173)==="string"){
if(_173.indexOf("MochiKit.")===0){
_173=_173.substring(9);
}
_173=MochiKit[_173];
}
var _178=_175.split(".")[1];
var _179=_175.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_173.NAME+"."+name+" is deprecated since version "+_176+". Use "+_175+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_178]){
throw new Error(msg);
}
return MochiKit[_178][_179].apply(this,arguments);
};
func.__export__=(_177===true);
_173[name]=func;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=function(){
};
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3");
m._deprecated(m,"find","MochiKit.Base.findValue","1.3");
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_17e){
return encodeURIComponent(_17e).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_17f){
return escape(_17f).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.NamedError.prototype.constructor=m.NamedError;
m.NamedError.prototype.repr=function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
};
m.NamedError.prototype.toString=m.forwardCall("repr");
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.isValue=m.typeMatcher("boolean","number","string");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
m.nameFunctions(this.operator);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Iter","1.5",["Base"]);
MochiKit.Base.update(MochiKit.Iter,{registerIteratorFactory:function(name,_182,_183,_184){
MochiKit.Iter.iteratorRegistry.register(name,_182,_183,_184);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_186,_187){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_187;
},_186);
}
if(typeof (_186.next)=="function"){
return _186;
}else{
if(typeof (_186.iter)=="function"){
return _186.iter();
}else{
if(typeof (_186.__iterator__)=="function"){
return _186.__iterator__(false);
}
}
}
try{
return self.iteratorRegistry.match(_186);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_186)+": "+m.repr(_186)+" is not iterable");
}
throw e;
}
},count:function(n,step){
if(!n){
n=0;
}
if(arguments.length<2){
step=1;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n,step)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _192=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_192.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_198){
return _198.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _19e=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_19e);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _1aa=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_1aa=arguments[1];
stop=arguments[2];
}else{
_1aa=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_1aa,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
if(_1aa>=stop){
throw self.StopIteration;
}
var rval;
while(i<_1aa){
rval=seq.next();
i++;
}
_1aa+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _1b4=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_1b4));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1bf=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1bf.length>1){
try{
return _1bf[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1bf.shift();
}
}
if(_1bf.length==1){
var arg=_1bf.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1ca,sync,_1cc){
sync.pos[_1ca]=-1;
var m=MochiKit.Base;
var _1ce=m.listMin;
return {repr:function(){
return "tee("+_1ca+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1ca];
if(i==sync.max){
rval=_1cc.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1ca]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1ca]+=1;
if(i==sync.min&&_1ce(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1d1,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1d1=self.iter(_1d1);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1d1));
}
return rval;
},list:function(_1d8){
var rval;
if(_1d8 instanceof Array){
return _1d8.slice();
}
if(typeof (_1d8)=="function"&&!(_1d8 instanceof Function)&&typeof (_1d8.length)=="number"){
rval=[];
for(var i=0;i<_1d8.length;i++){
rval.push(_1d8[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1d8=self.iter(_1d8);
rval=[];
var _1dc;
try{
while(true){
_1dc=_1d8.next();
rval.push(_1dc);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1de,_1df){
var i=0;
var x=_1df;
var self=MochiKit.Iter;
_1de=self.iter(_1de);
if(arguments.length<3){
try{
x=_1de.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1de.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1e3=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1e3=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1e3=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1e3>=stop)||(step<0&&_1e3<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1e3;
_1e3+=step;
return rval;
},repr:function(){
return "range("+[_1e3,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1e7,_1e8){
if(typeof (_1e8)=="undefined"||_1e8===null){
_1e8=0;
}
var x=_1e8;
var self=MochiKit.Iter;
_1e7=self.iter(_1e7);
try{
while(true){
x+=_1e7.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1eb){
var self=MochiKit.Iter;
_1eb=self.iter(_1eb);
try{
while(true){
_1eb.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1ed,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_1ed)&&!self.isIterable(_1ed)){
try{
for(var i=0;i<_1ed.length;i++){
func(_1ed[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_1ed));
}
return func;
},every:function(_1f3,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1f3).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1f6,cmp){
var rval=MochiKit.Iter.list(_1f6);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1f9){
var rval=MochiKit.Iter.list(_1f9);
rval.reverse();
return rval;
},some:function(_1fb,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1fb).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1ff,skip){
skip=skip||0;
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_1ff)&&!self.isIterable(_1ff)){
for(var i=skip;i<_1ff.length;i++){
lst.push(_1ff[i]);
}
}else{
_1ff=self.iter(_1ff);
try{
while(skip-->0){
_1ff.next();
}
while(true){
lst.push(_1ff.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_204,_205){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_205=m.operator.identity;
}
_204=self.iter(_204);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_204.next();
k=_205(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _20c=true;
var _20d=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_20d(k,pk)===0){
fetch();
if(_20c){
_20c=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_20d(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_20e,_20f){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_20f=m.operator.identity;
}
_20e=self.iter(_20e);
var _212=[];
var _213=true;
var _214;
var _215=m.compare;
while(true){
try{
var _216=_20e.next();
var key=_20f(_216);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_213||_215(key,_214)!==0){
var _218=[];
_212.push([key,_218]);
}
_218.push(_216);
_213=false;
_214=key;
}
return _212;
},arrayLikeIter:function(_219){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_219.length){
throw MochiKit.Iter.StopIteration;
}
return _219[i++];
}};
},hasIterateNext:function(_21b){
return (_21b&&typeof (_21b.iterateNext)=="function");
},iterateNextIter:function(_21c){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_21c.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Logging");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_220,info){
this.num=num;
this.level=_220;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_223){
var self=MochiKit.Logging;
if(typeof (_223)=="string"){
_223=self.LogLevel[_223];
}
return function(msg){
var _226=msg.level;
if(typeof (_226)=="string"){
_226=self.LogLevel[_226];
}
return _226>=_223;
};
},isLogMessage:function(_227){
var _228=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _228)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_22d){
this.counter=0;
if(typeof (_22d)=="undefined"||_22d===null){
_22d=-1;
}
this.maxSize=_22d;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_232,_233,_234){
if(typeof (_233)=="string"){
_233=MochiKit.Logging.logLevelAtLeast(_233);
}
var _235=[_233,_234];
_235.ident=_232;
this.listeners[_232]=_235;
},removeListener:function(_236){
delete this.listeners[_236];
},baseLog:function(_237,_238,_239){
if(typeof (_237)=="number"){
if(_237>=MochiKit.Logging.LogLevel.FATAL){
_237="FATAL";
}else{
if(_237>=MochiKit.Logging.LogLevel.ERROR){
_237="ERROR";
}else{
if(_237>=MochiKit.Logging.LogLevel.WARNING){
_237="WARNING";
}else{
if(_237>=MochiKit.Logging.LogLevel.INFO){
_237="INFO";
}else{
_237="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_237,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_23b){
var _23c=0;
if(!(typeof (_23b)=="undefined"||_23b===null)){
_23c=Math.max(0,this._messages.length-_23b);
}
return this._messages.slice(_23c);
},getMessageText:function(_23d){
if(typeof (_23d)=="undefined"||_23d===null){
_23d=30;
}
var _23e=this.getMessages(_23d);
if(_23e.length){
var lst=MochiKit.Base.map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_23e);
lst.unshift("LAST "+_23e.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_241){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_241||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _243=m.partial;
var _244=this.Logger;
var _245=_244.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_243(_245,"DEBUG"),log:_243(_245,"INFO"),error:_243(_245,"ERROR"),fatal:_243(_245,"FATAL"),warning:_243(_245,"WARNING")});
var self=this;
var _247=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_247("log");
this.logError=_247("error");
this.logDebug=_247("debug");
this.logFatal=_247("fatal");
this.logWarning=_247("warning");
this.logger=new _244();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DateTime");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var date=new Date(parseInt(iso[0],10),parseInt(iso[1],10)-1,parseInt(iso[2],10));
date.setFullYear(iso[0]);
date.setMonth(iso[1]-1);
date.setDate(iso[2]);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_24f,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_24f=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_24f,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_24f,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_24f,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_257){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _258=MochiKit.DateTime._padTwo;
if(_257){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
var lst=[(_257?_258(date.getHours()):date.getHours()),_258(date.getMinutes()),_258(date.getSeconds())];
return lst.join(":")+(_257?"Z":"");
};
MochiKit.DateTime.toISOTimestamp=function(date,_25b){
if(typeof (date)=="undefined"||date===null){
return null;
}
var time=MochiKit.DateTime.toISOTime(date,_25b);
var sep=_25b?"T":" ";
if(_25b){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+time;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _25f=MochiKit.DateTime._padTwo;
var _260=MochiKit.DateTime._padFour;
return [_260(date.getFullYear()),_25f(date.getMonth()+1),_25f(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _266=MochiKit.DateTime._padTwo;
return [_266(d.getMonth()+1),_266(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Format");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_268,_269,_26a,_26b,_26c,_26d,_26e,_26f,_270){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _268;
}
var _272=_269;
var _273=_26a;
if(num<0){
num=-num;
}else{
_272=_272.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_26b);
if(_26c){
num=num*100;
_273=fmt.percent+_273;
}
num=MochiKit.Format.roundToFixed(num,_26d);
var _276=num.split(/\./);
var _277=_276[0];
var frac=(_276.length==1)?"":_276[1];
var res="";
while(_277.length<_26e){
_277="0"+_277;
}
if(_26f){
while(_277.length>_26f){
var i=_277.length-_26f;
res=fmt.separator+_277.substring(i,_277.length)+res;
_277=_277.substring(0,i);
}
}
res=_277+res;
if(_26d>0){
while(frac.length<_270){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _272+res+_273;
};
};
MochiKit.Format.numberFormatter=function(_27b,_27c,_27d){
if(typeof (_27c)=="undefined"){
_27c="";
}
var _27e=_27b.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_27e){
throw TypeError("Invalid pattern");
}
var _27f=_27b.substr(0,_27e.index);
var _280=_27b.substr(_27e.index+_27e[0].length);
if(_27f.search(/-/)==-1){
_27f=_27f+"-";
}
var _281=_27e[1];
var frac=(typeof (_27e[2])=="string"&&_27e[2]!="")?_27e[2]:"";
var _283=(typeof (_27e[3])=="string"&&_27e[3]!="");
var tmp=_281.split(/,/);
var _285;
if(typeof (_27d)=="undefined"){
_27d="default";
}
if(tmp.length==1){
_285=null;
}else{
_285=tmp[1].length;
}
var _286=_281.length-_281.replace(/0/g,"").length;
var _287=frac.length-frac.replace(/0/g,"").length;
var _288=frac.length;
var rval=MochiKit.Format._numberFormatter(_27c,_27f,_280,_27d,_283,_288,_286,_285,_287);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",m.map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_28d){
if(typeof (_28d)=="undefined"||_28d===null){
_28d="default";
}
if(typeof (_28d)=="string"){
var rval=MochiKit.Format.LOCALE[_28d];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_28d]=rval;
}
return rval;
}else{
return _28d;
}
};
MochiKit.Format.twoDigitAverage=function(_28f,_290){
if(_290){
var res=_28f/_290;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_292){
var res=MochiKit.Format.roundToFixed(_292,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_295){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_295){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_295+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_297){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_297){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_297+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_299){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_299),_299);
};
MochiKit.Format.truncToFixed=function(_29b,_29c){
var _29d=MochiKit.Format._numberToFixed(_29b,_29c);
var _29e=_29d.indexOf(".");
if(_29e>0&&_29e+_29c+1<_29d.length){
_29d=_29d.substring(0,_29e+_29c+1);
_29d=MochiKit.Format._shiftNumber(_29d,0);
}
return _29d;
};
MochiKit.Format.roundToFixed=function(_29f,_2a0){
var _2a1=MochiKit.Format._numberToFixed(_29f,_2a0);
var _2a2=_2a1.indexOf(".");
if(_2a2>0&&_2a2+_2a0+1<_2a1.length){
var str=MochiKit.Format._shiftNumber(_2a1,_2a0);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_2a1=MochiKit.Format._shiftNumber(str,-_2a0);
}
return _2a1;
};
MochiKit.Format._numberToFixed=function(_2a4,_2a5){
var str=_2a4.toString();
var _2a7=str.split(/[eE]/);
var exp=(_2a7.length===1)?0:parseInt(_2a7[1],10)||0;
var _2a9=MochiKit.Format._shiftNumber(_2a7[0],exp);
_2a7=_2a9.split(/\./);
var _2aa=_2a7[0];
var frac=(_2a7.length===1)?"":_2a7[1];
while(frac.length<_2a5){
frac+="0";
}
if(frac.length>0){
return _2aa+"."+frac;
}else{
return _2aa;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_2af){
return MochiKit.Format.twoDigitFloat(100*_2af)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text");
goog.require("MochiKit.Base");
goog.require("MochiKit.Format");
}
MochiKit.Base.module(MochiKit,"Text","1.5",["Base","Format"]);
MochiKit.Text.startsWith=function(_2b4,str){
return str!=null&&_2b4!=null&&str.indexOf(_2b4)==0;
};
MochiKit.Text.endsWith=function(_2b6,str){
return str!=null&&_2b6!=null&&str.lastIndexOf(_2b6)==Math.max(str.length-_2b6.length,0);
};
MochiKit.Text.contains=function(_2b8,str){
return str!=null&&_2b8!=null&&str.indexOf(_2b8)>=0;
};
MochiKit.Text.padLeft=function(str,_2bb,_2bc){
str=str||"";
_2bc=_2bc||" ";
while(str.length<_2bb){
str=_2bc+str;
}
return str;
};
MochiKit.Text.padRight=function(str,_2be,_2bf){
str=str||"";
_2bf=_2bf||" ";
while(str.length<_2be){
str+=_2bf;
}
return str;
};
MochiKit.Text.truncate=function(str,_2c1,tail){
if(str==null||str.length<=_2c1||_2c1<0){
return str;
}else{
if(tail!=null){
str=str.slice(0,Math.max(0,_2c1-tail.length));
if(typeof (str)=="string"){
return str+tail;
}else{
return MochiKit.Base.extend(str,tail);
}
}else{
return str.slice(0,_2c1);
}
}
};
MochiKit.Text.split=function(str,_2c4,max){
if(str==null){
return str;
}
_2c4=_2c4||"\n";
var bits=str.split(_2c4);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(max,bits.length,bits.slice(max,bits.length).join(_2c4));
return bits;
};
MochiKit.Text.rsplit=function(str,_2c8,max){
if(str==null){
return str;
}
_2c8=_2c8||"\n";
var bits=str.split(_2c8);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(0,bits.length-max,bits.slice(0,bits.length-max).join(_2c8));
return bits;
};
MochiKit.Text.formatter=function(_2cb,_2cc){
if(typeof (_2cc)=="undefined"){
_2cc=MochiKit.Format.formatLocale();
}else{
if(typeof (_2cc)=="string"){
_2cc=MochiKit.Format.formatLocale(_2cc);
}
}
var _2cd=MochiKit.Text._parsePattern(_2cb);
return function(){
var _2ce=MochiKit.Base.extend([],arguments);
var res=[];
for(var i=0;i<_2cd.length;i++){
if(typeof (_2cd[i])=="string"){
res.push(_2cd[i]);
}else{
res.push(MochiKit.Text.formatValue(_2cd[i],_2ce,_2cc));
}
}
return res.join("");
};
};
MochiKit.Text.format=function(_2d1){
var func=MochiKit.Text.formatter(_2d1);
return func.apply(this,MochiKit.Base.extend([],arguments,1));
};
MochiKit.Text.formatValue=function(spec,_2d4,_2d5){
var self=MochiKit.Text;
if(typeof (spec)==="string"){
spec=self._parseFormatFlags(spec,0,spec.length);
}
for(var i=0;spec.path!=null&&i<spec.path.length;i++){
if(_2d4!=null){
_2d4=_2d4[spec.path[i]];
}
}
if(typeof (_2d5)=="undefined"){
_2d5=MochiKit.Format.formatLocale();
}else{
if(typeof (_2d5)=="string"){
_2d5=MochiKit.Format.formatLocale(_2d5);
}
}
var str="";
if(spec.type=="number"){
if(_2d4 instanceof Number){
_2d4=_2d4.valueOf();
}
if(typeof (_2d4)!="number"||isNaN(_2d4)){
str="";
}else{
if(_2d4===Number.POSITIVE_INFINITY){
str="\u221e";
}else{
if(_2d4===Number.NEGATIVE_INFINITY){
str="-\u221e";
}else{
var sign=(spec.sign==="-")?"":spec.sign;
sign=(_2d4<0)?"-":sign;
_2d4=Math.abs(_2d4);
if(spec.format==="%"){
str=self._truncToPercent(_2d4,spec.precision);
}else{
if(spec.format==="d"){
str=MochiKit.Format.roundToFixed(_2d4,0);
}else{
if(spec.radix!=10){
str=Math.floor(_2d4).toString(spec.radix);
if(spec.format==="x"){
str=str.toLowerCase();
}else{
if(spec.format==="X"){
str=str.toUpperCase();
}
}
}else{
if(spec.precision>=0){
str=MochiKit.Format.roundToFixed(_2d4,spec.precision);
}else{
str=_2d4.toString();
}
}
}
}
if(spec.padding==="0"&&spec.format==="%"){
str=self.padLeft(str,spec.width-sign.length-1,"0");
}else{
if(spec.padding=="0"){
str=self.padLeft(str,spec.width-sign.length,"0");
}
}
str=self._localizeNumber(str,_2d5,spec.grouping);
str=sign+str;
}
}
}
if(str!==""&&spec.format==="%"){
str=str+_2d5.percent;
}
}else{
if(spec.format=="r"){
str=MochiKit.Base.repr(_2d4);
}else{
str=(_2d4==null)?"null":_2d4.toString();
}
str=self.truncate(str,spec.precision);
}
if(spec.align=="<"){
str=self.padRight(str,spec.width);
}else{
str=self.padLeft(str,spec.width);
}
return str;
};
MochiKit.Text._localizeNumber=function(num,_2db,_2dc){
var _2dd=num.split(/\./);
var _2de=_2dd[0];
var frac=(_2dd.length==1)?"":_2dd[1];
var res=(frac.length>0)?_2db.decimal:"";
while(_2dc&&frac.length>3){
res=res+frac.substring(0,3)+_2db.separator;
frac=frac.substring(3);
if(_2de.charAt(0)=="0"){
_2de=_2de.substring(1);
}
}
if(frac.length>0){
res+=frac;
}
while(_2dc&&_2de.length>3){
var pos=_2de.length-3;
res=_2db.separator+_2de.substring(pos)+res;
_2de=_2de.substring((_2de.charAt(0)=="0")?1:0,pos);
}
return _2de+res;
};
MochiKit.Text._parsePattern=function(_2e2){
var self=MochiKit.Text;
var _2e4=[];
var re=/{[^{}]*}|{{?|}}?/g;
var _2e6=re.lastIndex=0;
var m;
while((m=re.exec(_2e2))!=null){
if(_2e6<m.index){
_2e4.push(_2e2.substring(_2e6,m.index));
}
var str=m[0];
_2e6=m.index+str.length;
if(self.startsWith("{",str)&&self.endsWith("}",str)){
_2e4.push(self._parseFormat(_2e2,m.index+1,_2e6-1));
}else{
if(self.startsWith("{{",str)||self.startsWith("}}",str)){
_2e4.push(str.substring(1));
}else{
if(self.startsWith("{",str)){
var msg="unescaped { char, should be escaped as {{";
throw new self.FormatPatternError(_2e2,m.index,msg);
}else{
if(self.startsWith("}",str)){
var msg="unescaped } char, should be escaped as }}";
throw new self.FormatPatternError(_2e2,m.index,msg);
}
}
}
}
}
if(_2e6<_2e2.length){
_2e4.push(_2e2.substring(_2e6));
}
return _2e4;
};
MochiKit.Text._parseFormat=function(_2ea,_2eb,_2ec){
var self=MochiKit.Text;
var text=_2ea.substring(_2eb,_2ec);
var _2ef=self.split(text,":",1);
var path=_2ef[0];
var _2f1=_2eb+path.length+((_2ef.length==1)?0:1);
var info=self._parseFormatFlags(_2ea,_2f1,_2ec);
info.path=(path=="")?[]:path.split(".");
for(var i=0;i<info.path.length;i++){
var v=info.path[i];
v=v.replace(/^\s+/,"").replace(/\s+$/,"");
if(v==""&&info.path.length==1){
v=0;
}else{
if(v==""){
var msg="format value path contains blanks";
throw new self.FormatPatternError(_2ea,_2eb,msg);
}else{
if(/^\d+$/.test(v)){
v=parseInt(v,10);
}
}
}
info.path[i]=v;
}
if(info.path.length<=0||typeof (info.path[0])!="number"){
info.path.unshift(0);
}
return info;
};
MochiKit.Text._parseFormatFlags=function(_2f6,_2f7,_2f8){
var _2f9=MochiKit.Base.update;
var info={type:"string",format:"s",width:0,precision:-1,align:">",sign:"-",padding:" ",grouping:false};
var text=_2f6.substring(_2f7,_2f8).replace(/\s+$/,"");
var m=/^([<>+ 0,-]+)?(\d+)?(\.\d*)?([srbdoxXf%])?(.*)$/.exec(text);
var _2fd=m[1];
var _2fe=m[2];
var _2ff=m[3];
var type=m[4];
var _301=m[5];
for(var i=0;_2fd&&i<_2fd.length;i++){
var chr=_2fd.charAt(i);
if(chr=="<"||chr==">"){
info.align=chr;
}else{
if(chr=="+"||chr=="-"||chr==" "){
info.sign=chr;
}else{
if(chr=="0"){
info.padding=chr;
}else{
if(chr==","){
info.grouping=true;
}
}
}
}
}
if(_2fe){
info.width=parseInt(_2fe,10);
}
if(_2ff&&_2ff.length>1){
info.precision=parseInt(_2ff.substring(1),10);
}
if(type=="s"||type=="r"){
info.format=type;
}else{
if(type=="b"){
_2f9(info,{type:"number",format:type,radix:2});
}else{
if(type=="o"){
_2f9(info,{type:"number",format:type,radix:8});
}else{
if(type=="x"||type=="X"){
_2f9(info,{type:"number",format:type,radix:16});
}else{
if(type=="d"||type=="f"||type=="%"){
_2f9(info,{type:"number",format:type,radix:10});
}
}
}
}
}
if(_301){
var msg="unsupported format flag: "+_301.charAt(0);
throw new MochiKit.Text.FormatPatternError(_2f6,_2f7,msg);
}
return info;
};
MochiKit.Text._truncToPercent=function(_305,_306){
var str;
if(_306>=0){
str=MochiKit.Format.roundToFixed(_305,_306+2);
}else{
str=(_305==null)?"0":_305.toString();
}
var arr=MochiKit.Text.split(str,".",2);
var frac=MochiKit.Text.padRight(arr[1],2,"0");
var _30a=arr[0]+frac.substring(0,2);
frac=frac.substring(2);
while(/^0[0-9]/.test(_30a)){
_30a=_30a.substring(1);
}
return (frac.length<=0)?_30a:_30a+"."+frac;
};
MochiKit.Text.FormatPatternError=function(_30b,pos,_30d){
this.pattern=_30b;
this.pos=pos;
this.message=_30d;
};
MochiKit.Text.FormatPatternError.prototype=new MochiKit.Base.NamedError("MochiKit.Text.FormatPatternError");
MochiKit.Text.FormatPatternError.constructor=MochiKit.Text.FormatPatternError;
if(MochiKit.__export__){
formatter=MochiKit.Text.formatter;
format=MochiKit.Text.format;
formatValue=MochiKit.Text.formatValue;
}
MochiKit.Base.nameFunctions(MochiKit.Text);
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Async");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_30e){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_30e;
this.silentlyCancelled=false;
this.chained=false;
this.finalized=false;
};
MochiKit.Async.Deferred.prototype.repr=function(){
return "Deferred("+this.id+", "+this.state()+")";
};
MochiKit.Async.Deferred.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.Deferred.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.Deferred.prototype.state=function(){
if(this.fired==-1){
return "unfired";
}else{
if(this.fired===0){
return "success";
}else{
return "error";
}
}
};
MochiKit.Async.Deferred.prototype.cancel=function(e){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(typeof (e)==="string"){
e=new self.GenericError(e);
}else{
if(!(e instanceof Error)){
e=new self.CancelledError(this);
}
}
this.errback(e);
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel(e);
}
}
};
MochiKit.Async.Deferred.prototype._resback=function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
if(this.paused===0){
this._fire();
}
};
MochiKit.Async.Deferred.prototype._check=function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
};
MochiKit.Async.Deferred.prototype.callback=function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.errback=function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.addBoth=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
};
MochiKit.Async.Deferred.prototype.addCallback=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
};
MochiKit.Async.Deferred.prototype.addErrback=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
};
MochiKit.Async.Deferred.prototype.addCallbacks=function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype.setFinalizer=function(fn){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
this._finalizer=fn;
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype._fire=function(){
var _31b=this.chain;
var _31c=this.fired;
var res=this.results[_31c];
var self=this;
var cb=null;
while(_31b.length>0&&this.paused===0){
var pair=_31b.shift();
var f=pair[_31c];
if(f===null){
continue;
}
try{
var ret=f(res);
if(ret!==undefined){
res=ret;
}
_31c=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self.paused--;
self._resback(res);
};
this.paused++;
}
}
catch(err){
_31c=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_31c;
this.results[_31c]=res;
if(this.chain.length==0&&this.paused===0&&this._finalizer){
this.finalized=true;
this._finalizer(res);
}
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_325){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_327){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _32a=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_32a.length;i++){
var func=_32a[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e2){
}
}
var _32f=null;
try{
_32f=this.status;
if(!_32f&&m.isNotEmpty(this.responseText)){
_32f=304;
}
}
catch(e){
}
if(_32f==200||_32f==201||_32f==204||_32f==304||_32f==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e2){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_333){
if(typeof (_333)=="undefined"||_333===null){
_333="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_333);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self.callLater(0,self._doXHR,url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:"",async:true},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,opts.async,opts.username,opts.password);
}else{
req.open(opts.method,url,opts.async);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _340=opts.headers;
if(!m.isArrayLike(_340)){
_340=m.items(_340);
}
for(var i=0;i<_340.length;i++){
var _342=_340[i];
var name=_342[0];
var _344=_342[1];
req.setRequestHeader(name,_344);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},loadScript:function(url){
var d=new MochiKit.Async.Deferred();
var _34f=document.createElement("script");
_34f.type="text/javascript";
_34f.src=url;
_34f.onload=function(){
_34f.onload=null;
_34f.onerror=null;
_34f.onreadystatechange=null;
_34f=null;
d.callback();
};
_34f.onerror=function(msg){
_34f.onload=null;
_34f.onerror=null;
_34f.onreadystatechange=null;
_34f=null;
msg="Failed to load script at "+url+": "+msg;
d.errback(new URIError(msg,url));
};
_34f.onreadystatechange=function(){
if(_34f.readyState=="loaded"||_34f.readyState=="complete"){
_34f.onload();
}else{
MochiKit.Async.callLater(10,_34f.onerror,"Script loading timed out");
}
};
document.getElementsByTagName("head")[0].appendChild(_34f);
return d;
},wait:function(_351,_352){
var d=new MochiKit.Async.Deferred();
var cb=MochiKit.Base.bind("callback",d,_352);
var _355=setTimeout(cb,Math.floor(_351*1000));
d.canceller=function(){
try{
clearTimeout(_355);
}
catch(e){
}
};
return d;
},callLater:function(_356,func){
var m=MochiKit.Base;
var _359=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_356).addCallback(function(res){
return _359();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype.__class__=MochiKit.Async.DeferredLock;
MochiKit.Async.DeferredLock.prototype.acquire=function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
};
MochiKit.Async.DeferredLock.prototype.release=function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
};
MochiKit.Async.DeferredLock.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.DeferredLock.prototype.repr=function(){
var _35c;
if(this.locked){
_35c="locked, "+this.waiting.length+" waiting";
}else{
_35c="unlocked";
}
return "DeferredLock("+this.id+", "+_35c+")";
};
MochiKit.Async.DeferredLock.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.DeferredList=function(list,_35e,_35f,_360,_361){
MochiKit.Async.Deferred.apply(this,[_361]);
this.list=list;
var _362=[];
this.resultList=_362;
this.finishedCount=0;
this.fireOnOneCallback=_35e;
this.fireOnOneErrback=_35f;
this.consumeErrors=_360;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_362.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_35e){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype.constructor=MochiKit.Async.DeferredList;
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_366,_367,_368){
this.resultList[_366]=[_367,_368];
this.finishedCount+=1;
if(this.fired==-1){
if(_367&&this.fireOnOneCallback){
this.callback([_366,_368]);
}else{
if(!_367&&this.fireOnOneErrback){
this.errback(_368);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_367&&this.consumeErrors){
_368=null;
}
return _368;
};
MochiKit.Async.gatherResults=function(_369){
var d=new MochiKit.Async.DeferredList(_369,false,true,false);
d.addCallback(function(_36b){
var ret=[];
for(var i=0;i<_36b.length;i++){
ret.push(_36b[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _370;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_370=r;
}else{
if(r instanceof Error){
_370=self.fail(r);
}else{
_370=self.succeed(r);
}
}
}
catch(e){
_370=self.fail(e);
}
return _370;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_374){
this.deferred=_374;
});
ne("CancelledError",function(_375){
this.deferred=_375;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DOM");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _37d=self._document;
var _37e=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_37e;
self._document=_37d;
throw e;
}
self._window=_37e;
self._document=_37d;
return rval;
},formContents:function(elem){
var _381=[];
var _382=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _387=elem.tagName.toUpperCase();
if(_387==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_387==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_381.push(name);
_382.push(v);
return null;
}
_381.push(name);
_382.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_381.push(name);
_382.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_381.push(name);
_382.push(v);
}
return null;
}
}
if(_387==="FORM"||_387==="P"||_387==="SPAN"||_387==="DIV"){
return elem.childNodes;
}
_381.push(name);
_382.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_381,_382];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _390=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_390;
throw e;
}
self._document=_390;
return rval;
},registerDOMConverter:function(name,_393,wrap,_395){
MochiKit.DOM.domConverters.register(name,_393,wrap,_395);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _39c=im.repeat;
}
var map=m.map;
var _39e=self.domConverters;
var _39f=arguments.callee;
var _3a0=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _3a1=null;
try{
_3a1=iter(node);
}
catch(e){
}
if(_3a1){
return map(_39f,_3a1,_39c(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _39f(n,ctx);
};
return map(func,node);
}
}
try{
node=_39e.match(node,ctx);
continue;
}
catch(e){
if(e!=_3a0){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_3a5){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_3a5)=="string"){
_3a5=self.getElement(_3a5);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_3a5){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_3a9){
var o={};
o[attr]=_3a9;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3ae=self.attributeArray.renames[attr];
var _3af=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_3ae){
return node[_3ae];
}
var _3b0=node.getAttribute(attr);
if(_3b0!=_3af){
return _3b0;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3b4=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_3b4){
return node[_3b4];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_3b6){
var elem=node;
var self=MochiKit.DOM;
var base=MochiKit.Base;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_3b6){
if(self.attributeArray.compliant){
for(var k in _3b6){
var v=_3b6[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _3bc=self.attributeArray.renames;
for(var k in _3b6){
v=_3b6[k];
var _3bd=_3bc[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_3bd)=="string"){
elem[_3bd]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3c1=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3c2=MochiKit.Base.concat;
while(_3c1.length){
var n=_3c1.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_3c1=_3c2(n,_3c1);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3c7=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3c8=elem.parentNode;
var _3c9=MochiKit.Base.concat;
while(_3c7.length){
var n=_3c7.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_3c8.insertBefore(n,elem);
}else{
_3c7=_3c9(n,_3c7);
}
}
}
return _3c8;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3ce=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_3ce);
}else{
return self.appendChildNodes(elem.parentNode,_3ce);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _3d2;
while((_3d2=elem.firstChild)){
elem.removeChild(_3d2);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_3d4){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_3d4)=="string"||typeof (_3d4)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _3d9=self._xhtml;
if(_3d4&&!self.attributeArray.compliant){
var _3da="";
if("name" in _3d4){
_3da+=" name=\""+self.escapeHTML(_3d4.name)+"\"";
}
if(name=="input"&&"type" in _3d4){
_3da+=" type=\""+self.escapeHTML(_3d4.type)+"\"";
}
if(_3da){
name="<"+name+_3da+">";
_3d9=false;
}
}
var d=self._document;
if(_3d9&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_3d4){
self.updateNodeAttributes(elem,_3d4);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
if(e&&e.parentNode){
e.parentNode.removeChild(e);
}
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _3e3=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_3e3);
_3e3.replaceChild(src,dest);
}else{
_3e3.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByClassName:function(_3e6,_3e7){
var self=MochiKit.DOM;
if(self._document.getElementsByClassName){
self.getElementsByClassName=function(_3e9,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _3eb=elm.getElementsByClassName(_3e9);
return MochiKit.Base.extend([],_3eb);
};
}else{
if(self._document.evaluate){
self.getElementsByClassName=function(_3ec,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _3ee=_3ec.split(" ");
var _3ef="";
for(var k=0,kl=_3ee.length;k<kl;++k){
_3ef+="[contains(concat(' ', @class, ' '), ' "+_3ee[k]+" ')]";
}
var tag="*";
var _3f3=[];
try{
var _3f4="http://www.w3.org/1999/xhtml";
var _3f5=(self._document.documentElement.namespaceURI===_3f4)?_3f4:null;
_3f3=self._document.evaluate(".//"+tag+_3ef,elm,_3f5,0,null);
}
catch(e){
_3f3=self._document.evaluate(".//"+tag+_3ef,elm,null,0,null);
}
return MochiKit.Iter.list(_3f3);
};
}else{
self.getElementsByClassName=function(_3f6,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _3f8=_3f6.split(" ");
var _3f9=[];
for(var k=0,kl=_3f8.length;k<kl;++k){
_3f9.push(new RegExp("(^|\\s)"+_3f8[k]+"(\\s|$)"));
}
var _3fc=elm.all?elm.all:elm.getElementsByTagName("*");
var _3fd=[];
for(var l=0,ll=_3fc.length;l<ll;++l){
var _400=_3fc[l];
var _401=false;
for(var m=0,ml=_3f9.length;m<ml;++m){
_401=_3f9[m].test(_400.className);
if(!_401){
break;
}
}
if(_401){
_3fd.push(_400);
}
}
return _3fd;
};
}
}
return self.getElementsByClassName(_3e6,_3e7);
},getElementsByTagAndClassName:function(_404,_405,_406){
var self=MochiKit.DOM;
if(typeof (_404)=="undefined"||_404===null){
_404="*";
}
if(typeof (_406)=="undefined"||_406===null){
_406=self._document;
}
_406=self.getElement(_406);
if(_406==null){
return [];
}
if(_404=="*"){
return self.getElementsByClassName(_405,_406);
}
var _408=(_406.getElementsByTagName(_404)||self._document.all);
if(typeof (_405)=="undefined"||_405===null){
return MochiKit.Base.extend(null,_408);
}
var _409=[];
for(var i=0;i<_408.length;i++){
var _40b=_408[i];
var cls=_40b.className;
if(typeof (cls)!="string"){
cls=_40b.getAttribute("class");
}
if(typeof (cls)=="string"){
var _40d=cls.split(" ");
for(var j=0;j<_40d.length;j++){
if(_40d[j]==_405){
_409.push(_40b);
break;
}
}
}
}
return _409;
},_newCallStack:function(path,once){
var rval=function(){
var _412=arguments.callee.callStack;
for(var i=0;i<_412.length;i++){
if(_412[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_414,path,func,once){
var self=MochiKit.DOM;
var _419=_414[path];
var _41a=_419;
if(!(typeof (_419)=="function"&&typeof (_419.callStack)=="object"&&_419.callStack!==null)){
_41a=self._newCallStack(path,once);
if(typeof (_419)=="function"){
_41a.callStack.push(_419);
}
_414[path]=_41a;
}
_41a.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_41d){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_41d=self.getElement(_41d);
if(_41d){
_41d.focus();
}
});
},setElementClass:function(_41f,_420){
var self=MochiKit.DOM;
var obj=self.getElement(_41f);
if(self.attributeArray.compliant){
obj.setAttribute("class",_420);
}else{
obj.setAttribute("className",_420);
}
},toggleElementClass:function(_423){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_423)){
self.removeElementClass(obj,_423);
}
}
},addElementClass:function(_427,_428){
var self=MochiKit.DOM;
var obj=self.getElement(_427);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_428);
return true;
}
if(cls==_428){
return false;
}
var _42c=cls.split(" ");
for(var i=0;i<_42c.length;i++){
if(_42c[i]==_428){
return false;
}
}
self.setElementClass(obj,cls+" "+_428);
return true;
},removeElementClass:function(_42e,_42f){
var self=MochiKit.DOM;
var obj=self.getElement(_42e);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_42f){
self.setElementClass(obj,"");
return true;
}
var _433=cls.split(" ");
for(var i=0;i<_433.length;i++){
if(_433[i]==_42f){
_433.splice(i,1);
self.setElementClass(obj,_433.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_435,_436,_437){
var obj=MochiKit.DOM.getElement(_435);
var res=MochiKit.DOM.removeElementClass(obj,_436);
if(res){
MochiKit.DOM.addElementClass(obj,_437);
}
return res;
},hasElementClass:function(_43a,_43b){
var obj=MochiKit.DOM.getElement(_43a);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _43e=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_43e.length;j++){
if(_43e[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _446=[dom];
var self=MochiKit.DOM;
var _448=self.escapeHTML;
var _449=self.attributeArray;
while(_446.length){
dom=_446.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _44a=[];
var _44b=_449(dom);
for(var i=0;i<_44b.length;i++){
var a=_44b[i];
_44a.push([" ",a.name,"=\"",_448(a.value),"\""]);
}
_44a.sort();
for(i=0;i<_44a.length;i++){
var _44e=_44a[i];
for(var j=0;j<_44e.length;j++){
lst.push(_44e[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_446.push("</"+dom.tagName.toLowerCase()+">");
var _450=dom.childNodes;
for(i=_450.length-1;i>=0;i--){
_446.push(_450[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_448(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_452){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _457=node.nodeValue;
if(typeof (_457)=="string"){
rval.push(_457);
}
})(MochiKit.DOM.getElement(node));
if(_452){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_458){
_458=MochiKit.DOM.getElement(_458);
for(var i=0;i<_458.childNodes.length;i++){
var node=_458.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_45b,_45c,_45d){
var self=MochiKit.DOM;
if(typeof (_45b)=="undefined"||_45b===null){
_45b="*";
}
if(typeof (_45d)=="undefined"||_45d===null){
_45d=self._document;
}
_45d=self.getElement(_45d);
if(_45d==null){
return null;
}
var _45f=(_45d.getElementsByTagName(_45b)||self._document.all);
if(_45f.length<=0){
return null;
}else{
if(typeof (_45c)=="undefined"||_45c===null){
return _45f[0];
}
}
for(var i=0;i<_45f.length;i++){
var _461=_45f[i];
var cls=_461.className;
if(typeof (cls)!="string"){
cls=_461.getAttribute("class");
}
if(typeof (cls)=="string"){
var _463=cls.split(" ");
for(var j=0;j<_463.length;j++){
if(_463[j]==_45c){
return _461;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_466,_467){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_466)=="undefined"||_466===null){
_466="*";
}else{
_466=_466.toUpperCase();
}
if(typeof (_467)=="undefined"||_467===null){
_467=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _469=elem.tagName.toUpperCase();
if((_466==="*"||_466==_469)&&(_467===null||self.hasElementClass(elem,_467))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _46c="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_46c);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _46d=this._document.createElement("span");
var _46e;
if(_46d&&_46d.attributes&&_46d.attributes.length>0){
var _46f=m.filter;
_46e=function(node){
return _46f(_46e.ignoreAttrFilter,node.attributes);
};
_46e.ignoreAttr={};
var _471=_46d.attributes;
var _472=_46e.ignoreAttr;
for(var i=0;i<_471.length;i++){
var a=_471[i];
_472[a.name]=a.value;
}
_46e.ignoreAttrFilter=function(a){
return (_46e.ignoreAttr[a.name]!=a.value);
};
_46e.compliant=false;
_46e.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","rowspan":"rowSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_46e=function(node){
return node.attributes;
};
_46e.compliant=true;
_46e.ignoreAttr={};
_46e.renames={};
}
_46e.__export__=false;
this.attributeArray=_46e;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _477=this.createDOMFunc;
this.UL=_477("ul");
this.OL=_477("ol");
this.LI=_477("li");
this.DL=_477("dl");
this.DT=_477("dt");
this.DD=_477("dd");
this.TD=_477("td");
this.TR=_477("tr");
this.TBODY=_477("tbody");
this.THEAD=_477("thead");
this.TFOOT=_477("tfoot");
this.TABLE=_477("table");
this.TH=_477("th");
this.INPUT=_477("input");
this.SPAN=_477("span");
this.A=_477("a");
this.DIV=_477("div");
this.IMG=_477("img");
this.BUTTON=_477("button");
this.TT=_477("tt");
this.PRE=_477("pre");
this.H1=_477("h1");
this.H2=_477("h2");
this.H3=_477("h3");
this.H4=_477("h4");
this.H5=_477("h5");
this.H6=_477("h6");
this.BR=_477("br");
this.HR=_477("hr");
this.LABEL=_477("label");
this.TEXTAREA=_477("textarea");
this.FORM=_477("form");
this.P=_477("p");
this.SELECT=_477("select");
this.OPTION=_477("option");
this.OPTGROUP=_477("optgroup");
this.LEGEND=_477("legend");
this.FIELDSET=_477("fieldset");
this.STRONG=_477("strong");
this.CANVAS=_477("canvas");
this.IFRAME=_477("iframe");
this.LINK=_477("link");
this.SCRIPT=_477("script");
this.$=this.getElement;
this.NBSP="\xa0";
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Selector");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_478){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_478.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_479){
throw "Parse error in selector: "+_479;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _47b=this.params;
var expr=this.expression;
var _47d,_47e,_47f,rest;
while(_47d=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_47b.attributes=_47b.attributes||[];
_47b.attributes.push({name:_47d[2],operator:_47d[3],value:_47d[4]||_47d[5]||""});
expr=_47d[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_47d=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_47e=_47d[1];
_47f=_47d[2];
rest=_47d[3];
switch(_47e){
case "#":
_47b.id=_47f;
break;
case ".":
_47b.classNames.push(_47f);
break;
case ":":
_47b.pseudoClassNames.push(_47f);
break;
case "":
case undefined:
_47b.tagName=_47f.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _482=this.params;
var _483=[];
var _484,i;
function childElements(_486){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_486+".childNodes)";
}
if(_482.wildcard){
_483.push("true");
}
if(_484=_482.id){
_483.push("element.id == "+repr(_484));
}
if(_484=_482.tagName){
_483.push("element.tagName.toUpperCase() == "+repr(_484));
}
if((_484=_482.classNames).length>0){
for(i=0;i<_484.length;i++){
_483.push("MochiKit.DOM.hasElementClass(element, "+repr(_484[i])+")");
}
}
if((_484=_482.pseudoClassNames).length>0){
for(i=0;i<_484.length;i++){
var _487=_484[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _488=_487[1];
var _489=_487[2];
switch(_488){
case "root":
_483.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_487=_489.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_487){
throw "Invalid argument to pseudo element nth-child: "+_489;
}
var a,b;
if(_487[0]=="odd"){
a=2;
b=1;
}else{
if(_487[0]=="even"){
a=2;
b=0;
}else{
a=_487[2]&&parseInt(_487,10)||null;
b=parseInt(_487[3],10);
}
}
_483.push("this.nthChild(element,"+a+","+b+","+!!_488.match("^nth-last")+","+!!_488.match("of-type$")+")");
break;
case "first-child":
_483.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_483.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_483.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_483.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_483.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_483.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_483.push("element.childNodes.length == 0");
break;
case "enabled":
_483.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_483.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_483.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _48c=new MochiKit.Selector.Selector(_489);
_483.push("!( "+_48c.buildMatchExpression()+")");
break;
}
}
}
if(_484=_482.attributes){
MochiKit.Base.map(function(_48d){
var _48e="MochiKit.DOM.getNodeAttribute(element, "+repr(_48d.name)+")";
var _48f=function(_490){
return _48e+".split("+repr(_490)+")";
};
_483.push(_48e+" != null");
switch(_48d.operator){
case "=":
_483.push(_48e+" == "+repr(_48d.value));
break;
case "~=":
_483.push("MochiKit.Base.findValue("+_48f(" ")+", "+repr(_48d.value)+") > -1");
break;
case "^=":
_483.push(_48e+".substring(0, "+_48d.value.length+") == "+repr(_48d.value));
break;
case "$=":
_483.push(_48e+".substring("+_48e+".length - "+_48d.value.length+") == "+repr(_48d.value));
break;
case "*=":
_483.push(_48e+".match("+repr(_48d.value)+")");
break;
case "|=":
_483.push(_48f("-")+"[0].toUpperCase() == "+repr(_48d.value.toUpperCase()));
break;
case "!=":
_483.push(_48e+" != "+repr(_48d.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_48d.operator+" in selector";
}
},_484);
}
return _483.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_492,a,b,_495,_496){
var _497=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_492.parentNode.childNodes);
if(_496){
_497=MochiKit.Base.filter(function(node){
return node.tagName==_492.tagName;
},_497);
}
if(_495){
_497=MochiKit.Iter.reversed(_497);
}
if(a){
var _49a=MochiKit.Base.findIdentical(_497,_492);
return ((_49a+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_497,_492)+1;
}
},isUIElement:function(_49b){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_49b.tagName.toLowerCase())>-1;
},findElements:function(_49c,axis){
var _49e;
if(axis==undefined){
axis="";
}
function inScope(_49f,_4a0){
if(axis==""){
return MochiKit.DOM.isChildNode(_49f,_4a0);
}else{
if(axis==">"){
return _49f.parentNode===_4a0;
}else{
if(axis=="+"){
return _49f===nextSiblingElement(_4a0);
}else{
if(axis=="~"){
var _4a1=_4a0;
while(_4a1=nextSiblingElement(_4a1)){
if(_49f===_4a1){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_49e=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_49e)){
if(!_49c||inScope(_49e,_49c)){
return [_49e];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_49c=(_49c||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_49c){
throw "> combinator not allowed without preceeding expression";
}
_49c=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_49c.childNodes);
}else{
if(axis=="+"){
if(!_49c){
throw "+ combinator not allowed without preceeding expression";
}
_49c=nextSiblingElement(_49c)&&[nextSiblingElement(_49c)];
}else{
if(axis=="~"){
if(!_49c){
throw "~ combinator not allowed without preceeding expression";
}
var _4a4=[];
while(nextSiblingElement(_49c)){
_49c=nextSiblingElement(_49c);
_4a4.push(_49c);
}
_49c=_4a4;
}
}
}
}
if(!_49c){
return [];
}
var _4a5=MochiKit.Base.filter(MochiKit.Base.bind(function(_4a6){
return this.match(_4a6);
},this),_49c);
return _4a5;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_4a7,_4a8){
_4a7=MochiKit.DOM.getElement(_4a7);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_4ad){
try{
var res=_4a7.querySelectorAll(_4ad);
return Array.prototype.slice.call(res,0);
}
catch(ignore){
}
var _4af="";
var _4b0=function(_4b1,expr){
var _4b3=expr.match(/^[>+~]$/);
if(_4b3){
_4af=_4b3[0];
return _4b1;
}else{
var _4b4=new MochiKit.Selector.Selector(expr);
var _4b5=MochiKit.Iter.reduce(function(_4b6,_4b7){
return MochiKit.Base.extend(_4b6,_4b4.findElements(_4b7||_4a7,_4af));
},_4b1,[]);
_4af="";
return _4b5;
}
};
var _4b8=_4ad.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_4b0,_4b8,[null]));
},_4a8));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Style");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_4c0){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_4c0=MochiKit.Base.camelize(_4c0);
if(!elem||elem==d){
return undefined;
}
if(_4c0=="opacity"&&typeof (elem.filters)!="undefined"){
var _4c3=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_4c3&&_4c3[1]){
return parseFloat(_4c3[1])/100;
}
return 1;
}
if(_4c0=="float"||_4c0=="cssFloat"||_4c0=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _4c4=elem.style?elem.style[_4c0]:null;
if(!_4c4){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_4c0=_4c0.replace(/([A-Z])/g,"-$1").toLowerCase();
_4c4=css?css.getPropertyValue(_4c0):null;
}else{
if(elem.currentStyle){
_4c4=elem.currentStyle[_4c0];
if(/^\d/.test(_4c4)&&!/px$/.test(_4c4)&&_4c0!="fontWeight"){
var left=elem.style.left;
var _4c7=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_4c4||0;
_4c4=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_4c7;
}
}
}
}
if(_4c0=="opacity"){
_4c4=parseFloat(_4c4);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_4c0)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_4c4="auto";
}
}
return _4c4=="auto"?null:_4c4;
},setStyle:function(elem,_4c9){
elem=MochiKit.DOM.getElement(elem);
for(var name in _4c9){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_4c9[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_4c9[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_4c9[name];
}else{
elem.style.styleFloat=_4c9[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_4c9[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _4ce=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_4ce?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_4d0){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _4d3=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(typeof (elem)=="string"){
elem=dom.getElement(elem);
}
if(elem==null||(!_4d3(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _4d7=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_4d7=elem.offsetParent;
if(_4d7!=elem){
while(_4d7){
c.x+=parseInt(_4d7.style.borderLeftWidth,10)||0;
c.y+=parseInt(_4d7.style.borderTopWidth,10)||0;
c.x+=_4d7.offsetLeft;
c.y+=_4d7.offsetTop;
_4d7=_4d7.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_4d7=elem.parentNode;
}else{
_4d7=null;
}
while(_4d7){
var _4dc=_4d7.tagName.toUpperCase();
if(_4dc==="BODY"||_4dc==="HTML"){
break;
}
var disp=self.getStyle(_4d7,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_4d7.scrollLeft;
c.y-=_4d7.scrollTop;
}
if(_4d7.parentNode){
_4d7=_4d7.parentNode;
}else{
_4d7=null;
}
}
}
}
}
if(_4d0){
_4d0=arguments.callee(_4d0);
if(_4d0){
c.x-=(_4d0.x||0);
c.y-=(_4d0.y||0);
}
}
return c;
},setElementPosition:function(elem,_4df,_4e0){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_4e0)=="undefined"){
_4e0="px";
}
var _4e1={};
var _4e2=MochiKit.Base.isUndefinedOrNull;
if(!_4e2(_4df.x)){
_4e1["left"]=_4df.x+_4e0;
}
if(!_4e2(_4df.y)){
_4e1["top"]=_4df.y+_4e0;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_4e1});
},makePositioned:function(_4e3){
_4e3=MochiKit.DOM.getElement(_4e3);
var pos=MochiKit.Style.getStyle(_4e3,"position");
if(pos=="static"||!pos){
_4e3.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_4e3.style.top=0;
_4e3.style.left=0;
}
}
},undoPositioned:function(_4e5){
_4e5=MochiKit.DOM.getElement(_4e5);
if(_4e5.style.position=="relative"){
_4e5.style.position=_4e5.style.top=_4e5.style.left=_4e5.style.bottom=_4e5.style.right="";
}
},makeClipping:function(_4e6){
_4e6=MochiKit.DOM.getElement(_4e6);
var s=_4e6.style;
var _4e8={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_4e6,"overflow")||"visible")!="hidden"){
_4e6.style.overflow="hidden";
_4e6.style.overflowX="hidden";
_4e6.style.overflowY="hidden";
}
return _4e8;
},undoClipping:function(_4e9,_4ea){
_4e9=MochiKit.DOM.getElement(_4e9);
if(typeof (_4ea)=="string"){
_4e9.style.overflow=_4ea;
}else{
if(_4ea!=null){
_4e9.style.overflow=_4ea["overflow"];
_4e9.style.overflowX=_4ea["overflow-x"];
_4e9.style.overflowY=_4ea["overflow-y"];
}
}
},getElementDimensions:function(elem,_4ec){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _4f1=s.visibility;
var _4f2=s.position;
var _4f3=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _4f4=elem.offsetWidth;
var _4f5=elem.offsetHeight;
s.display=_4f3;
s.position=_4f2;
s.visibility=_4f1;
}else{
_4f4=elem.offsetWidth||0;
_4f5=elem.offsetHeight||0;
}
if(_4ec){
var _4f6="colSpan" in elem&&"rowSpan" in elem;
var _4f7=(_4f6&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_4f7){
if(/MSIE/.test(navigator.userAgent)){
var _4f8=elem.previousSibling?0.5:1;
var _4f9=elem.nextSibling?0.5:1;
}else{
var _4f8=0.5;
var _4f9=0.5;
}
}else{
var _4f8=1;
var _4f9=1;
}
_4f4-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_4f8*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_4f9*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_4f6){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _4fa=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _4fa=1;
}else{
var _4fa=_4f7?0.5:1;
}
}
}else{
var _4fa=1;
}
_4f5-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_4fa*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_4f4,_4f5);
},setElementDimensions:function(elem,_4fc,_4fd){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_4fd)=="undefined"){
_4fd="px";
}
var _4fe={};
var _4ff=MochiKit.Base.isUndefinedOrNull;
if(!_4ff(_4fc.w)){
_4fe["width"]=_4fc.w+_4fd;
}
if(!_4ff(_4fc.h)){
_4fe["height"]=_4fc.h+_4fd;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_4fe});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _503=elem.tagName.toUpperCase();
return self._defaultDisplay[_503]||"block";
},setDisplayForElement:function(_504,_505){
var _506=MochiKit.Base.extend(null,arguments,1);
var _507=MochiKit.DOM.getElement;
for(var i=0;i<_506.length;i++){
_505=_507(_506[i]);
if(_505){
_505.style.display=_504;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _511=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_511.length;i++){
this._defaultDisplay[_511[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3",true);
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.LoggingPane");
goog.require("MochiKit.Base");
goog.require("MochiKit.Logging");
}
MochiKit.Base.module(MochiKit,"LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_515){
var m=MochiKit.LoggingPane;
_515=!(!_515);
if(m._loggingPane&&m._loggingPane.inline!=_515){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_515,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_517,_518){
if(typeof (_518)=="undefined"||_518===null){
_518=MochiKit.Logging.logger;
}
this.logger=_518;
var _519=MochiKit.Base.update;
var _51a=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _51c=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_517){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _523=doc.getElementById(uid);
var _524=!!_523;
if(_523&&typeof (_523.loggingPane)!="undefined"){
_523.loggingPane.logger=this.logger;
_523.loggingPane.buildAndApplyFilter();
return _523.loggingPane;
}
if(_524){
var _525;
while((_525=_523.firstChild)){
_523.removeChild(_525);
}
}else{
_523=doc.createElement("div");
_523.id=uid;
}
_523.loggingPane=this;
var _526=doc.createElement("input");
var _527=doc.createElement("input");
var _528=doc.createElement("button");
var _529=doc.createElement("button");
var _52a=doc.createElement("button");
var _52b=doc.createElement("button");
var _52c=doc.createElement("div");
var _52d=doc.createElement("div");
var _52e=uid+"_Listener";
this.colorTable=_51c(this.colorTable);
var _52f=[];
var _530=null;
var _531=function(msg){
var _533=msg.level;
if(typeof (_533)=="number"){
_533=MochiKit.Logging.LogLevel[_533];
}
return _533;
};
var _534=function(msg){
return msg.info.join(" ");
};
var _536=bind(function(msg){
var _538=_531(msg);
var text=_534(msg);
var c=this.colorTable[_538];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_538;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_538+": "+text));
_52d.appendChild(p);
_52d.appendChild(doc.createElement("br"));
if(_52c.offsetHeight>_52c.scrollHeight){
_52c.scrollTop=0;
}else{
_52c.scrollTop=_52c.scrollHeight;
}
},this);
var _53c=function(msg){
_52f[_52f.length]=msg;
_536(msg);
};
var _53e=function(){
var _53f,_540;
try{
_53f=new RegExp(_526.value);
_540=new RegExp(_527.value);
}
catch(e){
MochiKit.Logging.logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_53f.test(_531(msg))&&_540.test(_534(msg)));
};
};
var _542=function(){
while(_52d.firstChild){
_52d.removeChild(_52d.firstChild);
}
};
var _543=function(){
_52f=[];
_542();
};
var _544=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_52e);
try{
try{
_523.loggingPane=null;
}
catch(e){
MochiKit.Logging.logFatal("Bookmarklet was closed incorrectly.");
}
if(_517){
_523.parentNode.removeChild(_523);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _545=function(){
_542();
for(var i=0;i<_52f.length;i++){
var msg=_52f[i];
if(_530===null||_530(msg)){
_536(msg);
}
}
};
this.buildAndApplyFilter=function(){
_530=_53e();
_545();
this.logger.removeListener(_52e);
this.logger.addListener(_52e,_530,_53c);
};
var _548=bind(function(){
_52f=this.logger.getMessages();
_545();
},this);
var _549=bind(function(_54a){
_54a=_54a||window.event;
var key=_54a.which||_54a.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _54c="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_517){
_54c+="; height: 10em; border-top: 2px solid black";
}else{
_54c+="; height: 100%;";
}
_523.style.cssText=_54c;
if(!_524){
doc.body.appendChild(_523);
}
_54c={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_51a(_526,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_549,"style":_54c});
_523.appendChild(_526);
_51a(_527,{"value":".*","onkeypress":_549,"style":_54c});
_523.appendChild(_527);
_54c="width: 8%; display:inline; font: "+this.logFont;
_528.appendChild(doc.createTextNode("Filter"));
_528.onclick=bind("buildAndApplyFilter",this);
_528.style.cssText=_54c;
_523.appendChild(_528);
_529.appendChild(doc.createTextNode("Load"));
_529.onclick=_548;
_529.style.cssText=_54c;
_523.appendChild(_529);
_52a.appendChild(doc.createTextNode("Clear"));
_52a.onclick=_543;
_52a.style.cssText=_54c;
_523.appendChild(_52a);
_52b.appendChild(doc.createTextNode("Close"));
_52b.onclick=_544;
_52b.style.cssText=_54c;
_523.appendChild(_52b);
_52c.style.cssText="overflow: auto; width: 100%";
_52d.style.cssText="width: 100%; height: "+(_517?"8em":"100%");
_52c.appendChild(_52d);
_523.appendChild(_52c);
this.buildAndApplyFilter();
_548();
if(_517){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_517;
this.closePane=_544;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Color");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_54e,blue,_550){
if(typeof (_550)=="undefined"||_550===null){
_550=1;
}
this.rgb={r:red,g:_54e,b:blue,a:_550};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_551){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_551);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_557){
var hsl=this.asHSL();
hsl.s=_557;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_55a){
var hsl=this.asHSL();
hsl.l=_55a;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_55d){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_55d,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_560){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_560,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_563,_564){
if(typeof (_564)=="undefined"||_564===null){
_564=0.5;
}
var sf=1-_564;
var s=this.rgb;
var d=_563.rgb;
var df=_564;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_569){
var a=this.asRGB();
var b=_569.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().l>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_580,blue,_582){
var _583=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_580=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_582=undefined;
}else{
_582=rgb.a;
}
}
return new _583(red,_580,blue,_582);
},fromHSL:function(hue,_586,_587,_588){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_58b,_58c,_58d){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _590=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _591=_590._namedColors[name.toLowerCase()];
if(typeof (_591)=="string"){
return _590.fromHexString(_591);
}else{
if(name=="transparent"){
return _590.transparentColor();
}
}
return null;
},fromString:function(_592){
var self=MochiKit.Color.Color;
var _594=_592.substr(0,3);
if(_594=="rgb"){
return self.fromRGBString(_592);
}else{
if(_594=="hsl"){
return self.fromHSLString(_592);
}else{
if(_592.charAt(0)=="#"){
return self.fromHexString(_592);
}
}
}
return self.fromName(_592);
},fromHexString:function(_595){
if(_595.charAt(0)=="#"){
_595=_595.substring(1);
}
var _596=[];
var i,hex;
if(_595.length==3){
for(i=0;i<3;i++){
hex=_595.substr(i,1);
_596.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_595.substr(i,2);
_596.push(parseInt(hex,16)/255);
}
}
var _599=MochiKit.Color.Color;
return _599.fromRGB.apply(_599,_596);
},_fromColorString:function(pre,_59b,_59c,_59d){
if(_59d.indexOf(pre)===0){
_59d=_59d.substring(_59d.indexOf("(",3)+1,_59d.length-1);
}
var _59e=_59d.split(/\s*,\s*/);
var _59f=[];
for(var i=0;i<_59e.length;i++){
var c=_59e[i];
var val;
var _5a3=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_5a3=="deg"){
val=parseFloat(c)/360;
}else{
if(_5a3=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_59c[i]*parseFloat(c);
}
}
}
_59f.push(val);
}
return this[_59b].apply(this,_59f);
},fromComputedStyle:function(elem,_5a5){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _5a8=MochiKit.Style.getStyle.apply(d,arguments);
if(!_5a8){
continue;
}
var _5a9=cls.fromString(_5a8);
if(!_5a9){
break;
}
if(_5a9.asRGB().a>0){
return _5a9;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_5af){
v*=_5af;
if(v<0){
return 0;
}else{
if(v>_5af){
return _5af;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_5b5,_5b6,_5b7){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_5b5=hsv.s;
_5b6=hsv.v;
_5b7=hsv.a;
}
var red;
var _5ba;
var blue;
if(_5b5===0){
red=_5b6;
_5ba=_5b6;
blue=_5b6;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_5b6*(1-_5b5);
var q=_5b6*(1-(_5b5*f));
var t=_5b6*(1-(_5b5*(1-f)));
switch(i){
case 1:
red=q;
_5ba=_5b6;
blue=p;
break;
case 2:
red=p;
_5ba=_5b6;
blue=t;
break;
case 3:
red=p;
_5ba=q;
blue=_5b6;
break;
case 4:
red=t;
_5ba=p;
blue=_5b6;
break;
case 5:
red=_5b6;
_5ba=p;
blue=q;
break;
case 6:
case 0:
red=_5b6;
_5ba=t;
blue=p;
break;
}
}
return {r:red,g:_5ba,b:blue,a:_5b7};
},hslToRGB:function(hue,_5c2,_5c3,_5c4){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_5c2=hsl.s;
_5c3=hsl.l;
_5c4=hsl.a;
}
var red;
var _5c7;
var blue;
if(_5c2===0){
red=_5c3;
_5c7=_5c3;
blue=_5c3;
}else{
var m2;
if(_5c3<=0.5){
m2=_5c3*(1+_5c2);
}else{
m2=_5c3+_5c2-(_5c3*_5c2);
}
var m1=(2*_5c3)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_5c7=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_5c7,b:blue,a:_5c4};
},rgbToHSV:function(red,_5ce,blue,_5d0){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5ce=rgb.g;
blue=rgb.b;
_5d0=rgb.a;
}
var max=Math.max(Math.max(red,_5ce),blue);
var min=Math.min(Math.min(red,_5ce),blue);
var hue;
var _5d5;
var _5d6=max;
if(min==max){
hue=0;
_5d5=0;
}else{
var _5d7=(max-min);
_5d5=_5d7/max;
if(red==max){
hue=(_5ce-blue)/_5d7;
}else{
if(_5ce==max){
hue=2+((blue-red)/_5d7);
}else{
hue=4+((red-_5ce)/_5d7);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_5d5,v:_5d6,a:_5d0};
},rgbToHSL:function(red,_5d9,blue,_5db){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5d9=rgb.g;
blue=rgb.b;
_5db=rgb.a;
}
var max=Math.max(red,Math.max(_5d9,blue));
var min=Math.min(red,Math.min(_5d9,blue));
var hue;
var _5e0;
var _5e1=(max+min)/2;
var _5e2=max-min;
if(_5e2===0){
hue=0;
_5e0=0;
}else{
if(_5e1<=0.5){
_5e0=_5e2/(max+min);
}else{
_5e0=_5e2/(2-max-min);
}
if(red==max){
hue=(_5d9-blue)/_5e2;
}else{
if(_5d9==max){
hue=2+((blue-red)/_5e2);
}else{
hue=4+((red-_5d9)/_5e2);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_5e0,l:_5e1,a:_5db};
},toColorPart:function(num){
num=Math.round(num);
var _5e4=num.toString(16);
if(num<16){
return "0"+_5e4;
}
return _5e4;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _5e6=1/3;
var _5e7={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_5e6,_5e6,_5e6],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_5e6,2*_5e6,2*_5e6],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
for(var k in _5e7){
var name=k+"Color";
var _5ea=this.Color.fromRGB.apply(this.Color,_5e7[k]);
this.Color[name]=m.partial(m.operator.identity,_5ea);
}
var _5eb=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _5ed=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_5eb,_5ed);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Signal");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Signal","1.5",["Base","DOM"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Signal.Event.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
};
MochiKit.Signal.Event.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Signal.Event.prototype.src=function(){
return this._src;
};
MochiKit.Signal.Event.prototype.event=function(){
return this._event;
};
MochiKit.Signal.Event.prototype.type=function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
};
MochiKit.Signal.Event.prototype.target=function(){
return this._event.target||this._event.srcElement;
};
MochiKit.Signal.Event.prototype._relatedTarget=null;
MochiKit.Signal.Event.prototype.relatedTarget=function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
};
MochiKit.Signal.Event.prototype._modifier=null;
MochiKit.Signal.Event.prototype.modifier=function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
};
MochiKit.Signal.Event.prototype._key=null;
MochiKit.Signal.Event.prototype.key=function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
};
MochiKit.Signal.Event.prototype._mouse=null;
MochiKit.Signal.Event.prototype.mouse=function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("drag")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client={x:0,y:0};
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page={x:0,y:0};
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel={x:0,y:0};
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
};
MochiKit.Signal.Event.prototype.stop=function(){
this.stopPropagation();
this.preventDefault();
};
MochiKit.Signal.Event.prototype.stopPropagation=function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
};
MochiKit.Signal.Event.prototype.preventDefault=function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
};
MochiKit.Signal.Event.prototype._confirmUnload=null;
MochiKit.Signal.Event.prototype.confirmUnload=function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
};
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _5fc=MochiKit.Signal._specialMacKeys;
for(var i=63236;i<=63242;i++){
_5fc[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _5fe=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_5fe[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_5fe[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_5fe[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_5fe[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_600){
this.source=_600.source;
this.signal=_600.signal;
this.listener=_600.listener;
this.isDOM=_600.isDOM;
this.objOrFunc=_600.objOrFunc;
this.funcOrStr=_600.funcOrStr;
this.connected=_600.connected;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Signal.Ident.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "src:"+repr(this.source)+", sig: "+repr(this.signal)+", isDOM: "+repr(this.isDOM)+", connected: "+repr(this.connected);
};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _603=self._observers;
for(var i=0;i<_603.length;i++){
if(_603[i].signal!=="onload"&&_603[i].signal!=="onunload"){
self._disconnect(_603[i]);
}
}
},_listener:function(src,sig,func,obj,_609){
var self=MochiKit.Signal;
var E=self.Event;
if(!_609){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_60c){
obj[func].apply(obj,[new E(src,_60c)]);
var _60d=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_60d);
};
}else{
return function(_60e){
obj[func].apply(obj,[new E(src,_60e)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_60f){
func.apply(obj,[new E(src,_60f)]);
var _610=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_610);
};
}else{
return function(_611){
func.apply(obj,[new E(src,_611)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_617){
var e=new E(src,_617);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_619,_61a){
var obj=null;
var func=null;
if(typeof (_61a)!="undefined"){
obj=_619;
func=_61a;
if(typeof (_61a)=="string"){
if(typeof (_619[_61a])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_61a)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_619)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_619;
}
}
return [obj,func];
},connect:function(src,sig,_61f,_620){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _622=self._getDestPair(_61f,_620);
var obj=_622[0];
var func=_622[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _625=!!(src.addEventListener||src.attachEvent);
if(_625&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _626=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_625&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _626=self._listener(src,sig,func,obj,_625);
sig="onDOMMouseScroll";
}else{
var _626=self._listener(src,sig,func,obj,_625);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_626,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_626);
}
}
var _627=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_626,isDOM:_625,objOrFunc:_61f,funcOrStr:_620,connected:true});
self._observers.push(_627);
if(!_625&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_627],arguments,1);
src.__connect__.apply(src,args);
}
return _627;
},connectOnce:function(src,sig,_62b,_62c){
var self=MochiKit.Signal;
var _62e=self.connect(src,sig,_62b,_62c);
var _62f;
_62f=self.connect(src,sig,function(){
self.disconnect(_62e);
self.disconnect(_62f);
});
return _62e;
},_disconnect:function(_630){
if(!_630.connected){
return;
}
_630.connected=false;
var src=_630.source;
var sig=_630.signal;
var _633=_630.listener;
if(!_630.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_630,sig,_630.objOrFunc,_630.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_633,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_633);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_634){
var self=MochiKit.Signal;
var _636=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_636.length-1;i>=0;i--){
var o=_636[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(self._lock===0){
_636.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_636,_634);
if(idx>=0){
self._disconnect(_634);
if(self._lock===0){
_636.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_63f,_640){
var self=MochiKit.Signal;
var _642=self._observers;
var _643=self._disconnect;
var lock=self._lock;
var _645=self._dirty;
if(typeof (_640)==="undefined"){
_640=null;
}
for(var i=_642.length-1;i>=0;i--){
var _647=_642[i];
if(_647.objOrFunc===_63f&&(_640===null||_647.funcOrStr===_640)){
_643(_647);
if(lock===0){
_642.splice(i,1);
}else{
_645=true;
}
}
}
self._dirty=_645;
},disconnectAll:function(src,sig){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _64b=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _64d=self._disconnect;
var _64e=self._observers;
var i,_650;
var lock=self._lock;
var _652=self._dirty;
if(_64b.length===0){
for(i=_64e.length-1;i>=0;i--){
_650=_64e[i];
if(_650.source===src){
_64d(_650);
if(lock===0){
_64e.splice(i,1);
}else{
_652=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_64b.length;i++){
sigs[_64b[i]]=true;
}
for(i=_64e.length-1;i>=0;i--){
_650=_64e[i];
if(_650.source===src&&_650.signal in sigs){
_64d(_650);
if(lock===0){
_64e.splice(i,1);
}else{
_652=true;
}
}
}
}
self._dirty=_652;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _657=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _659=[];
self._lock++;
for(var i=0;i<_657.length;i++){
var _65b=_657[i];
if(_65b.source===src&&_65b.signal===sig&&_65b.connected){
try{
if(_65b.isDOM&&_65b.funcOrStr!=null){
var obj=_65b.objOrFunc;
obj[_65b.funcOrStr].apply(obj,args);
}else{
if(_65b.isDOM){
_65b.objOrFunc.apply(src,args);
}else{
_65b.listener.apply(src,args);
}
}
}
catch(e){
_659.push(e);
}
}
}
self._lock--;
self._gc();
if(_659.length==1){
throw _659[0];
}else{
if(_659.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_659;
throw e;
}
}
},_gc:function(){
var self=MochiKit.Signal;
var _65f=self._observers;
if(self._lock===0&&self._dirty){
for(var i=_65f.length-1;i>=0;i--){
if(!_65f[i].connected){
_65f.splice(i,1);
}
}
self._dirty=false;
return true;
}
return false;
}});
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=0;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Position");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _663=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _664=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_663,_664);
},cumulativeOffset:function(_665){
var _666=0;
var _667=0;
do{
_666+=_665.offsetTop||0;
_667+=_665.offsetLeft||0;
_665=_665.offsetParent;
}while(_665);
return new MochiKit.Style.Coordinates(_667,_666);
},realOffset:function(_668){
var _669=0;
var _66a=0;
do{
_669+=_668.scrollTop||0;
_66a+=_668.scrollLeft||0;
_668=_668.parentNode;
}while(_668);
return new MochiKit.Style.Coordinates(_66a,_669);
},within:function(_66b,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_66b,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_66b);
if(_66b.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_66b.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_66b.offsetWidth);
},withinIncludingScrolloffsets:function(_66e,x,y){
var _671=this.realOffset(_66e);
this.xcomp=x+_671.x-this.windowOffset.x;
this.ycomp=y+_671.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_66e);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_66e.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_66e.offsetWidth);
},overlap:function(mode,_673){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_673.offsetHeight)-this.ycomp)/_673.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_673.offsetWidth)-this.xcomp)/_673.offsetWidth;
}
},absolutize:function(_674){
_674=MochiKit.DOM.getElement(_674);
if(_674.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _675=MochiKit.Position.positionedOffset(_674);
var _676=_674.clientWidth;
var _677=_674.clientHeight;
var _678={"position":_674.style.position,"left":_675.x-parseFloat(_674.style.left||0),"top":_675.y-parseFloat(_674.style.top||0),"width":_674.style.width,"height":_674.style.height};
_674.style.position="absolute";
_674.style.top=_675.y+"px";
_674.style.left=_675.x+"px";
_674.style.width=_676+"px";
_674.style.height=_677+"px";
return _678;
},positionedOffset:function(_679){
var _67a=0,_67b=0;
do{
_67a+=_679.offsetTop||0;
_67b+=_679.offsetLeft||0;
_679=_679.offsetParent;
if(_679){
var p=MochiKit.Style.getStyle(_679,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_679);
return new MochiKit.Style.Coordinates(_67b,_67a);
},relativize:function(_67d,_67e){
_67d=MochiKit.DOM.getElement(_67d);
if(_67d.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_67d.style.top||0)-(_67e["top"]||0);
var left=parseFloat(_67d.style.left||0)-(_67e["left"]||0);
_67d.style.position=_67e["position"];
_67d.style.top=top+"px";
_67d.style.left=left+"px";
_67d.style.width=_67e["width"];
_67d.style.height=_67e["height"];
},clone:function(_681,_682){
_681=MochiKit.DOM.getElement(_681);
_682=MochiKit.DOM.getElement(_682);
_682.style.position="absolute";
var _683=this.cumulativeOffset(_681);
_682.style.top=_683.y+"px";
_682.style.left=_683.x+"px";
_682.style.width=_681.offsetWidth+"px";
_682.style.height=_681.offsetHeight+"px";
},page:function(_684){
var _685=0;
var _686=0;
var _687=_684;
do{
_685+=_687.offsetTop||0;
_686+=_687.offsetLeft||0;
if(_687.offsetParent==document.body&&MochiKit.Style.getStyle(_687,"position")=="absolute"){
break;
}
}while(_687=_687.offsetParent);
_687=_684;
do{
_685-=_687.scrollTop||0;
_686-=_687.scrollLeft||0;
}while(_687=_687.parentNode);
return new MochiKit.Style.Coordinates(_686,_685);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Visual");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
goog.require("MochiKit.Color");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_68a){
e=MochiKit.DOM.getElement(e);
this._setOptions(_68a);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _68b=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_68b=C.fromBackground(e);
}else{
if(!(_68b instanceof C)){
_68b=C.fromString(_68b);
}
}
this.isTransparent=(_68b.asRGB().a<=0);
var _68d=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_68d=C.fromBackground(e.offsetParent);
}else{
if(!(_68d instanceof C)){
_68d=C.fromString(_68d);
}
}
this._roundCornersImpl(e,_68b,_68d);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _68f=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _691=doc.defaultView.getComputedStyle(e,null);
if(typeof (_691)==="undefined"||_691===null){
return e;
}
var _692=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_691.getPropertyValue("padding-top"),marginRight:_691.getPropertyValue("padding-right"),marginBottom:_691.getPropertyValue("padding-bottom"),marginLeft:_691.getPropertyValue("padding-left"),padding:"0px"}});
_692.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_692);
return e;
},_roundCornersImpl:function(e,_694,_695){
if(this.options.border){
this._renderBorder(e,_695);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_694,_695);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_694,_695);
}
},_renderBorder:function(el,_697){
var _698="1px solid "+this._borderColor(_697);
var _699="border-left: "+_698;
var _69a="border-right: "+_698;
var _69b="style='"+_699+";"+_69a+"'";
el.innerHTML="<div "+_69b+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_69d,_69e){
var _69f=this._createCorner(_69e);
for(var i=0;i<this.options.numSlices;i++){
_69f.appendChild(this._createCornerSlice(_69d,_69e,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_69f,el.firstChild);
},_roundBottomCorners:function(el,_6a2,_6a3){
var _6a4=this._createCorner(_6a3);
for(var i=(this.options.numSlices-1);i>=0;i--){
_6a4.appendChild(this._createCornerSlice(_6a2,_6a3,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_6a4);
},_createCorner:function(_6a6){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_6a6.toString()}});
},_createCornerSlice:function(_6a8,_6a9,n,_6ab){
var _6ac=MochiKit.DOM.SPAN();
var _6ad=_6ac.style;
_6ad.backgroundColor=_6a8.toString();
_6ad.display="block";
_6ad.height="1px";
_6ad.overflow="hidden";
_6ad.fontSize="1px";
var _6ae=this._borderColor(_6a8,_6a9);
if(this.options.border&&n===0){
_6ad.borderTopStyle="solid";
_6ad.borderTopWidth="1px";
_6ad.borderLeftWidth="0px";
_6ad.borderRightWidth="0px";
_6ad.borderBottomWidth="0px";
_6ad.height="0px";
_6ad.borderColor=_6ae.toString();
}else{
if(_6ae){
_6ad.borderColor=_6ae.toString();
_6ad.borderStyle="solid";
_6ad.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_6ad.height="2px";
}
this._setMargin(_6ac,n,_6ab);
this._setBorder(_6ac,n,_6ab);
return _6ac;
},_setOptions:function(_6af){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_6af);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _6b0=this.options.corners;
if(this._hasString(_6b0,"all","top")){
return "";
}
var _6b1=(_6b0.indexOf("tl")!=-1);
var _6b2=(_6b0.indexOf("tr")!=-1);
if(_6b1&&_6b2){
return "";
}
if(_6b1){
return "left";
}
if(_6b2){
return "right";
}
return "";
},_whichSideBottom:function(){
var _6b3=this.options.corners;
if(this._hasString(_6b3,"all","bottom")){
return "";
}
var _6b4=(_6b3.indexOf("bl")!=-1);
var _6b5=(_6b3.indexOf("br")!=-1);
if(_6b4&&_6b5){
return "";
}
if(_6b4){
return "left";
}
if(_6b5){
return "right";
}
return "";
},_borderColor:function(_6b6,_6b7){
if(_6b6=="transparent"){
return _6b7;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _6b7.blendedColor(_6b6);
}
}
}
return "";
},_setMargin:function(el,n,_6ba){
var _6bb=this._marginSize(n)+"px";
var _6bc=(_6ba=="top"?this._whichSideTop():this._whichSideBottom());
var _6bd=el.style;
if(_6bc=="left"){
_6bd.marginLeft=_6bb;
_6bd.marginRight="0px";
}else{
if(_6bc=="right"){
_6bd.marginRight=_6bb;
_6bd.marginLeft="0px";
}else{
_6bd.marginLeft=_6bb;
_6bd.marginRight=_6bb;
}
}
},_setBorder:function(el,n,_6c0){
var _6c1=this._borderSize(n)+"px";
var _6c2=(_6c0=="top"?this._whichSideTop():this._whichSideBottom());
var _6c3=el.style;
if(_6c2=="left"){
_6c3.borderLeftWidth=_6c1;
_6c3.borderRightWidth="0px";
}else{
if(_6c2=="right"){
_6c3.borderRightWidth=_6c1;
_6c3.borderLeftWidth="0px";
}else{
_6c3.borderLeftWidth=_6c1;
_6c3.borderRightWidth=_6c1;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _6c6=[1,0];
return _6c6[n];
}else{
if(o.compact){
var _6c7=[2,1];
return _6c7[n];
}else{
if(o.blend){
var _6c8=[3,2,1,0];
return _6c8[n];
}else{
var _6c9=[5,3,2,1];
return _6c9[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _6cc;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_6cc=[1,0];
}else{
if(o.blend){
_6cc=[2,1,1,1];
}else{
if(o.border){
_6cc=[0,2,0,0];
}else{
if(this.isTransparent){
_6cc=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _6cc[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_6d1){
new MochiKit.Visual._RoundCorners(e,_6d1);
};
MochiKit.Visual.roundClass=function(_6d2,_6d3,_6d4){
var _6d5=MochiKit.DOM.getElementsByTagAndClassName(_6d2,_6d3);
for(var i=0;i<_6d5.length;i++){
MochiKit.Visual.roundElement(_6d5[i],_6d4);
}
};
MochiKit.Visual.tagifyText=function(_6d7,_6d8){
_6d8=_6d8||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_6d8+=";zoom:1";
}
_6d7=MochiKit.DOM.getElement(_6d7);
var ma=MochiKit.Base.map;
ma(function(_6da){
if(_6da.nodeType==3){
ma(function(_6db){
_6d7.insertBefore(MochiKit.DOM.SPAN({style:_6d8},_6db==" "?String.fromCharCode(160):_6db),_6da);
},_6da.nodeValue.split(""));
MochiKit.DOM.removeElement(_6da);
}
},_6d7.childNodes);
};
MochiKit.Visual._forceRerendering=function(_6dc){
try{
_6dc=MochiKit.DOM.getElement(_6dc);
var n=document.createTextNode(" ");
_6dc.appendChild(n);
_6dc.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_6de,_6df,_6e0){
_6e0=MochiKit.Base.update({speed:0.1,delay:0},_6e0);
var _6e1=_6e0.delay;
var _6e2=0;
MochiKit.Base.map(function(_6e3){
_6e0.delay=_6e2*_6e0.speed+_6e1;
new _6df(_6e3,_6e0);
_6e2+=1;
},_6de);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_6e4,_6e5,_6e6){
_6e4=MochiKit.DOM.getElement(_6e4);
_6e5=(_6e5||"appear").toLowerCase();
_6e6=MochiKit.Base.update({queue:{position:"end",scope:(_6e4.id||"global"),limit:1}},_6e6);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_6e4,"display")!="none"?v.PAIRS[_6e5][1]:v.PAIRS[_6e5][0]](_6e4,_6e6);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_6ee){
if(_6ee){
pos*=2*_6ee;
}else{
pos*=10;
}
var _6ef=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_6ef:1-_6ef;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.spring=function(pos){
return 1-(Math.cos(pos*2.5*Math.PI)*Math.exp(-pos*6));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_6f5){
var _6f6=new Date().getTime();
var _6f7=(typeof (_6f5.options.queue)=="string")?_6f5.options.queue:_6f5.options.queue.position;
var ma=MochiKit.Base.map;
switch(_6f7){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_6f5.finishOn;
e.finishOn+=_6f5.finishOn;
}
},this.effects);
break;
case "end":
var _6fa;
ma(function(e){
var i=e.finishOn;
if(i>=(_6fa||i)){
_6fa=i;
}
},this.effects);
_6f6=_6fa||_6f6;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
case "replace":
ma(function(e){
e.cancel();
},this.effects);
break;
}
_6f5.startOn+=_6f6;
_6f5.finishOn+=_6f6;
if(!_6f5.options.queue.limit||this.effects.length<_6f5.options.queue.limit){
this.effects.push(_6f5);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_700){
return setInterval(func,_700);
},remove:function(_701){
this.effects=MochiKit.Base.filter(function(e){
return e!=_701;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_703){
clearInterval(_703);
},loop:function(){
var _704=new Date().getTime();
MochiKit.Base.map(function(_705){
_705.loop(_704);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_706){
if(typeof (_706)!="string"){
return _706;
}
if(!this.instances[_706]){
this.instances[_706]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_706];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_707){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_707,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_709){
if(_709>=this.startOn){
if(_709>=this.finishOn){
return this.finalize();
}
var pos=(_709-this.startOn)/(this.finishOn-this.startOn);
var _70b=Math.round(pos*this.options.fps*this.options.duration);
if(_70b>this.currentFrame){
this.render(pos);
this.currentFrame=_70b;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
var _70d=this.options.transition;
if(typeof (_70d)=="string"){
_70d=MochiKit.Visual.Transitions[_70d];
}
if(typeof (_70d)=="function"){
pos=_70d(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_70e){
},event:function(_70f){
if(this.options[_70f+"Internal"]){
this.options[_70f+"Internal"](this);
}
if(this.options[_70f]){
this.options[_70f](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_710,_711){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_710,_711);
}
this.__init__(_710,_711);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_713,_714){
this.effects=_713||[];
this.start(_714);
},update:function(_715){
MochiKit.Base.map(function(_716){
_716.render(_715);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_717){
_717.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_718,_719){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_718,_719);
}
this.__init__(_718,_719);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_71b,_71c){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_71b||[];
MochiKit.Base.map(function(_71e){
defs.duration+=_71e.options.duration;
},this.effects);
MochiKit.Base.setdefault(_71c,defs);
this.start(_71c);
},update:function(_71f){
var time=_71f*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _722=this.effects[i];
if(time<=_722.options.duration){
_722.render(time/_722.options.duration);
break;
}else{
time-=_722.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_723){
_723.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_724,_725){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_724,_725);
}
this.__init__(_724,_725);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_727,_728){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_727);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_728=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_728);
this.start(_728);
},update:function(_72b){
MochiKit.Style.setStyle(this.element,{"opacity":_72b});
}});
MochiKit.Visual.Move=function(_72c,_72d){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_72c,_72d);
}
this.__init__(_72c,_72d);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_72f,_730){
this.element=MochiKit.DOM.getElement(_72f);
_730=MochiKit.Base.update({x:0,y:0,mode:"relative"},_730);
this.start(_730);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _732=s.visibility;
var _733=s.display;
if(_733=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_733=="none"){
s.visibility=_732;
s.display=_733;
}
},update:function(_734){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_734+this.originalLeft)+"px",top:Math.round(this.options.y*_734+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_735,_736,_737){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_735,_736,_737);
}
this.__init__(_735,_736,_737);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_739,_73a,_73b){
this.element=MochiKit.DOM.getElement(_739);
_73b=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_73a},_73b);
this.start(_73b);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _73f=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_740){
if(_73f.indexOf(_740)>0){
this.fontSize=parseFloat(_73f);
this.fontSizeType=_740;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_741){
var _742=(this.options.scaleFrom/100)+(this.factor*_741);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_742+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_742,this.dims[1]*_742);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_743,_744){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_744)+"px";
}
if(this.options.scaleY){
d.height=r(_743)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_743-this.dims[0])/2;
var _748=(_744-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_748+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_748+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_749,_74a){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_749,_74a);
}
this.__init__(_749,_74a);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_74c,_74d){
this.element=MochiKit.DOM.getElement(_74c);
_74d=MochiKit.Base.update({startcolor:"#ffff99"},_74d);
this.start(_74d);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_752){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_752));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_755,_756){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_755,_756);
}
this.__init__(_755,_756);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_758,_759){
this.element=MochiKit.DOM.getElement(_758);
this.start(_759);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _75b=p.cumulativeOffset(this.element);
if(this.options.offset){
_75b.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_75b.y>max?max:_75b.y)-this.scrollStart;
},update:function(_75d){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_75d*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_75f,_760){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_75f,_760);
}
this.__init__(_75f,_760);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_762,_763){
this.element=MochiKit.DOM.getElement(_762);
this.start(_763);
},setup:function(){
var b=MochiKit.Base;
var _765=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _766,unit;
for(var s in _765){
_766=_765[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_766)){
var _769=_766.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_766=parseFloat(_769[1]);
unit=(_769.length==3)?_769[2]:null;
this.styleEnd[s]=_766;
this.units[s]=unit;
_766=MochiKit.Style.getStyle(this.element,s);
_769=_766.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_766=parseFloat(_769[1]);
this.styleStart[s]=_766;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_766=c.fromString(_766);
if(_766){
this.units[s]="color";
this.styleEnd[s]=_766.toHexString();
_766=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_766).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_766;
}
}
}
},update:function(_76d){
var _76e;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _771=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_771[i]+(end[i]-_771[i])*_76d));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_76e=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_76d*1000)/1000+this.units[s];
this.element.style[s]=_76e;
}
}
}});
MochiKit.Visual.fade=function(_774,_775){
var s=MochiKit.Style;
var _777=s.getStyle(_774,"opacity");
_775=MochiKit.Base.update({from:s.getStyle(_774,"opacity")||1,to:0,afterFinishInternal:function(_778){
if(_778.options.to!==0){
return;
}
s.hideElement(_778.element);
s.setStyle(_778.element,{"opacity":_777});
}},_775);
return new MochiKit.Visual.Opacity(_774,_775);
};
MochiKit.Visual.appear=function(_779,_77a){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_77a=MochiKit.Base.update({from:(s.getStyle(_779,"display")=="none"?0:s.getStyle(_779,"opacity")||0),to:1,afterFinishInternal:function(_77d){
v._forceRerendering(_77d.element);
},beforeSetupInternal:function(_77e){
s.setStyle(_77e.element,{"opacity":_77e.options.from});
s.showElement(_77e.element);
}},_77a);
return new v.Opacity(_779,_77a);
};
MochiKit.Visual.puff=function(_77f,_780){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_77f=MochiKit.DOM.getElement(_77f);
var _783=MochiKit.Style.getElementDimensions(_77f,true);
var _784={position:s.getStyle(_77f,"position"),top:_77f.style.top,left:_77f.style.left,width:_77f.style.width,height:_77f.style.height,opacity:s.getStyle(_77f,"opacity")};
_780=MochiKit.Base.update({beforeSetupInternal:function(_785){
MochiKit.Position.absolutize(_785.effects[0].element);
},afterFinishInternal:function(_786){
s.hideElement(_786.effects[0].element);
s.setStyle(_786.effects[0].element,_784);
},scaleContent:true,scaleFromCenter:true},_780);
return new v.Parallel([new v.Scale(_77f,200,{sync:true,scaleFromCenter:_780.scaleFromCenter,scaleMode:{originalHeight:_783.h,originalWidth:_783.w},scaleContent:_780.scaleContent,restoreAfterFinish:true}),new v.Opacity(_77f,{sync:true,to:0})],_780);
};
MochiKit.Visual.blindUp=function(_787,_788){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_787=d.getElement(_787);
var _78b=s.getElementDimensions(_787,true);
var _78c=s.makeClipping(_787);
_788=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_78b.h,originalWidth:_78b.w},restoreAfterFinish:true,afterFinishInternal:function(_78d){
s.hideElement(_78d.element);
s.undoClipping(_78d.element,_78c);
}},_788);
return new MochiKit.Visual.Scale(_787,0,_788);
};
MochiKit.Visual.blindDown=function(_78e,_78f){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_78e=d.getElement(_78e);
var _792=s.getElementDimensions(_78e,true);
var _793;
_78f=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_792.h,originalWidth:_792.w},restoreAfterFinish:true,afterSetupInternal:function(_794){
_793=s.makeClipping(_794.element);
s.setStyle(_794.element,{height:"0px"});
s.showElement(_794.element);
},afterFinishInternal:function(_795){
s.undoClipping(_795.element,_793);
}},_78f);
return new MochiKit.Visual.Scale(_78e,100,_78f);
};
MochiKit.Visual.switchOff=function(_796,_797){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_796=d.getElement(_796);
var _79a=s.getElementDimensions(_796,true);
var _79b=s.getStyle(_796,"opacity");
var _79c;
_797=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_79d){
s.makePositioned(_796);
_79c=s.makeClipping(_796);
},afterFinishInternal:function(_79e){
s.hideElement(_796);
s.undoClipping(_796,_79c);
s.undoPositioned(_796);
s.setStyle(_796,{"opacity":_79b});
}},_797);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_796,{sync:true,duration:0.57*_797.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_796,1,{sync:true,duration:0.43*_797.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_79a.h,originalWidth:_79a.w},scaleContent:false,restoreAfterFinish:true})],_797);
};
MochiKit.Visual.dropOut=function(_7a0,_7a1){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7a0=d.getElement(_7a0);
var _7a4={top:s.getStyle(_7a0,"top"),left:s.getStyle(_7a0,"left"),opacity:s.getStyle(_7a0,"opacity")};
_7a1=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_7a5){
s.makePositioned(_7a5.effects[0].element);
},afterFinishInternal:function(_7a6){
s.hideElement(_7a6.effects[0].element);
s.undoPositioned(_7a6.effects[0].element);
s.setStyle(_7a6.effects[0].element,_7a4);
}},_7a1);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_7a0,{x:0,y:_7a1.distance,sync:true}),new v.Opacity(_7a0,{sync:true,to:0})],_7a1);
};
MochiKit.Visual.shake=function(_7a8,_7a9){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7a8=d.getElement(_7a8);
var _7ad={top:s.getStyle(_7a8,"top"),left:s.getStyle(_7a8,"left")};
_7a9=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_7ae){
s.undoPositioned(_7a8);
s.setStyle(_7a8,_7ad);
}},_7a9);
return new v.Sequence([new v.Move(_7a8,{sync:true,duration:0.1*_7a9.duration,x:20,y:0}),new v.Move(_7a8,{sync:true,duration:0.2*_7a9.duration,x:-40,y:0}),new v.Move(_7a8,{sync:true,duration:0.2*_7a9.duration,x:40,y:0}),new v.Move(_7a8,{sync:true,duration:0.2*_7a9.duration,x:-40,y:0}),new v.Move(_7a8,{sync:true,duration:0.2*_7a9.duration,x:40,y:0}),new v.Move(_7a8,{sync:true,duration:0.1*_7a9.duration,x:-20,y:0})],_7a9);
};
MochiKit.Visual.slideDown=function(_7af,_7b0){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7af=d.getElement(_7af);
if(!_7af.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_7af);
var _7b4=s.getStyle(_7af.firstChild,"bottom")||0;
var _7b5=s.getElementDimensions(_7af,true);
var _7b6;
_7b0=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7b5.h,originalWidth:_7b5.w},restoreAfterFinish:true,afterSetupInternal:function(_7b7){
s.makePositioned(_7b7.element);
s.makePositioned(_7b7.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7b7.element,{top:""});
}
_7b6=s.makeClipping(_7b7.element);
s.setStyle(_7b7.element,{height:"0px"});
s.showElement(_7b7.element);
},afterUpdateInternal:function(_7b8){
var _7b9=s.getElementDimensions(_7b8.element,true);
s.setStyle(_7b8.element.firstChild,{bottom:(_7b8.dims[0]-_7b9.h)+"px"});
},afterFinishInternal:function(_7ba){
s.undoClipping(_7ba.element,_7b6);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_7ba.element);
s.undoPositioned(_7ba.element.firstChild);
}else{
s.undoPositioned(_7ba.element.firstChild);
s.undoPositioned(_7ba.element);
}
s.setStyle(_7ba.element.firstChild,{bottom:_7b4});
}},_7b0);
return new MochiKit.Visual.Scale(_7af,100,_7b0);
};
MochiKit.Visual.slideUp=function(_7bb,_7bc){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7bb=d.getElement(_7bb);
if(!_7bb.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_7bb);
var _7c0=s.getStyle(_7bb.firstChild,"bottom");
var _7c1=s.getElementDimensions(_7bb,true);
var _7c2;
_7bc=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7c1.h,originalWidth:_7c1.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_7c3){
s.makePositioned(_7c3.element);
s.makePositioned(_7c3.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7c3.element,{top:""});
}
_7c2=s.makeClipping(_7c3.element);
s.showElement(_7c3.element);
},afterUpdateInternal:function(_7c4){
var _7c5=s.getElementDimensions(_7c4.element,true);
s.setStyle(_7c4.element.firstChild,{bottom:(_7c4.dims[0]-_7c5.h)+"px"});
},afterFinishInternal:function(_7c6){
s.hideElement(_7c6.element);
s.undoClipping(_7c6.element,_7c2);
s.undoPositioned(_7c6.element.firstChild);
s.undoPositioned(_7c6.element);
s.setStyle(_7c6.element.firstChild,{bottom:_7c0});
}},_7bc);
return new MochiKit.Visual.Scale(_7bb,0,_7bc);
};
MochiKit.Visual.squish=function(_7c7,_7c8){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _7cc=s.getElementDimensions(_7c7,true);
var _7cd;
_7c8=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_7cc.w,originalWidth:_7cc.h},beforeSetupInternal:function(_7ce){
_7cd=s.makeClipping(_7ce.element);
},afterFinishInternal:function(_7cf){
s.hideElement(_7cf.element);
s.undoClipping(_7cf.element,_7cd);
}},_7c8);
return new MochiKit.Visual.Scale(_7c7,/Opera/.test(navigator.userAgent)?1:0,_7c8);
};
MochiKit.Visual.grow=function(_7d0,_7d1){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7d0=d.getElement(_7d0);
_7d1=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_7d1);
var _7d5={top:_7d0.style.top,left:_7d0.style.left,height:_7d0.style.height,width:_7d0.style.width,opacity:s.getStyle(_7d0,"opacity")};
var dims=s.getElementDimensions(_7d0,true);
var _7d7,_7d8;
var _7d9,_7da;
switch(_7d1.direction){
case "top-left":
_7d7=_7d8=_7d9=_7da=0;
break;
case "top-right":
_7d7=dims.w;
_7d8=_7da=0;
_7d9=-dims.w;
break;
case "bottom-left":
_7d7=_7d9=0;
_7d8=dims.h;
_7da=-dims.h;
break;
case "bottom-right":
_7d7=dims.w;
_7d8=dims.h;
_7d9=-dims.w;
_7da=-dims.h;
break;
case "center":
_7d7=dims.w/2;
_7d8=dims.h/2;
_7d9=-dims.w/2;
_7da=-dims.h/2;
break;
}
var _7db=MochiKit.Base.update({beforeSetupInternal:function(_7dc){
s.setStyle(_7dc.effects[0].element,{height:"0px"});
s.showElement(_7dc.effects[0].element);
},afterFinishInternal:function(_7dd){
s.undoClipping(_7dd.effects[0].element);
s.undoPositioned(_7dd.effects[0].element);
s.setStyle(_7dd.effects[0].element,_7d5);
}},_7d1);
return new v.Move(_7d0,{x:_7d7,y:_7d8,duration:0.01,beforeSetupInternal:function(_7de){
s.hideElement(_7de.element);
s.makeClipping(_7de.element);
s.makePositioned(_7de.element);
},afterFinishInternal:function(_7df){
new v.Parallel([new v.Opacity(_7df.element,{sync:true,to:1,from:0,transition:_7d1.opacityTransition}),new v.Move(_7df.element,{x:_7d9,y:_7da,sync:true,transition:_7d1.moveTransition}),new v.Scale(_7df.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_7d1.scaleTransition,scaleContent:_7d1.scaleContent,scaleFromCenter:_7d1.scaleFromCenter,restoreAfterFinish:true})],_7db);
}});
};
MochiKit.Visual.shrink=function(_7e0,_7e1){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7e0=d.getElement(_7e0);
_7e1=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_7e1);
var _7e5={top:_7e0.style.top,left:_7e0.style.left,height:_7e0.style.height,width:_7e0.style.width,opacity:s.getStyle(_7e0,"opacity")};
var dims=s.getElementDimensions(_7e0,true);
var _7e7,_7e8;
switch(_7e1.direction){
case "top-left":
_7e7=_7e8=0;
break;
case "top-right":
_7e7=dims.w;
_7e8=0;
break;
case "bottom-left":
_7e7=0;
_7e8=dims.h;
break;
case "bottom-right":
_7e7=dims.w;
_7e8=dims.h;
break;
case "center":
_7e7=dims.w/2;
_7e8=dims.h/2;
break;
}
var _7e9;
var _7ea=MochiKit.Base.update({beforeStartInternal:function(_7eb){
s.makePositioned(_7eb.effects[0].element);
_7e9=s.makeClipping(_7eb.effects[0].element);
},afterFinishInternal:function(_7ec){
s.hideElement(_7ec.effects[0].element);
s.undoClipping(_7ec.effects[0].element,_7e9);
s.undoPositioned(_7ec.effects[0].element);
s.setStyle(_7ec.effects[0].element,_7e5);
}},_7e1);
return new v.Parallel([new v.Opacity(_7e0,{sync:true,to:0,from:1,transition:_7e1.opacityTransition}),new v.Scale(_7e0,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_7e1.scaleTransition,scaleContent:_7e1.scaleContent,scaleFromCenter:_7e1.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_7e0,{x:_7e7,y:_7e8,sync:true,transition:_7e1.moveTransition})],_7ea);
};
MochiKit.Visual.pulsate=function(_7ed,_7ee){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _7f2=MochiKit.Style.getStyle(_7ed,"opacity");
_7ee=b.update({duration:3,from:0,afterFinishInternal:function(_7f3){
MochiKit.Style.setStyle(_7f3.element,{"opacity":_7f2});
}},_7ee);
var _7f4=_7ee.transition||v.Transitions.sinoidal;
_7ee.transition=function(pos){
return _7f4(1-v.Transitions.pulse(pos,_7ee.pulses));
};
return new v.Opacity(_7ed,_7ee);
};
MochiKit.Visual.fold=function(_7f6,_7f7){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7f6=d.getElement(_7f6);
var _7fb=s.getElementDimensions(_7f6,true);
var _7fc={top:_7f6.style.top,left:_7f6.style.left,width:_7f6.style.width,height:_7f6.style.height};
var _7fd=s.makeClipping(_7f6);
_7f7=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7fb.h,originalWidth:_7fb.w},afterFinishInternal:function(_7fe){
new v.Scale(_7f6,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_7fb.h,originalWidth:_7fb.w},afterFinishInternal:function(_7ff){
s.hideElement(_7ff.element);
s.undoClipping(_7ff.element,_7fd);
s.setStyle(_7ff.element,_7fc);
}});
}},_7f7);
return new v.Scale(_7f6,5,_7f7);
};
MochiKit.Base.nameFunctions(MochiKit.Visual);
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DragAndDrop");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Signal");
goog.require("MochiKit.Visual");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_800){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_800);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_805){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_805)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_805);
}
},this.drops);
},findDeepestChild:function(_807){
var _808=_807[0];
for(var i=1;i<_807.length;++i){
if(MochiKit.DOM.isChildNode(_807[i].element,_808.element)){
_808=_807[i];
}
}
return _808;
},show:function(_80a,_80b){
if(!this.drops.length){
return;
}
var _80c=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_80a,_80b)){
_80c.push(drop);
}
});
if(_80c.length>0){
var drop=this.findDeepestChild(_80c);
MochiKit.Position.within(drop.element,_80a.page.x,_80a.page.y);
drop.options.onhover(_80b,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_80f,_810){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_80f.mouse(),_810)){
this.last_active.options.ondrop(_810,this.last_active.element,_80f);
}
},reset:function(_811){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_811);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_813,_814){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_813,_814);
}
this.__init__(_813,_814);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_816,_817){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_816);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_817);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_81b){
if(this.options._containers.length){
var _81c;
if(this.options.tree){
_81c=_81b.treeNode;
}else{
_81c=_81b.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _81c==c;
});
}else{
return true;
}
},isAccepted:function(_81e){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_81e,c);
}));
},isAffected:function(_820,_821){
return ((this.element!=_821)&&this.isContained(_821)&&this.isAccepted(_821)&&MochiKit.Position.within(this.element,_820.page.x,_820.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_822){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_822);
},unregister:function(_824){
this.drags=MochiKit.Base.filter(function(d){
return d!=_824;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_827){
window.focus();
this.activeDraggable=_827;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_828){
if(!this.activeDraggable){
return;
}
var _829=_828.mouse();
if(this._lastPointer&&this._lastPointer.page.x==_829.page.x&&this._lastPointer.page.y==_829.page.y){
return;
}
this._lastPointer=_829;
this.activeDraggable.updateDrag(_828,_829);
},endDrag:function(_82a){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_82a);
this.activeDraggable=null;
},keyPress:function(_82b){
if(this.activeDraggable){
this.activeDraggable.keyPress(_82b);
}
},notify:function(_82c,_82d,_82e){
MochiKit.Signal.signal(this,_82c,_82d,_82e);
}};
MochiKit.DragAndDrop.Draggable=function(_82f,_830){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_82f,_830);
}
this.__init__(_82f,_830);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_832,_833){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_833=b.update({handle:false,starteffect:function(_836){
this._savedOpacity=MochiKit.Style.getStyle(_836,"opacity")||1;
new v.Opacity(_836,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_837,_838,_839){
var dur=Math.sqrt(Math.abs(_838^2)+Math.abs(_839^2))*0.02;
return new v.Move(_837,{x:-_839,y:-_838,duration:dur});
},endeffect:function(_83b){
new v.Opacity(_83b,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_833);
var d=MochiKit.DOM;
this.element=d.getElement(_832);
if(_833.handle&&(typeof (_833.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_833.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_833.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_833.scroll&&!_833.scroll.scrollTo&&!_833.scroll.outerHTML){
_833.scroll=d.getElement(_833.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_833.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_833;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0",10),parseInt(s(this.element,"top")||"0",10)];
},initDrag:function(_83e){
if(!_83e.mouse().button.left){
return;
}
var src=_83e.target();
var _840=(src.tagName||"").toUpperCase();
if(_840==="INPUT"||_840==="SELECT"||_840==="OPTION"||_840==="BUTTON"||_840==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _841=_83e.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_841.page.x-pos.x,_841.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_83e.stop();
},startDrag:function(_843){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=MochiKit.Style.getStyle(this.element,"z-index");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _844=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_844.left;
this.originalScrollTop=_844.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_843);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_845,_846){
if(!this.dragging){
this.startDrag(_845);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_846,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_845);
this.draw(_846);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _84a=[0,0];
if(_846.page.x>(q.x-this.options.scrollSensitivity)){
_84a[0]=_846.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_846.page.x<(p.x+this.options.scrollSensitivity)){
_84a[0]=_846.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_846.page.y>(q.y-this.options.scrollSensitivity)){
_84a[1]=_846.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_846.page.y<(p.y+this.options.scrollSensitivity)){
_84a[1]=_846.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_84a);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_845.stop();
},finishDrag:function(_84b,_84c){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_84c){
dr.Droppables.fire(_84b,this.element);
}
dr.Draggables.notify("end",this,_84b);
var _84e=this.options.revert;
if(_84e&&typeof (_84e)=="function"){
_84e=_84e(this.element);
}
var d=this.currentDelta();
if(_84e&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_850){
if(_850.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_850,false);
_850.stop();
},endDrag:function(_851){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_851,true);
_851.stop();
},draw:function(_852){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_852.page.x-pos.x-this.offset[0],_852.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _859=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_859.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_859.top=p[1]+"px";
}
if(_859.visibility=="hidden"){
_859.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_85a){
if(!_85a[0]&&!_85a[1]){
return;
}
this.scrollSpeed=[_85a[0]*this.options.scrollSpeed,_85a[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _85b=new Date();
var _85c=_85b-this.lastScrolled;
this.lastScrolled=_85b;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_85c/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_85c/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_85c/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_85c/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_85c/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Sortable");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Position");
goog.require("MochiKit.DragAndDrop");
}
MochiKit.Base.module(MochiKit,"Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_864){
while(_864.tagName.toUpperCase()!="BODY"){
if(_864.id&&MochiKit.Sortable.sortables[_864.id]){
return _864;
}
_864=_864.parentNode;
}
},_createElementId:function(_865){
if(_865.id==null||_865.id==""){
var d=MochiKit.DOM;
var id;
var _868=1;
while(d.getElement(id="sortable"+_868)!=null){
_868+=1;
}
d.setNodeAttribute(_865,"id",id);
}
},options:function(_869){
_869=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_869));
if(!_869){
return;
}
return MochiKit.Sortable.sortables[_869.id];
},destroy:function(_86a){
var s=MochiKit.Sortable.options(_86a);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_870,_871){
_870=MochiKit.DOM.getElement(_870);
var self=MochiKit.Sortable;
self._createElementId(_870);
_871=MochiKit.Base.update({element:_870,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_870],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_871);
self.destroy(_870);
var _873={revert:true,ghosting:_871.ghosting,scroll:_871.scroll,scrollSensitivity:_871.scrollSensitivity,scrollSpeed:_871.scrollSpeed,constraint:_871.constraint,handle:_871.handle};
if(_871.starteffect){
_873.starteffect=_871.starteffect;
}
if(_871.reverteffect){
_873.reverteffect=_871.reverteffect;
}else{
if(_871.ghosting){
_873.reverteffect=function(_874){
_874.style.top=0;
_874.style.left=0;
};
}
}
if(_871.endeffect){
_873.endeffect=_871.endeffect;
}
if(_871.zindex){
_873.zindex=_871.zindex;
}
var _875={overlap:_871.overlap,containment:_871.containment,hoverclass:_871.hoverclass,onhover:self.onHover,tree:_871.tree,accept:_871.accept};
var _876={onhover:self.onEmptyHover,overlap:_871.overlap,containment:_871.containment,hoverclass:_871.hoverclass,accept:_871.accept};
MochiKit.DOM.removeEmptyTextNodes(_870);
_871.draggables=[];
_871.droppables=[];
if(_871.dropOnEmpty||_871.tree){
new MochiKit.DragAndDrop.Droppable(_870,_876);
_871.droppables.push(_870);
}
MochiKit.Base.map(function(e){
var _878=_871.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_871.handle,e):e;
_871.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_873,{handle:_878})));
new MochiKit.DragAndDrop.Droppable(e,_875);
if(_871.tree){
e.treeNode=_870;
}
_871.droppables.push(e);
},(self.findElements(_870,_871)||[]));
if(_871.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_876);
e.treeNode=_870;
_871.droppables.push(e);
},(self.findTreeElements(_870,_871)||[]));
}
self.sortables[_870.id]=_871;
_871.lastValue=self.serialize(_870);
_871.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_870));
_871.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_870));
},onStart:function(_87a,_87b){
var self=MochiKit.Sortable;
var _87d=self.options(_87a);
_87d.lastValue=self.serialize(_87d.element);
},onEnd:function(_87e,_87f){
var self=MochiKit.Sortable;
self.unmark();
var _881=self.options(_87e);
if(_881.lastValue!=self.serialize(_881.element)){
_881.onUpdate(_881.element);
}
},findElements:function(_882,_883){
return MochiKit.Sortable.findChildren(_882,_883.only,_883.tree,_883.tag);
},findTreeElements:function(_884,_885){
return MochiKit.Sortable.findChildren(_884,_885.only,_885.tree?true:false,_885.treeTag);
},findChildren:function(_886,only,_888,_889){
if(!_886.hasChildNodes()){
return null;
}
_889=_889.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _88a=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_889&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_88a.push(e);
}
if(_888){
var _88d=MochiKit.Sortable.findChildren(e,only,_888,_889);
if(_88d&&_88d.length>0){
_88a=_88a.concat(_88d);
}
}
},_886.childNodes);
return _88a;
},onHover:function(_88e,_88f,_890){
if(MochiKit.DOM.isChildNode(_88f,_88e)){
return;
}
var self=MochiKit.Sortable;
if(_890>0.33&&_890<0.66&&self.options(_88f).tree){
return;
}else{
if(_890>0.5){
self.mark(_88f,"before");
if(_88f.previousSibling!=_88e){
var _892=_88e.parentNode;
_88e.style.visibility="hidden";
_88f.parentNode.insertBefore(_88e,_88f);
if(_88f.parentNode!=_892){
self.options(_892).onChange(_88e);
}
self.options(_88f.parentNode).onChange(_88e);
}
}else{
self.mark(_88f,"after");
var _893=_88f.nextSibling||null;
if(_893!=_88e){
var _892=_88e.parentNode;
_88e.style.visibility="hidden";
_88f.parentNode.insertBefore(_88e,_893);
if(_88f.parentNode!=_892){
self.options(_892).onChange(_88e);
}
self.options(_88f.parentNode).onChange(_88e);
}
}
}
},_offsetSize:function(_894,type){
if(type=="vertical"||type=="height"){
return _894.offsetHeight;
}else{
return _894.offsetWidth;
}
},onEmptyHover:function(_896,_897,_898){
var _899=_896.parentNode;
var self=MochiKit.Sortable;
var _89b=self.options(_897);
if(!MochiKit.DOM.isChildNode(_897,_896)){
var _89c;
var _89d=self.findElements(_897,{tag:_89b.tag,only:_89b.only});
var _89e=null;
if(_89d){
var _89f=self._offsetSize(_897,_89b.overlap)*(1-_898);
for(_89c=0;_89c<_89d.length;_89c+=1){
if(_89f-self._offsetSize(_89d[_89c],_89b.overlap)>=0){
_89f-=self._offsetSize(_89d[_89c],_89b.overlap);
}else{
if(_89f-(self._offsetSize(_89d[_89c],_89b.overlap)/2)>=0){
_89e=_89c+1<_89d.length?_89d[_89c+1]:null;
break;
}else{
_89e=_89d[_89c];
break;
}
}
}
}
_897.insertBefore(_896,_89e);
self.options(_899).onChange(_896);
_89b.onChange(_896);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_8a1,_8a2){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _8a5=self.options(_8a1.parentNode);
if(_8a5&&!_8a5.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _8a6=MochiKit.Position.cumulativeOffset(_8a1);
self._marker.style.left=_8a6.x+"px";
self._marker.style.top=_8a6.y+"px";
if(_8a2=="after"){
if(_8a5.overlap=="horizontal"){
self._marker.style.left=(_8a6.x+_8a1.clientWidth)+"px";
}else{
self._marker.style.top=(_8a6.y+_8a1.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_8a7,_8a8,_8a9){
var self=MochiKit.Sortable;
var _8ab=self.findElements(_8a7,_8a8)||[];
for(var i=0;i<_8ab.length;++i){
var _8ad=_8ab[i].id.match(_8a8.format);
if(!_8ad){
continue;
}
var _8ae={id:encodeURIComponent(_8ad?_8ad[1]:null),element:_8a7,parent:_8a9,children:[],position:_8a9.children.length,container:self._findChildrenElement(_8ab[i],_8a8.treeTag.toUpperCase())};
if(_8ae.container){
self._tree(_8ae.container,_8a8,_8ae);
}
_8a9.children.push(_8ae);
}
return _8a9;
},_findChildrenElement:function(_8af,_8b0){
if(_8af&&_8af.hasChildNodes){
_8b0=_8b0.toUpperCase();
for(var i=0;i<_8af.childNodes.length;++i){
if(_8af.childNodes[i].tagName.toUpperCase()==_8b0){
return _8af.childNodes[i];
}
}
}
return null;
},tree:function(_8b2,_8b3){
_8b2=MochiKit.DOM.getElement(_8b2);
var _8b4=MochiKit.Sortable.options(_8b2);
_8b3=MochiKit.Base.update({tag:_8b4.tag,treeTag:_8b4.treeTag,only:_8b4.only,name:_8b2.id,format:_8b4.format},_8b3||{});
var root={id:null,parent:null,children:new Array,container:_8b2,position:0};
return MochiKit.Sortable._tree(_8b2,_8b3,root);
},setSequence:function(_8b6,_8b7,_8b8){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_8b6=MochiKit.DOM.getElement(_8b6);
_8b8=b.update(self.options(_8b6),_8b8||{});
var _8bb={};
b.map(function(n){
var m=n.id.match(_8b8.format);
if(m){
_8bb[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_8b6,_8b8));
b.map(function(_8be){
var n=_8bb[_8be];
if(n){
n[1].appendChild(n[0]);
delete _8bb[_8be];
}
},_8b7);
},_constructIndex:function(node){
var _8c1="";
do{
if(node.id){
_8c1="["+node.position+"]"+_8c1;
}
}while((node=node.parent)!=null);
return _8c1;
},sequence:function(_8c2,_8c3){
_8c2=MochiKit.DOM.getElement(_8c2);
var self=MochiKit.Sortable;
var _8c3=MochiKit.Base.update(self.options(_8c2),_8c3||{});
return MochiKit.Base.map(function(item){
return item.id.match(_8c3.format)?item.id.match(_8c3.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_8c2,_8c3)||[]));
},serialize:function(_8c6,_8c7){
_8c6=MochiKit.DOM.getElement(_8c6);
var self=MochiKit.Sortable;
_8c7=MochiKit.Base.update(self.options(_8c6),_8c7||{});
var name=encodeURIComponent(_8c7.name||_8c6.id);
if(_8c7.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_8c6,_8c7).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_8c6,_8c7)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base_ext");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Base_ext","1.5",["Base"]);
MochiKit.Base._arg_placeholder=function(_8cc){
this.index=_8cc;
};
var _1=new MochiKit.Base._arg_placeholder(0);
var _2=new MochiKit.Base._arg_placeholder(1);
var _3=new MochiKit.Base._arg_placeholder(2);
var _4=new MochiKit.Base._arg_placeholder(3);
var _5=new MochiKit.Base._arg_placeholder(4);
var _6=new MochiKit.Base._arg_placeholder(5);
var _7=new MochiKit.Base._arg_placeholder(6);
var _8=new MochiKit.Base._arg_placeholder(7);
var _9=new MochiKit.Base._arg_placeholder(8);
var _10=new MochiKit.Base._arg_placeholder(9);
MochiKit.Base._rebind_preargs=function(_8cd,args,_8cf){
_8cf=_8cf||{};
for(var i=0;i<_8cd.length;++i){
var pa=_8cd[i];
if(pa instanceof MochiKit.Base._arg_placeholder){
if(pa.index<args.length){
_8cd[i]=args[pa.index];
_8cf[pa.index]=pa.index;
}
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
MochiKit.Base._rebind_preargs(pa.im_preargs,args,_8cf);
}
}
}
return _8cf;
};
MochiKit.Base.bind2=function(func,self,_8d4){
if(typeof (func)=="string"){
func=self[func];
}
var _8d5=func.im_func;
var _8d6=func.im_preargs;
var _8d7=func.im_self;
var m=MochiKit.Base;
if(typeof (func)=="function"&&typeof (func.apply)=="undefined"){
func=m._wrapDumbFunction(func);
}
if(typeof (_8d5)!="function"){
_8d5=func;
}
if(typeof (self)!="undefined"){
_8d7=self;
}
if(typeof (_8d6)=="undefined"){
_8d6=[];
}else{
_8d6=_8d6.slice();
}
var args=Array.prototype.slice.call(arguments,self instanceof m._arg_placeholder?1:2);
var _8da=MochiKit.Base._rebind_preargs(_8d6,args);
for(var _8db in _8da){
args.splice(_8da[_8db],1);
}
m.extend(_8d6,args);
var _8dc=function(){
var me=arguments.callee;
var self=me.im_self;
if(!self){
self=this;
}
var args=[];
if(me.im_preargs.length>0){
var imax=0;
for(var i=0;i<me.im_preargs.length;++i){
var pa=me.im_preargs[i];
if(pa instanceof m._arg_placeholder){
imax=Math.max(imax,pa.index+1);
pa=arguments[pa.index];
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
pa=pa.apply(self,arguments);
}
}
args.push(pa);
}
for(var j=imax;j<arguments.length;++j){
args.push(arguments[j]);
}
}else{
args=arguments;
}
if(self instanceof m._arg_placeholder){
self=arguments[self.index];
}
return me.im_func.apply(self,args);
};
_8dc.im_self=_8d7;
_8dc.im_func=_8d5;
_8dc.im_preargs=_8d6;
if(typeof (_8d5.NAME)=="string"){
_8dc.NAME="bind2("+_8d5.NAME+",...)";
}
return _8dc;
};
MochiKit.Base.partial2=function(func,_8e5){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,undefined],arguments,1));
};
MochiKit.Base.method2=function(self,func,_8e9){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,self],arguments,2));
};
MochiKit.Base.bindLate2=function(func,self,_8ed){
var m=MochiKit.Base;
var args=arguments;
if(typeof (func)==="string"){
args=m.extend([m.forwardCall(func)],arguments,1);
return m.bind2.apply(this,args);
}
return m.bind2.apply(this,args);
};
MochiKit.Base.isBoundFunction=function(fn){
return typeof fn=="function"&&typeof fn.im_func=="function";
};
MochiKit.Base.protect=function(_8f1){
return function(){
return _8f1.apply(this,arguments);
};
};
MochiKit.Base.apply=function(fn,_8f3){
var args=MochiKit.Base.extend([],arguments,1);
return fn.apply(this,args);
};
MochiKit.Base.partition=function(_8f5,cmp,left,_8f8,_8f9){
cmp=cmp||MochiKit.Base.operator.cle;
left=left||0;
_8f8=_8f8||_8f5.length-1;
_8f9=_8f9||(left+Math.floor((_8f8-left)/2));
function swap(i,j){
var tmp=_8f5[i];
_8f5[i]=_8f5[j];
_8f5[j]=tmp;
}
var _8fd=_8f5[_8f9];
swap(_8f9,_8f8);
var _8fe=left;
for(var i=left;i<=_8f8;++i){
if(cmp(_8f5[i],_8fd)){
swap(i,_8fe);
++_8fe;
}
}
swap(_8fe,_8f8);
return _8fe;
};
MochiKit.Base.countValue=function(_900,elem,cmp){
cmp=cmp||MochiKit.Base.operator.ceq;
var n=0;
MochiKit.Iter.forEach(_900,function(e){
if(cmp(e,elem)){
++n;
}
});
return n;
};
MochiKit.Base.negateComparator=function(cmp){
return function(){
return -1*cmp.apply(this,arguments);
};
};
MochiKit.Base_ext.__new__=function(){
};
MochiKit.Base_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Iter_ext","1.5",["Base","Iter"]);
MochiKit.Iter.treePreOrder=function(_906,_907){
var _908=[_906];
return {repr:function(){
return "treePreOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_908.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_908.pop();
MochiKit.Iter.iextend(_908,_907(node));
return node;
}};
};
MochiKit.Iter.treeLevelOrder=function(_90a,_90b){
var _90c=[_90a];
return {repr:function(){
return "treeLevelOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_90c.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_90c.shift();
MochiKit.Iter.iextend(_90c,_90b(node));
return node;
}};
};
MochiKit.Iter.treePostOrder=function(_90e,_90f){
var _910=[[_90e,false]];
return {repr:function(){
return "treePostOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_910.length==0){
throw MochiKit.Iter.StopIteration;
}
var n=_910.pop();
if(n[1]){
return n[0];
}
n[1]=true;
_910.push(n);
MochiKit.Iter.iextend(_910,MochiKit.Iter.imap(function(node){
return [node,false];
},_90f(n[0])));
}
}};
};
MochiKit.Iter.pairView=function(_913,_914){
_914=_914||false;
var it=MochiKit.Iter.iter(_913);
try{
var _916=it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return MochiKit.Iter.EmptyIter;
}
if(_914){
it=MochiKit.Iter.chain(it,[_916]);
}
return {repr:function(){
return "pairView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _917=it.next();
var pair=[_916,_917];
_916=_917;
return pair;
}};
};
MochiKit.Iter.windowView=function(_919,_91a,_91b){
_91a=_91a||2;
_91b=_91b||1;
var it=MochiKit.Iter.iter(_919);
var win=[];
return {repr:function(){
return "windowView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(win.length<_91a){
while(win.length<_91a){
win.push(it.next());
}
}else{
for(var i=0;i<_91b;++i){
win.shift();
win.push(it.next());
}
}
return win.slice();
}};
};
MochiKit.Iter.filterMap=function(_91f,_920,_921){
_921=_921||function(item){
return typeof item!=="undefined"&&item!==null;
};
return MochiKit.Iter.ifilter(_921,MochiKit.Iter.imap(_91f,_920));
};
MochiKit.Iter.iflattenArray=function(root){
var _924=[root];
return {repr:function(){
return "iflattenArray(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_924.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_924.shift();
if(node instanceof Array){
Array.prototype.splice.apply(_924,[0,0].concat(node));
}else{
return node;
}
}
}};
};
MochiKit.Iter.chainFromIter=function(seq,_927){
_927=_927||MochiKit.Iter.iter;
var it=MochiKit.Iter.iter(seq);
var jt=null;
return {repr:function(){
return "chainFromIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(jt==null){
jt=MochiKit.Iter.iter(_927(it.next()));
}
while(true){
try{
var val=jt.next();
return val;
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=MochiKit.Iter.iter(_927(it.next()));
}
}
}};
};
MochiKit.Iter.uniqueView=function(_92b,pred){
pred=pred||MochiKit.Base.operator.ceq;
var it=MochiKit.Iter.iter(_92b);
var _92e=true;
var prev;
return {repr:function(){
return "uniqueView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_92e){
_92e=false;
prev=it.next();
return prev;
}
var val=it.next();
while(pred(prev,val)){
val=it.next();
}
prev=val;
return val;
}};
};
MochiKit.Iter.iproduct=function(_931,_932){
var sa=arguments[0],sb=arguments[1];
var it=MochiKit.Iter.iter(sa);
var jt=null;
var a,b;
return {repr:function(){
return "iproduct(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(jt==null){
a=it.next();
jt=MochiKit.Iter.iter(sb);
}
try{
b=jt.next();
return [a,b];
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=null;
}
}
}};
};
MochiKit.Iter.enumerate=function(_939,_93a){
return MochiKit.Iter.izip(MochiKit.Iter.count(_93a),_939);
};
MochiKit.Iter.breakIt=function(){
throw MochiKit.Iter.StopIteration;
};
MochiKit.Iter.EmptyIter={repr:function(){
return "EmptyIter";
},toString:MochiKit.Base.forwardCall("repr"),next:MochiKit.Iter.breakIt};
MochiKit.Iter.generateN=function(_93b,n){
return MochiKit.Iter.imap(function(){
return _93b();
},MochiKit.Iter.range(n));
};
MochiKit.Iter.izipLongest=function(_93d,_93e){
_93e=_93e||null;
_93d=MochiKit.Base.map(MochiKit.Iter.iter,_93d);
var _93f=_93d.length;
return {repr:function(){
return "izipLongest(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _940=new Array(_93d.length);
for(var i=0;i<_93d.length;++i){
try{
_940[i]=_93d[i].next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
_93d[i]=MochiKit.Iter.repeat(_93e);
_940[i]=_93e;
--_93f;
}
}
if(_93f==0){
throw MochiKit.Iter.StopIteration;
}
return _940;
}};
};
MochiKit.Iter.any=function(){
return MochiKit.Iter.some.apply(this,arguments);
};
MochiKit.Iter.all=function(){
return MochiKit.Iter.every.apply(this,arguments);
};
MochiKit.Iter.starmap=function(){
return MochiKit.Iter.applymap.apply(this,arguments);
};
MochiKit.Iter.advance=function(iter,n){
while(n-->0){
iter.next();
}
return iter;
};
MochiKit.Iter.isSorted=function(_944,cmp){
return MochiKit.Iter.every(MochiKit.Iter.windowView(_944),cmp||MochiKit.Base.operator.cle);
};
MochiKit.Iter.interleave=function(_946,_947){
return MochiKit.Iter.chainFromIter(MochiKit.Iter.izip.apply(this,arguments));
};
MochiKit.Iter.remapView=function(_948,lst){
return MochiKit.Iter.imap(MochiKit.Base.partial(MochiKit.Base.operator.getitem,lst),_948);
};
MochiKit.Iter.compressIter=function(data,_94b){
return MochiKit.Iter.imap(function(d_s){
return d_s[0];
},MochiKit.Iter.ifilter(function(d_s){
return d_s[1]?true:false;
},MochiKit.Iter.izip(data,_94b)));
};
MochiKit.Iter.combinations=function(_94e,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_94e);
var n=pool.length;
if(r>n){
return MochiKit.Iter.EmptyIter;
}
var _954=mi.list(mi.range(r));
var _955=true;
return {repr:function(){
return "combinations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_955){
_955=false;
return mi.list(mi.remapView(_954,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_954[i]!=(i+n-r)){
done=false;
break;
}
}
if(done){
throw MochiKit.Iter.StopIteration;
}
_954[i]+=1;
for(var j=i+1;j<r;++j){
_954[j]=_954[j-1]+1;
}
return mi.list(mi.remapView(_954,pool));
}
}};
};
MochiKit.Iter.combinationsWithReplacement=function(_959,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_959);
var n=pool.length;
if(n==0||r==0){
return mi.EmptyIter;
}
var _95f=mi.list(mi.repeat(0,r));
var _960=true;
return {repr:function(){
return "combinationsWithReplacement(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_960){
_960=false;
return mi.list(mi.remapView(_95f,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_95f[i]!=n-1){
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
_95f=_95f.slice(0,i).concat(mi.list(mi.repeat(_95f[i]+1,r-i)));
return mi.list(mi.remapView(_95f,pool));
}
}};
};
MochiKit.Iter.repeatSeq=function(_963,n){
if(n==0){
return MochiKit.Iter.EmptyIter;
}
var it=MochiKit.Iter.iter(_963);
return {next:function(){
try{
return it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration||--n<=0){
throw e;
}
it=MochiKit.Iter.iter(_963);
return it.next();
}
}};
};
MochiKit.Iter.permutations=function(_966,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_966);
var n=pool.length;
r=r||n;
if(r>n){
return mi.EmptyIter;
}
var _96c=mi.list(mi.range(n));
var _96d=mi.list(mi.range(n,n-r,-1));
var _96e=true;
return {repr:function(){
return "permutations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_96e){
_96e=false;
return mi.list(mi.remapView(mi.islice(_96c,0,r),pool));
}
if(n==0){
throw mi.StopIteration;
}
var done=true;
for(var i=r-1;i>=0;--i){
_96d[i]-=1;
if(_96d[i]==0){
_96c=_96c.slice(0,i).concat(_96c.slice(i+1),_96c[i]);
_96d[i]=n-i;
}else{
var j=_96d[i];
var jdx=_96c.length-j;
var tmp=_96c[i];
_96c[i]=_96c[jdx];
_96c[jdx]=tmp;
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
return mi.list(mi.remapView(mi.islice(_96c,0,r),pool));
}};
};
MochiKit.Iter._Range=function(_974,stop,step){
this.start=_974;
this.stop=stop;
this.step=step;
};
MochiKit.Iter._Range.prototype.__iterator__=function(){
return new MochiKit.Iter.range(this.start,this.stop,this.step);
};
MochiKit.Iter.xrange=function(){
var _977=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_977=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_977=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("xrange() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("xrange() step must not be 0");
}
return new MochiKit.Iter._Range(_977,stop,step);
};
MochiKit.Iter_ext.__new__=function(){
};
MochiKit.Iter_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text_ext");
goog.require("MochiKit.Text");
}
MochiKit.Base.module(MochiKit,"Text_ext","1.5",["Text"]);
MochiKit.Text.levenshteinDistance=function(s,t,_97c){
_97c=_97c||false;
var n=s.length,m=t.length;
if(n==0){
return m;
}
if(m==0){
return n;
}
var d=new Array(n+1);
for(var r=0;r<n+1;++r){
d[r]=new Array(m+1);
}
for(var i=0;i<=n;++i){
d[i][0]=i;
}
for(var j=0;j<=m;++j){
d[0][j]=j;
}
for(var i=1;i<=n;++i){
for(var j=1;j<=m;++j){
var cost=(t[j-1]==s[i-1]?0:1);
var cell=Math.min(Math.min(d[i-1][j]+1,d[i][j-1]+1),d[i-1][j-1]+cost);
if(_97c&&(i>2&&j>2)){
var _985=d[i-2][j-2]+1;
if(s[i-2]!=t[j-1]){
++_985;
}
if(s[i-1]!=t[j-2]){
++_985;
}
if(cell>_985){
cell=_985;
}
}
d[i][j]=cell;
}
}
return d[n][m];
};
MochiKit.Text.humanStringCompare=function(a,b){
if(a==b){
return 0;
}
var _988=/^(\+|\-)?\d+/;
var _989=/^\D+/;
while(a.length>0&&b.length>0){
var a0=null,ainc=-1;
var b0=null,binc=-1;
var ma=a.match(_989);
var mb=b.match(_989);
if(ma!=null&&mb!=null){
a0=ma[0].toLowerCase();
ainc=a0.length;
b0=mb[0].toLowerCase();
binc=b0.length;
}else{
if(ma==null){
ma=a.match(_988);
a0=parseInt(ma[0],10)+2<<15;
ainc=ma[0].length;
}else{
a0=a.charAt(0).toLowerCase().charCodeAt(0);
ainc=1;
}
if(mb==null){
mb=b.match(_988);
b0=parseInt(mb[0],10)+2<<15;
binc=mb[0].length;
}else{
b0=b.charAt(0).toLowerCase().charCodeAt(0);
binc=1;
}
}
if(a0<b0){
return -1;
}
if(a0>b0){
return +1;
}
a=a.substring(ainc);
b=b.substring(binc);
}
if(a.length>0){
return +1;
}
if(b.length>0){
return -1;
}
return 0;
};
MochiKit.Text_ext.__new__=function(){
};
MochiKit.Text_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.HeapQ");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"HeapQ","1.5",["Base","Iter"]);
MochiKit.HeapQ.heapify=function(x,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var n=x.length;
for(var i=Math.floor(n/2)-1;i>=0;--i){
MochiKit.HeapQ._siftup(x,i,cmp);
}
return x;
};
MochiKit.HeapQ._siftdown=function(heap,_995,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _998=heap[pos];
while(pos>_995){
var _999=(pos-1)>>1;
var _99a=heap[_999];
if(cmp(_998,_99a)){
heap[pos]=_99a;
pos=_999;
continue;
}
break;
}
heap[pos]=_998;
};
MochiKit.HeapQ._siftup=function(heap,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _99e=heap.length;
var _99f=pos;
var _9a0=heap[pos];
var _9a1=2*pos+1;
while(_9a1<_99e){
var _9a2=_9a1+1;
if(_9a2<_99e&&!(cmp(heap[_9a1],heap[_9a2]))){
_9a1=_9a2;
}
heap[pos]=heap[_9a1];
pos=_9a1;
_9a1=2*pos+1;
}
heap[pos]=_9a0;
MochiKit.HeapQ._siftdown(heap,_99f,pos,cmp);
};
MochiKit.HeapQ.heapPush=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
heap.push(item);
MochiKit.HeapQ._siftdown(heap,0,heap.length-1,cmp);
};
MochiKit.HeapQ.heapPop=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9a8=heap.pop();
var _9a9;
if(heap.length>0){
_9a9=heap[0];
heap[0]=_9a8;
MochiKit.HeapQ._siftup(heap,0,cmp);
}else{
_9a9=_9a8;
}
return _9a9;
};
MochiKit.HeapQ.heapReplace=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9ad=heap[0];
heap[0]=item;
MochiKit.HeapQ._siftup(heap,0,cmp);
return _9ad;
};
MochiKit.HeapQ.heapPushPop=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
if(heap.length>0&&cmp(heap[0],item)){
var tmp=heap[0];
heap[0]=item;
item=tmp;
MochiKit.HeapQ._siftup(heap,0,cmp);
}
return item;
};
MochiKit.HeapQ.imergeSorted=function(_9b2,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var _cmp=function(a,b){
var c=cmp(a[0],b[0]);
return c;
};
var h=[];
mi.forEach(mi.izip(mi.count(),mi.imap(mi.iter,_9b2)),function(pair){
var _9bc=pair[0],it=pair[1];
try{
var next=it.next;
h.push([next(),_9bc,next]);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
}
});
m.HeapQ.heapify(h,_cmp);
return {repr:function(){
return "imergeSorted(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(h.length==0){
throw mi.StopIteration;
}
var s=h[0];
var v=s[0];
var next=s[2];
try{
s[0]=next();
m.HeapQ.heapReplace(h,s,_cmp);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
m.HeapQ.heapPop(h,_cmp);
}
return v;
}
}};
};
MochiKit.HeapQ.heapIter=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
return {next:function(){
if(heap.length==0){
throw MochiKit.Iter.StopIteration;
}
return MochiKit.HeapQ.heapPop(heap,cmp);
}};
};
MochiKit.HeapQ.nLargest=function(n,_9c5,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var it=mi.iter(_9c5);
var _9ca=mi.list(mi.islice(it,n));
if(_9ca.length==0){
return _9ca;
}
m.HeapQ.heapify(_9ca,cmp);
mi.forEach(it,function(elem){
m.HeapQ.heapPushPop(_9ca,elem,cmp);
});
_9ca.sort(function(a,b){
return -1*m.Base.compare(a,b);
});
return _9ca;
};
MochiKit.HeapQ.nSmallest=function(n,_9cf,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var h=mi.list(_9cf);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),mi.range(Math.min(n,h.length)));
};
MochiKit.HeapQ.isHeap=function(lst,cmp){
cmp=cmp||MochiKit.Base.operator.cle;
for(var pos=1;pos<lst.length;++pos){
var _9d7=(pos-1)>>1;
if(!cmp(lst[_9d7],lst[pos])){
return false;
}
}
return true;
};
MochiKit.HeapQ.heapSort=function(_9d8,cmp){
var m=MochiKit;
var h=m.Iter.list(_9d8);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),m.Iter.range(h.length));
};
MochiKit.HeapQ.__new__=function(){
};
MochiKit.HeapQ.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.HeapQ);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit._MersenneTwister19937");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"_MersenneTwister19937","1.5",["Base"]);
MochiKit._MersenneTwister19937=function(){
var N=624;
var M=397;
var _9de=2567483615;
var _9df=2147483648;
var _9e0=2147483647;
var mt=new Array(N);
var mti=N+1;
function unsigned32(n1){
return n1<0?(n1^_9df)+_9df:n1;
}
function subtraction32(n1,n2){
return n1<n2?unsigned32((4294967296-(n2-n1))&4294967295):n1-n2;
}
function addition32(n1,n2){
return unsigned32((n1+n2)&4294967295);
}
function multiplication32(n1,n2){
var sum=0;
for(var i=0;i<32;++i){
if((n1>>>i)&1){
sum=addition32(sum,unsigned32(n2<<i));
}
}
return sum;
}
this.init_genrand=function(s){
mt[0]=unsigned32(s&4294967295);
for(mti=1;mti<N;mti++){
mt[mti]=addition32(multiplication32(1812433253,unsigned32(mt[mti-1]^(mt[mti-1]>>>30))),mti);
mt[mti]=unsigned32(mt[mti]&4294967295);
}
};
this.init_by_array=function(_9ed,_9ee){
var i,j,k;
this.init_genrand(19650218);
i=1;
j=0;
k=(N>_9ee?N:_9ee);
for(;k;k--){
mt[i]=addition32(addition32(unsigned32(mt[i]^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1664525)),_9ed[j]),j);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=_9ee){
j=0;
}
}
for(k=N-1;k;k--){
mt[i]=subtraction32(unsigned32((mt[i])^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1566083941)),i);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
}
mt[0]=2147483648;
};
this.genrand_int32=function(){
var y;
var _9f3=new Array(0,_9de);
if(mti>=N){
var kk;
if(mti==N+1){
this.init_genrand(5489);
}
for(kk=0;kk<N-M;kk++){
y=unsigned32((mt[kk]&_9df)|(mt[kk+1]&_9e0));
mt[kk]=unsigned32(mt[kk+M]^(y>>>1)^_9f3[y&1]);
}
for(;kk<N-1;kk++){
y=unsigned32((mt[kk]&_9df)|(mt[kk+1]&_9e0));
mt[kk]=unsigned32(mt[kk+(M-N)]^(y>>>1)^_9f3[y&1]);
}
y=unsigned32((mt[N-1]&_9df)|(mt[0]&_9e0));
mt[N-1]=unsigned32(mt[M-1]^(y>>>1)^_9f3[y&1]);
mti=0;
}
y=mt[mti++];
y=unsigned32(y^(y>>>11));
y=unsigned32(y^((y<<7)&2636928640));
y=unsigned32(y^((y<<15)&4022730752));
y=unsigned32(y^(y>>>18));
return y;
};
this.genrand_int31=function(){
return (this.genrand_int32()>>>1);
};
this.genrand_real1=function(){
return this.genrand_int32()*(1/4294967295);
};
this.genrand_real2=function(){
return this.genrand_int32()*(1/4294967296);
};
this.genrand_real3=function(){
return ((this.genrand_int32())+0.5)*(1/4294967296);
};
this.genrand_res53=function(){
var a=this.genrand_int32()>>>5,b=this.genrand_int32()>>>6;
return (a*67108864+b)*(1/9007199254740992);
};
this._getState=function(){
return {mt:mt.slice(),mti:mti};
};
this._setState=function(_9f7){
mt=_9f7.mt;
mti=_9f7.mti;
};
};
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Random");
goog.require("MochiKit.Base");
goog.require("MochiKit._MersenneTwister19937");
}
MochiKit.Base.module(MochiKit,"Random","1.5",["Base","_MersenneTwister19937"]);
MochiKit.Random.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
MochiKit.Random._generator.seed(x);
};
MochiKit.Random.getState=function(){
return MochiKit.Random._generator.getState();
};
MochiKit.Random.setState=function(_9f9){
MochiKit.Random._generator.setState(_9f9);
};
MochiKit.Random.random=function(){
return MochiKit.Random._generator.random();
};
MochiKit.Random.randRange=function(_9fa,_9fb,step){
var self=MochiKit.Random;
if(arguments.length==1){
_9fb=_9fa;
_9fa=0;
}
step=step||1;
var _9fe=_9fb-_9fa;
if(step==1&&_9fe>0){
return Math.floor(_9fa+Math.floor(self.random()*_9fe));
}
if(step>0){
var n=Math.floor((_9fe+step-1)/step);
}else{
if(step<0){
var n=Math.floor((_9fe+step+1)/step);
}
}
return _9fa+step*Math.floor(self.random()*n);
};
MochiKit.Random.uniform=function(a,b){
return a+(b-a)*MochiKit.Random.random();
};
MochiKit.Random.shuffle=function(_a02){
for(var i=_a02.length-1;i>0;--i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
var tmp=_a02[i];
_a02[i]=_a02[j];
_a02[j]=tmp;
}
return _a02;
};
MochiKit.Random.deal=function(_a06,func){
func=func||MochiKit.Base.operator.identity;
var deck=new Array(_a06);
for(var i=0;i<_a06;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
deck[i]=deck[j];
deck[j]=func(i);
}
return deck;
};
MochiKit.Random.choice=function(seq){
return seq[Math.floor(MochiKit.Random.random()*seq.length)];
};
MochiKit.Random.shuffled=function(_a0c){
var n=_a0c.length;
var a=new Array(n);
a[0]=_a0c[0];
for(var i=1;i<n-1;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
a[i]=a[j];
a[j]=_a0c[i];
}
return a;
};
MochiKit.Random.sample=function(_a11,k){
var n=_a11.length;
var _a14=new Array(k);
var _a15={};
for(var i=0;i<k;++i){
var j=MochiKit.Random.randRange(n);
while(j in _a15){
j=MochiKit.Random.randRange(n);
}
_a15[j]=true;
_a14[i]=_a11[j];
}
return _a14;
};
MochiKit.Random._IRndGenerator=function(){
};
MochiKit.Random._IRndGenerator.prototype.seed=function(x){
};
MochiKit.Random._IRndGenerator.prototype.getState=function(){
};
MochiKit.Random._IRndGenerator.prototype.setState=function(_a19){
};
MochiKit.Random._IRndGenerator.prototype.random=function(){
};
MochiKit.Random.MersenneTwister=function(x){
this._mt=new MochiKit._MersenneTwister19937();
this.seed(x);
};
MochiKit.Random.MersenneTwister.prototype.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
this._mt.init_genrand(x);
};
MochiKit.Random.MersenneTwister.prototype.getState=function(){
return this._mt._getState();
};
MochiKit.Random.MersenneTwister.prototype.setState=function(_a1c){
this._mt._setState(_a1c);
};
MochiKit.Random.MersenneTwister.prototype.random=function(){
return this._mt.genrand_real2();
};
MochiKit.Random.SystemRandom=function(){
};
MochiKit.Random.SystemRandom.prototype.seed=function(x){
};
MochiKit.Random.SystemRandom.prototype.getState=function(){
};
MochiKit.Random.SystemRandom.prototype.setState=function(_a1e){
};
MochiKit.Random.SystemRandom.prototype.random=function(){
return Math.random();
};
MochiKit.Random._generator=null;
MochiKit.Random._setGenerator=function(_a1f){
MochiKit.Random._generator=_a1f;
};
MochiKit.Random.__new__=function(){
MochiKit.Random._setGenerator(new MochiKit.Random.MersenneTwister());
};
MochiKit.Random.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Random);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Bisect");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Bisect","1.5",["Base"]);
MochiKit.Bisect.bisectRight=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(x,a[mid])<0){
hi=mid;
}else{
lo=mid+1;
}
}
return lo;
};
MochiKit.Bisect.insortRight=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectRight(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisectLeft=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(a[mid],x)<0){
lo=mid+1;
}else{
hi=mid;
}
}
return lo;
};
MochiKit.Bisect.insortLeft=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectLeft(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisect=MochiKit.Bisect.bisectRight;
MochiKit.Bisect.insort=MochiKit.Bisect.insortRight;
MochiKit.Bisect.__new__=function(){
};
MochiKit.Bisect.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Bisect);


