/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

var MochiKit=MochiKit||{};
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base._module=function(_1,_2,_3){
if(!(_1 in MochiKit)){
MochiKit[_1]={};
}
var _4=MochiKit[_1];
_4.NAME="MochiKit."+_1;
_4.VERSION=_2;
_4.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_4.toString=function(){
return this.__repr__();
};
for(var i=0;i<_3.length;i++){
if(!(_3[i] in MochiKit)){
throw "MochiKit."+_1+" depends on MochiKit."+_3[i]+"!";
}
}
};
MochiKit.Base._module("Base","1.5",[]);
MochiKit.Base.update=function(_6,_7){
if(_6===null||_6===undefined){
_6={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_6[k]=o[k];
}
}
}
return _6;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_b){
var _c=_b.split("-");
var cc=_c[0];
for(var i=1;i<_c.length;i++){
cc+=_c[i].charAt(0).toUpperCase()+_c[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _1a=m.extend(null,arguments);
while(_1a.length){
var o=_1a.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_1a.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_1d,obj,_1f){
if(!_1f){
_1f=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_1d){
_1d=[];
}
for(var i=_1f;i<l;i++){
_1d.push(obj[i]);
}
}
return _1d;
},updatetree:function(_22,obj){
if(_22===null||_22===undefined){
_22={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_22[k])=="object"&&typeof (v)=="object"&&!MochiKit.Base.isDateLike(v)&&!(v instanceof Array)){
arguments.callee(_22[k],v);
}else{
_22[k]=v;
}
}
}
}
return _22;
},setdefault:function(_28,obj){
if(_28===null||_28===undefined){
_28={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _28)){
_28[k]=o[k];
}
}
}
return _28;
},keys:function(obj){
var _2e=[];
for(var _2f in obj){
_2e.push(_2f);
}
return _2e;
},values:function(obj){
var _31=[];
for(var _32 in obj){
_31.push(obj[_32]);
}
return _31;
},items:function(obj){
var _34=[];
for(var _35 in obj){
var v;
try{
v=obj[_35];
}
catch(e){
continue;
}
_34.push([_35,v]);
}
return _34;
},_newNamedError:function(_37,_38,_39){
_39.prototype=new MochiKit.Base.NamedError(_37.NAME+"."+_38);
_37[_38]=_39;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_77){
return function(){
return this[_77].apply(this,arguments);
};
},itemgetter:function(_78){
return function(arg){
return arg[_78];
};
},bool:function(_7a){
if(typeof (_7a)==="boolean"||_7a instanceof Boolean){
return _7a.valueOf();
}else{
if(typeof (_7a)==="string"||_7a instanceof String){
return _7a.length>0&&_7a!="false"&&_7a!="null"&&_7a!="undefined"&&_7a!="0";
}else{
if(typeof (_7a)==="number"||_7a instanceof Number){
return !isNaN(_7a)&&_7a!=0;
}else{
if(_7a!=null&&typeof (_7a.length)==="number"){
return _7a.length!==0;
}else{
return _7a!=null;
}
}
}
}
},typeMatcher:function(){
var _7b={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_7b[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _7b)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _8c=[];
for(var i=1;i<arguments.length;i++){
_8c.push(fn(arguments[i]));
}
return _8c;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _92=m.isArrayLike;
if(arguments.length<=2){
if(!_92(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _93=[];
for(var i=0;i<lst.length;i++){
_93.push(fn(lst[i]));
}
return _93;
}else{
if(fn===null){
fn=Array;
}
var _95=null;
for(var i=1;i<arguments.length;i++){
if(!_92(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_95===null||_95>l){
_95=l;
}
}
_93=[];
for(var i=0;i<_95;i++){
var _97=[];
for(var j=1;j<arguments.length;j++){
_97.push(arguments[j][i]);
}
_93.push(fn.apply(this,_97));
}
return _93;
}
},xfilter:function(fn){
var _9a=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_9a.push(o);
}
}
return _9a;
},filter:function(fn,lst,_9f){
var _a0=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_9f);
}else{
if(typeof (_9f)=="undefined"||_9f===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_a0.push(o);
}
}
}else{
for(var i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_9f,o)){
_a0.push(o);
}
}
}
}
return _a0;
},_wrapDumbFunction:function(_a4){
return function(){
switch(arguments.length){
case 0:
return _a4();
case 1:
return _a4(arguments[0]);
case 2:
return _a4(arguments[0],arguments[1]);
case 3:
return _a4(arguments[0],arguments[1],arguments[2]);
}
var _a5=[];
for(var i=0;i<arguments.length;i++){
_a5.push("arguments["+i+"]");
}
return eval("(func("+_a5.join(",")+"))");
};
},methodcaller:function(_a7){
var _a8=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a7)=="function"){
return function(obj){
return _a7.apply(obj,_a8);
};
}else{
return function(obj){
return obj[_a7].apply(obj,_a8);
};
}
},method:function(_ab,_ac){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_ac,_ab],arguments,2));
},compose:function(f1,f2){
var _b0=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_b0.push(fn);
}
return function(){
var _b4=arguments;
for(var i=_b0.length-1;i>=0;i--){
_b4=[_b0[i].apply(this,_b4)];
}
return _b4[0];
};
},bind:function(_b6,_b7){
if(typeof (_b6)=="string"){
_b6=_b7[_b6];
}
var _b8=_b6.im_func;
var _b9=_b6.im_preargs;
var _ba=_b6.im_self;
var m=MochiKit.Base;
if(typeof (_b6)=="function"&&typeof (_b6.apply)=="undefined"){
_b6=m._wrapDumbFunction(_b6);
}
if(typeof (_b8)!="function"){
_b8=_b6;
}
if(typeof (_b7)!="undefined"){
_ba=_b7;
}
if(typeof (_b9)=="undefined"){
_b9=[];
}else{
_b9=_b9.slice();
}
m.extend(_b9,arguments,2);
var _bc=function(){
var _bd=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_bd=m.concat(me.im_preargs,_bd);
}
var _bf=me.im_self;
if(!_bf){
_bf=this;
}
return me.im_func.apply(_bf,_bd);
};
_bc.im_self=_ba;
_bc.im_func=_b8;
_bc.im_preargs=_b9;
if(typeof (_b8.NAME)=="string"){
_bc.NAME="bind("+_b8.NAME+",...)";
}
return _bc;
},bindLate:function(_c0,_c1){
var m=MochiKit.Base;
var _c3=arguments;
if(typeof (_c0)==="string"){
_c3=m.extend([m.forwardCall(_c0)],arguments,1);
return m.bind.apply(this,_c3);
}
return m.bind.apply(this,_c3);
},bindMethods:function(_c4){
var _c5=MochiKit.Base.bind;
for(var k in _c4){
var _c7=_c4[k];
if(typeof (_c7)=="function"){
_c4[k]=_c5(_c7,_c4);
}
}
},registerComparator:function(_c8,_c9,_ca,_cb){
MochiKit.Base.comparatorRegistry.register(_c8,_c9,_ca,_cb);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _ce=(typeof (a)=="undefined"||a===null);
var _cf=(typeof (b)=="undefined"||b===null);
if(_ce&&_cf){
return 0;
}else{
if(_ce){
return -1;
}else{
if(_cf){
return 1;
}
}
}
var m=MochiKit.Base;
var _d1=m._primitives;
if(!(typeof (a) in _d1&&typeof (b) in _d1)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _d2=m.repr;
throw new TypeError(_d2(a)+" and "+_d2(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _d7=MochiKit.Base.compare;
var _d8=a.length;
var _d9=0;
if(_d8>b.length){
_d9=1;
_d8=b.length;
}else{
if(_d8<b.length){
_d9=-1;
}
}
for(var i=0;i<_d8;i++){
var cmp=_d7(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _d9;
},registerRepr:function(_dc,_dd,_de,_df){
MochiKit.Base.reprRegistry.register(_dc,_dd,_de,_df);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
try{
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
catch(ignore){
}
}
try{
var _e1=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_e1=_e1.replace(/^\s+/,"").replace(/\s+/g," ");
_e1=_e1.replace(/,(\S)/,", $1");
var idx=_e1.indexOf("{");
if(idx!=-1){
_e1=_e1.substr(0,idx)+"{...}";
}
}
return _e1;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_e7,_e8,_e9,_ea){
MochiKit.Base.jsonRegistry.register(_e7,_e8,_e9,_ea);
},evalJSON:function(_eb){
return eval("("+MochiKit.Base._filterJSON(_eb)+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
return (m)?m[1]:s;
},serializeJSON:function(o){
var _ef=typeof (o);
if(_ef=="number"||_ef=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_ef=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _f5;
if(typeof (o.toJSON)=="function"){
_f5=o.toJSON();
if(o!==_f5){
return me(_f5);
}
}
if(typeof (o.__json__)=="function"){
_f5=o.__json__();
if(o!==_f5){
return me(_f5);
}
}
if(typeof (o.json)=="function"){
_f5=o.json();
if(o!==_f5){
return me(_f5);
}
}
if(_ef!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_f5=m.jsonRegistry.match(o);
if(o!==_f5){
return me(_f5);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_ef=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_ef=="function"){
return null;
}
res=[];
for(var k in o){
var _f9;
if(typeof (k)=="number"){
_f9="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_f9=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_f9+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_fc,arr){
if(_fc.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_fc,arr)===0);
},concat:function(){
var _fe=[];
var _ff=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_ff(_fe,arguments[i]);
}
return _fe;
},keyComparator:function(key){
var m=MochiKit.Base;
var _103=m.compare;
if(arguments.length==1){
return function(a,b){
return _103(a[key],b[key]);
};
}
var _106=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_106.length);i++){
var key=_106[i];
rval=_103(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _10d=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _10d(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_112,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _115=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_115(o,cur)==_112){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_119,_11a,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11a)=="undefined"||_11a===null){
_11a=0;
}
for(var i=_11a;i<end;i++){
if(lst[i]===_119){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _120=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_120+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_120<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_120;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(MochiKit.Base.compare);
if(data.length%2==0){
var _124=data.length/2;
return (data[_124]+data[_124-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_126,_127,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_127)=="undefined"||_127===null){
_127=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_127;i<end;i++){
if(cmp(lst[i],_126)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_12c){
var _12d=[node];
var _12e=MochiKit.Base.extend;
while(_12d.length){
var res=_12c(_12d.shift());
if(res){
_12e(_12d,res);
}
}
},nameFunctions:function(_130){
var base=_130.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _130){
var o=_130[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_134,_135){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_134)=="string"||(typeof (_134.nodeType)!="undefined"&&_134.nodeType>0))){
var kv=MochiKit.DOM.formContents(_134);
_134=kv[0];
_135=kv[1];
}else{
if(arguments.length==1){
if(typeof (_134.length)=="number"&&_134.length==2){
return arguments.callee(_134[0],_134[1]);
}
var o=_134;
_134=[];
_135=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_134.push(k);
_135.push(v[i]);
}
}else{
_134.push(k);
_135.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_134.length,_135.length);
var _13d=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_135[i];
if(typeof (v)!="undefined"&&v!==null){
if(MochiKit.Base.isDateLike(v)){
v=MochiKit.DateTime.toISOTimestamp(v,true);
}
rval.push(_13d(_134[i])+"="+_13d(v));
}
}
return rval.join("&");
},parseQueryString:function(_13e,_13f){
var qstr=(_13e.charAt(0)=="?")?_13e.substring(1):_13e;
var _141=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _143;
if(typeof (decodeURIComponent)!="undefined"){
_143=decodeURIComponent;
}else{
_143=unescape;
}
if(_13f){
for(var i=0;i<_141.length;i++){
var pair=_141[i].split("=");
var name=_143(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_143(pair.join("=")));
}
}else{
for(var i=0;i<_141.length;i++){
pair=_141[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_143(name)]=_143(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_149,wrap,_14b){
if(_14b){
this.pairs.unshift([name,_149,wrap]);
}else{
this.pairs.push([name,_149,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base._exportSymbols=function(_151,_152){
if(MochiKit.__export__===false||_152.__export__===false){
return;
}
for(var k in _152){
var v=_152[k];
if(v!=null){
var _155=(k[0]!=="_"&&k!=="toString");
if(v.__export__===true||(v.__export__!==false&&_155)){
_151[k]=_152[k];
}
}
}
};
MochiKit.Base._deprecated=function(_156,name,_158,_159,_15a){
if(typeof (_156)==="string"){
if(_156.indexOf("MochiKit.")===0){
_156=_156.substring(9);
}
_156=MochiKit[_156];
}
var _15b=_158.split(".")[1];
var _15c=_158.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_156.NAME+"."+name+" is deprecated since version "+_159+". Use "+_158+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_15b]){
throw new Error(msg);
}
return MochiKit[_15b][_15c].apply(this,arguments);
};
func.__export__=(_15a===true);
_156[name]=func;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3");
m._deprecated(m,"find","MochiKit.Base.findValue","1.3");
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_161){
return encodeURIComponent(_161).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_162){
return escape(_162).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.NamedError.prototype.repr=function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
};
m.NamedError.prototype.toString=m.forwardCall("repr");
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.isValue=m.typeMatcher("boolean","number","string");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
window.compare=MochiKit.Base.compare;
window.compose=MochiKit.Base.compose;
window.serializeJSON=MochiKit.Base.serializeJSON;
window.mean=MochiKit.Base.mean;
window.median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
MochiKit.Base._module("Iter","1.5",["Base"]);
MochiKit.Base.update(MochiKit.Iter,{registerIteratorFactory:function(name,_165,_166,_167){
MochiKit.Iter.iteratorRegistry.register(name,_165,_166,_167);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_169,_16a){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_16a;
},_169);
}
if(typeof (_169.next)=="function"){
return _169;
}else{
if(typeof (_169.iter)=="function"){
return _169.iter();
}
}
try{
return self.iteratorRegistry.match(_169);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_169)+": "+m.repr(_169)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _174=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_174.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_17a){
return _17a.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _180=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_180);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _18c=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_18c=arguments[1];
stop=arguments[2];
}else{
_18c=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_18c,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_18c){
rval=seq.next();
i++;
}
if(_18c>=stop){
throw self.StopIteration;
}
_18c+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _196=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_196));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1a1=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1a1.length>1){
try{
return _1a1[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1a1.shift();
}
}
if(_1a1.length==1){
var arg=_1a1.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1ac,sync,_1ae){
sync.pos[_1ac]=-1;
var m=MochiKit.Base;
var _1b0=m.listMin;
return {repr:function(){
return "tee("+_1ac+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1ac];
if(i==sync.max){
rval=_1ae.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1ac]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1ac]+=1;
if(i==sync.min&&_1b0(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1b3,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1b3=self.iter(_1b3);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1b3));
}
return rval;
},list:function(_1ba){
var rval;
if(_1ba instanceof Array){
return _1ba.slice();
}
if(typeof (_1ba)=="function"&&!(_1ba instanceof Function)&&typeof (_1ba.length)=="number"){
rval=[];
for(var i=0;i<_1ba.length;i++){
rval.push(_1ba[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1ba=self.iter(_1ba);
rval=[];
var _1be;
try{
while(true){
_1be=_1ba.next();
rval.push(_1be);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1c0,_1c1){
var i=0;
var x=_1c1;
var self=MochiKit.Iter;
_1c0=self.iter(_1c0);
if(arguments.length<3){
try{
x=_1c0.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1c0.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1c5=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1c5=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1c5=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1c5>=stop)||(step<0&&_1c5<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1c5;
_1c5+=step;
return rval;
},repr:function(){
return "range("+[_1c5,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1c9,_1ca){
if(typeof (_1ca)=="undefined"||_1ca===null){
_1ca=0;
}
var x=_1ca;
var self=MochiKit.Iter;
_1c9=self.iter(_1c9);
try{
while(true){
x+=_1c9.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1cd){
var self=MochiKit.Iter;
_1cd=self.iter(_1cd);
try{
while(true){
_1cd.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1cf,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_1cf)&&!self.isIterable(_1cf)){
try{
for(var i=0;i<_1cf.length;i++){
func(_1cf[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_1cf));
}
},every:function(_1d5,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1d5).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1d8,cmp){
var rval=MochiKit.Iter.list(_1d8);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1db){
var rval=MochiKit.Iter.list(_1db);
rval.reverse();
return rval;
},some:function(_1dd,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1dd).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1e1){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_1e1)&&!self.isIterable(_1e1)){
for(var i=0;i<_1e1.length;i++){
lst.push(_1e1[i]);
}
}else{
_1e1=self.iter(_1e1);
try{
while(true){
lst.push(_1e1.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1e5,_1e6){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1e6=m.operator.identity;
}
_1e5=self.iter(_1e5);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1e5.next();
k=_1e6(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _1ed=true;
var _1ee=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_1ee(k,pk)===0){
fetch();
if(_1ed){
_1ed=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_1ee(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_1ef,_1f0){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1f0=m.operator.identity;
}
_1ef=self.iter(_1ef);
var _1f3=[];
var _1f4=true;
var _1f5;
var _1f6=m.compare;
while(true){
try{
var _1f7=_1ef.next();
var key=_1f0(_1f7);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_1f4||_1f6(key,_1f5)!==0){
var _1f9=[];
_1f3.push([key,_1f9]);
}
_1f9.push(_1f7);
_1f4=false;
_1f5=key;
}
return _1f3;
},arrayLikeIter:function(_1fa){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_1fa.length){
throw MochiKit.Iter.StopIteration;
}
return _1fa[i++];
}};
},hasIterateNext:function(_1fc){
return (_1fc&&typeof (_1fc.iterateNext)=="function");
},iterateNextIter:function(_1fd){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_1fd.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
window.reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
MochiKit.Base._module("Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_201,info){
this.num=num;
this.level=_201;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_204){
var self=MochiKit.Logging;
if(typeof (_204)=="string"){
_204=self.LogLevel[_204];
}
return function(msg){
var _207=msg.level;
if(typeof (_207)=="string"){
_207=self.LogLevel[_207];
}
return _207>=_204;
};
},isLogMessage:function(){
var _208=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _208)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_20d){
this.counter=0;
if(typeof (_20d)=="undefined"||_20d===null){
_20d=-1;
}
this.maxSize=_20d;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_212,_213,_214){
if(typeof (_213)=="string"){
_213=MochiKit.Logging.logLevelAtLeast(_213);
}
var _215=[_213,_214];
_215.ident=_212;
this.listeners[_212]=_215;
},removeListener:function(_216){
delete this.listeners[_216];
},baseLog:function(_217,_218){
if(typeof (_217)=="number"){
if(_217>=MochiKit.Logging.LogLevel.FATAL){
_217="FATAL";
}else{
if(_217>=MochiKit.Logging.LogLevel.ERROR){
_217="ERROR";
}else{
if(_217>=MochiKit.Logging.LogLevel.WARNING){
_217="WARNING";
}else{
if(_217>=MochiKit.Logging.LogLevel.INFO){
_217="INFO";
}else{
_217="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_217,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_21a){
var _21b=0;
if(!(typeof (_21a)=="undefined"||_21a===null)){
_21b=Math.max(0,this._messages.length-_21a);
}
return this._messages.slice(_21b);
},getMessageText:function(_21c){
if(typeof (_21c)=="undefined"||_21c===null){
_21c=30;
}
var _21d=this.getMessages(_21c);
if(_21d.length){
var lst=MochiKit.Base.map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_21d);
lst.unshift("LAST "+_21d.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_220){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_220||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _222=m.partial;
var _223=this.Logger;
var _224=_223.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_222(_224,"DEBUG"),log:_222(_224,"INFO"),error:_222(_224,"ERROR"),fatal:_222(_224,"FATAL"),warning:_222(_224,"WARNING")});
var self=this;
var _226=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_226("log");
this.logError=_226("error");
this.logDebug=_226("debug");
this.logFatal=_226("fatal");
this.logWarning=_226("warning");
this.logger=new _223();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
MochiKit.Base._module("DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var date=new Date(iso[0],iso[1]-1,iso[2]);
date.setFullYear(iso[0]);
date.setMonth(iso[1]-1);
date.setDate(iso[2]);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_22e,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_22e=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_22e,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_22e,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_22e,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_236){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _237=MochiKit.DateTime._padTwo;
if(_236){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
var lst=[(_236?_237(date.getHours()):date.getHours()),_237(date.getMinutes()),_237(date.getSeconds())];
return lst.join(":")+(_236?"Z":"");
};
MochiKit.DateTime.toISOTimestamp=function(date,_23a){
if(typeof (date)=="undefined"||date===null){
return null;
}
var time=MochiKit.DateTime.toISOTime(date,_23a);
var sep=_23a?"T":" ";
if(_23a){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+time;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _23e=MochiKit.DateTime._padTwo;
var _23f=MochiKit.DateTime._padFour;
return [_23f(date.getFullYear()),_23e(date.getMonth()+1),_23e(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _245=MochiKit.DateTime._padTwo;
return [_245(d.getMonth()+1),_245(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
MochiKit.Base._module("Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_247,_248,_249,_24a,_24b,_24c,_24d,_24e,_24f){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _247;
}
var _251=_248;
var _252=_249;
if(num<0){
num=-num;
}else{
_251=_251.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_24a);
if(_24b){
num=num*100;
_252=fmt.percent+_252;
}
num=MochiKit.Format.roundToFixed(num,_24c);
var _255=num.split(/\./);
var _256=_255[0];
var frac=(_255.length==1)?"":_255[1];
var res="";
while(_256.length<_24d){
_256="0"+_256;
}
if(_24e){
while(_256.length>_24e){
var i=_256.length-_24e;
res=fmt.separator+_256.substring(i,_256.length)+res;
_256=_256.substring(0,i);
}
}
res=_256+res;
if(_24c>0){
while(frac.length<_24f){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _251+res+_252;
};
};
MochiKit.Format.numberFormatter=function(_25a,_25b,_25c){
if(typeof (_25b)=="undefined"){
_25b="";
}
var _25d=_25a.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_25d){
throw TypeError("Invalid pattern");
}
var _25e=_25a.substr(0,_25d.index);
var _25f=_25a.substr(_25d.index+_25d[0].length);
if(_25e.search(/-/)==-1){
_25e=_25e+"-";
}
var _260=_25d[1];
var frac=(typeof (_25d[2])=="string"&&_25d[2]!="")?_25d[2]:"";
var _262=(typeof (_25d[3])=="string"&&_25d[3]!="");
var tmp=_260.split(/,/);
var _264;
if(typeof (_25c)=="undefined"){
_25c="default";
}
if(tmp.length==1){
_264=null;
}else{
_264=tmp[1].length;
}
var _265=_260.length-_260.replace(/0/g,"").length;
var _266=frac.length-frac.replace(/0/g,"").length;
var _267=frac.length;
var rval=MochiKit.Format._numberFormatter(_25b,_25e,_25f,_25c,_262,_267,_265,_264,_266);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",m.map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_26c){
if(typeof (_26c)=="undefined"||_26c===null){
_26c="default";
}
if(typeof (_26c)=="string"){
var rval=MochiKit.Format.LOCALE[_26c];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_26c]=rval;
}
return rval;
}else{
return _26c;
}
};
MochiKit.Format.twoDigitAverage=function(_26e,_26f){
if(_26f){
var res=_26e/_26f;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_271){
var res=MochiKit.Format.roundToFixed(_271,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_274){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_274){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_274+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_276){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_276){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_276+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_278){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_278),_278);
};
MochiKit.Format.truncToFixed=function(_27a,_27b){
var _27c=MochiKit.Format._numberToFixed(_27a,_27b);
var _27d=_27c.indexOf(".");
if(_27d>0&&_27d+_27b+1<_27c.length){
_27c=_27c.substring(0,_27d+_27b+1);
_27c=MochiKit.Format._shiftNumber(_27c,0);
}
return _27c;
};
MochiKit.Format.roundToFixed=function(_27e,_27f){
var _280=MochiKit.Format._numberToFixed(_27e,_27f);
var _281=_280.indexOf(".");
if(_281>0&&_281+_27f+1<_280.length){
var str=MochiKit.Format._shiftNumber(_280,_27f);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_280=MochiKit.Format._shiftNumber(str,-_27f);
}
return _280;
};
MochiKit.Format._numberToFixed=function(_283,_284){
var str=_283.toString();
var _286=str.split(/[eE]/);
var exp=(_286.length===1)?0:parseInt(_286[1],10)||0;
var _288=MochiKit.Format._shiftNumber(_286[0],exp);
_286=_288.split(/\./);
var _289=_286[0];
var frac=(_286.length===1)?"":_286[1];
while(frac.length<_284){
frac+="0";
}
if(frac.length>0){
return _289+"."+frac;
}else{
return _289;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_28e){
return MochiKit.Format.twoDigitFloat(100*_28e)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
MochiKit.Base._module("Text","1.5",["Base","Format"]);
MochiKit.Text.startsWith=function(_293,str){
return str!=null&&_293!=null&&str.indexOf(_293)==0;
};
MochiKit.Text.endsWith=function(_295,str){
return str!=null&&_295!=null&&str.lastIndexOf(_295)==Math.max(str.length-_295.length,0);
};
MochiKit.Text.contains=function(_297,str){
return str!=null&&_297!=null&&str.indexOf(_297)>=0;
};
MochiKit.Text.padLeft=function(str,_29a,_29b){
str=str||"";
_29b=_29b||" ";
while(str.length<_29a){
str=_29b+str;
}
return str;
};
MochiKit.Text.padRight=function(str,_29d,_29e){
str=str||"";
_29e=_29e||" ";
while(str.length<_29d){
str+=_29e;
}
return str;
};
MochiKit.Text.truncate=function(str,_2a0,tail){
if(str==null||str.length<=_2a0||_2a0<0){
return str;
}else{
if(tail!=null){
str=str.slice(0,Math.max(0,_2a0-tail.length));
if(typeof (str)=="string"){
return str+tail;
}else{
return MochiKit.Base.extend(str,tail);
}
}else{
return str.slice(0,_2a0);
}
}
};
MochiKit.Text.split=function(str,_2a3,max){
if(str==null||str.length==0){
return str;
}
_2a3=_2a3||"\n";
var bits=str.split(_2a3);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(max,bits.length,bits.slice(max,bits.length).join(_2a3));
return bits;
};
MochiKit.Text.rsplit=function(str,_2a7,max){
if(str==null||str.length==0){
return str;
}
_2a7=_2a7||"\n";
var bits=str.split(_2a7);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(0,bits.length-max,bits.slice(0,bits.length-max).join(_2a7));
return bits;
};
MochiKit.Text.formatter=function(_2aa,_2ab){
if(typeof (_2ab)=="undefined"){
_2ab=MochiKit.Format.formatLocale();
}else{
if(typeof (_2ab)=="string"){
_2ab=MochiKit.Format.formatLocale(_2ab);
}
}
var _2ac=MochiKit.Text._parsePattern(_2aa);
return function(){
var _2ad=MochiKit.Base.extend([],arguments);
var res=[];
for(var i=0;i<_2ac.length;i++){
if(typeof (_2ac[i])=="string"){
res.push(_2ac[i]);
}else{
res.push(MochiKit.Text.formatValue(_2ac[i],_2ad,_2ab));
}
}
return res.join("");
};
};
MochiKit.Text.format=function(_2b0){
var func=MochiKit.Text.formatter(_2b0);
return func.apply(this,MochiKit.Base.extend([],arguments,1));
};
MochiKit.Text.formatValue=function(spec,_2b3,_2b4){
var self=MochiKit.Text;
if(typeof (spec)==="string"){
spec=self._parseFormatFlags(spec,0,spec.length-1);
}
for(var i=0;spec.path!=null&&i<spec.path.length;i++){
if(_2b3!=null){
_2b3=_2b3[spec.path[i]];
}
}
if(typeof (_2b4)=="undefined"){
_2b4=MochiKit.Format.formatLocale();
}else{
if(typeof (_2b4)=="string"){
_2b4=MochiKit.Format.formatLocale(_2b4);
}
}
var str="";
if(spec.numeric){
if(typeof (_2b3)!="number"||isNaN(_2b3)){
str="";
}else{
if(_2b3===Number.POSITIVE_INFINITY){
str="\u221e";
}else{
if(_2b3===Number.NEGATIVE_INFINITY){
str="-\u221e";
}else{
var sign=(spec.sign==="-")?"":spec.sign;
sign=(_2b3<0)?"-":sign;
_2b3=Math.abs(_2b3);
if(spec.format==="%"){
str=self._truncToPercent(_2b3,spec.precision);
}else{
if(spec.format==="d"){
str=MochiKit.Format.roundToFixed(_2b3,0);
}else{
if(spec.radix!=10){
str=Math.floor(_2b3).toString(spec.radix);
if(spec.format==="x"){
str=str.toLowerCase();
}else{
if(spec.format==="X"){
str=str.toUpperCase();
}
}
}else{
if(spec.precision>=0){
str=MochiKit.Format.roundToFixed(_2b3,spec.precision);
}else{
str=_2b3.toString();
}
}
}
}
if(spec.padding==="0"&&spec.format==="%"){
str=self.padLeft(str,spec.width-sign.length-1,"0");
}else{
if(spec.padding=="0"){
str=self.padLeft(str,spec.width-sign.length,"0");
}
}
str=self._localizeNumber(str,_2b4,spec.grouping);
str=sign+str;
}
}
}
if(str!==""&&spec.format==="%"){
str=str+_2b4.percent;
}
}else{
if(spec.format=="r"){
str=MochiKit.Base.repr(_2b3);
}else{
str=(_2b3==null)?"null":_2b3.toString();
}
str=self.truncate(str,spec.precision);
}
if(spec.align=="<"){
str=self.padRight(str,spec.width);
}else{
str=self.padLeft(str,spec.width);
}
return str;
};
MochiKit.Text._localizeNumber=function(num,_2ba,_2bb){
var _2bc=num.split(/\./);
var _2bd=_2bc[0];
var frac=(_2bc.length==1)?"":_2bc[1];
var res=(frac.length>0)?_2ba.decimal:"";
while(_2bb&&frac.length>3){
res=res+frac.substring(0,3)+_2ba.separator;
frac=frac.substring(3);
if(_2bd.charAt(0)=="0"){
_2bd=_2bd.substring(1);
}
}
if(frac.length>0){
res+=frac;
}
while(_2bb&&_2bd.length>3){
var pos=_2bd.length-3;
res=_2ba.separator+_2bd.substring(pos)+res;
_2bd=_2bd.substring((_2bd.charAt(0)=="0")?1:0,pos);
}
return _2bd+res;
};
MochiKit.Text._parsePattern=function(_2c1){
var self=MochiKit.Text;
var _2c3=[];
var _2c4=0;
var pos=0;
for(pos=0;pos<_2c1.length;pos++){
if(_2c1.charAt(pos)=="{"){
if(pos+1>=_2c1.length){
var msg="unescaped { char, should be escaped as {{";
throw new self.FormatPatternError(_2c1,pos,msg);
}else{
if(_2c1.charAt(pos+1)=="{"){
_2c3.push(_2c1.substring(_2c4,pos+1));
_2c4=pos+2;
pos++;
}else{
if(_2c4<pos){
_2c3.push(_2c1.substring(_2c4,pos));
}
_2c4=_2c1.indexOf("}",pos)+1;
if(_2c4<=0){
var msg="unmatched { char, not followed by a } char";
throw new self.FormatPatternError(_2c1,pos,msg);
}
_2c3.push(self._parseFormat(_2c1,pos+1,_2c4-1));
pos=_2c4-1;
}
}
}else{
if(_2c1.charAt(pos)=="}"){
if(pos+1>=_2c1.length||_2c1.charAt(pos+1)!="}"){
var msg="unescaped } char, should be escaped as }}";
throw new self.FormatPatternError(_2c1,pos,msg);
}
_2c3.push(_2c1.substring(_2c4,pos+1));
_2c4=pos+2;
pos++;
}
}
}
if(_2c4<pos){
_2c3.push(_2c1.substring(_2c4,pos));
}
return _2c3;
};
MochiKit.Text._parseFormat=function(_2c7,_2c8,_2c9){
var self=MochiKit.Text;
var text=_2c7.substring(_2c8,_2c9);
var info;
var pos=text.indexOf(":");
if(pos==0){
info=self._parseFormatFlags(_2c7,_2c8+1,_2c9);
info.path=[];
}else{
if(pos>0){
info=self._parseFormatFlags(_2c7,_2c8+pos+1,_2c9);
info.path=text.substring(0,pos).split(".");
}else{
info=self._parseFormatFlags(_2c7,_2c9,_2c9);
info.path=text.split(".");
}
}
var _2ce=/^\d+$/;
for(var i=0;i<info.path.length;i++){
var e=info.path[i];
e=e.replace(/^\s+/,"").replace(/\s+$/,"");
if(e==""&&info.path.length==1){
e=0;
}else{
if(e==""){
var msg="format value path contains blanks";
throw new self.FormatPatternError(_2c7,_2c8,msg);
}else{
if(_2ce.test(e)){
e=parseInt(e,10);
}
}
}
info.path[i]=e;
}
if(info.path.length<0||typeof (info.path[0])!="number"){
info.path.unshift(0);
}
return info;
};
MochiKit.Text._parseFormatFlags=function(_2d2,_2d3,_2d4){
var _2d5=MochiKit.Base.update;
var info={numeric:false,format:"s",width:0,precision:-1,align:">",sign:"-",padding:" ",grouping:false};
var _2d7=_2d2.substring(_2d3,_2d4).replace(/\s+$/,"");
while(_2d7.length>0){
var chr=_2d7.charAt(0);
var _2d9=1;
switch(chr){
case ">":
case "<":
_2d5(info,{align:chr});
break;
case "+":
case "-":
case " ":
_2d5(info,{sign:chr});
break;
case ",":
_2d5(info,{grouping:true});
break;
case ".":
var _2da=/^\d*/.exec(_2d7.substring(1))[0];
_2d5(info,{precision:parseInt(_2da,10)});
_2d9=1+_2da.length;
break;
case "0":
_2d5(info,{padding:chr});
break;
case "1":
case "2":
case "3":
case "4":
case "5":
case "6":
case "7":
case "8":
case "9":
var _2da=/^\d*/.exec(_2d7)[0];
_2d5(info,{width:parseInt(_2da,10)});
_2d9=_2da.length;
break;
case "s":
case "r":
_2d5(info,{format:chr});
break;
case "b":
_2d5(info,{numeric:true,format:chr,radix:2});
break;
case "o":
_2d5(info,{numeric:true,format:chr,radix:8});
break;
case "x":
case "X":
_2d5(info,{numeric:true,format:chr,radix:16});
break;
case "d":
case "f":
case "%":
_2d5(info,{numeric:true,format:chr,radix:10});
break;
default:
var msg="unsupported format flag: "+chr;
throw new MochiKit.Text.FormatPatternError(_2d2,_2d3,msg);
}
_2d7=_2d7.substring(_2d9);
}
return info;
};
MochiKit.Text._truncToPercent=function(_2dc,_2dd){
var str;
if(_2dd>=0){
str=MochiKit.Format.roundToFixed(_2dc,_2dd+2);
}else{
str=(_2dc==null)?"0":_2dc.toString();
}
var arr=MochiKit.Text.split(str,".",2);
var frac=MochiKit.Text.padRight(arr[1],2,"0");
var _2e1=arr[0]+frac.substring(0,2);
frac=frac.substring(2);
while(/^0[0-9]/.test(_2e1)){
_2e1=_2e1.substring(1);
}
return (frac.length<=0)?_2e1:_2e1+"."+frac;
};
MochiKit.Text.FormatPatternError=function(_2e2,pos,_2e4){
this.pattern=_2e2;
this.pos=pos;
this.message=_2e4;
};
MochiKit.Text.FormatPatternError.prototype=new MochiKit.Base.NamedError("MochiKit.Text.FormatPatternError");
if(MochiKit.__export__){
window.formatter=MochiKit.Text.formatter;
window.format=MochiKit.Text.format;
window.formatValue=MochiKit.Text.formatValue;
}
MochiKit.Base.nameFunctions(MochiKit.Text);
MochiKit.Base._exportSymbols(this,MochiKit.Text);
MochiKit.Base._module("Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_2e5){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_2e5;
this.silentlyCancelled=false;
this.chained=false;
this.finalized=false;
};
MochiKit.Async.Deferred.prototype.repr=function(){
return "Deferred("+this.id+", "+this.state()+")";
};
MochiKit.Async.Deferred.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.Deferred.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.Deferred.prototype.state=function(){
if(this.fired==-1){
return "unfired";
}else{
if(this.fired===0){
return "success";
}else{
return "error";
}
}
};
MochiKit.Async.Deferred.prototype.cancel=function(e){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(typeof (e)==="string"){
e=new self.GenericError(e);
}else{
if(!(e instanceof Error)){
e=new self.CancelledError(this);
}
}
this.errback(e);
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel(e);
}
}
};
MochiKit.Async.Deferred.prototype._resback=function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
if(this.paused===0){
this._fire();
}
};
MochiKit.Async.Deferred.prototype._check=function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
};
MochiKit.Async.Deferred.prototype.callback=function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.errback=function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.addBoth=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
};
MochiKit.Async.Deferred.prototype.addCallback=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
};
MochiKit.Async.Deferred.prototype.addErrback=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
};
MochiKit.Async.Deferred.prototype.addCallbacks=function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype.setFinalizer=function(fn){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
this._finalizer=fn;
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype._fire=function(){
var _2f2=this.chain;
var _2f3=this.fired;
var res=this.results[_2f3];
var self=this;
var cb=null;
while(_2f2.length>0&&this.paused===0){
var pair=_2f2.shift();
var f=pair[_2f3];
if(f===null){
continue;
}
try{
var ret=f(res);
if(ret!==undefined){
res=ret;
}
_2f3=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self.paused--;
self._resback(res);
};
this.paused++;
}
}
catch(err){
_2f3=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_2f3;
this.results[_2f3]=res;
if(this.chain.length==0&&this.paused===0&&this._finalizer){
this.finalized=true;
this._finalizer(res);
}
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_2fc){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_2fe){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _301=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_301.length;i++){
var func=_301[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e2){
}
}
var _306=null;
try{
_306=this.status;
if(!_306&&m.isNotEmpty(this.responseText)){
_306=304;
}
}
catch(e){
}
if(_306==200||_306==201||_306==204||_306==304||_306==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e2){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_30a){
if(typeof (_30a)=="undefined"||_30a===null){
_30a="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_30a);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self.callLater(0,self._doXHR,url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:"",async:true},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,opts.async,opts.username,opts.password);
}else{
req.open(opts.method,url,opts.async);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _317=opts.headers;
if(!m.isArrayLike(_317)){
_317=m.items(_317);
}
for(var i=0;i<_317.length;i++){
var _319=_317[i];
var name=_319[0];
var _31b=_319[1];
req.setRequestHeader(name,_31b);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},loadScript:function(url){
var d=new MochiKit.Async.Deferred();
var head=document.getElementsByTagName("head")[0];
var _327=document.createElement("script");
_327.type="text/javascript";
_327.src=url;
_327.onload=function(){
_327.onload=null;
_327.onerror=null;
_327.onreadystatechange=null;
d.callback();
};
_327.onerror=function(msg){
_327.onload=null;
_327.onerror=null;
_327.onreadystatechange=null;
msg="Failed to load script at "+url+": "+msg;
d.errback(new URIError(msg,url));
};
_327.onreadystatechange=function(){
if(_327.readyState=="loaded"||_327.readyState=="complete"){
_327.onload();
}else{
MochiKit.Async.callLater(10,_327.onerror,"Script loading timed out");
}
};
head.appendChild(_327);
head=null;
return d;
},wait:function(_329,_32a){
var d=new MochiKit.Async.Deferred();
var cb=MochiKit.Base.bind("callback",d,_32a);
var _32d=setTimeout(cb,Math.floor(_329*1000));
d.canceller=function(){
try{
clearTimeout(_32d);
}
catch(e){
}
};
return d;
},callLater:function(_32e,func){
var m=MochiKit.Base;
var _331=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_32e).addCallback(function(res){
return _331();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype.__class__=MochiKit.Async.DeferredLock;
MochiKit.Async.DeferredLock.prototype.acquire=function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
};
MochiKit.Async.DeferredLock.prototype.release=function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
};
MochiKit.Async.DeferredLock.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.DeferredLock.prototype.repr=function(){
var _334;
if(this.locked){
_334="locked, "+this.waiting.length+" waiting";
}else{
_334="unlocked";
}
return "DeferredLock("+this.id+", "+_334+")";
};
MochiKit.Async.DeferredLock.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.DeferredList=function(list,_336,_337,_338,_339){
MochiKit.Async.Deferred.apply(this,[_339]);
this.list=list;
var _33a=[];
this.resultList=_33a;
this.finishedCount=0;
this.fireOnOneCallback=_336;
this.fireOnOneErrback=_337;
this.consumeErrors=_338;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_33a.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_336){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_33e,_33f,_340){
this.resultList[_33e]=[_33f,_340];
this.finishedCount+=1;
if(this.fired==-1){
if(_33f&&this.fireOnOneCallback){
this.callback([_33e,_340]);
}else{
if(!_33f&&this.fireOnOneErrback){
this.errback(_340);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_33f&&this.consumeErrors){
_340=null;
}
return _340;
};
MochiKit.Async.gatherResults=function(_341){
var d=new MochiKit.Async.DeferredList(_341,false,true,false);
d.addCallback(function(_343){
var ret=[];
for(var i=0;i<_343.length;i++){
ret.push(_343[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _348;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_348=r;
}else{
if(r instanceof Error){
_348=self.fail(r);
}else{
_348=self.succeed(r);
}
}
}
catch(e){
_348=self.fail(e);
}
return _348;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_34c){
this.deferred=_34c;
});
ne("CancelledError",function(_34d){
this.deferred=_34d;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
MochiKit.Base._module("DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _355=self._document;
var _356=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_356;
self._document=_355;
throw e;
}
self._window=_356;
self._document=_355;
return rval;
},formContents:function(elem){
var _359=[];
var _35a=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _35f=elem.tagName.toUpperCase();
if(_35f==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_35f==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_359.push(name);
_35a.push(v);
return null;
}
_359.push(name);
_35a.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_359.push(name);
_35a.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_359.push(name);
_35a.push(v);
}
return null;
}
}
if(_35f==="FORM"||_35f==="P"||_35f==="SPAN"||_35f==="DIV"){
return elem.childNodes;
}
_359.push(name);
_35a.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_359,_35a];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _368=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_368;
throw e;
}
self._document=_368;
return rval;
},registerDOMConverter:function(name,_36b,wrap,_36d){
MochiKit.DOM.domConverters.register(name,_36b,wrap,_36d);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _374=im.repeat;
}
var map=m.map;
var _376=self.domConverters;
var _377=arguments.callee;
var _378=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _379=null;
try{
_379=iter(node);
}
catch(e){
}
if(_379){
return map(_377,_379,_374(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _377(n,ctx);
};
return map(func,node);
}
}
try{
node=_376.match(node,ctx);
continue;
}
catch(e){
if(e!=_378){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_37d){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_37d)=="string"){
_37d=self.getElement(_37d);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_37d){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_381){
var o={};
o[attr]=_381;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _386=self.attributeArray.renames[attr];
var _387=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_386){
return node[_386];
}
var _388=node.getAttribute(attr);
if(_388!=_387){
return _388;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _38c=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_38c){
return node[_38c];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_38e){
var elem=node;
var self=MochiKit.DOM;
var base=MochiKit.Base;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_38e){
if(self.attributeArray.compliant){
for(var k in _38e){
var v=_38e[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _394=self.attributeArray.renames;
for(var k in _38e){
v=_38e[k];
var _395=_394[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_395)=="string"){
elem[_395]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _399=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _39a=MochiKit.Base.concat;
while(_399.length){
var n=_399.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_399=_39a(n,_399);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _39f=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3a0=elem.parentNode;
var _3a1=MochiKit.Base.concat;
while(_39f.length){
var n=_39f.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_3a0.insertBefore(n,elem);
}else{
_39f=_3a1(n,_39f);
}
}
}
return _3a0;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3a6=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_3a6);
}else{
return self.appendChildNodes(elem.parentNode,_3a6);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _3aa;
while((_3aa=elem.firstChild)){
elem.removeChild(_3aa);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_3ac){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_3ac)=="string"||typeof (_3ac)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _3b1=self._xhtml;
if(_3ac&&!self.attributeArray.compliant){
var _3b2="";
if("name" in _3ac){
_3b2+=" name=\""+self.escapeHTML(_3ac.name)+"\"";
}
if(name=="input"&&"type" in _3ac){
_3b2+=" type=\""+self.escapeHTML(_3ac.type)+"\"";
}
if(_3b2){
name="<"+name+_3b2+">";
_3b1=false;
}
}
var d=self._document;
if(_3b1&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_3ac){
self.updateNodeAttributes(elem,_3ac);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
if(e&&e.parentNode){
e.parentNode.removeChild(e);
}
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _3bb=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_3bb);
_3bb.replaceChild(src,dest);
}else{
_3bb.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_3be,_3bf,_3c0){
var self=MochiKit.DOM;
if(typeof (_3be)=="undefined"||_3be===null){
_3be="*";
}
if(typeof (_3c0)=="undefined"||_3c0===null){
_3c0=self._document;
}
_3c0=self.getElement(_3c0);
if(_3c0==null){
return [];
}
var _3c2=(_3c0.getElementsByTagName(_3be)||self._document.all);
if(typeof (_3bf)=="undefined"||_3bf===null){
return MochiKit.Base.extend(null,_3c2);
}
var _3c3=[];
for(var i=0;i<_3c2.length;i++){
var _3c5=_3c2[i];
var cls=_3c5.className;
if(typeof (cls)!="string"){
cls=_3c5.getAttribute("class");
}
if(typeof (cls)=="string"){
var _3c7=cls.split(" ");
for(var j=0;j<_3c7.length;j++){
if(_3c7[j]==_3bf){
_3c3.push(_3c5);
break;
}
}
}
}
return _3c3;
},_newCallStack:function(path,once){
var rval=function(){
var _3cc=arguments.callee.callStack;
for(var i=0;i<_3cc.length;i++){
if(_3cc[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_3ce,path,func,once){
var self=MochiKit.DOM;
var _3d3=_3ce[path];
var _3d4=_3d3;
if(!(typeof (_3d3)=="function"&&typeof (_3d3.callStack)=="object"&&_3d3.callStack!==null)){
_3d4=self._newCallStack(path,once);
if(typeof (_3d3)=="function"){
_3d4.callStack.push(_3d3);
}
_3ce[path]=_3d4;
}
_3d4.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_3d7){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_3d7=self.getElement(_3d7);
if(_3d7){
_3d7.focus();
}
});
},setElementClass:function(_3d9,_3da){
var self=MochiKit.DOM;
var obj=self.getElement(_3d9);
if(self.attributeArray.compliant){
obj.setAttribute("class",_3da);
}else{
obj.setAttribute("className",_3da);
}
},toggleElementClass:function(_3dd){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_3dd)){
self.removeElementClass(obj,_3dd);
}
}
},addElementClass:function(_3e1,_3e2){
var self=MochiKit.DOM;
var obj=self.getElement(_3e1);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_3e2);
return true;
}
if(cls==_3e2){
return false;
}
var _3e6=cls.split(" ");
for(var i=0;i<_3e6.length;i++){
if(_3e6[i]==_3e2){
return false;
}
}
self.setElementClass(obj,cls+" "+_3e2);
return true;
},removeElementClass:function(_3e8,_3e9){
var self=MochiKit.DOM;
var obj=self.getElement(_3e8);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_3e9){
self.setElementClass(obj,"");
return true;
}
var _3ed=cls.split(" ");
for(var i=0;i<_3ed.length;i++){
if(_3ed[i]==_3e9){
_3ed.splice(i,1);
self.setElementClass(obj,_3ed.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_3ef,_3f0,_3f1){
var obj=MochiKit.DOM.getElement(_3ef);
var res=MochiKit.DOM.removeElementClass(obj,_3f0);
if(res){
MochiKit.DOM.addElementClass(obj,_3f1);
}
return res;
},hasElementClass:function(_3f4,_3f5){
var obj=MochiKit.DOM.getElement(_3f4);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _3f8=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_3f8.length;j++){
if(_3f8[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _400=[dom];
var self=MochiKit.DOM;
var _402=self.escapeHTML;
var _403=self.attributeArray;
while(_400.length){
dom=_400.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _404=[];
var _405=_403(dom);
for(var i=0;i<_405.length;i++){
var a=_405[i];
_404.push([" ",a.name,"=\"",_402(a.value),"\""]);
}
_404.sort();
for(i=0;i<_404.length;i++){
var _408=_404[i];
for(var j=0;j<_408.length;j++){
lst.push(_408[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_400.push("</"+dom.tagName.toLowerCase()+">");
var _40a=dom.childNodes;
for(i=_40a.length-1;i>=0;i--){
_400.push(_40a[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_402(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_40c){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _411=node.nodeValue;
if(typeof (_411)=="string"){
rval.push(_411);
}
})(MochiKit.DOM.getElement(node));
if(_40c){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_412){
_412=MochiKit.DOM.getElement(_412);
for(var i=0;i<_412.childNodes.length;i++){
var node=_412.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_415,_416,_417){
var self=MochiKit.DOM;
if(typeof (_415)=="undefined"||_415===null){
_415="*";
}
if(typeof (_417)=="undefined"||_417===null){
_417=self._document;
}
_417=self.getElement(_417);
if(_417==null){
return null;
}
var _419=(_417.getElementsByTagName(_415)||self._document.all);
if(_419.length<=0){
return null;
}else{
if(typeof (_416)=="undefined"||_416===null){
return _419[0];
}
}
for(var i=0;i<_419.length;i++){
var _41b=_419[i];
var cls=_41b.className;
if(typeof (cls)!="string"){
cls=_41b.getAttribute("class");
}
if(typeof (cls)=="string"){
var _41d=cls.split(" ");
for(var j=0;j<_41d.length;j++){
if(_41d[j]==_416){
return _41b;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_420,_421){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_420)=="undefined"||_420===null){
_420="*";
}else{
_420=_420.toUpperCase();
}
if(typeof (_421)=="undefined"||_421===null){
_421=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _423=elem.tagName.toUpperCase();
if((_420==="*"||_420==_423)&&(_421===null||self.hasElementClass(elem,_421))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _426="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_426);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _427=this._document.createElement("span");
var _428;
if(_427&&_427.attributes&&_427.attributes.length>0){
var _429=m.filter;
_428=function(node){
return _429(_428.ignoreAttrFilter,node.attributes);
};
_428.ignoreAttr={};
var _42b=_427.attributes;
var _42c=_428.ignoreAttr;
for(var i=0;i<_42b.length;i++){
var a=_42b[i];
_42c[a.name]=a.value;
}
_428.ignoreAttrFilter=function(a){
return (_428.ignoreAttr[a.name]!=a.value);
};
_428.compliant=false;
_428.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","rowspan":"rowSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_428=function(node){
return node.attributes;
};
_428.compliant=true;
_428.ignoreAttr={};
_428.renames={};
}
_428.__export__=false;
this.attributeArray=_428;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _431=this.createDOMFunc;
this.UL=_431("ul");
this.OL=_431("ol");
this.LI=_431("li");
this.DL=_431("dl");
this.DT=_431("dt");
this.DD=_431("dd");
this.TD=_431("td");
this.TR=_431("tr");
this.TBODY=_431("tbody");
this.THEAD=_431("thead");
this.TFOOT=_431("tfoot");
this.TABLE=_431("table");
this.TH=_431("th");
this.INPUT=_431("input");
this.SPAN=_431("span");
this.A=_431("a");
this.DIV=_431("div");
this.IMG=_431("img");
this.BUTTON=_431("button");
this.TT=_431("tt");
this.PRE=_431("pre");
this.H1=_431("h1");
this.H2=_431("h2");
this.H3=_431("h3");
this.H4=_431("h4");
this.H5=_431("h5");
this.H6=_431("h6");
this.BR=_431("br");
this.HR=_431("hr");
this.LABEL=_431("label");
this.TEXTAREA=_431("textarea");
this.FORM=_431("form");
this.P=_431("p");
this.SELECT=_431("select");
this.OPTION=_431("option");
this.OPTGROUP=_431("optgroup");
this.LEGEND=_431("legend");
this.FIELDSET=_431("fieldset");
this.STRONG=_431("strong");
this.CANVAS=_431("canvas");
this.IFRAME=_431("iframe");
this.LINK=_431("link");
this.SCRIPT=_431("script");
this.$=this.getElement;
this.NBSP="\xa0";
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
window.withWindow=MochiKit.DOM.withWindow;
window.withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
MochiKit.Base._module("Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_432){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_432.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_433){
throw "Parse error in selector: "+_433;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _435=this.params;
var expr=this.expression;
var _437,_438,_439,rest;
while(_437=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_435.attributes=_435.attributes||[];
_435.attributes.push({name:_437[2],operator:_437[3],value:_437[4]||_437[5]||""});
expr=_437[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_437=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_438=_437[1];
_439=_437[2];
rest=_437[3];
switch(_438){
case "#":
_435.id=_439;
break;
case ".":
_435.classNames.push(_439);
break;
case ":":
_435.pseudoClassNames.push(_439);
break;
case "":
case undefined:
_435.tagName=_439.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _43c=this.params;
var _43d=[];
var _43e,i;
function childElements(_440){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_440+".childNodes)";
}
if(_43c.wildcard){
_43d.push("true");
}
if(_43e=_43c.id){
_43d.push("element.id == "+repr(_43e));
}
if(_43e=_43c.tagName){
_43d.push("element.tagName.toUpperCase() == "+repr(_43e));
}
if((_43e=_43c.classNames).length>0){
for(i=0;i<_43e.length;i++){
_43d.push("MochiKit.DOM.hasElementClass(element, "+repr(_43e[i])+")");
}
}
if((_43e=_43c.pseudoClassNames).length>0){
for(i=0;i<_43e.length;i++){
var _441=_43e[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _442=_441[1];
var _443=_441[2];
switch(_442){
case "root":
_43d.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_441=_443.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_441){
throw "Invalid argument to pseudo element nth-child: "+_443;
}
var a,b;
if(_441[0]=="odd"){
a=2;
b=1;
}else{
if(_441[0]=="even"){
a=2;
b=0;
}else{
a=_441[2]&&parseInt(_441,10)||null;
b=parseInt(_441[3],10);
}
}
_43d.push("this.nthChild(element,"+a+","+b+","+!!_442.match("^nth-last")+","+!!_442.match("of-type$")+")");
break;
case "first-child":
_43d.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_43d.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_43d.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_43d.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_43d.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_43d.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_43d.push("element.childNodes.length == 0");
break;
case "enabled":
_43d.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_43d.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_43d.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _446=new MochiKit.Selector.Selector(_443);
_43d.push("!( "+_446.buildMatchExpression()+")");
break;
}
}
}
if(_43e=_43c.attributes){
MochiKit.Base.map(function(_447){
var _448="MochiKit.DOM.getNodeAttribute(element, "+repr(_447.name)+")";
var _449=function(_44a){
return _448+".split("+repr(_44a)+")";
};
_43d.push(_448+" != null");
switch(_447.operator){
case "=":
_43d.push(_448+" == "+repr(_447.value));
break;
case "~=":
_43d.push("MochiKit.Base.findValue("+_449(" ")+", "+repr(_447.value)+") > -1");
break;
case "^=":
_43d.push(_448+".substring(0, "+_447.value.length+") == "+repr(_447.value));
break;
case "$=":
_43d.push(_448+".substring("+_448+".length - "+_447.value.length+") == "+repr(_447.value));
break;
case "*=":
_43d.push(_448+".match("+repr(_447.value)+")");
break;
case "|=":
_43d.push(_449("-")+"[0].toUpperCase() == "+repr(_447.value.toUpperCase()));
break;
case "!=":
_43d.push(_448+" != "+repr(_447.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_447.operator+" in selector";
}
},_43e);
}
return _43d.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_44c,a,b,_44f,_450){
var _451=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_44c.parentNode.childNodes);
if(_450){
_451=MochiKit.Base.filter(function(node){
return node.tagName==_44c.tagName;
},_451);
}
if(_44f){
_451=MochiKit.Iter.reversed(_451);
}
if(a){
var _454=MochiKit.Base.findIdentical(_451,_44c);
return ((_454+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_451,_44c)+1;
}
},isUIElement:function(_455){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_455.tagName.toLowerCase())>-1;
},findElements:function(_456,axis){
var _458;
if(axis==undefined){
axis="";
}
function inScope(_459,_45a){
if(axis==""){
return MochiKit.DOM.isChildNode(_459,_45a);
}else{
if(axis==">"){
return _459.parentNode===_45a;
}else{
if(axis=="+"){
return _459===nextSiblingElement(_45a);
}else{
if(axis=="~"){
var _45b=_45a;
while(_45b=nextSiblingElement(_45b)){
if(_459===_45b){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_458=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_458)){
if(!_456||inScope(_458,_456)){
return [_458];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_456=(_456||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_456){
throw "> combinator not allowed without preceeding expression";
}
_456=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_456.childNodes);
}else{
if(axis=="+"){
if(!_456){
throw "+ combinator not allowed without preceeding expression";
}
_456=nextSiblingElement(_456)&&[nextSiblingElement(_456)];
}else{
if(axis=="~"){
if(!_456){
throw "~ combinator not allowed without preceeding expression";
}
var _45e=[];
while(nextSiblingElement(_456)){
_456=nextSiblingElement(_456);
_45e.push(_456);
}
_456=_45e;
}
}
}
}
if(!_456){
return [];
}
var _45f=MochiKit.Base.filter(MochiKit.Base.bind(function(_460){
return this.match(_460);
},this),_456);
return _45f;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_461,_462){
_461=MochiKit.DOM.getElement(_461);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_467){
try{
var res=_461.querySelectorAll(_467);
return Array.prototype.slice.call(res,0);
}
catch(ignore){
}
var _469="";
var _46a=function(_46b,expr){
var _46d=expr.match(/^[>+~]$/);
if(_46d){
_469=_46d[0];
return _46b;
}else{
var _46e=new MochiKit.Selector.Selector(expr);
var _46f=MochiKit.Iter.reduce(function(_470,_471){
return MochiKit.Base.extend(_470,_46e.findElements(_471||_461,_469));
},_46b,[]);
_469="";
return _46f;
}
};
var _472=_467.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_46a,_472,[null]));
},_462));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
MochiKit.Base._module("Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_47a){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_47a=MochiKit.Base.camelize(_47a);
if(!elem||elem==d){
return undefined;
}
if(_47a=="opacity"&&typeof (elem.filters)!="undefined"){
var _47d=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_47d&&_47d[1]){
return parseFloat(_47d[1])/100;
}
return 1;
}
if(_47a=="float"||_47a=="cssFloat"||_47a=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _47e=elem.style?elem.style[_47a]:null;
if(!_47e){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_47a=_47a.replace(/([A-Z])/g,"-$1").toLowerCase();
_47e=css?css.getPropertyValue(_47a):null;
}else{
if(elem.currentStyle){
_47e=elem.currentStyle[_47a];
if(/^\d/.test(_47e)&&!/px$/.test(_47e)&&_47a!="fontWeight"){
var left=elem.style.left;
var _481=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_47e||0;
_47e=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_481;
}
}
}
}
if(_47a=="opacity"){
_47e=parseFloat(_47e);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_47a)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_47e="auto";
}
}
return _47e=="auto"?null:_47e;
},setStyle:function(elem,_483){
elem=MochiKit.DOM.getElement(elem);
for(var name in _483){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_483[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_483[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_483[name];
}else{
elem.style.styleFloat=_483[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_483[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _488=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_488?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_48a){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _48d=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(typeof (elem)=="string"){
elem=dom.getElement(elem);
}
if(elem==null||(!_48d(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _491=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_491=elem.offsetParent;
if(_491!=elem){
while(_491){
c.x+=parseInt(_491.style.borderLeftWidth,10)||0;
c.y+=parseInt(_491.style.borderTopWidth,10)||0;
c.x+=_491.offsetLeft;
c.y+=_491.offsetTop;
_491=_491.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_491=elem.parentNode;
}else{
_491=null;
}
while(_491){
var _496=_491.tagName.toUpperCase();
if(_496==="BODY"||_496==="HTML"){
break;
}
var disp=self.getStyle(_491,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_491.scrollLeft;
c.y-=_491.scrollTop;
}
if(_491.parentNode){
_491=_491.parentNode;
}else{
_491=null;
}
}
}
}
}
if(_48a){
_48a=arguments.callee(_48a);
if(_48a){
c.x-=(_48a.x||0);
c.y-=(_48a.y||0);
}
}
return c;
},setElementPosition:function(elem,_499,_49a){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_49a)=="undefined"){
_49a="px";
}
var _49b={};
var _49c=MochiKit.Base.isUndefinedOrNull;
if(!_49c(_499.x)){
_49b["left"]=_499.x+_49a;
}
if(!_49c(_499.y)){
_49b["top"]=_499.y+_49a;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_49b});
},makePositioned:function(_49d){
_49d=MochiKit.DOM.getElement(_49d);
var pos=MochiKit.Style.getStyle(_49d,"position");
if(pos=="static"||!pos){
_49d.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_49d.style.top=0;
_49d.style.left=0;
}
}
},undoPositioned:function(_49f){
_49f=MochiKit.DOM.getElement(_49f);
if(_49f.style.position=="relative"){
_49f.style.position=_49f.style.top=_49f.style.left=_49f.style.bottom=_49f.style.right="";
}
},makeClipping:function(_4a0){
_4a0=MochiKit.DOM.getElement(_4a0);
var s=_4a0.style;
var _4a2={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_4a0,"overflow")||"visible")!="hidden"){
_4a0.style.overflow="hidden";
_4a0.style.overflowX="hidden";
_4a0.style.overflowY="hidden";
}
return _4a2;
},undoClipping:function(_4a3,_4a4){
_4a3=MochiKit.DOM.getElement(_4a3);
if(typeof (_4a4)=="string"){
_4a3.style.overflow=_4a4;
}else{
if(_4a4!=null){
_4a3.style.overflow=_4a4["overflow"];
_4a3.style.overflowX=_4a4["overflow-x"];
_4a3.style.overflowY=_4a4["overflow-y"];
}
}
},getElementDimensions:function(elem,_4a6){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _4ab=s.visibility;
var _4ac=s.position;
var _4ad=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _4ae=elem.offsetWidth;
var _4af=elem.offsetHeight;
s.display=_4ad;
s.position=_4ac;
s.visibility=_4ab;
}else{
_4ae=elem.offsetWidth||0;
_4af=elem.offsetHeight||0;
}
if(_4a6){
var _4b0="colSpan" in elem&&"rowSpan" in elem;
var _4b1=(_4b0&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_4b1){
if(/MSIE/.test(navigator.userAgent)){
var _4b2=elem.previousSibling?0.5:1;
var _4b3=elem.nextSibling?0.5:1;
}else{
var _4b2=0.5;
var _4b3=0.5;
}
}else{
var _4b2=1;
var _4b3=1;
}
_4ae-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_4b2*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_4b3*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_4b0){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _4b4=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _4b4=1;
}else{
var _4b4=_4b1?0.5:1;
}
}
}else{
var _4b4=1;
}
_4af-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_4b4*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_4ae,_4af);
},setElementDimensions:function(elem,_4b6,_4b7){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_4b7)=="undefined"){
_4b7="px";
}
var _4b8={};
var _4b9=MochiKit.Base.isUndefinedOrNull;
if(!_4b9(_4b6.w)){
_4b8["width"]=_4b6.w+_4b7;
}
if(!_4b9(_4b6.h)){
_4b8["height"]=_4b6.h+_4b7;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_4b8});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _4bd=elem.tagName.toUpperCase();
return self._defaultDisplay[_4bd]||"block";
},setDisplayForElement:function(_4be,_4bf){
var _4c0=MochiKit.Base.extend(null,arguments,1);
var _4c1=MochiKit.DOM.getElement;
for(var i=0;i<_4c0.length;i++){
_4bf=_4c1(_4c0[i]);
if(_4bf){
_4bf.style.display=_4be;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _4cb=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_4cb.length;i++){
this._defaultDisplay[_4cb[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3",true);
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
MochiKit.Base._module("LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_4cf){
var m=MochiKit.LoggingPane;
_4cf=!(!_4cf);
if(m._loggingPane&&m._loggingPane.inline!=_4cf){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_4cf,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_4d1,_4d2){
if(typeof (_4d2)=="undefined"||_4d2===null){
_4d2=MochiKit.Logging.logger;
}
this.logger=_4d2;
var _4d3=MochiKit.Base.update;
var _4d4=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _4d6=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_4d1){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _4dd=doc.getElementById(uid);
var _4de=!!_4dd;
if(_4dd&&typeof (_4dd.loggingPane)!="undefined"){
_4dd.loggingPane.logger=this.logger;
_4dd.loggingPane.buildAndApplyFilter();
return _4dd.loggingPane;
}
if(_4de){
var _4df;
while((_4df=_4dd.firstChild)){
_4dd.removeChild(_4df);
}
}else{
_4dd=doc.createElement("div");
_4dd.id=uid;
}
_4dd.loggingPane=this;
var _4e0=doc.createElement("input");
var _4e1=doc.createElement("input");
var _4e2=doc.createElement("button");
var _4e3=doc.createElement("button");
var _4e4=doc.createElement("button");
var _4e5=doc.createElement("button");
var _4e6=doc.createElement("div");
var _4e7=doc.createElement("div");
var _4e8=uid+"_Listener";
this.colorTable=_4d6(this.colorTable);
var _4e9=[];
var _4ea=null;
var _4eb=function(msg){
var _4ed=msg.level;
if(typeof (_4ed)=="number"){
_4ed=MochiKit.Logging.LogLevel[_4ed];
}
return _4ed;
};
var _4ee=function(msg){
return msg.info.join(" ");
};
var _4f0=bind(function(msg){
var _4f2=_4eb(msg);
var text=_4ee(msg);
var c=this.colorTable[_4f2];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_4f2;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_4f2+": "+text));
_4e7.appendChild(p);
_4e7.appendChild(doc.createElement("br"));
if(_4e6.offsetHeight>_4e6.scrollHeight){
_4e6.scrollTop=0;
}else{
_4e6.scrollTop=_4e6.scrollHeight;
}
},this);
var _4f6=function(msg){
_4e9[_4e9.length]=msg;
_4f0(msg);
};
var _4f8=function(){
var _4f9,_4fa;
try{
_4f9=new RegExp(_4e0.value);
_4fa=new RegExp(_4e1.value);
}
catch(e){
MochiKit.Logging.logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_4f9.test(_4eb(msg))&&_4fa.test(_4ee(msg)));
};
};
var _4fc=function(){
while(_4e7.firstChild){
_4e7.removeChild(_4e7.firstChild);
}
};
var _4fd=function(){
_4e9=[];
_4fc();
};
var _4fe=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_4e8);
try{
try{
_4dd.loggingPane=null;
}
catch(e){
MochiKit.Logging.logFatal("Bookmarklet was closed incorrectly.");
}
if(_4d1){
_4dd.parentNode.removeChild(_4dd);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _4ff=function(){
_4fc();
for(var i=0;i<_4e9.length;i++){
var msg=_4e9[i];
if(_4ea===null||_4ea(msg)){
_4f0(msg);
}
}
};
this.buildAndApplyFilter=function(){
_4ea=_4f8();
_4ff();
this.logger.removeListener(_4e8);
this.logger.addListener(_4e8,_4ea,_4f6);
};
var _502=bind(function(){
_4e9=this.logger.getMessages();
_4ff();
},this);
var _503=bind(function(_504){
_504=_504||window.event;
var key=_504.which||_504.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _506="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_4d1){
_506+="; height: 10em; border-top: 2px solid black";
}else{
_506+="; height: 100%;";
}
_4dd.style.cssText=_506;
if(!_4de){
doc.body.appendChild(_4dd);
}
_506={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_4d4(_4e0,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_503,"style":_506});
_4dd.appendChild(_4e0);
_4d4(_4e1,{"value":".*","onkeypress":_503,"style":_506});
_4dd.appendChild(_4e1);
_506="width: 8%; display:inline; font: "+this.logFont;
_4e2.appendChild(doc.createTextNode("Filter"));
_4e2.onclick=bind("buildAndApplyFilter",this);
_4e2.style.cssText=_506;
_4dd.appendChild(_4e2);
_4e3.appendChild(doc.createTextNode("Load"));
_4e3.onclick=_502;
_4e3.style.cssText=_506;
_4dd.appendChild(_4e3);
_4e4.appendChild(doc.createTextNode("Clear"));
_4e4.onclick=_4fd;
_4e4.style.cssText=_506;
_4dd.appendChild(_4e4);
_4e5.appendChild(doc.createTextNode("Close"));
_4e5.onclick=_4fe;
_4e5.style.cssText=_506;
_4dd.appendChild(_4e5);
_4e6.style.cssText="overflow: auto; width: 100%";
_4e7.style.cssText="width: 100%; height: "+(_4d1?"8em":"100%");
_4e6.appendChild(_4e7);
_4dd.appendChild(_4e6);
this.buildAndApplyFilter();
_502();
if(_4d1){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_4d1;
this.closePane=_4fe;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
MochiKit.Base._module("Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_508,blue,_50a){
if(typeof (_50a)=="undefined"||_50a===null){
_50a=1;
}
this.rgb={r:red,g:_508,b:blue,a:_50a};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_50b){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_50b);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_511){
var hsl=this.asHSL();
hsl.s=_511;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_514){
var hsl=this.asHSL();
hsl.l=_514;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_517){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_517,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_51a){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_51a,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_51d,_51e){
if(typeof (_51e)=="undefined"||_51e===null){
_51e=0.5;
}
var sf=1-_51e;
var s=this.rgb;
var d=_51d.rgb;
var df=_51e;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_523){
var a=this.asRGB();
var b=_523.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().l>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_53a,blue,_53c){
var _53d=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_53a=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_53c=undefined;
}else{
_53c=rgb.a;
}
}
return new _53d(red,_53a,blue,_53c);
},fromHSL:function(hue,_540,_541,_542){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_545,_546,_547){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _54a=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _54b=_54a._namedColors[name.toLowerCase()];
if(typeof (_54b)=="string"){
return _54a.fromHexString(_54b);
}else{
if(name=="transparent"){
return _54a.transparentColor();
}
}
return null;
},fromString:function(_54c){
var self=MochiKit.Color.Color;
var _54e=_54c.substr(0,3);
if(_54e=="rgb"){
return self.fromRGBString(_54c);
}else{
if(_54e=="hsl"){
return self.fromHSLString(_54c);
}else{
if(_54c.charAt(0)=="#"){
return self.fromHexString(_54c);
}
}
}
return self.fromName(_54c);
},fromHexString:function(_54f){
if(_54f.charAt(0)=="#"){
_54f=_54f.substring(1);
}
var _550=[];
var i,hex;
if(_54f.length==3){
for(i=0;i<3;i++){
hex=_54f.substr(i,1);
_550.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_54f.substr(i,2);
_550.push(parseInt(hex,16)/255);
}
}
var _553=MochiKit.Color.Color;
return _553.fromRGB.apply(_553,_550);
},_fromColorString:function(pre,_555,_556,_557){
if(_557.indexOf(pre)===0){
_557=_557.substring(_557.indexOf("(",3)+1,_557.length-1);
}
var _558=_557.split(/\s*,\s*/);
var _559=[];
for(var i=0;i<_558.length;i++){
var c=_558[i];
var val;
var _55d=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_55d=="deg"){
val=parseFloat(c)/360;
}else{
if(_55d=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_556[i]*parseFloat(c);
}
}
}
_559.push(val);
}
return this[_555].apply(this,_559);
},fromComputedStyle:function(elem,_55f){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _562=MochiKit.Style.getStyle.apply(d,arguments);
if(!_562){
continue;
}
var _563=cls.fromString(_562);
if(!_563){
break;
}
if(_563.asRGB().a>0){
return _563;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_569){
v*=_569;
if(v<0){
return 0;
}else{
if(v>_569){
return _569;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_56f,_570,_571){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_56f=hsv.s;
_570=hsv.v;
_571=hsv.a;
}
var red;
var _574;
var blue;
if(_56f===0){
red=_570;
_574=_570;
blue=_570;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_570*(1-_56f);
var q=_570*(1-(_56f*f));
var t=_570*(1-(_56f*(1-f)));
switch(i){
case 1:
red=q;
_574=_570;
blue=p;
break;
case 2:
red=p;
_574=_570;
blue=t;
break;
case 3:
red=p;
_574=q;
blue=_570;
break;
case 4:
red=t;
_574=p;
blue=_570;
break;
case 5:
red=_570;
_574=p;
blue=q;
break;
case 6:
case 0:
red=_570;
_574=t;
blue=p;
break;
}
}
return {r:red,g:_574,b:blue,a:_571};
},hslToRGB:function(hue,_57c,_57d,_57e){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_57c=hsl.s;
_57d=hsl.l;
_57e=hsl.a;
}
var red;
var _581;
var blue;
if(_57c===0){
red=_57d;
_581=_57d;
blue=_57d;
}else{
var m2;
if(_57d<=0.5){
m2=_57d*(1+_57c);
}else{
m2=_57d+_57c-(_57d*_57c);
}
var m1=(2*_57d)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_581=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_581,b:blue,a:_57e};
},rgbToHSV:function(red,_588,blue,_58a){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_588=rgb.g;
blue=rgb.b;
_58a=rgb.a;
}
var max=Math.max(Math.max(red,_588),blue);
var min=Math.min(Math.min(red,_588),blue);
var hue;
var _58f;
var _590=max;
if(min==max){
hue=0;
_58f=0;
}else{
var _591=(max-min);
_58f=_591/max;
if(red==max){
hue=(_588-blue)/_591;
}else{
if(_588==max){
hue=2+((blue-red)/_591);
}else{
hue=4+((red-_588)/_591);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_58f,v:_590,a:_58a};
},rgbToHSL:function(red,_593,blue,_595){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_593=rgb.g;
blue=rgb.b;
_595=rgb.a;
}
var max=Math.max(red,Math.max(_593,blue));
var min=Math.min(red,Math.min(_593,blue));
var hue;
var _59a;
var _59b=(max+min)/2;
var _59c=max-min;
if(_59c===0){
hue=0;
_59a=0;
}else{
if(_59b<=0.5){
_59a=_59c/(max+min);
}else{
_59a=_59c/(2-max-min);
}
if(red==max){
hue=(_593-blue)/_59c;
}else{
if(_593==max){
hue=2+((blue-red)/_59c);
}else{
hue=4+((red-_593)/_59c);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_59a,l:_59b,a:_595};
},toColorPart:function(num){
num=Math.round(num);
var _59e=num.toString(16);
if(num<16){
return "0"+_59e;
}
return _59e;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _5a0=1/3;
var _5a1={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_5a0,_5a0,_5a0],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_5a0,2*_5a0,2*_5a0],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
for(var k in _5a1){
var name=k+"Color";
var _5a4=this.Color.fromRGB.apply(this.Color,_5a1[k]);
this.Color[name]=m.partial(m.operator.identity,_5a4);
}
var _5a5=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _5a7=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_5a5,_5a7);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Base._module("Signal","1.5",["Base","DOM"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Signal.Event.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
};
MochiKit.Signal.Event.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Signal.Event.prototype.src=function(){
return this._src;
};
MochiKit.Signal.Event.prototype.event=function(){
return this._event;
};
MochiKit.Signal.Event.prototype.type=function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
};
MochiKit.Signal.Event.prototype.target=function(){
return this._event.target||this._event.srcElement;
};
MochiKit.Signal.Event.prototype._relatedTarget=null;
MochiKit.Signal.Event.prototype.relatedTarget=function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
};
MochiKit.Signal.Event.prototype._modifier=null;
MochiKit.Signal.Event.prototype.modifier=function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
};
MochiKit.Signal.Event.prototype._key=null;
MochiKit.Signal.Event.prototype.key=function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
};
MochiKit.Signal.Event.prototype._mouse=null;
MochiKit.Signal.Event.prototype.mouse=function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("drag")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client={x:0,y:0};
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page={x:0,y:0};
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel={x:0,y:0};
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
};
MochiKit.Signal.Event.prototype.stop=function(){
this.stopPropagation();
this.preventDefault();
};
MochiKit.Signal.Event.prototype.stopPropagation=function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
};
MochiKit.Signal.Event.prototype.preventDefault=function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
};
MochiKit.Signal.Event.prototype._confirmUnload=null;
MochiKit.Signal.Event.prototype.confirmUnload=function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
};
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _5b6=MochiKit.Signal._specialMacKeys;
for(var i=63236;i<=63242;i++){
_5b6[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _5b8=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_5b8[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_5b8[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_5b8[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_5b8[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_5ba){
this.source=_5ba.source;
this.signal=_5ba.signal;
this.listener=_5ba.listener;
this.isDOM=_5ba.isDOM;
this.objOrFunc=_5ba.objOrFunc;
this.funcOrStr=_5ba.funcOrStr;
this.connected=_5ba.connected;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _5bc=self._observers;
for(var i=0;i<_5bc.length;i++){
if(_5bc[i].signal!=="onload"&&_5bc[i].signal!=="onunload"){
self._disconnect(_5bc[i]);
}
}
},_listener:function(src,sig,func,obj,_5c2){
var self=MochiKit.Signal;
var E=self.Event;
if(!_5c2){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_5c5){
obj[func].apply(obj,[new E(src,_5c5)]);
var _5c6=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_5c6);
};
}else{
return function(_5c7){
obj[func].apply(obj,[new E(src,_5c7)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_5c8){
func.apply(obj,[new E(src,_5c8)]);
var _5c9=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_5c9);
};
}else{
return function(_5ca){
func.apply(obj,[new E(src,_5ca)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_5d0){
var e=new E(src,_5d0);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_5d2,_5d3){
var obj=null;
var func=null;
if(typeof (_5d3)!="undefined"){
obj=_5d2;
func=_5d3;
if(typeof (_5d3)=="string"){
if(typeof (_5d2[_5d3])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_5d3)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_5d2)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_5d2;
}
}
return [obj,func];
},connect:function(src,sig,_5d8,_5d9){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _5db=self._getDestPair(_5d8,_5d9);
var obj=_5db[0];
var func=_5db[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _5de=!!(src.addEventListener||src.attachEvent);
if(_5de&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _5df=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_5de&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _5df=self._listener(src,sig,func,obj,_5de);
sig="onDOMMouseScroll";
}else{
var _5df=self._listener(src,sig,func,obj,_5de);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_5df,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_5df);
}
}
var _5e0=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_5df,isDOM:_5de,objOrFunc:_5d8,funcOrStr:_5d9,connected:true});
self._observers.push(_5e0);
if(!_5de&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_5e0],arguments,1);
src.__connect__.apply(src,args);
}
return _5e0;
},connectOnce:function(src,sig,_5e4,_5e5){
var self=MochiKit.Signal;
var _5e7=self.connect(src,sig,_5e4,_5e5);
var _5e8;
_5e8=self.connect(src,sig,function(){
self.disconnect(_5e7);
self.disconnect(_5e8);
});
return _5e7;
},_disconnect:function(_5e9){
if(!_5e9.connected){
return;
}
_5e9.connected=false;
var src=_5e9.source;
var sig=_5e9.signal;
var _5ec=_5e9.listener;
if(!_5e9.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_5e9,sig,_5e9.objOrFunc,_5e9.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_5ec,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_5ec);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_5ed){
var self=MochiKit.Signal;
var _5ef=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_5ef.length-1;i>=0;i--){
var o=_5ef[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(self._lock===0){
_5ef.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_5ef,_5ed);
if(idx>=0){
self._disconnect(_5ed);
if(self._lock===0){
_5ef.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_5f8,_5f9){
var self=MochiKit.Signal;
var _5fb=self._observers;
var _5fc=self._disconnect;
var lock=self._lock;
var _5fe=self._dirty;
if(typeof (_5f9)==="undefined"){
_5f9=null;
}
for(var i=_5fb.length-1;i>=0;i--){
var _600=_5fb[i];
if(_600.objOrFunc===_5f8&&(_5f9===null||_600.funcOrStr===_5f9)){
_5fc(_600);
if(lock===0){
_5fb.splice(i,1);
}else{
_5fe=true;
}
}
}
self._dirty=_5fe;
},disconnectAll:function(src,sig){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _604=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _606=self._disconnect;
var _607=self._observers;
var i,_609;
var lock=self._lock;
var _60b=self._dirty;
if(_604.length===0){
for(i=_607.length-1;i>=0;i--){
_609=_607[i];
if(_609.source===src){
_606(_609);
if(lock===0){
_607.splice(i,1);
}else{
_60b=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_604.length;i++){
sigs[_604[i]]=true;
}
for(i=_607.length-1;i>=0;i--){
_609=_607[i];
if(_609.source===src&&_609.signal in sigs){
_606(_609);
if(lock===0){
_607.splice(i,1);
}else{
_60b=true;
}
}
}
}
self._dirty=_60b;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _610=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _612=[];
self._lock++;
for(var i=0;i<_610.length;i++){
var _614=_610[i];
if(_614.source===src&&_614.signal===sig&&_614.connected){
try{
if(_614.isDOM&&_614.funcOrStr!=null){
var obj=_614.objOrFunc;
obj[_614.funcOrStr].apply(obj,args);
}else{
if(_614.isDOM){
_614.objOrFunc.apply(src,args);
}else{
_614.listener.apply(src,args);
}
}
}
catch(e){
_612.push(e);
}
}
}
self._lock--;
if(self._lock===0&&self._dirty){
self._dirty=false;
for(var i=_610.length-1;i>=0;i--){
if(!_610[i].connected){
_610.splice(i,1);
}
}
}
if(_612.length==1){
throw _612[0];
}else{
if(_612.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_612;
throw e;
}
}
}});
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=0;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
window.connect=MochiKit.Signal.connect;
window.disconnect=MochiKit.Signal.disconnect;
window.disconnectAll=MochiKit.Signal.disconnectAll;
window.signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
MochiKit.Base._module("Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _619=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _61a=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_619,_61a);
},cumulativeOffset:function(_61b){
var _61c=0;
var _61d=0;
do{
_61c+=_61b.offsetTop||0;
_61d+=_61b.offsetLeft||0;
_61b=_61b.offsetParent;
}while(_61b);
return new MochiKit.Style.Coordinates(_61d,_61c);
},realOffset:function(_61e){
var _61f=0;
var _620=0;
do{
_61f+=_61e.scrollTop||0;
_620+=_61e.scrollLeft||0;
_61e=_61e.parentNode;
}while(_61e);
return new MochiKit.Style.Coordinates(_620,_61f);
},within:function(_621,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_621,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_621);
if(_621.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_621.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_621.offsetWidth);
},withinIncludingScrolloffsets:function(_624,x,y){
var _627=this.realOffset(_624);
this.xcomp=x+_627.x-this.windowOffset.x;
this.ycomp=y+_627.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_624);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_624.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_624.offsetWidth);
},overlap:function(mode,_629){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_629.offsetHeight)-this.ycomp)/_629.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_629.offsetWidth)-this.xcomp)/_629.offsetWidth;
}
},absolutize:function(_62a){
_62a=MochiKit.DOM.getElement(_62a);
if(_62a.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _62b=MochiKit.Position.positionedOffset(_62a);
var _62c=_62a.clientWidth;
var _62d=_62a.clientHeight;
var _62e={"position":_62a.style.position,"left":_62b.x-parseFloat(_62a.style.left||0),"top":_62b.y-parseFloat(_62a.style.top||0),"width":_62a.style.width,"height":_62a.style.height};
_62a.style.position="absolute";
_62a.style.top=_62b.y+"px";
_62a.style.left=_62b.x+"px";
_62a.style.width=_62c+"px";
_62a.style.height=_62d+"px";
return _62e;
},positionedOffset:function(_62f){
var _630=0,_631=0;
do{
_630+=_62f.offsetTop||0;
_631+=_62f.offsetLeft||0;
_62f=_62f.offsetParent;
if(_62f){
var p=MochiKit.Style.getStyle(_62f,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_62f);
return new MochiKit.Style.Coordinates(_631,_630);
},relativize:function(_633,_634){
_633=MochiKit.DOM.getElement(_633);
if(_633.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_633.style.top||0)-(_634["top"]||0);
var left=parseFloat(_633.style.left||0)-(_634["left"]||0);
_633.style.position=_634["position"];
_633.style.top=top+"px";
_633.style.left=left+"px";
_633.style.width=_634["width"];
_633.style.height=_634["height"];
},clone:function(_637,_638){
_637=MochiKit.DOM.getElement(_637);
_638=MochiKit.DOM.getElement(_638);
_638.style.position="absolute";
var _639=this.cumulativeOffset(_637);
_638.style.top=_639.y+"px";
_638.style.left=_639.x+"px";
_638.style.width=_637.offsetWidth+"px";
_638.style.height=_637.offsetHeight+"px";
},page:function(_63a){
var _63b=0;
var _63c=0;
var _63d=_63a;
do{
_63b+=_63d.offsetTop||0;
_63c+=_63d.offsetLeft||0;
if(_63d.offsetParent==document.body&&MochiKit.Style.getStyle(_63d,"position")=="absolute"){
break;
}
}while(_63d=_63d.offsetParent);
_63d=_63a;
do{
_63b-=_63d.scrollTop||0;
_63c-=_63d.scrollLeft||0;
}while(_63d=_63d.parentNode);
return new MochiKit.Style.Coordinates(_63c,_63b);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
MochiKit.Base._module("Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_640){
e=MochiKit.DOM.getElement(e);
this._setOptions(_640);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _641=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_641=C.fromBackground(e);
}else{
if(!(_641 instanceof C)){
_641=C.fromString(_641);
}
}
this.isTransparent=(_641.asRGB().a<=0);
var _643=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_643=C.fromBackground(e.offsetParent);
}else{
if(!(_643 instanceof C)){
_643=C.fromString(_643);
}
}
this._roundCornersImpl(e,_641,_643);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _645=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _647=doc.defaultView.getComputedStyle(e,null);
if(typeof (_647)==="undefined"||_647===null){
return e;
}
var _648=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_647.getPropertyValue("padding-top"),marginRight:_647.getPropertyValue("padding-right"),marginBottom:_647.getPropertyValue("padding-bottom"),marginLeft:_647.getPropertyValue("padding-left"),padding:"0px"}});
_648.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_648);
return e;
},_roundCornersImpl:function(e,_64a,_64b){
if(this.options.border){
this._renderBorder(e,_64b);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_64a,_64b);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_64a,_64b);
}
},_renderBorder:function(el,_64d){
var _64e="1px solid "+this._borderColor(_64d);
var _64f="border-left: "+_64e;
var _650="border-right: "+_64e;
var _651="style='"+_64f+";"+_650+"'";
el.innerHTML="<div "+_651+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_653,_654){
var _655=this._createCorner(_654);
for(var i=0;i<this.options.numSlices;i++){
_655.appendChild(this._createCornerSlice(_653,_654,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_655,el.firstChild);
},_roundBottomCorners:function(el,_658,_659){
var _65a=this._createCorner(_659);
for(var i=(this.options.numSlices-1);i>=0;i--){
_65a.appendChild(this._createCornerSlice(_658,_659,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_65a);
},_createCorner:function(_65c){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_65c.toString()}});
},_createCornerSlice:function(_65e,_65f,n,_661){
var _662=MochiKit.DOM.SPAN();
var _663=_662.style;
_663.backgroundColor=_65e.toString();
_663.display="block";
_663.height="1px";
_663.overflow="hidden";
_663.fontSize="1px";
var _664=this._borderColor(_65e,_65f);
if(this.options.border&&n===0){
_663.borderTopStyle="solid";
_663.borderTopWidth="1px";
_663.borderLeftWidth="0px";
_663.borderRightWidth="0px";
_663.borderBottomWidth="0px";
_663.height="0px";
_663.borderColor=_664.toString();
}else{
if(_664){
_663.borderColor=_664.toString();
_663.borderStyle="solid";
_663.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_663.height="2px";
}
this._setMargin(_662,n,_661);
this._setBorder(_662,n,_661);
return _662;
},_setOptions:function(_665){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_665);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _666=this.options.corners;
if(this._hasString(_666,"all","top")){
return "";
}
var _667=(_666.indexOf("tl")!=-1);
var _668=(_666.indexOf("tr")!=-1);
if(_667&&_668){
return "";
}
if(_667){
return "left";
}
if(_668){
return "right";
}
return "";
},_whichSideBottom:function(){
var _669=this.options.corners;
if(this._hasString(_669,"all","bottom")){
return "";
}
var _66a=(_669.indexOf("bl")!=-1);
var _66b=(_669.indexOf("br")!=-1);
if(_66a&&_66b){
return "";
}
if(_66a){
return "left";
}
if(_66b){
return "right";
}
return "";
},_borderColor:function(_66c,_66d){
if(_66c=="transparent"){
return _66d;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _66d.blendedColor(_66c);
}
}
}
return "";
},_setMargin:function(el,n,_670){
var _671=this._marginSize(n)+"px";
var _672=(_670=="top"?this._whichSideTop():this._whichSideBottom());
var _673=el.style;
if(_672=="left"){
_673.marginLeft=_671;
_673.marginRight="0px";
}else{
if(_672=="right"){
_673.marginRight=_671;
_673.marginLeft="0px";
}else{
_673.marginLeft=_671;
_673.marginRight=_671;
}
}
},_setBorder:function(el,n,_676){
var _677=this._borderSize(n)+"px";
var _678=(_676=="top"?this._whichSideTop():this._whichSideBottom());
var _679=el.style;
if(_678=="left"){
_679.borderLeftWidth=_677;
_679.borderRightWidth="0px";
}else{
if(_678=="right"){
_679.borderRightWidth=_677;
_679.borderLeftWidth="0px";
}else{
_679.borderLeftWidth=_677;
_679.borderRightWidth=_677;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _67c=[1,0];
return _67c[n];
}else{
if(o.compact){
var _67d=[2,1];
return _67d[n];
}else{
if(o.blend){
var _67e=[3,2,1,0];
return _67e[n];
}else{
var _67f=[5,3,2,1];
return _67f[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _682;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_682=[1,0];
}else{
if(o.blend){
_682=[2,1,1,1];
}else{
if(o.border){
_682=[0,2,0,0];
}else{
if(this.isTransparent){
_682=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _682[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_687){
new MochiKit.Visual._RoundCorners(e,_687);
};
MochiKit.Visual.roundClass=function(_688,_689,_68a){
var _68b=MochiKit.DOM.getElementsByTagAndClassName(_688,_689);
for(var i=0;i<_68b.length;i++){
MochiKit.Visual.roundElement(_68b[i],_68a);
}
};
MochiKit.Visual.tagifyText=function(_68d,_68e){
_68e=_68e||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_68e+=";zoom:1";
}
_68d=MochiKit.DOM.getElement(_68d);
var ma=MochiKit.Base.map;
ma(function(_690){
if(_690.nodeType==3){
ma(function(_691){
_68d.insertBefore(MochiKit.DOM.SPAN({style:_68e},_691==" "?String.fromCharCode(160):_691),_690);
},_690.nodeValue.split(""));
MochiKit.DOM.removeElement(_690);
}
},_68d.childNodes);
};
MochiKit.Visual._forceRerendering=function(_692){
try{
_692=MochiKit.DOM.getElement(_692);
var n=document.createTextNode(" ");
_692.appendChild(n);
_692.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_694,_695,_696){
_696=MochiKit.Base.update({speed:0.1,delay:0},_696);
var _697=_696.delay;
var _698=0;
MochiKit.Base.map(function(_699){
_696.delay=_698*_696.speed+_697;
new _695(_699,_696);
_698+=1;
},_694);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_69a,_69b,_69c){
_69a=MochiKit.DOM.getElement(_69a);
_69b=(_69b||"appear").toLowerCase();
_69c=MochiKit.Base.update({queue:{position:"end",scope:(_69a.id||"global"),limit:1}},_69c);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_69a,"display")!="none"?v.PAIRS[_69b][1]:v.PAIRS[_69b][0]](_69a,_69c);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_6a4){
if(_6a4){
pos*=2*_6a4;
}else{
pos*=10;
}
var _6a5=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_6a5:1-_6a5;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.spring=function(pos){
return 1-(Math.cos(pos*2.5*Math.PI)*Math.exp(-pos*6));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_6ab){
var _6ac=new Date().getTime();
var _6ad=(typeof (_6ab.options.queue)=="string")?_6ab.options.queue:_6ab.options.queue.position;
var ma=MochiKit.Base.map;
switch(_6ad){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_6ab.finishOn;
e.finishOn+=_6ab.finishOn;
}
},this.effects);
break;
case "end":
var _6b0;
ma(function(e){
var i=e.finishOn;
if(i>=(_6b0||i)){
_6b0=i;
}
},this.effects);
_6ac=_6b0||_6ac;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
case "replace":
ma(function(e){
e.cancel();
},this.effects);
break;
}
_6ab.startOn+=_6ac;
_6ab.finishOn+=_6ac;
if(!_6ab.options.queue.limit||this.effects.length<_6ab.options.queue.limit){
this.effects.push(_6ab);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_6b6){
return setInterval(func,_6b6);
},remove:function(_6b7){
this.effects=MochiKit.Base.filter(function(e){
return e!=_6b7;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_6b9){
clearInterval(_6b9);
},loop:function(){
var _6ba=new Date().getTime();
MochiKit.Base.map(function(_6bb){
_6bb.loop(_6ba);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_6bc){
if(typeof (_6bc)!="string"){
return _6bc;
}
if(!this.instances[_6bc]){
this.instances[_6bc]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_6bc];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_6bd){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_6bd,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_6bf){
if(_6bf>=this.startOn){
if(_6bf>=this.finishOn){
return this.finalize();
}
var pos=(_6bf-this.startOn)/(this.finishOn-this.startOn);
var _6c1=Math.round(pos*this.options.fps*this.options.duration);
if(_6c1>this.currentFrame){
this.render(pos);
this.currentFrame=_6c1;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
var _6c3=this.options.transition;
if(typeof (_6c3)=="string"){
_6c3=MochiKit.Visual.Transitions[_6c3];
}
if(typeof (_6c3)=="function"){
pos=_6c3(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_6c4){
},event:function(_6c5){
if(this.options[_6c5+"Internal"]){
this.options[_6c5+"Internal"](this);
}
if(this.options[_6c5]){
this.options[_6c5](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_6c6,_6c7){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6c6,_6c7);
}
this.__init__(_6c6,_6c7);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_6c9,_6ca){
this.effects=_6c9||[];
this.start(_6ca);
},update:function(_6cb){
MochiKit.Base.map(function(_6cc){
_6cc.render(_6cb);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_6cd){
_6cd.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_6ce,_6cf){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6ce,_6cf);
}
this.__init__(_6ce,_6cf);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_6d1,_6d2){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_6d1||[];
MochiKit.Base.map(function(_6d4){
defs.duration+=_6d4.options.duration;
},this.effects);
MochiKit.Base.setdefault(_6d2,defs);
this.start(_6d2);
},update:function(_6d5){
var time=_6d5*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _6d8=this.effects[i];
if(time<=_6d8.options.duration){
_6d8.render(time/_6d8.options.duration);
break;
}else{
time-=_6d8.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_6d9){
_6d9.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_6da,_6db){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6da,_6db);
}
this.__init__(_6da,_6db);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_6dd,_6de){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_6dd);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_6de=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_6de);
this.start(_6de);
},update:function(_6e1){
MochiKit.Style.setStyle(this.element,{"opacity":_6e1});
}});
MochiKit.Visual.Move=function(_6e2,_6e3){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6e2,_6e3);
}
this.__init__(_6e2,_6e3);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_6e5,_6e6){
this.element=MochiKit.DOM.getElement(_6e5);
_6e6=MochiKit.Base.update({x:0,y:0,mode:"relative"},_6e6);
this.start(_6e6);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _6e8=s.visibility;
var _6e9=s.display;
if(_6e9=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_6e9=="none"){
s.visibility=_6e8;
s.display=_6e9;
}
},update:function(_6ea){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_6ea+this.originalLeft)+"px",top:Math.round(this.options.y*_6ea+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_6eb,_6ec,_6ed){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6eb,_6ec,_6ed);
}
this.__init__(_6eb,_6ec,_6ed);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_6ef,_6f0,_6f1){
this.element=MochiKit.DOM.getElement(_6ef);
_6f1=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_6f0},_6f1);
this.start(_6f1);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _6f5=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_6f6){
if(_6f5.indexOf(_6f6)>0){
this.fontSize=parseFloat(_6f5);
this.fontSizeType=_6f6;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_6f7){
var _6f8=(this.options.scaleFrom/100)+(this.factor*_6f7);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_6f8+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_6f8,this.dims[1]*_6f8);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_6f9,_6fa){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_6fa)+"px";
}
if(this.options.scaleY){
d.height=r(_6f9)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_6f9-this.dims[0])/2;
var _6fe=(_6fa-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_6fe+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_6fe+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_6ff,_700){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6ff,_700);
}
this.__init__(_6ff,_700);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_702,_703){
this.element=MochiKit.DOM.getElement(_702);
_703=MochiKit.Base.update({startcolor:"#ffff99"},_703);
this.start(_703);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_708){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_708));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_70b,_70c){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_70b,_70c);
}
this.__init__(_70b,_70c);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_70e,_70f){
this.element=MochiKit.DOM.getElement(_70e);
this.start(_70f);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _711=p.cumulativeOffset(this.element);
if(this.options.offset){
_711.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_711.y>max?max:_711.y)-this.scrollStart;
},update:function(_713){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_713*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_715,_716){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_715,_716);
}
this.__init__(_715,_716);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_718,_719){
this.element=MochiKit.DOM.getElement(_718);
this.start(_719);
},setup:function(){
var b=MochiKit.Base;
var _71b=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _71c,unit;
for(var s in _71b){
_71c=_71b[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_71c)){
var _71f=_71c.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_71c=parseFloat(_71f[1]);
unit=(_71f.length==3)?_71f[2]:null;
this.styleEnd[s]=_71c;
this.units[s]=unit;
_71c=MochiKit.Style.getStyle(this.element,s);
_71f=_71c.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_71c=parseFloat(_71f[1]);
this.styleStart[s]=_71c;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_71c=c.fromString(_71c);
if(_71c){
this.units[s]="color";
this.styleEnd[s]=_71c.toHexString();
_71c=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_71c).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_71c;
}
}
}
},update:function(_723){
var _724;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _727=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_727[i]+(end[i]-_727[i])*_723));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_724=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_723*1000)/1000+this.units[s];
this.element.style[s]=_724;
}
}
}});
MochiKit.Visual.fade=function(_72a,_72b){
var s=MochiKit.Style;
var _72d=s.getStyle(_72a,"opacity");
_72b=MochiKit.Base.update({from:s.getStyle(_72a,"opacity")||1,to:0,afterFinishInternal:function(_72e){
if(_72e.options.to!==0){
return;
}
s.hideElement(_72e.element);
s.setStyle(_72e.element,{"opacity":_72d});
}},_72b);
return new MochiKit.Visual.Opacity(_72a,_72b);
};
MochiKit.Visual.appear=function(_72f,_730){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_730=MochiKit.Base.update({from:(s.getStyle(_72f,"display")=="none"?0:s.getStyle(_72f,"opacity")||0),to:1,afterFinishInternal:function(_733){
v._forceRerendering(_733.element);
},beforeSetupInternal:function(_734){
s.setStyle(_734.element,{"opacity":_734.options.from});
s.showElement(_734.element);
}},_730);
return new v.Opacity(_72f,_730);
};
MochiKit.Visual.puff=function(_735,_736){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_735=MochiKit.DOM.getElement(_735);
var _739=MochiKit.Style.getElementDimensions(_735,true);
var _73a={position:s.getStyle(_735,"position"),top:_735.style.top,left:_735.style.left,width:_735.style.width,height:_735.style.height,opacity:s.getStyle(_735,"opacity")};
_736=MochiKit.Base.update({beforeSetupInternal:function(_73b){
MochiKit.Position.absolutize(_73b.effects[0].element);
},afterFinishInternal:function(_73c){
s.hideElement(_73c.effects[0].element);
s.setStyle(_73c.effects[0].element,_73a);
},scaleContent:true,scaleFromCenter:true},_736);
return new v.Parallel([new v.Scale(_735,200,{sync:true,scaleFromCenter:_736.scaleFromCenter,scaleMode:{originalHeight:_739.h,originalWidth:_739.w},scaleContent:_736.scaleContent,restoreAfterFinish:true}),new v.Opacity(_735,{sync:true,to:0})],_736);
};
MochiKit.Visual.blindUp=function(_73d,_73e){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_73d=d.getElement(_73d);
var _741=s.getElementDimensions(_73d,true);
var _742=s.makeClipping(_73d);
_73e=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_741.h,originalWidth:_741.w},restoreAfterFinish:true,afterFinishInternal:function(_743){
s.hideElement(_743.element);
s.undoClipping(_743.element,_742);
}},_73e);
return new MochiKit.Visual.Scale(_73d,0,_73e);
};
MochiKit.Visual.blindDown=function(_744,_745){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_744=d.getElement(_744);
var _748=s.getElementDimensions(_744,true);
var _749;
_745=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_748.h,originalWidth:_748.w},restoreAfterFinish:true,afterSetupInternal:function(_74a){
_749=s.makeClipping(_74a.element);
s.setStyle(_74a.element,{height:"0px"});
s.showElement(_74a.element);
},afterFinishInternal:function(_74b){
s.undoClipping(_74b.element,_749);
}},_745);
return new MochiKit.Visual.Scale(_744,100,_745);
};
MochiKit.Visual.switchOff=function(_74c,_74d){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_74c=d.getElement(_74c);
var _750=s.getElementDimensions(_74c,true);
var _751=s.getStyle(_74c,"opacity");
var _752;
_74d=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_753){
s.makePositioned(_74c);
_752=s.makeClipping(_74c);
},afterFinishInternal:function(_754){
s.hideElement(_74c);
s.undoClipping(_74c,_752);
s.undoPositioned(_74c);
s.setStyle(_74c,{"opacity":_751});
}},_74d);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_74c,{sync:true,duration:0.57*_74d.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_74c,1,{sync:true,duration:0.43*_74d.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_750.h,originalWidth:_750.w},scaleContent:false,restoreAfterFinish:true})],_74d);
};
MochiKit.Visual.dropOut=function(_756,_757){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_756=d.getElement(_756);
var _75a={top:s.getStyle(_756,"top"),left:s.getStyle(_756,"left"),opacity:s.getStyle(_756,"opacity")};
_757=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_75b){
s.makePositioned(_75b.effects[0].element);
},afterFinishInternal:function(_75c){
s.hideElement(_75c.effects[0].element);
s.undoPositioned(_75c.effects[0].element);
s.setStyle(_75c.effects[0].element,_75a);
}},_757);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_756,{x:0,y:_757.distance,sync:true}),new v.Opacity(_756,{sync:true,to:0})],_757);
};
MochiKit.Visual.shake=function(_75e,_75f){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_75e=d.getElement(_75e);
var _763={top:s.getStyle(_75e,"top"),left:s.getStyle(_75e,"left")};
_75f=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_764){
s.undoPositioned(_75e);
s.setStyle(_75e,_763);
}},_75f);
return new v.Sequence([new v.Move(_75e,{sync:true,duration:0.1*_75f.duration,x:20,y:0}),new v.Move(_75e,{sync:true,duration:0.2*_75f.duration,x:-40,y:0}),new v.Move(_75e,{sync:true,duration:0.2*_75f.duration,x:40,y:0}),new v.Move(_75e,{sync:true,duration:0.2*_75f.duration,x:-40,y:0}),new v.Move(_75e,{sync:true,duration:0.2*_75f.duration,x:40,y:0}),new v.Move(_75e,{sync:true,duration:0.1*_75f.duration,x:-20,y:0})],_75f);
};
MochiKit.Visual.slideDown=function(_765,_766){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_765=d.getElement(_765);
if(!_765.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_765);
var _76a=s.getStyle(_765.firstChild,"bottom")||0;
var _76b=s.getElementDimensions(_765,true);
var _76c;
_766=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_76b.h,originalWidth:_76b.w},restoreAfterFinish:true,afterSetupInternal:function(_76d){
s.makePositioned(_76d.element);
s.makePositioned(_76d.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_76d.element,{top:""});
}
_76c=s.makeClipping(_76d.element);
s.setStyle(_76d.element,{height:"0px"});
s.showElement(_76d.element);
},afterUpdateInternal:function(_76e){
var _76f=s.getElementDimensions(_76e.element,true);
s.setStyle(_76e.element.firstChild,{bottom:(_76e.dims[0]-_76f.h)+"px"});
},afterFinishInternal:function(_770){
s.undoClipping(_770.element,_76c);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_770.element);
s.undoPositioned(_770.element.firstChild);
}else{
s.undoPositioned(_770.element.firstChild);
s.undoPositioned(_770.element);
}
s.setStyle(_770.element.firstChild,{bottom:_76a});
}},_766);
return new MochiKit.Visual.Scale(_765,100,_766);
};
MochiKit.Visual.slideUp=function(_771,_772){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_771=d.getElement(_771);
if(!_771.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_771);
var _776=s.getStyle(_771.firstChild,"bottom");
var _777=s.getElementDimensions(_771,true);
var _778;
_772=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_777.h,originalWidth:_777.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_779){
s.makePositioned(_779.element);
s.makePositioned(_779.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_779.element,{top:""});
}
_778=s.makeClipping(_779.element);
s.showElement(_779.element);
},afterUpdateInternal:function(_77a){
var _77b=s.getElementDimensions(_77a.element,true);
s.setStyle(_77a.element.firstChild,{bottom:(_77a.dims[0]-_77b.h)+"px"});
},afterFinishInternal:function(_77c){
s.hideElement(_77c.element);
s.undoClipping(_77c.element,_778);
s.undoPositioned(_77c.element.firstChild);
s.undoPositioned(_77c.element);
s.setStyle(_77c.element.firstChild,{bottom:_776});
}},_772);
return new MochiKit.Visual.Scale(_771,0,_772);
};
MochiKit.Visual.squish=function(_77d,_77e){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _782=s.getElementDimensions(_77d,true);
var _783;
_77e=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_782.w,originalWidth:_782.h},beforeSetupInternal:function(_784){
_783=s.makeClipping(_784.element);
},afterFinishInternal:function(_785){
s.hideElement(_785.element);
s.undoClipping(_785.element,_783);
}},_77e);
return new MochiKit.Visual.Scale(_77d,/Opera/.test(navigator.userAgent)?1:0,_77e);
};
MochiKit.Visual.grow=function(_786,_787){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_786=d.getElement(_786);
_787=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_787);
var _78b={top:_786.style.top,left:_786.style.left,height:_786.style.height,width:_786.style.width,opacity:s.getStyle(_786,"opacity")};
var dims=s.getElementDimensions(_786,true);
var _78d,_78e;
var _78f,_790;
switch(_787.direction){
case "top-left":
_78d=_78e=_78f=_790=0;
break;
case "top-right":
_78d=dims.w;
_78e=_790=0;
_78f=-dims.w;
break;
case "bottom-left":
_78d=_78f=0;
_78e=dims.h;
_790=-dims.h;
break;
case "bottom-right":
_78d=dims.w;
_78e=dims.h;
_78f=-dims.w;
_790=-dims.h;
break;
case "center":
_78d=dims.w/2;
_78e=dims.h/2;
_78f=-dims.w/2;
_790=-dims.h/2;
break;
}
var _791=MochiKit.Base.update({beforeSetupInternal:function(_792){
s.setStyle(_792.effects[0].element,{height:"0px"});
s.showElement(_792.effects[0].element);
},afterFinishInternal:function(_793){
s.undoClipping(_793.effects[0].element);
s.undoPositioned(_793.effects[0].element);
s.setStyle(_793.effects[0].element,_78b);
}},_787);
return new v.Move(_786,{x:_78d,y:_78e,duration:0.01,beforeSetupInternal:function(_794){
s.hideElement(_794.element);
s.makeClipping(_794.element);
s.makePositioned(_794.element);
},afterFinishInternal:function(_795){
new v.Parallel([new v.Opacity(_795.element,{sync:true,to:1,from:0,transition:_787.opacityTransition}),new v.Move(_795.element,{x:_78f,y:_790,sync:true,transition:_787.moveTransition}),new v.Scale(_795.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_787.scaleTransition,scaleContent:_787.scaleContent,scaleFromCenter:_787.scaleFromCenter,restoreAfterFinish:true})],_791);
}});
};
MochiKit.Visual.shrink=function(_796,_797){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_796=d.getElement(_796);
_797=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_797);
var _79b={top:_796.style.top,left:_796.style.left,height:_796.style.height,width:_796.style.width,opacity:s.getStyle(_796,"opacity")};
var dims=s.getElementDimensions(_796,true);
var _79d,_79e;
switch(_797.direction){
case "top-left":
_79d=_79e=0;
break;
case "top-right":
_79d=dims.w;
_79e=0;
break;
case "bottom-left":
_79d=0;
_79e=dims.h;
break;
case "bottom-right":
_79d=dims.w;
_79e=dims.h;
break;
case "center":
_79d=dims.w/2;
_79e=dims.h/2;
break;
}
var _79f;
var _7a0=MochiKit.Base.update({beforeStartInternal:function(_7a1){
s.makePositioned(_7a1.effects[0].element);
_79f=s.makeClipping(_7a1.effects[0].element);
},afterFinishInternal:function(_7a2){
s.hideElement(_7a2.effects[0].element);
s.undoClipping(_7a2.effects[0].element,_79f);
s.undoPositioned(_7a2.effects[0].element);
s.setStyle(_7a2.effects[0].element,_79b);
}},_797);
return new v.Parallel([new v.Opacity(_796,{sync:true,to:0,from:1,transition:_797.opacityTransition}),new v.Scale(_796,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_797.scaleTransition,scaleContent:_797.scaleContent,scaleFromCenter:_797.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_796,{x:_79d,y:_79e,sync:true,transition:_797.moveTransition})],_7a0);
};
MochiKit.Visual.pulsate=function(_7a3,_7a4){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _7a8=MochiKit.Style.getStyle(_7a3,"opacity");
_7a4=b.update({duration:3,from:0,afterFinishInternal:function(_7a9){
MochiKit.Style.setStyle(_7a9.element,{"opacity":_7a8});
}},_7a4);
var _7aa=_7a4.transition||v.Transitions.sinoidal;
_7a4.transition=function(pos){
return _7aa(1-v.Transitions.pulse(pos,_7a4.pulses));
};
return new v.Opacity(_7a3,_7a4);
};
MochiKit.Visual.fold=function(_7ac,_7ad){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7ac=d.getElement(_7ac);
var _7b1=s.getElementDimensions(_7ac,true);
var _7b2={top:_7ac.style.top,left:_7ac.style.left,width:_7ac.style.width,height:_7ac.style.height};
var _7b3=s.makeClipping(_7ac);
_7ad=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7b1.h,originalWidth:_7b1.w},afterFinishInternal:function(_7b4){
new v.Scale(_7ac,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_7b1.h,originalWidth:_7b1.w},afterFinishInternal:function(_7b5){
s.hideElement(_7b5.element);
s.undoClipping(_7b5.element,_7b3);
s.setStyle(_7b5.element,_7b2);
}});
}},_7ad);
return new v.Scale(_7ac,5,_7ad);
};
MochiKit.Base.nameFunctions(MochiKit.Visual);
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
MochiKit.Base._module("DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_7b6){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_7b6);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_7bb){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_7bb)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_7bb);
}
},this.drops);
},findDeepestChild:function(_7bd){
var _7be=_7bd[0];
for(var i=1;i<_7bd.length;++i){
if(MochiKit.DOM.isChildNode(_7bd[i].element,_7be.element)){
_7be=_7bd[i];
}
}
return _7be;
},show:function(_7c0,_7c1){
if(!this.drops.length){
return;
}
var _7c2=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_7c0,_7c1)){
_7c2.push(drop);
}
});
if(_7c2.length>0){
var drop=this.findDeepestChild(_7c2);
MochiKit.Position.within(drop.element,_7c0.page.x,_7c0.page.y);
drop.options.onhover(_7c1,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_7c5,_7c6){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_7c5.mouse(),_7c6)){
this.last_active.options.ondrop(_7c6,this.last_active.element,_7c5);
}
},reset:function(_7c7){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_7c7);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_7c9,_7ca){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_7c9,_7ca);
}
this.__init__(_7c9,_7ca);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_7cc,_7cd){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_7cc);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_7cd);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_7d1){
if(this.options._containers.length){
var _7d2;
if(this.options.tree){
_7d2=_7d1.treeNode;
}else{
_7d2=_7d1.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _7d2==c;
});
}else{
return true;
}
},isAccepted:function(_7d4){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_7d4,c);
}));
},isAffected:function(_7d6,_7d7){
return ((this.element!=_7d7)&&this.isContained(_7d7)&&this.isAccepted(_7d7)&&MochiKit.Position.within(this.element,_7d6.page.x,_7d6.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_7d8){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_7d8);
},unregister:function(_7da){
this.drags=MochiKit.Base.filter(function(d){
return d!=_7da;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_7dd){
window.focus();
this.activeDraggable=_7dd;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_7de){
if(!this.activeDraggable){
return;
}
var _7df=_7de.mouse();
if(this._lastPointer&&(MochiKit.Base.repr(this._lastPointer.page)==MochiKit.Base.repr(_7df.page))){
return;
}
this._lastPointer=_7df;
this.activeDraggable.updateDrag(_7de,_7df);
},endDrag:function(_7e0){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_7e0);
this.activeDraggable=null;
},keyPress:function(_7e1){
if(this.activeDraggable){
this.activeDraggable.keyPress(_7e1);
}
},notify:function(_7e2,_7e3,_7e4){
MochiKit.Signal.signal(this,_7e2,_7e3,_7e4);
}};
MochiKit.DragAndDrop.Draggable=function(_7e5,_7e6){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_7e5,_7e6);
}
this.__init__(_7e5,_7e6);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_7e8,_7e9){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_7e9=b.update({handle:false,starteffect:function(_7ec){
this._savedOpacity=MochiKit.Style.getStyle(_7ec,"opacity")||1;
new v.Opacity(_7ec,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_7ed,_7ee,_7ef){
var dur=Math.sqrt(Math.abs(_7ee^2)+Math.abs(_7ef^2))*0.02;
return new v.Move(_7ed,{x:-_7ef,y:-_7ee,duration:dur});
},endeffect:function(_7f1){
new v.Opacity(_7f1,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_7e9);
var d=MochiKit.DOM;
this.element=d.getElement(_7e8);
if(_7e9.handle&&(typeof (_7e9.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_7e9.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_7e9.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_7e9.scroll&&!_7e9.scroll.scrollTo&&!_7e9.scroll.outerHTML){
_7e9.scroll=d.getElement(_7e9.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_7e9.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_7e9;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0"),parseInt(s(this.element,"top")||"0")];
},initDrag:function(_7f4){
if(!_7f4.mouse().button.left){
return;
}
var src=_7f4.target();
var _7f6=(src.tagName||"").toUpperCase();
if(_7f6==="INPUT"||_7f6==="SELECT"||_7f6==="OPTION"||_7f6==="BUTTON"||_7f6==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _7f7=_7f4.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_7f7.page.x-pos.x,_7f7.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_7f4.stop();
},startDrag:function(_7f9){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=MochiKit.Style.getStyle(this.element,"z-index");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _7fa=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_7fa.left;
this.originalScrollTop=_7fa.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_7f9);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_7fb,_7fc){
if(!this.dragging){
this.startDrag(_7fb);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_7fc,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_7fb);
this.draw(_7fc);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _800=[0,0];
if(_7fc.page.x>(q.x-this.options.scrollSensitivity)){
_800[0]=_7fc.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_7fc.page.x<(p.x+this.options.scrollSensitivity)){
_800[0]=_7fc.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_7fc.page.y>(q.y-this.options.scrollSensitivity)){
_800[1]=_7fc.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_7fc.page.y<(p.y+this.options.scrollSensitivity)){
_800[1]=_7fc.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_800);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_7fb.stop();
},finishDrag:function(_801,_802){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_802){
dr.Droppables.fire(_801,this.element);
}
dr.Draggables.notify("end",this,_801);
var _804=this.options.revert;
if(_804&&typeof (_804)=="function"){
_804=_804(this.element);
}
var d=this.currentDelta();
if(_804&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_806){
if(_806.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_806,false);
_806.stop();
},endDrag:function(_807){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_807,true);
_807.stop();
},draw:function(_808){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_808.page.x-pos.x-this.offset[0],_808.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _80f=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_80f.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_80f.top=p[1]+"px";
}
if(_80f.visibility=="hidden"){
_80f.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_810){
if(!_810[0]&&!_810[1]){
return;
}
this.scrollSpeed=[_810[0]*this.options.scrollSpeed,_810[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _811=new Date();
var _812=_811-this.lastScrolled;
this.lastScrolled=_811;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_812/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_812/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_812/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_812/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_812/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
MochiKit.Base._module("Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_81a){
while(_81a.tagName.toUpperCase()!="BODY"){
if(_81a.id&&MochiKit.Sortable.sortables[_81a.id]){
return _81a;
}
_81a=_81a.parentNode;
}
},_createElementId:function(_81b){
if(_81b.id==null||_81b.id==""){
var d=MochiKit.DOM;
var id;
var _81e=1;
while(d.getElement(id="sortable"+_81e)!=null){
_81e+=1;
}
d.setNodeAttribute(_81b,"id",id);
}
},options:function(_81f){
_81f=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_81f));
if(!_81f){
return;
}
return MochiKit.Sortable.sortables[_81f.id];
},destroy:function(_820){
var s=MochiKit.Sortable.options(_820);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_826,_827){
_826=MochiKit.DOM.getElement(_826);
var self=MochiKit.Sortable;
self._createElementId(_826);
_827=MochiKit.Base.update({element:_826,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_826],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_827);
self.destroy(_826);
var _829={revert:true,ghosting:_827.ghosting,scroll:_827.scroll,scrollSensitivity:_827.scrollSensitivity,scrollSpeed:_827.scrollSpeed,constraint:_827.constraint,handle:_827.handle};
if(_827.starteffect){
_829.starteffect=_827.starteffect;
}
if(_827.reverteffect){
_829.reverteffect=_827.reverteffect;
}else{
if(_827.ghosting){
_829.reverteffect=function(_82a){
_82a.style.top=0;
_82a.style.left=0;
};
}
}
if(_827.endeffect){
_829.endeffect=_827.endeffect;
}
if(_827.zindex){
_829.zindex=_827.zindex;
}
var _82b={overlap:_827.overlap,containment:_827.containment,hoverclass:_827.hoverclass,onhover:self.onHover,tree:_827.tree,accept:_827.accept};
var _82c={onhover:self.onEmptyHover,overlap:_827.overlap,containment:_827.containment,hoverclass:_827.hoverclass,accept:_827.accept};
MochiKit.DOM.removeEmptyTextNodes(_826);
_827.draggables=[];
_827.droppables=[];
if(_827.dropOnEmpty||_827.tree){
new MochiKit.DragAndDrop.Droppable(_826,_82c);
_827.droppables.push(_826);
}
MochiKit.Base.map(function(e){
var _82e=_827.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_827.handle,e):e;
_827.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_829,{handle:_82e})));
new MochiKit.DragAndDrop.Droppable(e,_82b);
if(_827.tree){
e.treeNode=_826;
}
_827.droppables.push(e);
},(self.findElements(_826,_827)||[]));
if(_827.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_82c);
e.treeNode=_826;
_827.droppables.push(e);
},(self.findTreeElements(_826,_827)||[]));
}
self.sortables[_826.id]=_827;
_827.lastValue=self.serialize(_826);
_827.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_826));
_827.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_826));
},onStart:function(_830,_831){
var self=MochiKit.Sortable;
var _833=self.options(_830);
_833.lastValue=self.serialize(_833.element);
},onEnd:function(_834,_835){
var self=MochiKit.Sortable;
self.unmark();
var _837=self.options(_834);
if(_837.lastValue!=self.serialize(_837.element)){
_837.onUpdate(_837.element);
}
},findElements:function(_838,_839){
return MochiKit.Sortable.findChildren(_838,_839.only,_839.tree,_839.tag);
},findTreeElements:function(_83a,_83b){
return MochiKit.Sortable.findChildren(_83a,_83b.only,_83b.tree?true:false,_83b.treeTag);
},findChildren:function(_83c,only,_83e,_83f){
if(!_83c.hasChildNodes()){
return null;
}
_83f=_83f.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _840=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_83f&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_840.push(e);
}
if(_83e){
var _843=MochiKit.Sortable.findChildren(e,only,_83e,_83f);
if(_843&&_843.length>0){
_840=_840.concat(_843);
}
}
},_83c.childNodes);
return _840;
},onHover:function(_844,_845,_846){
if(MochiKit.DOM.isChildNode(_845,_844)){
return;
}
var self=MochiKit.Sortable;
if(_846>0.33&&_846<0.66&&self.options(_845).tree){
return;
}else{
if(_846>0.5){
self.mark(_845,"before");
if(_845.previousSibling!=_844){
var _848=_844.parentNode;
_844.style.visibility="hidden";
_845.parentNode.insertBefore(_844,_845);
if(_845.parentNode!=_848){
self.options(_848).onChange(_844);
}
self.options(_845.parentNode).onChange(_844);
}
}else{
self.mark(_845,"after");
var _849=_845.nextSibling||null;
if(_849!=_844){
var _848=_844.parentNode;
_844.style.visibility="hidden";
_845.parentNode.insertBefore(_844,_849);
if(_845.parentNode!=_848){
self.options(_848).onChange(_844);
}
self.options(_845.parentNode).onChange(_844);
}
}
}
},_offsetSize:function(_84a,type){
if(type=="vertical"||type=="height"){
return _84a.offsetHeight;
}else{
return _84a.offsetWidth;
}
},onEmptyHover:function(_84c,_84d,_84e){
var _84f=_84c.parentNode;
var self=MochiKit.Sortable;
var _851=self.options(_84d);
if(!MochiKit.DOM.isChildNode(_84d,_84c)){
var _852;
var _853=self.findElements(_84d,{tag:_851.tag,only:_851.only});
var _854=null;
if(_853){
var _855=self._offsetSize(_84d,_851.overlap)*(1-_84e);
for(_852=0;_852<_853.length;_852+=1){
if(_855-self._offsetSize(_853[_852],_851.overlap)>=0){
_855-=self._offsetSize(_853[_852],_851.overlap);
}else{
if(_855-(self._offsetSize(_853[_852],_851.overlap)/2)>=0){
_854=_852+1<_853.length?_853[_852+1]:null;
break;
}else{
_854=_853[_852];
break;
}
}
}
}
_84d.insertBefore(_84c,_854);
self.options(_84f).onChange(_84c);
_851.onChange(_84c);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_857,_858){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _85b=self.options(_857.parentNode);
if(_85b&&!_85b.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _85c=MochiKit.Position.cumulativeOffset(_857);
self._marker.style.left=_85c.x+"px";
self._marker.style.top=_85c.y+"px";
if(_858=="after"){
if(_85b.overlap=="horizontal"){
self._marker.style.left=(_85c.x+_857.clientWidth)+"px";
}else{
self._marker.style.top=(_85c.y+_857.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_85d,_85e,_85f){
var self=MochiKit.Sortable;
var _861=self.findElements(_85d,_85e)||[];
for(var i=0;i<_861.length;++i){
var _863=_861[i].id.match(_85e.format);
if(!_863){
continue;
}
var _864={id:encodeURIComponent(_863?_863[1]:null),element:_85d,parent:_85f,children:[],position:_85f.children.length,container:self._findChildrenElement(_861[i],_85e.treeTag.toUpperCase())};
if(_864.container){
self._tree(_864.container,_85e,_864);
}
_85f.children.push(_864);
}
return _85f;
},_findChildrenElement:function(_865,_866){
if(_865&&_865.hasChildNodes){
_866=_866.toUpperCase();
for(var i=0;i<_865.childNodes.length;++i){
if(_865.childNodes[i].tagName.toUpperCase()==_866){
return _865.childNodes[i];
}
}
}
return null;
},tree:function(_868,_869){
_868=MochiKit.DOM.getElement(_868);
var _86a=MochiKit.Sortable.options(_868);
_869=MochiKit.Base.update({tag:_86a.tag,treeTag:_86a.treeTag,only:_86a.only,name:_868.id,format:_86a.format},_869||{});
var root={id:null,parent:null,children:new Array,container:_868,position:0};
return MochiKit.Sortable._tree(_868,_869,root);
},setSequence:function(_86c,_86d,_86e){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_86c=MochiKit.DOM.getElement(_86c);
_86e=b.update(self.options(_86c),_86e||{});
var _871={};
b.map(function(n){
var m=n.id.match(_86e.format);
if(m){
_871[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_86c,_86e));
b.map(function(_874){
var n=_871[_874];
if(n){
n[1].appendChild(n[0]);
delete _871[_874];
}
},_86d);
},_constructIndex:function(node){
var _877="";
do{
if(node.id){
_877="["+node.position+"]"+_877;
}
}while((node=node.parent)!=null);
return _877;
},sequence:function(_878,_879){
_878=MochiKit.DOM.getElement(_878);
var self=MochiKit.Sortable;
var _879=MochiKit.Base.update(self.options(_878),_879||{});
return MochiKit.Base.map(function(item){
return item.id.match(_879.format)?item.id.match(_879.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_878,_879)||[]));
},serialize:function(_87c,_87d){
_87c=MochiKit.DOM.getElement(_87c);
var self=MochiKit.Sortable;
_87d=MochiKit.Base.update(self.options(_87c),_87d||{});
var name=encodeURIComponent(_87d.name||_87c.id);
if(_87d.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_87c,_87d).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_87c,_87d)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
MochiKit.Base._module("Base-ext","1.5",["Base"]);
function _arg_placeholder(_882){
this.index=_882;
}
var _1=new _arg_placeholder(0);
var _2=new _arg_placeholder(1);
var _3=new _arg_placeholder(2);
var _4=new _arg_placeholder(3);
var _5=new _arg_placeholder(4);
var _6=new _arg_placeholder(5);
var _7=new _arg_placeholder(6);
var _8=new _arg_placeholder(7);
var _9=new _arg_placeholder(8);
var _10=new _arg_placeholder(9);
MochiKit.Base.lambda=function(func,_884){
var _885=[];
var _886=true;
for(var i=1;i<arguments.length;++i){
var a=arguments[i];
if(i==1&&a instanceof _context){
func=MochiKit.Base.bind(func,a.context);
}else{
if(a instanceof _arg_placeholder){
_885.push((function(idx){
return function(){
return arguments[idx];
};
})(a.index));
_886=false;
}else{
if(typeof a=="function"&&(a._is_bound||a.im_func)){
_885.push((function(bf){
return function(){
return bf.apply(this,arguments);
};
})(a));
_886=false;
}else{
_885.push((function(arg){
return function(){
return arg;
};
})(a));
}
}
}
}
var _88c=function(){
var args=[];
for(var i=0;i<_885.length;++i){
args.push(_885[i].apply(this,arguments));
}
if(_886){
for(var j=i;j<arguments.length;++j){
args.push(arguments[j]);
}
}
return func.apply(this,args);
};
_88c._is_bound=true;
return _88c;
};
function protect(_890){
return function(){
return _890.apply(this,arguments);
};
}
function apply(fn,_892){
var args=MochiKit.Base.extend([],arguments,1);
return arguments[0].apply(this,args);
}
function _context(_894){
this.context=_894;
}
function context(_895){
return new _context(_895);
}
MochiKit.Base._module("Iter-ext","1.5",["Base","Iter"]);
MochiKit.Iter.treePreOrder=function(_896,_897){
var _898=[_896];
return {repr:function(){
return "treePreOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_898.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_898.pop();
MochiKit.Iter.iextend(_898,_897(node));
return node;
}};
};
MochiKit.Iter.treeLevelOrder=function(_89a,_89b){
var _89c=[_89a];
return {repr:function(){
return "treeLevelOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_89c.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_89c.shift();
MochiKit.Iter.iextend(_89c,_89b(node));
return node;
}};
};
MochiKit.Iter.treePostOrder=function(_89e,_89f){
var _8a0=[[_89e,false]];
return {repr:function(){
return "treePostOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_8a0.length==0){
throw MochiKit.Iter.StopIteration;
}
var n=_8a0.pop();
if(n[1]){
return n[0];
}
n[1]=true;
_8a0.push(n);
MochiKit.Iter.iextend(_8a0,MochiKit.Iter.imap(function(node){
return [node,false];
},_89f(n[0])));
}
}};
};
MochiKit.Iter.pairView=function(_8a3,_8a4){
_8a4=_8a4||false;
var it=MochiKit.Iter.iter(_8a3);
try{
var _8a6=it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return {next:function(){
throw e;
}};
}
if(_8a4){
it=MochiKit.Iter.chain(it,[_8a6]);
}
return {repr:function(){
return "pairView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _8a7=it.next();
var pair=[_8a6,_8a7];
_8a6=_8a7;
return pair;
}};
};
MochiKit.Iter.filterMap=function(_8a9,_8aa){
return MochiKit.Iter.ifilter(function(item){
return typeof (item)!=="undefined"&&item!==null;
},MochiKit.Iter.imap(_8a9,_8aa));
};
MochiKit.Base._module("Text-ext","1.5",["Text"]);
MochiKit.Text.levenshteinDistance=function(s,t,_8ae){
_8ae=_8ae||false;
var n=s.length;
var m=t.length;
if(n==0){
return m;
}
if(m==0){
return n;
}
var d=new Array(n+1);
for(var r=0;r<n+1;++r){
d[r]=new Array(m+1);
}
for(var i=0;i<=n;++i){
d[i][0]=i;
}
for(var j=0;j<=m;++j){
d[0][j]=j;
}
for(var i=1;i<=n;++i){
for(var j=1;j<=m;++j){
var cost=(t[j-1]==s[i-1]?0:1);
var cell=Math.min(Math.min(d[i-1][j]+1,d[i][j-1]+1),d[i-1][j-1]+cost);
if(_8ae&&(i>2&&j>2)){
var _8b7=d[i-2][j-2]+1;
if(s[i-2]!=t[j-1]){
++_8b7;
}
if(s[i-1]!=t[j-2]){
++_8b7;
}
if(cell>_8b7){
cell=_8b7;
}
}
d[i][j]=cell;
}
}
return d[n][m];
};
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.5";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Text","Async","DOM","Selector","Style","LoggingPane","Color","Signal","Position","Visual","DragAndDrop","Sortable","Base-ext","Iter-ext","Text-ext"];
(function(){
if(typeof (document)=="undefined"){
return;
}
var _8b8=document.getElementsByTagName("script");
var _8b9="http://www.w3.org/1999/xhtml";
var _8ba="http://www.w3.org/2000/svg";
var _8bb="http://www.w3.org/1999/xlink";
var _8bc="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _8be=null;
var _8bf={};
var i;
var src;
for(i=0;i<_8b8.length;i++){
src=null;
switch(_8b8[i].namespaceURI){
case _8ba:
src=_8b8[i].getAttributeNS(_8bb,"href");
break;
default:
src=_8b8[i].getAttribute("src");
break;
}
if(!src){
continue;
}
_8bf[src]=true;
if(src.match(/MochiKit.js(\?.*)?$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_8be=_8b8[i];
}
}
if(base===null){
return;
}
var _8c2=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_8c2.length;i++){
if(MochiKit[_8c2[i]]){
continue;
}
var uri=base+_8c2[i]+".js";
if(uri in _8bf){
continue;
}
if(_8be.namespaceURI==_8ba||_8be.namespaceURI==_8bc){
var s=document.createElementNS(_8be.namespaceURI,"script");
s.setAttribute("id","MochiKit_"+base+_8c2[i]);
if(_8be.namespaceURI==_8ba){
s.setAttributeNS(_8bb,"href",uri);
}else{
s.setAttribute("src",uri);
}
s.setAttribute("type","application/x-javascript");
_8be.parentNode.appendChild(s);
}else{
document.write("<"+_8be.nodeName+" src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();


