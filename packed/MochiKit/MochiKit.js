/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base");
}
if(typeof MochiKit=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
MochiKit.NAME="MochiKit";
MochiKit.VERSION="1.5";
MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.Base=MochiKit.Base||{};
MochiKit.Base.module=function(_1,_2,_3,_4){
var _5=_1[_2]=_1[_2]||{};
var _6=(_1.NAME?_1.NAME+".":"");
_5.NAME=_6+_2;
_5.VERSION=_3;
_5.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_5.toString=function(){
return this.__repr__();
};
for(var i=0;_4!=null&&i<_4.length;i++){
if(!(_4[i] in _1)){
throw _5.NAME+" depends on "+_6+_4[i]+"!";
}
}
return _5;
};
MochiKit.Base.module(MochiKit,"Base","1.5",[]);
MochiKit.Base.update=function(_8,_9,_a){
if(_8===null||_8===undefined){
_8={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_8[k]=o[k];
}
}
}
return _8;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_e){
var _f=_e.split("-");
var cc=_f[0];
for(var i=1;i<_f.length;i++){
cc+=_f[i].charAt(0).toUpperCase()+_f[i].substring(1);
}
return cc;
},counter:function(n,_13){
if(arguments.length===0){
n=1;
}
if(arguments.length<2){
_13=1;
}
return function(){
var c=n;
n+=_13;
return c;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst,_1d){
var res=[];
var m=MochiKit.Base;
var _20=m.extend(null,arguments);
while(_20.length){
var o=_20.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_20.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_23,obj,_25){
if(!_25){
_25=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_23){
_23=[];
}
for(var i=_25;i<l;i++){
_23.push(obj[i]);
}
}
return _23;
},updatetree:function(_28,obj){
if(_28===null||_28===undefined){
_28={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_28[k])=="object"&&typeof (v)=="object"&&!MochiKit.Base.isDateLike(v)&&!(v instanceof Array)){
arguments.callee(_28[k],v);
}else{
_28[k]=v;
}
}
}
}
return _28;
},setdefault:function(_2e,obj,_30){
if(_2e===null||_2e===undefined){
_2e={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _2e)){
_2e[k]=o[k];
}
}
}
return _2e;
},keys:function(obj){
var _35=[];
for(var _36 in obj){
_35.push(_36);
}
return _35;
},values:function(obj){
var _38=[];
for(var _39 in obj){
_38.push(obj[_39]);
}
return _38;
},items:function(obj){
var _3b=[];
for(var _3c in obj){
var v;
try{
v=obj[_3c];
}
catch(e){
continue;
}
_3b.push([_3c,v]);
}
return _3b;
},_newNamedError:function(_3e,_3f,_40){
_40.prototype=new MochiKit.Base.NamedError(_3e.NAME+"."+_3f);
_40.prototype.constructor=_40;
_3e[_3f]=_40;
},operator:{NAME:"operator",truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},floordiv:function(a,b){
return Math.floor(a/b);
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},pow:function(a,b){
return Math.pow(a,b);
},divmod:function(a,b){
return [a/b,a%b];
},max:function(a,b){
return Math.max(a,b);
},min:function(a,b){
return Math.min(a,b);
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},getitem:function(a,b){
return a[b];
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
},concat:function(a,b){
return MochiKit.Base.concat(a,b);
},iconcat:function(a,b){
return a.concat(b);
},setitem:function(a,b,c){
return a[b]=c;
},delitem:function(a,b){
delete a[b];
}},forwardCall:function(_93){
return function(){
return this[_93].apply(this,arguments);
};
},itemgetter:function(_94){
return function(arg){
return arg[_94];
};
},bool:function(_96){
if(typeof (_96)==="boolean"||_96 instanceof Boolean){
return _96.valueOf();
}else{
if(typeof (_96)==="string"||_96 instanceof String){
return _96.length>0&&_96!="false"&&_96!="null"&&_96!="undefined"&&_96!="0";
}else{
if(typeof (_96)==="number"||_96 instanceof Number){
return !isNaN(_96)&&_96!=0;
}else{
if(_96!=null&&typeof (_96.length)==="number"){
return _96.length!==0;
}else{
return _96!=null;
}
}
}
}
},typeMatcher:function(){
var _97={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_97[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _97)){
return false;
}
}
return true;
};
},isNull:function(obj,_9c){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(obj,_9f){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj,_a3){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj,_a5){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(arr,_a9){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(_ad,_ae){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn,obj,_b3){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _b4=[];
for(var i=1;i<arguments.length;i++){
_b4.push(fn(arguments[i]));
}
return _b4;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _ba=m.isArrayLike;
if(arguments.length<=2){
if(!_ba(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _bb=[];
for(var i=0;i<lst.length;i++){
_bb.push(fn(lst[i]));
}
return _bb;
}else{
if(fn===null){
fn=Array;
}
var _bd=null;
for(var i=1;i<arguments.length;i++){
if(!_ba(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_bd===null||_bd>l){
_bd=l;
}
}
_bb=[];
for(var i=0;i<_bd;i++){
var _bf=[];
for(var j=1;j<arguments.length;j++){
_bf.push(arguments[j][i]);
}
_bb.push(fn.apply(this,_bf));
}
return _bb;
}
},xfilter:function(fn,obj,_c3){
var _c4=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_c4.push(o);
}
}
return _c4;
},filter:function(fn,lst,_c9){
var _ca=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_c9);
}else{
if(typeof (_c9)=="undefined"||_c9===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_ca.push(o);
}
}
}else{
for(var i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_c9,o)){
_ca.push(o);
}
}
}
}
return _ca;
},_wrapDumbFunction:function(_ce){
return function(){
switch(arguments.length){
case 0:
return _ce();
case 1:
return _ce(arguments[0]);
case 2:
return _ce(arguments[0],arguments[1]);
case 3:
return _ce(arguments[0],arguments[1],arguments[2]);
}
var _cf=[];
for(var i=0;i<arguments.length;i++){
_cf.push("arguments["+i+"]");
}
return eval("(func("+_cf.join(",")+"))");
};
},methodcaller:function(_d1,_d2){
var _d3=MochiKit.Base.extend(null,arguments,1);
if(typeof (_d1)=="function"){
return function(obj){
return _d1.apply(obj,_d3);
};
}else{
return function(obj){
return obj[_d1].apply(obj,_d3);
};
}
},method:function(_d6,_d7){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_d7,_d6],arguments,2));
},compose:function(f1,f2,_db){
var _dc=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_dc.push(fn);
}
return function(){
var _e0=arguments;
for(var i=_dc.length-1;i>=0;i--){
_e0=[_dc[i].apply(this,_e0)];
}
return _e0[0];
};
},bind:function(_e2,_e3,_e4){
if(typeof (_e2)=="string"){
_e2=_e3[_e2];
}
var _e5=_e2.im_func;
var _e6=_e2.im_preargs;
var _e7=_e2.im_self;
var m=MochiKit.Base;
if(typeof (_e2)=="function"&&typeof (_e2.apply)=="undefined"){
_e2=m._wrapDumbFunction(_e2);
}
if(typeof (_e5)!="function"){
_e5=_e2;
}
if(typeof (_e3)!="undefined"){
_e7=_e3;
}
if(typeof (_e6)=="undefined"){
_e6=[];
}else{
_e6=_e6.slice();
}
m.extend(_e6,arguments,2);
var _e9=function(){
var _ea=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_ea=m.concat(me.im_preargs,_ea);
}
var _ec=me.im_self;
if(!_ec){
_ec=this;
}
return me.im_func.apply(_ec,_ea);
};
_e9.im_self=_e7;
_e9.im_func=_e5;
_e9.im_preargs=_e6;
if(typeof (_e5.NAME)=="string"){
_e9.NAME="bind("+_e5.NAME+",...)";
}
return _e9;
},bindLate:function(_ed,_ee){
var m=MochiKit.Base;
var _f0=arguments;
if(typeof (_ed)==="string"){
_f0=m.extend([m.forwardCall(_ed)],arguments,1);
return m.bind.apply(this,_f0);
}
return m.bind.apply(this,_f0);
},bindMethods:function(_f1){
var _f2=MochiKit.Base.bind;
for(var k in _f1){
var _f4=_f1[k];
if(typeof (_f4)=="function"){
_f1[k]=_f2(_f4,_f1);
}
}
return _f1;
},registerComparator:function(_f5,_f6,_f7,_f8){
MochiKit.Base.comparatorRegistry.register(_f5,_f6,_f7,_f8);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _fb=(typeof (a)=="undefined"||a===null);
var _fc=(typeof (b)=="undefined"||b===null);
if(_fb&&_fc){
return 0;
}else{
if(_fb){
return -1;
}else{
if(_fc){
return 1;
}
}
}
var m=MochiKit.Base;
var _fe=m._primitives;
if(!(typeof (a) in _fe&&typeof (b) in _fe)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _ff=m.repr;
throw new TypeError(_ff(a)+" and "+_ff(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _104=MochiKit.Base.compare;
var _105=a.length;
var rval=0;
if(_105>b.length){
rval=1;
_105=b.length;
}else{
if(_105<b.length){
rval=-1;
}
}
for(var i=0;i<_105;i++){
var cmp=_104(a[i],b[i]);
if(cmp){
return cmp;
}
}
return rval;
},registerRepr:function(name,_10a,wrap,_10c){
MochiKit.Base.reprRegistry.register(name,_10a,wrap,_10c);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
try{
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
catch(ignore){
}
}
try{
var _10e=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_10e=_10e.replace(/^\s+/,"").replace(/\s+/g," ");
_10e=_10e.replace(/,(\S)/,", $1");
var idx=_10e.indexOf("{");
if(idx!=-1){
_10e=_10e.substr(0,idx)+"{...}";
}
}
return _10e;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(name,_115,wrap,_117){
MochiKit.Base.jsonRegistry.register(name,_115,wrap,_117);
},evalJSON:function(_118){
return eval("("+MochiKit.Base._filterJSON(_118)+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
return (m)?m[1]:s;
},serializeJSON:function(o){
var _11c=typeof (o);
if(_11c=="number"||_11c=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_11c=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _122;
if(typeof (o.toJSON)=="function"){
_122=o.toJSON();
if(o!==_122){
return me(_122);
}
}
if(typeof (o.__json__)=="function"){
_122=o.__json__();
if(o!==_122){
return me(_122);
}
}
if(typeof (o.json)=="function"){
_122=o.json();
if(o!==_122){
return me(_122);
}
}
if(_11c!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_122=m.jsonRegistry.match(o);
if(o!==_122){
return me(_122);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_11c=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_11c=="function"){
return null;
}
res=[];
for(var k in o){
if(o.hasOwnProperty(k)){
var _126;
if(typeof (k)=="number"){
_126="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_126=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_126+":"+val);
}
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(self,arr){
if(self.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(self,arr)===0);
},concat:function(lst,_12c){
var rval=[];
var _12e=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_12e(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _132=m.compare;
if(arguments.length==1){
return function(a,b){
return _132(a[key],b[key]);
};
}
var _135=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_135.length);i++){
var key=_135[i];
rval=_132(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _13c=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _13c(b,a);
};
},partial:function(func,_140){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_142,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _145=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_145(o,cur)==_142){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_149,_14a,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_14a)=="undefined"||_14a===null){
_14a=0;
}
for(var i=_14a;i<end;i++){
if(lst[i]===_149){
return i;
}
}
return -1;
},mean:function(val,_14e){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _152=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_152+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_152<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_152;
},median:function(val,_156){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(MochiKit.Base.compare);
if(data.length%2==0){
var _158=data.length/2;
return (data[_158]+data[_158-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_15a,_15b,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_15b)=="undefined"||_15b===null){
_15b=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_15b;i<end;i++){
if(cmp(lst[i],_15a)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_160){
var _161=[node];
var _162=MochiKit.Base.extend;
while(_161.length){
var res=_160(_161.shift());
if(res){
_162(_161,res);
}
}
},nameFunctions:function(_164){
var base=_164.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _164){
var o=_164[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_168,_169){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_168)=="string"||(typeof (_168.nodeType)!="undefined"&&_168.nodeType>0))){
var kv=MochiKit.DOM.formContents(_168);
_168=kv[0];
_169=kv[1];
}else{
if(arguments.length==1){
if(typeof (_168.length)=="number"&&_168.length==2){
return arguments.callee(_168[0],_168[1]);
}
var o=_168;
_168=[];
_169=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_168.push(k);
_169.push(v[i]);
}
}else{
_168.push(k);
_169.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_168.length,_169.length);
var _171=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_169[i];
if(typeof (v)!="undefined"&&v!==null){
if(MochiKit.Base.isDateLike(v)){
v=MochiKit.DateTime.toISOTimestamp(v,true);
}
rval.push(_171(_168[i])+"="+_171(v));
}
}
return rval.join("&");
},parseQueryString:function(_172,_173){
var qstr=(_172.charAt(0)=="?")?_172.substring(1):_172;
var _175=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _177;
if(typeof (decodeURIComponent)!="undefined"){
_177=decodeURIComponent;
}else{
_177=unescape;
}
if(_173){
for(var i=0;i<_175.length;i++){
var pair=_175[i].split("=");
var name=_177(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_177(pair.join("=")));
}
}else{
for(var i=0;i<_175.length;i++){
pair=_175[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_177(name)]=_177(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_17d,wrap,_17f){
if(_17f){
this.pairs.unshift([name,_17d,wrap]);
}else{
this.pairs.push([name,_17d,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.moduleExport=function(_185,_186){
var SKIP={toString:true,NAME:true,VERSION:true};
var mods=MochiKit.Base.extend([],arguments,1);
while((_186=mods.shift())!=null){
for(var k in _186){
var v=_186[k];
if(v!=null){
var _18b=(typeof (v.__export__)=="boolean");
var _18c=(k[0]!=="_"&&!SKIP[k]);
if(_18b?v.__export__:_18c){
if(typeof (v)=="object"&&v.NAME&&v.VERSION){
mods.push(v);
}else{
_185[k]=_186[k];
}
}
}
}
}
return _185;
};
MochiKit.Base._exportSymbols=function(_18d,_18e){
if(MochiKit.__export__!==false&&_18e.__export__!==false){
MochiKit.Base.moduleExport(_18d,_18e);
}
};
MochiKit.Base._deprecated=function(_18f,name,_191,_192,_193){
if(typeof (_18f)==="string"){
if(_18f.indexOf("MochiKit.")===0){
_18f=_18f.substring(9);
}
_18f=MochiKit[_18f];
}
var _194=_191.split(".")[1];
var _195=_191.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_18f.NAME+"."+name+" is deprecated since version "+_192+". Use "+_191+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_194]){
throw new Error(msg);
}
return MochiKit[_194][_195].apply(this,arguments);
};
func.__export__=(_193===true);
_18f[name]=func;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=function(){
};
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3");
m._deprecated(m,"find","MochiKit.Base.findValue","1.3");
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_19a){
return encodeURIComponent(_19a).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_19b){
return escape(_19b).replace(/\+/g,"%2B").replace(/\"/g,"%22").replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.NamedError.prototype.constructor=m.NamedError;
m.NamedError.prototype.repr=function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
};
m.NamedError.prototype.toString=m.forwardCall("repr");
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.isValue=m.typeMatcher("boolean","number","string");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
m.nameFunctions(this.operator);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
window.compare=MochiKit.Base.compare;
window.compose=MochiKit.Base.compose;
window.serializeJSON=MochiKit.Base.serializeJSON;
window.mean=MochiKit.Base.mean;
window.median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Iter","1.5",["Base"]);
MochiKit.Base.update(MochiKit.Iter,{registerIteratorFactory:function(name,_19e,_19f,_1a0){
MochiKit.Iter.iteratorRegistry.register(name,_19e,_19f,_1a0);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_1a2,_1a3){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_1a3;
},_1a2);
}
if(typeof (_1a2.next)=="function"){
return _1a2;
}else{
if(typeof (_1a2.iter)=="function"){
return _1a2.iter();
}else{
if(typeof (_1a2.__iterator__)=="function"){
return _1a2.__iterator__(false);
}
}
}
try{
return self.iteratorRegistry.match(_1a2);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_1a2)+": "+m.repr(_1a2)+" is not iterable");
}
throw e;
}
},count:function(n,step){
if(!n){
n=0;
}
if(arguments.length<2){
step=1;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n,step)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _1ae=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_1ae.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_1b4){
return _1b4.next();
},izip:function(p,_1b6){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _1ba=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_1ba);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _1c6=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_1c6=arguments[1];
stop=arguments[2];
}else{
_1c6=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_1c6,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
if(_1c6>=stop){
throw self.StopIteration;
}
var rval;
while(i<_1c6){
rval=seq.next();
i++;
}
_1c6+=step;
return rval;
}};
},imap:function(fun,p,_1cd){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _1d0=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_1d0));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,_1d8){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1db=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1db.length>1){
try{
return _1db[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1db.shift();
}
}
if(_1db.length==1){
var arg=_1db.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1e6,sync,_1e8){
sync.pos[_1e6]=-1;
var m=MochiKit.Base;
var _1ea=m.listMin;
return {repr:function(){
return "tee("+_1e6+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1e6];
if(i==sync.max){
rval=_1e8.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1e6]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1e6]+=1;
if(i==sync.min&&_1ea(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1ed,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1ed=self.iter(_1ed);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1ed));
}
return rval;
},list:function(_1f4){
var rval;
if(_1f4 instanceof Array){
return _1f4.slice();
}
if(typeof (_1f4)=="function"&&!(_1f4 instanceof Function)&&typeof (_1f4.length)=="number"){
rval=[];
for(var i=0;i<_1f4.length;i++){
rval.push(_1f4[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1f4=self.iter(_1f4);
rval=[];
var _1f8;
try{
while(true){
_1f8=_1f4.next();
rval.push(_1f8);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1fa,_1fb){
var x=_1fb;
var self=MochiKit.Iter;
_1fa=self.iter(_1fa);
if(arguments.length<3){
try{
x=_1fa.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
}
try{
while(true){
x=fn(x,_1fa.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1fe=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1fe=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1fe=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1fe>=stop)||(step<0&&_1fe<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1fe;
_1fe+=step;
return rval;
},repr:function(){
return "range("+[_1fe,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_202,_203){
if(typeof (_203)=="undefined"||_203===null){
_203=0;
}
var x=_203;
var self=MochiKit.Iter;
_202=self.iter(_202);
try{
while(true){
x+=_202.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_206){
var self=MochiKit.Iter;
_206=self.iter(_206);
try{
while(true){
_206.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_208,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_208)&&!self.isIterable(_208)){
try{
for(var i=0;i<_208.length;i++){
func(_208[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_208));
}
return func;
},every:function(_20e,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_20e).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_211,cmp){
var rval=MochiKit.Iter.list(_211);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_214){
var rval=MochiKit.Iter.list(_214);
rval.reverse();
return rval;
},some:function(_216,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_216).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_21a,skip){
skip=skip||0;
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_21a)&&!self.isIterable(_21a)){
for(var i=skip;i<_21a.length;i++){
lst.push(_21a[i]);
}
}else{
_21a=self.iter(_21a);
try{
while(skip-->0){
_21a.next();
}
while(true){
lst.push(_21a.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_21f,_220){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_220=m.operator.identity;
}
_21f=self.iter(_21f);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_21f.next();
k=_220(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _227=true;
var _228=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_228(k,pk)===0){
fetch();
if(_227){
_227=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_228(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_229,_22a){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_22a=m.operator.identity;
}
_229=self.iter(_229);
var _22d=[];
var _22e=true;
var _22f;
var _230=m.compare;
while(true){
try{
var _231=_229.next();
var key=_22a(_231);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_22e||_230(key,_22f)!==0){
var _233=[];
_22d.push([key,_233]);
}
_233.push(_231);
_22e=false;
_22f=key;
}
return _22d;
},arrayLikeIter:function(_234){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_234.length){
throw MochiKit.Iter.StopIteration;
}
return _234[i++];
}};
},hasIterateNext:function(_236){
return (_236&&typeof (_236.iterateNext)=="function");
},iterateNextIter:function(_237){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_237.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
MochiKit.Iter.StopIteration=StopIteration;
}else{
MochiKit.Iter.StopIteration=new m.NamedError("StopIteration");
}
MochiKit.Iter.iteratorRegistry=new m.AdapterRegistry();
MochiKit.Iter.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
MochiKit.Iter.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
window.reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Logging");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_23b,info){
this.num=num;
this.level=_23b;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_23e){
var self=MochiKit.Logging;
if(typeof (_23e)=="string"){
_23e=self.LogLevel[_23e];
}
return function(msg){
var _241=msg.level;
if(typeof (_241)=="string"){
_241=self.LogLevel[_241];
}
return _241>=_23e;
};
},isLogMessage:function(_242){
var _243=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _243)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_248){
this.counter=0;
if(typeof (_248)=="undefined"||_248===null){
_248=-1;
}
this.maxSize=_248;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(_249,msg){
msg=_249+": "+msg;
if(typeof (window)!="undefined"&&window.console&&window.console.log){
var _24b=null;
switch(_249){
case "INFO":
_24b=typeof window.console.info=="function"?"info":null;
break;
case "DEBUG":
_24b=typeof window.console.debug=="function"?"debug":null;
break;
case "WARNING":
_24b=typeof window.console.warn=="function"?"warn":null;
break;
case "ERROR":
_24b=typeof window.console.error=="function"?"error":null;
break;
case "FATAL":
_24b=typeof window.console.error=="function"?"error":null;
break;
}
_24b=_24b||"log";
window.console[_24b](msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_24f,_250,_251){
if(typeof (_250)=="string"){
_250=MochiKit.Logging.logLevelAtLeast(_250);
}
var _252=[_250,_251];
_252.ident=_24f;
this.listeners[_24f]=_252;
},removeListener:function(_253){
delete this.listeners[_253];
},baseLog:function(_254,_255,_256){
if(typeof (_254)=="number"){
if(_254>=MochiKit.Logging.LogLevel.FATAL){
_254="FATAL";
}else{
if(_254>=MochiKit.Logging.LogLevel.ERROR){
_254="ERROR";
}else{
if(_254>=MochiKit.Logging.LogLevel.WARNING){
_254="WARNING";
}else{
if(_254>=MochiKit.Logging.LogLevel.INFO){
_254="INFO";
}else{
_254="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_254,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level,msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_258){
var _259=0;
if(!(typeof (_258)=="undefined"||_258===null)){
_259=Math.max(0,this._messages.length-_258);
}
return this._messages.slice(_259);
},getMessageText:function(_25a){
if(typeof (_25a)=="undefined"||_25a===null){
_25a=30;
}
var _25b=this.getMessages(_25a);
if(_25b.length){
var lst=MochiKit.Base.map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_25b);
lst.unshift("LAST "+_25b.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_25e){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_25e||false);
}
}};
MochiKit.Logging.__new__=function(){
MochiKit.Logging.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _260=m.partial;
var _261=this.Logger;
var _262=_261.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_260(_262,"DEBUG"),log:_260(_262,"INFO"),error:_260(_262,"ERROR"),fatal:_260(_262,"FATAL"),warning:_260(_262,"WARNING")});
var self=this;
var _264=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
MochiKit.Logging.log=_264("log");
MochiKit.Logging.logError=_264("error");
MochiKit.Logging.logDebug=_264("debug");
MochiKit.Logging.logFatal=_264("fatal");
MochiKit.Logging.logWarning=_264("warning");
this.logger=new _261();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DateTime");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var y=parseInt(iso[0],10),m=parseInt(iso[1],10)-1,d=parseInt(iso[2],10);
var date=new Date(y,m,d);
date.setFullYear(y);
date.setMonth(m);
date.setDate(d);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_26f,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_26f=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_26f,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_26f,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_26f,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_277){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _278=MochiKit.DateTime._padTwo;
if(_277){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
var lst=[(_277?_278(date.getHours()):""+date.getHours()),_278(date.getMinutes()),_278(date.getSeconds())];
return lst.join(":")+(_277?"Z":"");
};
MochiKit.DateTime.toISOTimestamp=function(date,_27b){
if(typeof (date)=="undefined"||date===null){
return null;
}
var time=MochiKit.DateTime.toISOTime(date,_27b);
var sep=_27b?"T":" ";
if(_27b){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+time;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _27f=MochiKit.DateTime._padTwo;
var _280=MochiKit.DateTime._padFour;
return [_280(date.getFullYear()),_27f(date.getMonth()+1),_27f(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?""+n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return ""+n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _286=MochiKit.DateTime._padTwo;
return [_286(d.getMonth()+1),_286(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Format");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_288,_289,_28a,_28b,_28c,_28d,_28e,_28f,_290){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _288;
}
var _292=_289;
var _293=_28a;
if(num<0){
num=-num;
}else{
_292=_292.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_28b);
if(_28c){
num=num*100;
_293=fmt.percent+_293;
}
num=MochiKit.Format.roundToFixed(num,_28d);
var _296=num.split(/\./);
var _297=_296[0];
var frac=(_296.length==1)?"":_296[1];
var res="";
while(_297.length<_28e){
_297="0"+_297;
}
if(_28f){
while(_297.length>_28f){
var i=_297.length-_28f;
res=fmt.separator+_297.substring(i,_297.length)+res;
_297=_297.substring(0,i);
}
}
res=_297+res;
if(_28d>0){
while(frac.length<_290){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _292+res+_293;
};
};
MochiKit.Format.numberFormatter=function(_29b,_29c,_29d){
if(typeof (_29c)=="undefined"){
_29c="";
}
var _29e=_29b.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_29e){
throw TypeError("Invalid pattern");
}
var _29f=_29b.substr(0,_29e.index);
var _2a0=_29b.substr(_29e.index+_29e[0].length);
if(_29f.search(/-/)==-1){
_29f=_29f+"-";
}
var _2a1=_29e[1];
var frac=(typeof (_29e[2])=="string"&&_29e[2]!="")?_29e[2]:"";
var _2a3=(typeof (_29e[3])=="string"&&_29e[3]!="");
var tmp=_2a1.split(/,/);
var _2a5;
if(typeof (_29d)=="undefined"){
_29d="default";
}
if(tmp.length==1){
_2a5=null;
}else{
_2a5=tmp[1].length;
}
var _2a6=_2a1.length-_2a1.replace(/0/g,"").length;
var _2a7=frac.length-frac.replace(/0/g,"").length;
var _2a8=frac.length;
var rval=MochiKit.Format._numberFormatter(_29c,_29f,_2a0,_29d,_2a3,_2a8,_2a6,_2a5,_2a7);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",m.map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_2ad){
if(typeof (_2ad)=="undefined"||_2ad===null){
_2ad="default";
}
if(typeof (_2ad)=="string"){
var rval=MochiKit.Format.LOCALE[_2ad];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_2ad]=rval;
}
return rval;
}else{
return _2ad;
}
};
MochiKit.Format.twoDigitAverage=function(_2af,_2b0){
if(_2b0){
var res=_2af/_2b0;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_2b2){
var res=MochiKit.Format.roundToFixed(_2b2,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_2b5){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2b5){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_2b5+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_2b7){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2b7){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_2b7+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_2b9){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_2b9),_2b9);
};
MochiKit.Format.truncToFixed=function(_2bb,_2bc){
var _2bd=MochiKit.Format._numberToFixed(_2bb,_2bc);
var _2be=_2bd.indexOf(".");
if(_2be>0&&_2be+_2bc+1<_2bd.length){
_2bd=_2bd.substring(0,_2be+_2bc+1);
_2bd=MochiKit.Format._shiftNumber(_2bd,0);
}
return _2bd;
};
MochiKit.Format.roundToFixed=function(_2bf,_2c0){
var _2c1=MochiKit.Format._numberToFixed(_2bf,_2c0);
var _2c2=_2c1.indexOf(".");
if(_2c2>0&&_2c2+_2c0+1<_2c1.length){
var str=MochiKit.Format._shiftNumber(_2c1,_2c0);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_2c1=MochiKit.Format._shiftNumber(str,-_2c0);
}
return _2c1;
};
MochiKit.Format._numberToFixed=function(_2c4,_2c5){
var str=_2c4.toString();
var _2c7=str.split(/[eE]/);
var exp=(_2c7.length===1)?0:parseInt(_2c7[1],10)||0;
var _2c9=MochiKit.Format._shiftNumber(_2c7[0],exp);
_2c7=_2c9.split(/\./);
var _2ca=_2c7[0];
var frac=(_2c7.length===1)?"":_2c7[1];
while(frac.length<_2c5){
frac+="0";
}
if(frac.length>0){
return _2ca+"."+frac;
}else{
return _2ca;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_2cf){
return MochiKit.Format.twoDigitFloat(100*_2cf)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text");
goog.require("MochiKit.Base");
goog.require("MochiKit.Format");
}
MochiKit.Base.module(MochiKit,"Text","1.5",["Base","Format"]);
MochiKit.Text.startsWith=function(_2d4,str){
return str!=null&&_2d4!=null&&str.indexOf(_2d4)==0;
};
MochiKit.Text.endsWith=function(_2d6,str){
return str!=null&&_2d6!=null&&str.lastIndexOf(_2d6)==Math.max(str.length-_2d6.length,0);
};
MochiKit.Text.contains=function(_2d8,str){
return str!=null&&_2d8!=null&&str.indexOf(_2d8)>=0;
};
MochiKit.Text.padLeft=function(str,_2db,_2dc){
str=str||"";
_2dc=_2dc||" ";
while(str.length<_2db){
str=_2dc+str;
}
return str;
};
MochiKit.Text.padRight=function(str,_2de,_2df){
str=str||"";
_2df=_2df||" ";
while(str.length<_2de){
str+=_2df;
}
return str;
};
MochiKit.Text.truncate=function(str,_2e1,tail){
if(str==null||str.length<=_2e1||_2e1<0){
return str;
}else{
if(tail!=null){
str=str.slice(0,Math.max(0,_2e1-tail.length));
if(typeof (str)=="string"){
return str+tail;
}else{
return MochiKit.Base.extend(str,tail);
}
}else{
return str.slice(0,_2e1);
}
}
};
MochiKit.Text.split=function(str,_2e4,max){
if(str==null){
return str;
}
_2e4=_2e4||"\n";
var bits=str.split(_2e4);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(max,bits.length,bits.slice(max,bits.length).join(_2e4));
return bits;
};
MochiKit.Text.rsplit=function(str,_2e8,max){
if(str==null){
return str;
}
_2e8=_2e8||"\n";
var bits=str.split(_2e8);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(0,bits.length-max,bits.slice(0,bits.length-max).join(_2e8));
return bits;
};
MochiKit.Text.formatter=function(_2eb,_2ec){
if(_2ec==null){
_2ec=MochiKit.Format.formatLocale();
}else{
if(typeof (_2ec)=="string"){
_2ec=MochiKit.Format.formatLocale(_2ec);
}
}
var _2ed=MochiKit.Text._parsePattern(_2eb);
return function(){
var _2ee=MochiKit.Base.extend([],arguments);
var res=[];
for(var i=0;i<_2ed.length;i++){
if(typeof (_2ed[i])=="string"){
res.push(_2ed[i]);
}else{
res.push(MochiKit.Text.formatValue(_2ed[i],_2ee,_2ec));
}
}
return res.join("");
};
};
MochiKit.Text.format=function(_2f1,_2f2){
var func=MochiKit.Text.formatter(_2f1);
return func.apply(this,MochiKit.Base.extend([],arguments,1));
};
MochiKit.Text.formatValue=function(spec,_2f5,_2f6){
var self=MochiKit.Text;
if(typeof (spec)==="string"){
spec=self._parseFormatFlags(spec,0,spec.length);
}
for(var i=0;spec.path!=null&&i<spec.path.length;i++){
if(_2f5!=null){
_2f5=_2f5[spec.path[i]];
}
}
if(_2f6==null){
_2f6=MochiKit.Format.formatLocale();
}else{
if(typeof (_2f6)=="string"){
_2f6=MochiKit.Format.formatLocale(_2f6);
}
}
var str="";
if(spec.type=="number"){
if(_2f5 instanceof Number){
_2f5=_2f5.valueOf();
}
if(typeof (_2f5)!="number"||isNaN(_2f5)){
str="";
}else{
if(_2f5===Number.POSITIVE_INFINITY){
str="\u221e";
}else{
if(_2f5===Number.NEGATIVE_INFINITY){
str="-\u221e";
}else{
var sign=(_2f5<0)?"-":spec.sign;
_2f5=Math.abs(_2f5);
if(spec.format==="%"){
str=self._truncToPercent(_2f5,spec.precision);
}else{
if(spec.format==="d"){
str=MochiKit.Format.roundToFixed(_2f5,0);
}else{
if(spec.radix!=10){
str=Math.floor(_2f5).toString(spec.radix);
if(spec.format==="x"){
str=str.toLowerCase();
}else{
if(spec.format==="X"){
str=str.toUpperCase();
}
}
}else{
if(spec.precision>=0){
str=MochiKit.Format.roundToFixed(_2f5,spec.precision);
}else{
str=_2f5.toString();
}
}
}
}
if(spec.padding==="0"&&spec.format==="%"){
str=self.padLeft(str,spec.width-sign.length-1,"0");
}else{
if(spec.padding=="0"){
str=self.padLeft(str,spec.width-sign.length,"0");
}
}
str=self._localizeNumber(str,_2f6,spec.group);
str=sign+str;
}
}
}
if(str!==""&&spec.format==="%"){
str=str+_2f6.percent;
}
}else{
if(spec.format=="r"){
str=MochiKit.Base.repr(_2f5);
}else{
str=(_2f5==null)?"":_2f5.toString();
}
str=self.truncate(str,spec.precision);
}
if(spec.align=="<"){
str=self.padRight(str,spec.width);
}else{
str=self.padLeft(str,spec.width);
}
return str;
};
MochiKit.Text._localizeNumber=function(num,_2fc,_2fd){
var _2fe=num.split(/\./);
var _2ff=_2fe[0];
var frac=(_2fe.length==1)?"":_2fe[1];
var res=(frac.length>0)?_2fc.decimal:"";
while(_2fd&&frac.length>3){
res=res+frac.substring(0,3)+_2fc.separator;
frac=frac.substring(3);
if(_2ff.charAt(0)=="0"){
_2ff=_2ff.substring(1);
}
}
if(frac.length>0){
res=res+frac;
}
while(_2fd&&_2ff.length>3){
var pos=_2ff.length-3;
res=_2fc.separator+_2ff.substring(pos)+res;
_2ff=_2ff.substring((_2ff.charAt(0)=="0")?1:0,pos);
}
return _2ff+res;
};
MochiKit.Text._parsePattern=function(_303){
var self=MochiKit.Text;
var _305=[];
var re=/{[^{}]*}|{{?|}}?/g;
var _307=re.lastIndex=0;
var m;
while((m=re.exec(_303))!=null){
if(_307<m.index){
_305.push(_303.substring(_307,m.index));
}
var str=m[0];
_307=m.index+str.length;
if(self.startsWith("{",str)&&self.endsWith("}",str)){
_305.push(self._parseFormat(_303,m.index+1,_307-1));
}else{
if(self.startsWith("{{",str)||self.startsWith("}}",str)){
_305.push(str.substring(1));
}else{
if(self.startsWith("{",str)){
var msg="unescaped { char, should be escaped as {{";
throw new self.FormatPatternError(_303,m.index,msg);
}else{
if(self.startsWith("}",str)){
var msg="unescaped } char, should be escaped as }}";
throw new self.FormatPatternError(_303,m.index,msg);
}
}
}
}
}
if(_307<_303.length){
_305.push(_303.substring(_307));
}
return _305;
};
MochiKit.Text._parseFormat=function(_30b,_30c,_30d){
var self=MochiKit.Text;
var text=_30b.substring(_30c,_30d);
var _310=self.split(text,":",1);
var path=_310[0];
var _312=_30c+path.length+((_310.length==1)?0:1);
var info=self._parseFormatFlags(_30b,_312,_30d);
info.path=(path=="")?[]:path.split(".");
for(var i=0;i<info.path.length;i++){
var v=info.path[i];
v=v.replace(/^\s+/,"").replace(/\s+$/,"");
if(v==""&&info.path.length==1){
v=0;
}else{
if(v==""){
var msg="format value path contains blanks";
throw new self.FormatPatternError(_30b,_30c,msg);
}else{
if(/^\d+$/.test(v)){
v=parseInt(v,10);
}
}
}
info.path[i]=v;
}
if(info.path.length<=0||typeof (info.path[0])!="number"){
info.path.unshift(0);
}
return info;
};
MochiKit.Text._parseFormatFlags=function(_317,_318,_319){
var _31a=MochiKit.Base.update;
var info={type:"string",format:"s",width:0,precision:-1,align:">",sign:"",padding:" ",group:false};
var text=_317.substring(_318,_319).replace(/\s+$/,"");
var m=/^([<>+ 0,-]+)?(\d+)?(\.\d*)?([srbdoxXf%])?(.*)$/.exec(text);
var _31e=m[1];
var _31f=m[2];
var _320=m[3];
var type=m[4];
var _322=m[5];
for(var i=0;_31e&&i<_31e.length;i++){
var chr=_31e.charAt(i);
if(chr=="<"||chr==">"){
info.align=chr;
}else{
if(chr=="+"||chr=="-"||chr==" "){
info.sign=(chr=="-")?"":chr;
}else{
if(chr=="0"){
info.padding=chr;
}else{
if(chr==","){
info.group=true;
}
}
}
}
}
if(_31f){
info.width=parseInt(_31f,10);
}
if(_320&&_320.length>1){
info.precision=parseInt(_320.substring(1),10);
}
if(type=="s"||type=="r"){
info.format=type;
}else{
if(type=="b"){
_31a(info,{type:"number",format:type,radix:2});
}else{
if(type=="o"){
_31a(info,{type:"number",format:type,radix:8});
}else{
if(type=="x"||type=="X"){
_31a(info,{type:"number",format:type,radix:16});
}else{
if(type=="d"||type=="f"||type=="%"){
_31a(info,{type:"number",format:type,radix:10});
}
}
}
}
}
if(_322){
var msg="unsupported format flag: "+_322.charAt(0);
throw new MochiKit.Text.FormatPatternError(_317,_318,msg);
}
return info;
};
MochiKit.Text._truncToPercent=function(_326,_327){
var str;
if(_327>=0){
str=MochiKit.Format.roundToFixed(_326,_327+2);
}else{
str=(_326==null)?"0":_326.toString();
}
var arr=MochiKit.Text.split(str,".",2);
var frac=MochiKit.Text.padRight(arr[1],2,"0");
var _32b=arr[0]+frac.substring(0,2);
frac=frac.substring(2);
while(/^0[0-9]/.test(_32b)){
_32b=_32b.substring(1);
}
return (frac.length<=0)?_32b:_32b+"."+frac;
};
MochiKit.Text.FormatPatternError=function(_32c,pos,_32e){
this.pattern=_32c;
this.pos=pos;
this.message=_32e;
};
MochiKit.Text.FormatPatternError.prototype=new MochiKit.Base.NamedError("MochiKit.Text.FormatPatternError");
MochiKit.Text.FormatPatternError.constructor=MochiKit.Text.FormatPatternError;
if(MochiKit.__export__){
window.formatter=MochiKit.Text.formatter;
window.format=MochiKit.Text.format;
window.formatValue=MochiKit.Text.formatValue;
}
MochiKit.Base.nameFunctions(MochiKit.Text);
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Async");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_32f){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_32f;
this.silentlyCancelled=false;
this.chained=false;
this.finalized=false;
};
MochiKit.Async.Deferred.prototype.repr=function(){
return "Deferred("+this.id+", "+this.state()+")";
};
MochiKit.Async.Deferred.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.Deferred.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.Deferred.prototype.state=function(){
if(this.fired==-1){
return "unfired";
}else{
if(this.fired===0){
return "success";
}else{
return "error";
}
}
};
MochiKit.Async.Deferred.prototype.cancel=function(e){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(typeof (e)==="string"){
e=new self.GenericError(e);
}else{
if(!(e instanceof Error)){
e=new self.CancelledError(this);
}
}
this.errback(e);
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel(e);
}
}
};
MochiKit.Async.Deferred.prototype._resback=function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
if(this.paused===0){
this._fire();
}
};
MochiKit.Async.Deferred.prototype._check=function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
}
};
MochiKit.Async.Deferred.prototype.callback=function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.errback=function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.addBoth=function(fn,_337){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
};
MochiKit.Async.Deferred.prototype.addCallback=function(fn,_339){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
};
MochiKit.Async.Deferred.prototype.addErrback=function(fn,_33b){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
};
MochiKit.Async.Deferred.prototype.addCallbacks=function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype.setFinalizer=function(fn){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
this._finalizer=fn;
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype._fire=function(){
var _33f=this.chain;
var _340=this.fired;
var res=this.results[_340];
var self=this;
var cb=null;
while(_33f.length>0&&this.paused===0){
var pair=_33f.shift();
var f=pair[_340];
if(f===null){
continue;
}
try{
var ret=f(res);
if(ret!==undefined){
res=ret;
}
_340=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self.paused--;
self._resback(res);
};
this.paused++;
}
}
catch(err){
_340=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_340;
this.results[_340]=res;
if(this.chain.length==0&&this.paused===0&&this._finalizer){
this.finalized=true;
this._finalizer(res);
}
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
};
MochiKit.Async.evalJSONRequest=function(req){
return MochiKit.Base.evalJSON(req.responseText);
};
MochiKit.Async.succeed=function(_349){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
};
MochiKit.Async.fail=function(_34b){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
};
MochiKit.Async.getXMLHttpRequest=function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _34e=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_34e.length;i++){
var func=_34e[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
};
MochiKit.Async._xhr_onreadystatechange=function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e2){
}
}
var _353=null;
try{
_353=this.status;
if(!_353&&(this.response||m.isNotEmpty(this.responseText))){
_353=304;
}
}
catch(e){
}
if(_353==200||_353==201||_353==204||_353==304||_353==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
};
MochiKit.Async._xhr_canceller=function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e2){
}
}
req.abort();
};
MochiKit.Async.sendXMLHttpRequest=function(req,_357){
if(typeof (_357)=="undefined"||_357===null){
_357="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_357);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
};
MochiKit.Async.doXHR=function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:"",async:true},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,opts.async,opts.username,opts.password);
}else{
req.open(opts.method,url,opts.async);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _361=opts.headers;
if(!m.isArrayLike(_361)){
_361=m.items(_361);
}
for(var i=0;i<_361.length;i++){
var _363=_361[i];
var name=_363[0];
var _365=_363[1];
req.setRequestHeader(name,_365);
}
}
if("responseType" in opts&&"responseType" in req){
req.responseType=opts.responseType;
}
if(opts.withCredentials){
req.withCredentials="true";
}
return self.sendXMLHttpRequest(req,opts.sendContent);
};
MochiKit.Async._buildURL=function(url,_367){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
};
MochiKit.Async.doSimpleXMLHttpRequest=function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
};
MochiKit.Async.loadJSONDoc=function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
};
MochiKit.Async.loadScript=function(url){
var d=new MochiKit.Async.Deferred();
var _371=document.createElement("script");
_371.type="text/javascript";
_371.onload=function(){
_371.onload=null;
_371.onerror=null;
_371.onreadystatechange=null;
_371=null;
d.callback();
};
_371.onerror=function(msg){
_371.onload=null;
_371.onerror=null;
_371.onreadystatechange=null;
_371=null;
msg="Failed to load script at "+url+": "+msg;
d.errback(new URIError(msg,url));
};
_371.onreadystatechange=function(){
if(_371.readyState=="loaded"||_371.readyState=="complete"){
_371.onload();
}else{
MochiKit.Async.callLater(10,_371.onerror,"Script loading timed out");
}
};
document.getElementsByTagName("head")[0].appendChild(_371);
_371.src=url;
return d;
};
MochiKit.Async.wait=function(_373,_374){
var d=new MochiKit.Async.Deferred();
var cb=MochiKit.Base.bind("callback",d,_374);
var _377=setTimeout(cb,Math.floor(_373*1000));
d.canceller=function(){
try{
clearTimeout(_377);
}
catch(e){
}
};
return d;
};
MochiKit.Async.callLater=function(_378,func,_37a){
var m=MochiKit.Base;
var _37c=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_378).addCallback(function(res){
return _37c();
});
};
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype.__class__=MochiKit.Async.DeferredLock;
MochiKit.Async.DeferredLock.prototype.acquire=function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
};
MochiKit.Async.DeferredLock.prototype.release=function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
};
MochiKit.Async.DeferredLock.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.DeferredLock.prototype.repr=function(){
var _37f;
if(this.locked){
_37f="locked, "+this.waiting.length+" waiting";
}else{
_37f="unlocked";
}
return "DeferredLock("+this.id+", "+_37f+")";
};
MochiKit.Async.DeferredLock.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.DeferredList=function(list,_381,_382,_383,_384){
MochiKit.Async.Deferred.apply(this,[_384]);
this.list=list;
var _385=[];
this.resultList=_385;
this.finishedCount=0;
this.fireOnOneCallback=_381;
this.fireOnOneErrback=_382;
this.consumeErrors=_383;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_385.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_381){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype.constructor=MochiKit.Async.DeferredList;
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_389,_38a,_38b){
this.resultList[_389]=[_38a,_38b];
this.finishedCount+=1;
if(this.fired==-1){
if(_38a&&this.fireOnOneCallback){
this.callback([_389,_38b]);
}else{
if(!_38a&&this.fireOnOneErrback){
this.errback(_38b);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_38a&&this.consumeErrors){
_38b=null;
}
return _38b;
};
MochiKit.Async.gatherResults=function(_38c,_38d){
var _38e=MochiKit.Base.flattenArguments(arguments);
var d=new MochiKit.Async.DeferredList(_38e,false,true,false);
d.addCallback(function(_390){
var ret=[];
for(var i=0;i<_390.length;i++){
ret.push(_390[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _395;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_395=r;
}else{
if(r instanceof Error){
_395=self.fail(r);
}else{
_395=self.succeed(r);
}
}
}
catch(e){
_395=self.fail(e);
}
return _395;
};
MochiKit.Async.when=function(_397){
if(typeof _397!="undefined"&&typeof _397.addCallback=="function"){
return _397;
}
return MochiKit.Async.succeed(_397);
};
MochiKit.Async.timeout=function(d,ms){
var dt=new MochiKit.Async.Deferred();
var h=setTimeout(function(){
dt.cancel();
},ms);
d.addBoth(function(){
clearTimeout(h);
}).addCallbacks(MochiKit.Base.bind(dt.callback,dt),MochiKit.Base.bind(dt.errback,dt));
return dt;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_39e){
this.deferred=_39e;
});
ne("CancelledError",function(_39f){
this.deferred=_39f;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DOM");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _3a7=self._document;
var _3a8=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_3a8;
self._document=_3a7;
throw e;
}
self._window=_3a8;
self._document=_3a7;
return rval;
},formContents:function(elem){
var _3ab=[];
var _3ac=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _3b1=elem.tagName.toUpperCase();
if(_3b1==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_3b1==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_3ab.push(name);
_3ac.push(v);
return null;
}
_3ab.push(name);
_3ac.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_3ab.push(name);
_3ac.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_3ab.push(name);
_3ac.push(v);
}
return null;
}
}
if(_3b1==="FORM"||_3b1==="P"||_3b1==="SPAN"||_3b1==="DIV"){
return elem.childNodes;
}
_3ab.push(name);
_3ac.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_3ab,_3ac];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _3ba=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_3ba;
throw e;
}
self._document=_3ba;
return rval;
},registerDOMConverter:function(name,_3bd,wrap,_3bf){
MochiKit.DOM.domConverters.register(name,_3bd,wrap,_3bf);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _3c6=im.repeat;
}
var map=m.map;
var _3c8=self.domConverters;
var _3c9=arguments.callee;
var _3ca=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _3cb=null;
try{
_3cb=iter(node);
}
catch(e){
}
if(_3cb){
return map(_3c9,_3cb,_3c6(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _3c9(n,ctx);
};
return map(func,node);
}
}
try{
node=_3c8.match(node,ctx);
continue;
}
catch(e){
if(e!=_3ca){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_3cf){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_3cf)=="string"){
_3cf=self.getElement(_3cf);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_3cf){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_3d3){
var o={};
o[attr]=_3d3;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3d8=self.attributeArray.renames[attr];
var _3d9=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_3d8){
return node[_3d8];
}
var _3da=node.getAttribute(attr);
if(_3da!=_3d9){
return _3da;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3de=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_3de){
return node[_3de];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_3e0){
var elem=node;
var self=MochiKit.DOM;
var base=MochiKit.Base;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_3e0){
if(self.attributeArray.compliant){
for(var k in _3e0){
var v=_3e0[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _3e6=self.attributeArray.renames;
for(var k in _3e0){
v=_3e0[k];
var _3e7=_3e6[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_3e7)=="string"){
elem[_3e7]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node,_3e9,_3ea){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3ed=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3ee=MochiKit.Base.concat;
while(_3ed.length){
var n=_3ed.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_3ed=_3ee(n,_3ed);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node,_3f1,_3f2){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3f5=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3f6=elem.parentNode;
var _3f7=MochiKit.Base.concat;
while(_3f5.length){
var n=_3f5.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_3f6.insertBefore(n,elem);
}else{
_3f5=_3f7(n,_3f5);
}
}
}
return _3f6;
},insertSiblingNodesAfter:function(node,_3fa,_3fb){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3fe=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_3fe);
}else{
return self.appendChildNodes(elem.parentNode,_3fe);
}
},replaceChildNodes:function(node,_400){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _403;
while((_403=elem.firstChild)){
elem.removeChild(_403);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_405){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_405)=="string"||typeof (_405)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _40a=self._xhtml;
if(_405&&!self.attributeArray.compliant){
var _40b="";
if("name" in _405){
_40b+=" name=\""+self.escapeHTML(_405.name)+"\"";
}
if(name=="input"&&"type" in _405){
_40b+=" type=\""+self.escapeHTML(_405.type)+"\"";
}
if(_40b){
name="<"+name+_40b+">";
_40a=false;
}
}
var d=self._document;
if(_40a&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_405){
self.updateNodeAttributes(elem,_405);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
if(e&&e.parentNode){
e.parentNode.removeChild(e);
}
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _414=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_414);
_414.replaceChild(src,dest);
}else{
_414.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByClassName:function(_417,_418){
var self=MochiKit.DOM;
if(self._document.getElementsByClassName){
self.getElementsByClassName=function(_41a,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _41c=elm.getElementsByClassName(_41a);
return MochiKit.Base.extend([],_41c);
};
}else{
if(self._document.evaluate){
self.getElementsByClassName=function(_41d,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _41f=_41d.split(" ");
var _420="";
for(var k=0,kl=_41f.length;k<kl;++k){
_420+="[contains(concat(' ', @class, ' '), ' "+_41f[k]+" ')]";
}
var tag="*";
var _424=[];
try{
var _425="http://www.w3.org/1999/xhtml";
var _426=(self._document.documentElement.namespaceURI===_425)?_425:null;
_424=self._document.evaluate(".//"+tag+_420,elm,_426,0,null);
}
catch(e){
_424=self._document.evaluate(".//"+tag+_420,elm,null,0,null);
}
return MochiKit.Iter.list(_424);
};
}else{
self.getElementsByClassName=function(_427,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _429=_427.split(" ");
var _42a=[];
for(var k=0,kl=_429.length;k<kl;++k){
_42a.push(new RegExp("(^|\\s)"+_429[k]+"(\\s|$)"));
}
var _42d=elm.all?elm.all:elm.getElementsByTagName("*");
var _42e=[];
for(var l=0,ll=_42d.length;l<ll;++l){
var _431=_42d[l];
var _432=false;
for(var m=0,ml=_42a.length;m<ml;++m){
_432=_42a[m].test(_431.className);
if(!_432){
break;
}
}
if(_432){
_42e.push(_431);
}
}
return _42e;
};
}
}
return self.getElementsByClassName(_417,_418);
},getElementsByTagAndClassName:function(_435,_436,_437){
var self=MochiKit.DOM;
if(typeof (_435)=="undefined"||_435===null){
_435="*";
}
if(typeof (_437)=="undefined"||_437===null){
_437=self._document;
}
_437=self.getElement(_437);
if(_437==null){
return [];
}
if(_435=="*"){
return self.getElementsByClassName(_436,_437);
}
var _439=(_437.getElementsByTagName(_435)||self._document.all);
if(typeof (_436)=="undefined"||_436===null){
return MochiKit.Base.extend(null,_439);
}
var _43a=[];
for(var i=0;i<_439.length;i++){
var _43c=_439[i];
var cls=_43c.className;
if(typeof (cls)!="string"){
cls=_43c.getAttribute("class");
}
if(typeof (cls)=="string"){
var _43e=cls.split(" ");
for(var j=0;j<_43e.length;j++){
if(_43e[j]==_436){
_43a.push(_43c);
break;
}
}
}
}
return _43a;
},_newCallStack:function(path,once){
var rval=function(){
var _443=arguments.callee.callStack;
for(var i=0;i<_443.length;i++){
if(_443[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_445,path,func,once){
var self=MochiKit.DOM;
var _44a=_445[path];
var _44b=_44a;
if(!(typeof (_44a)=="function"&&typeof (_44a.callStack)=="object"&&_44a.callStack!==null)){
_44b=self._newCallStack(path,once);
if(typeof (_44a)=="function"){
_44b.callStack.push(_44a);
}
_445[path]=_44b;
}
_44b.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_44e){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_44e=self.getElement(_44e);
if(_44e){
_44e.focus();
}
});
},setElementClass:function(_450,_451){
var self=MochiKit.DOM;
var obj=self.getElement(_450);
if(self.attributeArray.compliant){
obj.setAttribute("class",_451);
}else{
obj.setAttribute("className",_451);
}
},toggleElementClass:function(_454,_455,_456){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_454)){
self.removeElementClass(obj,_454);
}
}
},addElementClass:function(_45a,_45b){
var self=MochiKit.DOM;
var obj=self.getElement(_45a);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_45b);
return true;
}
if(cls==_45b){
return false;
}
var _45f=cls.split(" ");
for(var i=0;i<_45f.length;i++){
if(_45f[i]==_45b){
return false;
}
}
self.setElementClass(obj,cls+" "+_45b);
return true;
},removeElementClass:function(_461,_462){
var self=MochiKit.DOM;
var obj=self.getElement(_461);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_462){
self.setElementClass(obj,"");
return true;
}
var _466=cls.split(" ");
for(var i=0;i<_466.length;i++){
if(_466[i]==_462){
_466.splice(i,1);
self.setElementClass(obj,_466.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_468,_469,_46a){
var obj=MochiKit.DOM.getElement(_468);
var res=MochiKit.DOM.removeElementClass(obj,_469);
if(res){
MochiKit.DOM.addElementClass(obj,_46a);
}
return res;
},hasElementClass:function(_46d,_46e,_46f){
var obj=MochiKit.DOM.getElement(_46d);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _472=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_472.length;j++){
if(_472[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _47a=[dom];
var self=MochiKit.DOM;
var _47c=self.escapeHTML;
var _47d=self.attributeArray;
while(_47a.length){
dom=_47a.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _47e=[];
var _47f=_47d(dom);
for(var i=0;i<_47f.length;i++){
var a=_47f[i];
_47e.push([" ",a.name,"=\"",_47c(a.value),"\""]);
}
_47e.sort();
for(i=0;i<_47e.length;i++){
var _482=_47e[i];
for(var j=0;j<_482.length;j++){
lst.push(_482[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_47a.push("</"+dom.tagName.toLowerCase()+">");
var _484=dom.childNodes;
for(i=_484.length-1;i>=0;i--){
_47a.push(_484[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_47c(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_486){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _48b=node.nodeValue;
if(typeof (_48b)=="string"){
rval.push(_48b);
}
})(MochiKit.DOM.getElement(node));
if(_486){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_48c){
_48c=MochiKit.DOM.getElement(_48c);
for(var i=0;i<_48c.childNodes.length;i++){
var node=_48c.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_48f,_490,_491){
var self=MochiKit.DOM;
if(typeof (_48f)=="undefined"||_48f===null){
_48f="*";
}
if(typeof (_491)=="undefined"||_491===null){
_491=self._document;
}
_491=self.getElement(_491);
if(_491==null){
return null;
}
var _493=(_491.getElementsByTagName(_48f)||self._document.all);
if(_493.length<=0){
return null;
}else{
if(typeof (_490)=="undefined"||_490===null){
return _493[0];
}
}
for(var i=0;i<_493.length;i++){
var _495=_493[i];
var cls=_495.className;
if(typeof (cls)!="string"){
cls=_495.getAttribute("class");
}
if(typeof (cls)=="string"){
var _497=cls.split(" ");
for(var j=0;j<_497.length;j++){
if(_497[j]==_490){
return _495;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_49a,_49b){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_49a)=="undefined"||_49a===null){
_49a="*";
}else{
_49a=_49a.toUpperCase();
}
if(typeof (_49b)=="undefined"||_49b===null){
_49b=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _49d=elem.tagName.toUpperCase();
if((_49a==="*"||_49a==_49d)&&(_49b===null||self.hasElementClass(elem,_49b))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _4a0="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
MochiKit.DOM._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_4a0);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
MochiKit.DOM.domConverters=new m.AdapterRegistry();
var _4a1=this._document.createElement("span");
var _4a2;
if(_4a1&&_4a1.attributes&&_4a1.attributes.length>0){
var _4a3=m.filter;
_4a2=function(node){
return _4a3(_4a2.ignoreAttrFilter,node.attributes);
};
_4a2.ignoreAttr={};
var _4a5=_4a1.attributes;
var _4a6=_4a2.ignoreAttr;
for(var i=0;i<_4a5.length;i++){
var a=_4a5[i];
_4a6[a.name]=a.value;
}
_4a2.ignoreAttrFilter=function(a){
return (_4a2.ignoreAttr[a.name]!=a.value);
};
_4a2.compliant=false;
_4a2.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","rowspan":"rowSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_4a2=function(node){
return node.attributes;
};
_4a2.compliant=true;
_4a2.ignoreAttr={};
_4a2.renames={};
}
_4a2.__export__=false;
MochiKit.DOM.attributeArray=_4a2;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _4ab=this.createDOMFunc;
MochiKit.DOM.A=_4ab("a");
MochiKit.DOM.ARTICLE=_4ab("article");
MochiKit.DOM.ASIDE=_4ab("aside");
MochiKit.DOM.BR=_4ab("br");
MochiKit.DOM.BUTTON=_4ab("button");
MochiKit.DOM.CANVAS=_4ab("canvas");
MochiKit.DOM.CAPTION=_4ab("caption");
MochiKit.DOM.DD=_4ab("dd");
MochiKit.DOM.DIV=_4ab("div");
MochiKit.DOM.DL=_4ab("dl");
MochiKit.DOM.DT=_4ab("dt");
MochiKit.DOM.FIELDSET=_4ab("fieldset");
MochiKit.DOM.FIGURE=_4ab("figure");
MochiKit.DOM.FIGCAPTION=_4ab("figcaption");
MochiKit.DOM.FOOTER=_4ab("footer");
MochiKit.DOM.FORM=_4ab("form");
MochiKit.DOM.H1=_4ab("h1");
MochiKit.DOM.H2=_4ab("h2");
MochiKit.DOM.H3=_4ab("h3");
MochiKit.DOM.H4=_4ab("h4");
MochiKit.DOM.H5=_4ab("h5");
MochiKit.DOM.H6=_4ab("h6");
MochiKit.DOM.HEADER=_4ab("header");
MochiKit.DOM.HGROUP=_4ab("hgroup");
MochiKit.DOM.HR=_4ab("hr");
MochiKit.DOM.IFRAME=_4ab("iframe");
MochiKit.DOM.IMG=_4ab("img");
MochiKit.DOM.INPUT=_4ab("input");
MochiKit.DOM.LABEL=_4ab("label");
MochiKit.DOM.LEGEND=_4ab("legend");
MochiKit.DOM.LI=_4ab("li");
MochiKit.DOM.LINK=_4ab("link");
MochiKit.DOM.MARK=_4ab("mark");
MochiKit.DOM.METER=_4ab("meter");
MochiKit.DOM.NAV=_4ab("nav");
MochiKit.DOM.OL=_4ab("ol");
MochiKit.DOM.OPTGROUP=_4ab("optgroup");
MochiKit.DOM.OPTION=_4ab("option");
MochiKit.DOM.P=_4ab("p");
MochiKit.DOM.PRE=_4ab("pre");
MochiKit.DOM.PROGRESS=_4ab("progress");
MochiKit.DOM.SCRIPT=_4ab("script");
MochiKit.DOM.SECTION=_4ab("section");
MochiKit.DOM.SELECT=_4ab("select");
MochiKit.DOM.SPAN=_4ab("span");
MochiKit.DOM.STRONG=_4ab("strong");
MochiKit.DOM.STYLE=_4ab("style");
MochiKit.DOM.TABLE=_4ab("table");
MochiKit.DOM.TBODY=_4ab("tbody");
MochiKit.DOM.TD=_4ab("td");
MochiKit.DOM.TEXTAREA=_4ab("textarea");
MochiKit.DOM.TFOOT=_4ab("tfoot");
MochiKit.DOM.TH=_4ab("th");
MochiKit.DOM.THEAD=_4ab("thead");
MochiKit.DOM.TR=_4ab("tr");
MochiKit.DOM.TT=_4ab("tt");
MochiKit.DOM.UL=_4ab("ul");
MochiKit.DOM.NBSP="\xa0";
MochiKit.DOM.$=this.getElement;
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
window.withWindow=MochiKit.DOM.withWindow;
window.withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Selector");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_4ac){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_4ac.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_4ad){
throw "Parse error in selector: "+_4ad;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _4af=this.params;
var expr=this.expression;
var _4b1,_4b2,_4b3,rest;
while(_4b1=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_4af.attributes=_4af.attributes||[];
_4af.attributes.push({name:_4b1[2],operator:_4b1[3],value:_4b1[4]||_4b1[5]||""});
expr=_4b1[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_4b1=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_4b2=_4b1[1];
_4b3=_4b1[2];
rest=_4b1[3];
switch(_4b2){
case "#":
_4af.id=_4b3;
break;
case ".":
_4af.classNames.push(_4b3);
break;
case ":":
_4af.pseudoClassNames.push(_4b3);
break;
case "":
case undefined:
_4af.tagName=_4b3.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _4b6=this.params;
var _4b7=[];
var _4b8,i;
function childElements(_4ba){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_4ba+".childNodes)";
}
if(_4b6.wildcard){
_4b7.push("true");
}
if(_4b8=_4b6.id){
_4b7.push("element.id == "+repr(_4b8));
}
if(_4b8=_4b6.tagName){
_4b7.push("element.tagName.toUpperCase() == "+repr(_4b8));
}
if((_4b8=_4b6.classNames).length>0){
for(i=0;i<_4b8.length;i++){
_4b7.push("MochiKit.DOM.hasElementClass(element, "+repr(_4b8[i])+")");
}
}
if((_4b8=_4b6.pseudoClassNames).length>0){
for(i=0;i<_4b8.length;i++){
var _4bb=_4b8[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _4bc=_4bb[1];
var _4bd=_4bb[2];
switch(_4bc){
case "root":
_4b7.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_4bb=_4bd.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_4bb){
throw "Invalid argument to pseudo element nth-child: "+_4bd;
}
var a,b;
if(_4bb[0]=="odd"){
a=2;
b=1;
}else{
if(_4bb[0]=="even"){
a=2;
b=0;
}else{
a=_4bb[2]&&parseInt(_4bb,10)||null;
b=parseInt(_4bb[3],10);
}
}
_4b7.push("this.nthChild(element,"+a+","+b+","+!!_4bc.match("^nth-last")+","+!!_4bc.match("of-type$")+")");
break;
case "first-child":
_4b7.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_4b7.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_4b7.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_4b7.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_4b7.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_4b7.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_4b7.push("element.childNodes.length == 0");
break;
case "enabled":
_4b7.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_4b7.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_4b7.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _4c0=new MochiKit.Selector.Selector(_4bd);
_4b7.push("!( "+_4c0.buildMatchExpression()+")");
break;
}
}
}
if(_4b8=_4b6.attributes){
MochiKit.Base.map(function(_4c1){
var _4c2="MochiKit.DOM.getNodeAttribute(element, "+repr(_4c1.name)+")";
var _4c3=function(_4c4){
return _4c2+".split("+repr(_4c4)+")";
};
_4b7.push(_4c2+" != null");
switch(_4c1.operator){
case "=":
_4b7.push(_4c2+" == "+repr(_4c1.value));
break;
case "~=":
_4b7.push("MochiKit.Base.findValue("+_4c3(" ")+", "+repr(_4c1.value)+") > -1");
break;
case "^=":
_4b7.push(_4c2+".substring(0, "+_4c1.value.length+") == "+repr(_4c1.value));
break;
case "$=":
_4b7.push(_4c2+".substring("+_4c2+".length - "+_4c1.value.length+") == "+repr(_4c1.value));
break;
case "*=":
_4b7.push(_4c2+".match("+repr(_4c1.value)+")");
break;
case "|=":
_4b7.push(_4c3("-")+"[0].toUpperCase() == "+repr(_4c1.value.toUpperCase()));
break;
case "!=":
_4b7.push(_4c2+" != "+repr(_4c1.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_4c1.operator+" in selector";
}
},_4b8);
}
return _4b7.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_4c6,a,b,_4c9,_4ca){
var _4cb=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4c6.parentNode.childNodes);
if(_4ca){
_4cb=MochiKit.Base.filter(function(node){
return node.tagName==_4c6.tagName;
},_4cb);
}
if(_4c9){
_4cb=MochiKit.Iter.reversed(_4cb);
}
if(a){
var _4ce=MochiKit.Base.findIdentical(_4cb,_4c6);
return ((_4ce+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_4cb,_4c6)+1;
}
},isUIElement:function(_4cf){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_4cf.tagName.toLowerCase())>-1;
},findElements:function(_4d0,axis){
var _4d2;
if(axis==undefined){
axis="";
}
function inScope(_4d3,_4d4){
if(axis==""){
return MochiKit.DOM.isChildNode(_4d3,_4d4);
}else{
if(axis==">"){
return _4d3.parentNode===_4d4;
}else{
if(axis=="+"){
return _4d3===nextSiblingElement(_4d4);
}else{
if(axis=="~"){
var _4d5=_4d4;
while(_4d5=nextSiblingElement(_4d5)){
if(_4d3===_4d5){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_4d2=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_4d2)){
if(!_4d0||inScope(_4d2,_4d0)){
return [_4d2];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_4d0=(_4d0||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_4d0){
throw "> combinator not allowed without preceeding expression";
}
_4d0=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4d0.childNodes);
}else{
if(axis=="+"){
if(!_4d0){
throw "+ combinator not allowed without preceeding expression";
}
_4d0=nextSiblingElement(_4d0)&&[nextSiblingElement(_4d0)];
}else{
if(axis=="~"){
if(!_4d0){
throw "~ combinator not allowed without preceeding expression";
}
var _4d8=[];
while(nextSiblingElement(_4d0)){
_4d0=nextSiblingElement(_4d0);
_4d8.push(_4d0);
}
_4d0=_4d8;
}
}
}
}
if(!_4d0){
return [];
}
var _4d9=MochiKit.Base.filter(MochiKit.Base.bind(function(_4da){
return this.match(_4da);
},this),_4d0);
return _4d9;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_4db,_4dc){
_4db=MochiKit.DOM.getElement(_4db);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_4e1){
try{
var res=_4db.querySelectorAll(_4e1);
return Array.prototype.slice.call(res,0);
}
catch(ignore){
}
var _4e3="";
var _4e4=function(_4e5,expr){
var _4e7=expr.match(/^[>+~]$/);
if(_4e7){
_4e3=_4e7[0];
return _4e5;
}else{
var _4e8=new MochiKit.Selector.Selector(expr);
var _4e9=MochiKit.Iter.reduce(function(_4ea,_4eb){
return MochiKit.Base.extend(_4ea,_4e8.findElements(_4eb||_4db,_4e3));
},_4e5,[]);
_4e3="";
return _4e9;
}
};
var _4ec=_4e1.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_4e4,_4ec,[null]));
},_4dc));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Style");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_4f4){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_4f4=MochiKit.Base.camelize(_4f4);
if(!elem||elem==d){
return undefined;
}
if(_4f4=="opacity"&&typeof (elem.filters)!="undefined"){
var _4f7=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_4f7&&_4f7[1]){
return parseFloat(_4f7[1])/100;
}
return 1;
}
if(_4f4=="float"||_4f4=="cssFloat"||_4f4=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _4f8=elem.style?elem.style[_4f4]:null;
if(!_4f8){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_4f4=_4f4.replace(/([A-Z])/g,"-$1").toLowerCase();
_4f8=css?css.getPropertyValue(_4f4):null;
}else{
if(elem.currentStyle){
_4f8=elem.currentStyle[_4f4];
if(/^\d/.test(_4f8)&&!/px$/.test(_4f8)&&_4f4!="fontWeight"){
var left=elem.style.left;
var _4fb=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_4f8||0;
_4f8=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_4fb;
}
}
}
}
if(_4f4=="opacity"){
_4f8=parseFloat(_4f8);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_4f4)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_4f8="auto";
}
}
return _4f8=="auto"?null:_4f8;
},setStyle:function(elem,_4fd){
elem=MochiKit.DOM.getElement(elem);
for(var name in _4fd){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_4fd[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_4fd[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_4fd[name];
}else{
elem.style.styleFloat=_4fd[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_4fd[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _502=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_502?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_504){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _507=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(typeof (elem)=="string"){
elem=dom.getElement(elem);
}
if(elem==null||(!_507(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _50b=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(_507(elem)){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_50b=elem.offsetParent;
if(_50b!=elem){
while(_50b){
c.x+=parseInt(_50b.style.borderLeftWidth,10)||0;
c.y+=parseInt(_50b.style.borderTopWidth,10)||0;
c.x+=_50b.offsetLeft;
c.y+=_50b.offsetTop;
_50b=_50b.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_50b=elem.parentNode;
}else{
_50b=null;
}
while(_50b){
var _510=_50b.tagName.toUpperCase();
if(_510==="BODY"||_510==="HTML"){
break;
}
var disp=self.getStyle(_50b,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_50b.scrollLeft;
c.y-=_50b.scrollTop;
}
if(_50b.parentNode){
_50b=_50b.parentNode;
}else{
_50b=null;
}
}
}
}
}
if(_504){
_504=arguments.callee(_504);
if(_504){
c.x-=(_504.x||0);
c.y-=(_504.y||0);
}
}
return c;
},setElementPosition:function(elem,_513,_514){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_514)=="undefined"){
_514="px";
}
var _515={};
var _516=MochiKit.Base.isUndefinedOrNull;
if(!_516(_513.x)){
_515["left"]=_513.x+_514;
}
if(!_516(_513.y)){
_515["top"]=_513.y+_514;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_515});
},makePositioned:function(_517){
_517=MochiKit.DOM.getElement(_517);
var pos=MochiKit.Style.getStyle(_517,"position");
if(pos=="static"||!pos){
_517.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_517.style.top=0;
_517.style.left=0;
}
}
},undoPositioned:function(_519){
_519=MochiKit.DOM.getElement(_519);
if(_519.style.position=="relative"){
_519.style.position=_519.style.top=_519.style.left=_519.style.bottom=_519.style.right="";
}
},makeClipping:function(_51a){
_51a=MochiKit.DOM.getElement(_51a);
var s=_51a.style;
var _51c={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_51a,"overflow")||"visible")!="hidden"){
_51a.style.overflow="hidden";
_51a.style.overflowX="hidden";
_51a.style.overflowY="hidden";
}
return _51c;
},undoClipping:function(_51d,_51e){
_51d=MochiKit.DOM.getElement(_51d);
if(typeof (_51e)=="string"){
_51d.style.overflow=_51e;
}else{
if(_51e!=null){
_51d.style.overflow=_51e["overflow"];
_51d.style.overflowX=_51e["overflow-x"];
_51d.style.overflowY=_51e["overflow-y"];
}
}
},getElementDimensions:function(elem,_520){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _525=s.visibility;
var _526=s.position;
var _527=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _528=elem.offsetWidth;
var _529=elem.offsetHeight;
s.display=_527;
s.position=_526;
s.visibility=_525;
}else{
_528=elem.offsetWidth||0;
_529=elem.offsetHeight||0;
}
if(_520){
var _52a="colSpan" in elem&&"rowSpan" in elem;
var _52b=(_52a&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_52b){
if(/MSIE/.test(navigator.userAgent)){
var _52c=elem.previousSibling?0.5:1;
var _52d=elem.nextSibling?0.5:1;
}else{
var _52c=0.5;
var _52d=0.5;
}
}else{
var _52c=1;
var _52d=1;
}
_528-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_52c*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_52d*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_52a){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _52e=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _52e=1;
}else{
var _52e=_52b?0.5:1;
}
}
}else{
var _52e=1;
}
_529-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_52e*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_528,_529);
},setElementDimensions:function(elem,_530,_531){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_531)=="undefined"){
_531="px";
}
var _532={};
var _533=MochiKit.Base.isUndefinedOrNull;
if(!_533(_530.w)){
_532["width"]=_530.w+_531;
}
if(!_533(_530.h)){
_532["height"]=_530.h+_531;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_532});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _537=elem.tagName.toUpperCase();
return self._defaultDisplay[_537]||"block";
},setDisplayForElement:function(_538,_539,_53a){
var _53b=MochiKit.Base.extend(null,arguments,1);
var _53c=MochiKit.DOM.getElement;
for(var i=0;i<_53b.length;i++){
_539=_53c(_53b[i]);
if(_539){
_539.style.display=_538;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _546=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_546.length;i++){
this._defaultDisplay[_546[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3",true);
MochiKit.Style.hideElement=m.partial(MochiKit.Style.setDisplayForElement,"none");
MochiKit.Style.showElement=m.partial(MochiKit.Style.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.LoggingPane");
goog.require("MochiKit.Base");
goog.require("MochiKit.Logging");
}
MochiKit.Base.module(MochiKit,"LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_54a){
var m=MochiKit.LoggingPane;
_54a=!(!_54a);
if(m._loggingPane&&m._loggingPane.inline!=_54a){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_54a,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_54c,_54d){
if(typeof (_54d)=="undefined"||_54d===null){
_54d=MochiKit.Logging.logger;
}
this.logger=_54d;
var _54e=MochiKit.Base.update;
var _54f=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _551=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_54c){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _558=doc.getElementById(uid);
var _559=!!_558;
if(_558&&typeof (_558.loggingPane)!="undefined"){
_558.loggingPane.logger=this.logger;
_558.loggingPane.buildAndApplyFilter();
return _558.loggingPane;
}
if(_559){
var _55a;
while((_55a=_558.firstChild)){
_558.removeChild(_55a);
}
}else{
_558=doc.createElement("div");
_558.id=uid;
}
_558.loggingPane=this;
var _55b=doc.createElement("input");
var _55c=doc.createElement("input");
var _55d=doc.createElement("button");
var _55e=doc.createElement("button");
var _55f=doc.createElement("button");
var _560=doc.createElement("button");
var _561=doc.createElement("div");
var _562=doc.createElement("div");
var _563=uid+"_Listener";
this.colorTable=_551(this.colorTable);
var _564=[];
var _565=null;
var _566=function(msg){
var _568=msg.level;
if(typeof (_568)=="number"){
_568=MochiKit.Logging.LogLevel[_568];
}
return _568;
};
var _569=function(msg){
return msg.info.join(" ");
};
var _56b=bind(function(msg){
var _56d=_566(msg);
var text=_569(msg);
var c=this.colorTable[_56d];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_56d;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_56d+": "+text));
_562.appendChild(p);
_562.appendChild(doc.createElement("br"));
if(_561.offsetHeight>_561.scrollHeight){
_561.scrollTop=0;
}else{
_561.scrollTop=_561.scrollHeight;
}
},this);
var _571=function(msg){
_564[_564.length]=msg;
_56b(msg);
};
var _573=function(){
var _574,_575;
try{
_574=new RegExp(_55b.value);
_575=new RegExp(_55c.value);
}
catch(e){
MochiKit.Logging.logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_574.test(_566(msg))&&_575.test(_569(msg)));
};
};
var _577=function(){
while(_562.firstChild){
_562.removeChild(_562.firstChild);
}
};
var _578=function(){
_564=[];
_577();
};
var _579=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_563);
try{
try{
_558.loggingPane=null;
}
catch(e){
MochiKit.Logging.logFatal("Bookmarklet was closed incorrectly.");
}
if(_54c){
_558.parentNode.removeChild(_558);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _57a=function(){
_577();
for(var i=0;i<_564.length;i++){
var msg=_564[i];
if(_565===null||_565(msg)){
_56b(msg);
}
}
};
this.buildAndApplyFilter=function(){
_565=_573();
_57a();
this.logger.removeListener(_563);
this.logger.addListener(_563,_565,_571);
};
var _57d=bind(function(){
_564=this.logger.getMessages();
_57a();
},this);
var _57e=bind(function(_57f){
_57f=_57f||window.event;
var key=_57f.which||_57f.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _581="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_54c){
_581+="; height: 10em; border-top: 2px solid black";
}else{
_581+="; height: 100%;";
}
_558.style.cssText=_581;
if(!_559){
doc.body.appendChild(_558);
}
_581={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_54f(_55b,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_57e,"style":_581});
_558.appendChild(_55b);
_54f(_55c,{"value":".*","onkeypress":_57e,"style":_581});
_558.appendChild(_55c);
_581="width: 8%; display:inline; font: "+this.logFont;
_55d.appendChild(doc.createTextNode("Filter"));
_55d.onclick=bind("buildAndApplyFilter",this);
_55d.style.cssText=_581;
_558.appendChild(_55d);
_55e.appendChild(doc.createTextNode("Load"));
_55e.onclick=_57d;
_55e.style.cssText=_581;
_558.appendChild(_55e);
_55f.appendChild(doc.createTextNode("Clear"));
_55f.onclick=_578;
_55f.style.cssText=_581;
_558.appendChild(_55f);
_560.appendChild(doc.createTextNode("Close"));
_560.onclick=_579;
_560.style.cssText=_581;
_558.appendChild(_560);
_561.style.cssText="overflow: auto; width: 100%";
_562.style.cssText="width: 100%; height: "+(_54c?"8em":"100%");
_561.appendChild(_562);
_558.appendChild(_561);
this.buildAndApplyFilter();
_57d();
if(_54c){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_54c;
this.closePane=_579;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Color");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_583,blue,_585){
if(typeof (_585)=="undefined"||_585===null){
_585=1;
}
this.rgb={r:red,g:_583,b:blue,a:_585};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_586){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_586);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_58c){
var hsl=this.asHSL();
hsl.s=_58c;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_58f){
var hsl=this.asHSL();
hsl.l=_58f;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_592){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_592,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_595){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_595,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_598,_599){
if(typeof (_599)=="undefined"||_599===null){
_599=0.5;
}
var sf=1-_599;
var s=this.rgb;
var d=_598.rgb;
var df=_599;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_59e){
var a=this.asRGB();
var b=_59e.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().l>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_5b5,blue,_5b7){
var _5b8=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5b5=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_5b7=undefined;
}else{
_5b7=rgb.a;
}
}
return new _5b8(red,_5b5,blue,_5b7);
},fromHSL:function(hue,_5bb,_5bc,_5bd){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_5c0,_5c1,_5c2){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _5c5=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _5c6=_5c5._namedColors[name.toLowerCase()];
if(typeof (_5c6)=="string"){
return _5c5.fromHexString(_5c6);
}else{
if(name=="transparent"){
return _5c5.transparentColor();
}
}
return null;
},fromString:function(_5c7){
var self=MochiKit.Color.Color;
var _5c9=_5c7.substr(0,3);
if(_5c9=="rgb"){
return self.fromRGBString(_5c7);
}else{
if(_5c9=="hsl"){
return self.fromHSLString(_5c7);
}else{
if(_5c7.charAt(0)=="#"){
return self.fromHexString(_5c7);
}
}
}
return self.fromName(_5c7);
},fromHexString:function(_5ca){
if(_5ca.charAt(0)=="#"){
_5ca=_5ca.substring(1);
}
var _5cb=[];
var i,hex;
if(_5ca.length==3){
for(i=0;i<3;i++){
hex=_5ca.substr(i,1);
_5cb.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_5ca.substr(i,2);
_5cb.push(parseInt(hex,16)/255);
}
}
var _5ce=MochiKit.Color.Color;
return _5ce.fromRGB.apply(_5ce,_5cb);
},_fromColorString:function(pre,_5d0,_5d1,_5d2){
if(_5d2.indexOf(pre)===0){
_5d2=_5d2.substring(_5d2.indexOf("(",3)+1,_5d2.length-1);
}
var _5d3=_5d2.split(/\s*,\s*/);
var _5d4=[];
for(var i=0;i<_5d3.length;i++){
var c=_5d3[i];
var val;
var _5d8=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_5d8=="deg"){
val=parseFloat(c)/360;
}else{
if(_5d8=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_5d1[i]*parseFloat(c);
}
}
}
_5d4.push(val);
}
return this[_5d0].apply(this,_5d4);
},fromComputedStyle:function(elem,_5da){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _5dd=MochiKit.Style.getStyle.apply(d,arguments);
if(!_5dd){
continue;
}
var _5de=cls.fromString(_5dd);
if(!_5de){
break;
}
if(_5de.asRGB().a>0){
return _5de;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_5e4){
v*=_5e4;
if(v<0){
return 0;
}else{
if(v>_5e4){
return _5e4;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_5ea,_5eb,_5ec){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_5ea=hsv.s;
_5eb=hsv.v;
_5ec=hsv.a;
}
var red;
var _5ef;
var blue;
if(_5ea===0){
red=_5eb;
_5ef=_5eb;
blue=_5eb;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_5eb*(1-_5ea);
var q=_5eb*(1-(_5ea*f));
var t=_5eb*(1-(_5ea*(1-f)));
switch(i){
case 1:
red=q;
_5ef=_5eb;
blue=p;
break;
case 2:
red=p;
_5ef=_5eb;
blue=t;
break;
case 3:
red=p;
_5ef=q;
blue=_5eb;
break;
case 4:
red=t;
_5ef=p;
blue=_5eb;
break;
case 5:
red=_5eb;
_5ef=p;
blue=q;
break;
case 6:
case 0:
red=_5eb;
_5ef=t;
blue=p;
break;
}
}
return {r:red,g:_5ef,b:blue,a:_5ec};
},hslToRGB:function(hue,_5f7,_5f8,_5f9){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_5f7=hsl.s;
_5f8=hsl.l;
_5f9=hsl.a;
}
var red;
var _5fc;
var blue;
if(_5f7===0){
red=_5f8;
_5fc=_5f8;
blue=_5f8;
}else{
var m2;
if(_5f8<=0.5){
m2=_5f8*(1+_5f7);
}else{
m2=_5f8+_5f7-(_5f8*_5f7);
}
var m1=(2*_5f8)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_5fc=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_5fc,b:blue,a:_5f9};
},rgbToHSV:function(red,_603,blue,_605){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_603=rgb.g;
blue=rgb.b;
_605=rgb.a;
}
var max=Math.max(Math.max(red,_603),blue);
var min=Math.min(Math.min(red,_603),blue);
var hue;
var _60a;
var _60b=max;
if(min==max){
hue=0;
_60a=0;
}else{
var _60c=(max-min);
_60a=_60c/max;
if(red==max){
hue=(_603-blue)/_60c;
}else{
if(_603==max){
hue=2+((blue-red)/_60c);
}else{
hue=4+((red-_603)/_60c);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_60a,v:_60b,a:_605};
},rgbToHSL:function(red,_60e,blue,_610){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_60e=rgb.g;
blue=rgb.b;
_610=rgb.a;
}
var max=Math.max(red,Math.max(_60e,blue));
var min=Math.min(red,Math.min(_60e,blue));
var hue;
var _615;
var _616=(max+min)/2;
var _617=max-min;
if(_617===0){
hue=0;
_615=0;
}else{
if(_616<=0.5){
_615=_617/(max+min);
}else{
_615=_617/(2-max-min);
}
if(red==max){
hue=(_60e-blue)/_617;
}else{
if(_60e==max){
hue=2+((blue-red)/_617);
}else{
hue=4+((red-_60e)/_617);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_615,l:_616,a:_610};
},toColorPart:function(num){
num=Math.round(num);
var _619=num.toString(16);
if(num<16){
return "0"+_619;
}
return _619;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _61b=1/3;
var _61c={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_61b,_61b,_61b],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_61b,2*_61b,2*_61b],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
for(var k in _61c){
var name=k+"Color";
var _61f=this.Color.fromRGB.apply(this.Color,_61c[k]);
this.Color[name]=m.partial(m.operator.identity,_61f);
}
var _620=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _622=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_620,_622);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Signal");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Signal","1.5",["Base","DOM"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Signal.Event.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
};
MochiKit.Signal.Event.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Signal.Event.prototype.src=function(){
return this._src;
};
MochiKit.Signal.Event.prototype.event=function(){
return this._event;
};
MochiKit.Signal.Event.prototype.type=function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
};
MochiKit.Signal.Event.prototype.target=function(){
return this._event.target||this._event.srcElement;
};
MochiKit.Signal.Event.prototype._relatedTarget=null;
MochiKit.Signal.Event.prototype.relatedTarget=function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
};
MochiKit.Signal.Event.prototype._modifier=null;
MochiKit.Signal.Event.prototype.modifier=function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
};
MochiKit.Signal.Event.prototype._key=null;
MochiKit.Signal.Event.prototype.key=function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
};
MochiKit.Signal.Event.prototype._mouse=null;
MochiKit.Signal.Event.prototype.mouse=function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("drag")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client={x:0,y:0};
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page={x:0,y:0};
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel={x:0,y:0};
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
};
MochiKit.Signal.Event.prototype.stop=function(){
this.stopPropagation();
this.preventDefault();
};
MochiKit.Signal.Event.prototype.stopPropagation=function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
};
MochiKit.Signal.Event.prototype.preventDefault=function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
};
MochiKit.Signal.Event.prototype._confirmUnload=null;
MochiKit.Signal.Event.prototype.confirmUnload=function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
};
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _631=MochiKit.Signal._specialMacKeys;
for(var i=63236;i<=63242;i++){
_631[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _633=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_633[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_633[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_633[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_633[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_635){
this.source=_635.source;
this.signal=_635.signal;
this.listener=_635.listener;
this.isDOM=_635.isDOM;
this.objOrFunc=_635.objOrFunc;
this.funcOrStr=_635.funcOrStr;
this.connected=_635.connected;
this.namespace=_635.namespace;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Signal.Ident.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "src:"+repr(this.source)+", sig: "+repr(this.signal)+", isDOM: "+repr(this.isDOM)+", connected: "+repr(this.connected);
};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _638=self._observers;
for(var i=0;i<_638.length;i++){
if(_638[i].signal!=="onload"&&_638[i].signal!=="onunload"){
self._disconnect(_638[i]);
}
}
},_listener:function(src,sig,func,obj,_63e){
var self=MochiKit.Signal;
var E=self.Event;
if(!_63e){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_641){
obj[func].apply(obj,[new E(src,_641)]);
var _642=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_642);
};
}else{
return function(_643){
obj[func].apply(obj,[new E(src,_643)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_644){
func.apply(obj,[new E(src,_644)]);
var _645=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_645);
};
}else{
return function(_646){
func.apply(obj,[new E(src,_646)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_64c){
var e=new E(src,_64c);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_64e,_64f){
var obj=null;
var func=null;
if(typeof (_64f)!="undefined"){
obj=_64e;
func=_64f;
if(typeof (_64f)=="string"){
if(typeof (_64e[_64f])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_64f)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_64e)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_64e;
}
}
return [obj,func];
},connect:function(src,sig,_654,_655){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _657=sig.split(".");
if(_657.length>=2){
sig=_657[0];
}
var _658=self._getDestPair(_654,_655);
var obj=_658[0];
var func=_658[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _65b=!!(src.addEventListener||src.attachEvent);
if(_65b&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _65c=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_65b&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _65c=self._listener(src,sig,func,obj,_65b);
sig="onDOMMouseScroll";
}else{
var _65c=self._listener(src,sig,func,obj,_65b);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_65c,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_65c);
}
}
var _65d=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_65c,isDOM:_65b,objOrFunc:_654,funcOrStr:_655,connected:true,namespace:_657[1]||""});
self._observers.push(_65d);
if(!_65b&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_65d],arguments,1);
src.__connect__.apply(src,args);
}
return _65d;
},connectOnce:function(src,sig,_661,_662){
var self=MochiKit.Signal;
var _664=self.connect(src,sig,_661,_662);
var _665;
_665=self.connect(src,sig,function(){
self.disconnect(_664);
self.disconnect(_665);
});
return _664;
},_disconnect:function(_666){
if(!_666.connected){
return;
}
_666.connected=false;
var src=_666.source;
var sig=_666.signal;
var _669=_666.listener;
if(!_666.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_666,sig,_666.objOrFunc,_666.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_669,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_669);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_66a){
var self=MochiKit.Signal;
var _66c=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_66c.length-1;i>=0;i--){
var o=_66c[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(self._lock===0){
_66c.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_66c,_66a);
if(idx>=0){
self._disconnect(_66a);
if(self._lock===0){
_66c.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_675,_676){
var self=MochiKit.Signal;
var _678=self._observers;
var _679=self._disconnect;
var lock=self._lock;
var _67b=self._dirty;
if(typeof (_676)==="undefined"){
_676=null;
}
for(var i=_678.length-1;i>=0;i--){
var _67d=_678[i];
if(_67d.objOrFunc===_675&&(_676===null||_67d.funcOrStr===_676)){
_679(_67d);
if(lock===0){
_678.splice(i,1);
}else{
_67b=true;
}
}
}
self._dirty=_67b;
},disconnectAll:function(src,_67f){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _681=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _683=self._disconnect;
var _684=self._observers;
var i,_686;
var lock=self._lock;
var _688=self._dirty;
if(_681.length===0){
for(i=_684.length-1;i>=0;i--){
_686=_684[i];
if(_686.source===src){
_683(_686);
if(lock===0){
_684.splice(i,1);
}else{
_688=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_681.length;i++){
sigs[_681[i]]=true;
}
for(i=_684.length-1;i>=0;i--){
_686=_684[i];
if(_686.source===src&&_686.signal in sigs){
_683(_686);
if(lock===0){
_684.splice(i,1);
}else{
_688=true;
}
}
}
}
self._dirty=_688;
},disconnectNS:function(_68a){
var self=MochiKit.Signal;
var _68c=_68a.split(".");
if(_68c.length!=2){
throw new Error("No namespace found in 'sigAndOrNS'");
}
var _68d=_68c[0];
var _68e=_68c[1];
var n=0;
var _690=self._observers;
for(var i=_690.length-1;i>=0;i--){
var _692=_690[i];
if((_692.namespace==_68e)&&((_68d!=""&&_692.signal==_68d)||(_68d==""))){
self._disconnect(_692);
if(self._lock===0){
_690.splice(i,1);
}else{
self._dirty=true;
}
n+=1;
}
}
return n;
},signal:function(src,sig,_695){
var self=MochiKit.Signal;
var _697=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _699=[];
self._lock++;
for(var i=0;i<_697.length;i++){
var _69b=_697[i];
if(_69b.source===src&&_69b.signal===sig&&_69b.connected){
try{
if(_69b.isDOM&&_69b.funcOrStr!=null){
var obj=_69b.objOrFunc;
obj[_69b.funcOrStr].apply(obj,args);
}else{
if(_69b.isDOM){
_69b.objOrFunc.apply(src,args);
}else{
_69b.listener.apply(src,args);
}
}
}
catch(e){
_699.push(e);
}
}
}
self._lock--;
self._gc();
if(_699.length==1){
throw _699[0];
}else{
if(_699.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_699;
throw e;
}
}
},_gc:function(){
var self=MochiKit.Signal;
var _69f=self._observers;
if(self._lock===0&&self._dirty){
for(var i=_69f.length-1;i>=0;i--){
if(!_69f[i].connected){
_69f.splice(i,1);
}
}
self._dirty=false;
return true;
}
return false;
}});
MochiKit.Signal.disconnectAllFromTo=function(src,_6a2){
var self=MochiKit.Signal;
var _6a4=self._observers;
var _6a5=self._disconnect;
var lock=self._lock;
var _6a7=self._dirty;
for(var i=_6a4.length-1;i>=0;i--){
var _6a9=_6a4[i];
if(_6a9.objOrFunc===_6a2&&_6a9.source==src){
_6a5(_6a9);
if(lock===0){
_6a4.splice(i,1);
}else{
_6a7=true;
}
}
}
self._dirty=_6a7;
};
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
MochiKit.Signal._lock=0;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
window.connect=MochiKit.Signal.connect;
window.disconnect=MochiKit.Signal.disconnect;
window.disconnectAll=MochiKit.Signal.disconnectAll;
window.signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Position");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _6ac=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _6ad=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_6ac,_6ad);
},cumulativeOffset:function(_6ae){
var _6af=0;
var _6b0=0;
do{
_6af+=_6ae.offsetTop||0;
_6b0+=_6ae.offsetLeft||0;
_6ae=_6ae.offsetParent;
}while(_6ae);
return new MochiKit.Style.Coordinates(_6b0,_6af);
},realOffset:function(_6b1){
var _6b2=0;
var _6b3=0;
do{
_6b2+=_6b1.scrollTop||0;
_6b3+=_6b1.scrollLeft||0;
_6b1=_6b1.parentNode;
}while(_6b1);
return new MochiKit.Style.Coordinates(_6b3,_6b2);
},within:function(_6b4,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_6b4,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_6b4);
if(_6b4.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_6b4.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_6b4.offsetWidth);
},withinIncludingScrolloffsets:function(_6b7,x,y){
var _6ba=this.realOffset(_6b7);
this.xcomp=x+_6ba.x-this.windowOffset.x;
this.ycomp=y+_6ba.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_6b7);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_6b7.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_6b7.offsetWidth);
},overlap:function(mode,_6bc){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_6bc.offsetHeight)-this.ycomp)/_6bc.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_6bc.offsetWidth)-this.xcomp)/_6bc.offsetWidth;
}
},absolutize:function(_6bd){
_6bd=MochiKit.DOM.getElement(_6bd);
if(_6bd.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _6be=MochiKit.Position.positionedOffset(_6bd);
var _6bf=_6bd.clientWidth;
var _6c0=_6bd.clientHeight;
var _6c1={"position":_6bd.style.position,"left":_6be.x-parseFloat(_6bd.style.left||0),"top":_6be.y-parseFloat(_6bd.style.top||0),"width":_6bd.style.width,"height":_6bd.style.height};
_6bd.style.position="absolute";
_6bd.style.top=_6be.y+"px";
_6bd.style.left=_6be.x+"px";
_6bd.style.width=_6bf+"px";
_6bd.style.height=_6c0+"px";
return _6c1;
},positionedOffset:function(_6c2){
var _6c3=0,_6c4=0;
do{
_6c3+=_6c2.offsetTop||0;
_6c4+=_6c2.offsetLeft||0;
_6c2=_6c2.offsetParent;
if(_6c2){
var p=MochiKit.Style.getStyle(_6c2,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_6c2);
return new MochiKit.Style.Coordinates(_6c4,_6c3);
},relativize:function(_6c6,_6c7){
_6c6=MochiKit.DOM.getElement(_6c6);
if(_6c6.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_6c6.style.top||0)-(_6c7["top"]||0);
var left=parseFloat(_6c6.style.left||0)-(_6c7["left"]||0);
_6c6.style.position=_6c7["position"];
_6c6.style.top=top+"px";
_6c6.style.left=left+"px";
_6c6.style.width=_6c7["width"];
_6c6.style.height=_6c7["height"];
},clone:function(_6ca,_6cb){
_6ca=MochiKit.DOM.getElement(_6ca);
_6cb=MochiKit.DOM.getElement(_6cb);
_6cb.style.position="absolute";
var _6cc=this.cumulativeOffset(_6ca);
_6cb.style.top=_6cc.y+"px";
_6cb.style.left=_6cc.x+"px";
_6cb.style.width=_6ca.offsetWidth+"px";
_6cb.style.height=_6ca.offsetHeight+"px";
},page:function(_6cd){
var _6ce=0;
var _6cf=0;
var _6d0=_6cd;
do{
_6ce+=_6d0.offsetTop||0;
_6cf+=_6d0.offsetLeft||0;
if(_6d0.offsetParent==document.body&&MochiKit.Style.getStyle(_6d0,"position")=="absolute"){
break;
}
}while(_6d0=_6d0.offsetParent);
_6d0=_6cd;
do{
_6ce-=_6d0.scrollTop||0;
_6cf-=_6d0.scrollLeft||0;
}while(_6d0=_6d0.parentNode);
return new MochiKit.Style.Coordinates(_6cf,_6ce);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Visual");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
goog.require("MochiKit.Color");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_6d3){
e=MochiKit.DOM.getElement(e);
this._setOptions(_6d3);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _6d4=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_6d4=C.fromBackground(e);
}else{
if(!(_6d4 instanceof C)){
_6d4=C.fromString(_6d4);
}
}
this.isTransparent=(_6d4.asRGB().a<=0);
var _6d6=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_6d6=C.fromBackground(e.offsetParent);
}else{
if(!(_6d6 instanceof C)){
_6d6=C.fromString(_6d6);
}
}
this._roundCornersImpl(e,_6d4,_6d6);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _6d8=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _6da=doc.defaultView.getComputedStyle(e,null);
if(typeof (_6da)==="undefined"||_6da===null){
return e;
}
var _6db=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_6da.getPropertyValue("padding-top"),marginRight:_6da.getPropertyValue("padding-right"),marginBottom:_6da.getPropertyValue("padding-bottom"),marginLeft:_6da.getPropertyValue("padding-left"),padding:"0px"}});
_6db.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_6db);
return e;
},_roundCornersImpl:function(e,_6dd,_6de){
if(this.options.border){
this._renderBorder(e,_6de);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_6dd,_6de);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_6dd,_6de);
}
},_renderBorder:function(el,_6e0){
var _6e1="1px solid "+this._borderColor(_6e0);
var _6e2="border-left: "+_6e1;
var _6e3="border-right: "+_6e1;
var _6e4="style='"+_6e2+";"+_6e3+"'";
el.innerHTML="<div "+_6e4+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_6e6,_6e7){
var _6e8=this._createCorner(_6e7);
for(var i=0;i<this.options.numSlices;i++){
_6e8.appendChild(this._createCornerSlice(_6e6,_6e7,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_6e8,el.firstChild);
},_roundBottomCorners:function(el,_6eb,_6ec){
var _6ed=this._createCorner(_6ec);
for(var i=(this.options.numSlices-1);i>=0;i--){
_6ed.appendChild(this._createCornerSlice(_6eb,_6ec,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_6ed);
},_createCorner:function(_6ef){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_6ef.toString()}});
},_createCornerSlice:function(_6f1,_6f2,n,_6f4){
var _6f5=MochiKit.DOM.SPAN();
var _6f6=_6f5.style;
_6f6.backgroundColor=_6f1.toString();
_6f6.display="block";
_6f6.height="1px";
_6f6.overflow="hidden";
_6f6.fontSize="1px";
var _6f7=this._borderColor(_6f1,_6f2);
if(this.options.border&&n===0){
_6f6.borderTopStyle="solid";
_6f6.borderTopWidth="1px";
_6f6.borderLeftWidth="0px";
_6f6.borderRightWidth="0px";
_6f6.borderBottomWidth="0px";
_6f6.height="0px";
_6f6.borderColor=_6f7.toString();
}else{
if(_6f7){
_6f6.borderColor=_6f7.toString();
_6f6.borderStyle="solid";
_6f6.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_6f6.height="2px";
}
this._setMargin(_6f5,n,_6f4);
this._setBorder(_6f5,n,_6f4);
return _6f5;
},_setOptions:function(_6f8){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_6f8);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _6f9=this.options.corners;
if(this._hasString(_6f9,"all","top")){
return "";
}
var _6fa=(_6f9.indexOf("tl")!=-1);
var _6fb=(_6f9.indexOf("tr")!=-1);
if(_6fa&&_6fb){
return "";
}
if(_6fa){
return "left";
}
if(_6fb){
return "right";
}
return "";
},_whichSideBottom:function(){
var _6fc=this.options.corners;
if(this._hasString(_6fc,"all","bottom")){
return "";
}
var _6fd=(_6fc.indexOf("bl")!=-1);
var _6fe=(_6fc.indexOf("br")!=-1);
if(_6fd&&_6fe){
return "";
}
if(_6fd){
return "left";
}
if(_6fe){
return "right";
}
return "";
},_borderColor:function(_6ff,_700){
if(_6ff=="transparent"){
return _700;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _700.blendedColor(_6ff);
}
}
}
return "";
},_setMargin:function(el,n,_703){
var _704=this._marginSize(n)+"px";
var _705=(_703=="top"?this._whichSideTop():this._whichSideBottom());
var _706=el.style;
if(_705=="left"){
_706.marginLeft=_704;
_706.marginRight="0px";
}else{
if(_705=="right"){
_706.marginRight=_704;
_706.marginLeft="0px";
}else{
_706.marginLeft=_704;
_706.marginRight=_704;
}
}
},_setBorder:function(el,n,_709){
var _70a=this._borderSize(n)+"px";
var _70b=(_709=="top"?this._whichSideTop():this._whichSideBottom());
var _70c=el.style;
if(_70b=="left"){
_70c.borderLeftWidth=_70a;
_70c.borderRightWidth="0px";
}else{
if(_70b=="right"){
_70c.borderRightWidth=_70a;
_70c.borderLeftWidth="0px";
}else{
_70c.borderLeftWidth=_70a;
_70c.borderRightWidth=_70a;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _70f=[1,0];
return _70f[n];
}else{
if(o.compact){
var _710=[2,1];
return _710[n];
}else{
if(o.blend){
var _711=[3,2,1,0];
return _711[n];
}else{
var _712=[5,3,2,1];
return _712[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _715;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_715=[1,0];
}else{
if(o.blend){
_715=[2,1,1,1];
}else{
if(o.border){
_715=[0,2,0,0];
}else{
if(this.isTransparent){
_715=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _715[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_71a){
new MochiKit.Visual._RoundCorners(e,_71a);
};
MochiKit.Visual.roundClass=function(_71b,_71c,_71d){
var _71e=MochiKit.DOM.getElementsByTagAndClassName(_71b,_71c);
for(var i=0;i<_71e.length;i++){
MochiKit.Visual.roundElement(_71e[i],_71d);
}
};
MochiKit.Visual.tagifyText=function(_720,_721){
_721=_721||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_721+=";zoom:1";
}
_720=MochiKit.DOM.getElement(_720);
var ma=MochiKit.Base.map;
ma(function(_723){
if(_723.nodeType==3){
ma(function(_724){
_720.insertBefore(MochiKit.DOM.SPAN({style:_721},_724==" "?String.fromCharCode(160):_724),_723);
},_723.nodeValue.split(""));
MochiKit.DOM.removeElement(_723);
}
},_720.childNodes);
};
MochiKit.Visual._forceRerendering=function(_725){
try{
_725=MochiKit.DOM.getElement(_725);
var n=document.createTextNode(" ");
_725.appendChild(n);
_725.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_727,_728,_729){
_729=MochiKit.Base.update({speed:0.1,delay:0},_729);
var _72a=_729.delay;
var _72b=0;
MochiKit.Base.map(function(_72c){
_729.delay=_72b*_729.speed+_72a;
new _728(_72c,_729);
_72b+=1;
},_727);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_72d,_72e,_72f){
_72d=MochiKit.DOM.getElement(_72d);
_72e=(_72e||"appear").toLowerCase();
_72f=MochiKit.Base.update({queue:{position:"end",scope:(_72d.id||"global"),limit:1}},_72f);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_72d,"display")!="none"?v.PAIRS[_72e][1]:v.PAIRS[_72e][0]](_72d,_72f);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_737){
if(_737){
pos*=2*_737;
}else{
pos*=10;
}
var _738=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_738:1-_738;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.spring=function(pos){
return 1-(Math.cos(pos*2.5*Math.PI)*Math.exp(-pos*6));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_73e){
var _73f=new Date().getTime();
var _740=(typeof (_73e.options.queue)=="string")?_73e.options.queue:_73e.options.queue.position;
var ma=MochiKit.Base.map;
switch(_740){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_73e.finishOn;
e.finishOn+=_73e.finishOn;
}
},this.effects);
break;
case "end":
var _743;
ma(function(e){
var i=e.finishOn;
if(i>=(_743||i)){
_743=i;
}
},this.effects);
_73f=_743||_73f;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
case "replace":
ma(function(e){
e.cancel();
},this.effects);
break;
}
_73e.startOn+=_73f;
_73e.finishOn+=_73f;
if(!_73e.options.queue.limit||this.effects.length<_73e.options.queue.limit){
this.effects.push(_73e);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_749){
return setInterval(func,_749);
},remove:function(_74a){
this.effects=MochiKit.Base.filter(function(e){
return e!=_74a;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_74c){
clearInterval(_74c);
},loop:function(){
var _74d=new Date().getTime();
MochiKit.Base.map(function(_74e){
_74e.loop(_74d);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_74f){
if(typeof (_74f)!="string"){
return _74f;
}
if(!this.instances[_74f]){
this.instances[_74f]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_74f];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_750){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_750,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_752){
if(_752>=this.startOn){
if(_752>=this.finishOn){
return this.finalize();
}
var pos=(_752-this.startOn)/(this.finishOn-this.startOn);
var _754=Math.round(pos*this.options.fps*this.options.duration);
if(_754>this.currentFrame){
this.render(pos);
this.currentFrame=_754;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
var _756=this.options.transition;
if(typeof (_756)=="string"){
_756=MochiKit.Visual.Transitions[_756];
}
if(typeof (_756)=="function"){
pos=_756(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_757){
},event:function(_758){
if(this.options[_758+"Internal"]){
this.options[_758+"Internal"](this);
}
if(this.options[_758]){
this.options[_758](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_759,_75a){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_759,_75a);
}
this.__init__(_759,_75a);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_75c,_75d){
this.effects=_75c||[];
this.start(_75d);
},update:function(_75e){
MochiKit.Base.map(function(_75f){
_75f.render(_75e);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_760){
_760.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_761,_762){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_761,_762);
}
this.__init__(_761,_762);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_764,_765){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_764||[];
MochiKit.Base.map(function(_767){
defs.duration+=_767.options.duration;
},this.effects);
MochiKit.Base.setdefault(_765,defs);
this.start(_765);
},update:function(_768){
var time=_768*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _76b=this.effects[i];
if(time<=_76b.options.duration){
_76b.render(time/_76b.options.duration);
break;
}else{
time-=_76b.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_76c){
_76c.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_76d,_76e){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_76d,_76e);
}
this.__init__(_76d,_76e);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_770,_771){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_770);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_771=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_771);
this.start(_771);
},update:function(_774){
MochiKit.Style.setStyle(this.element,{"opacity":_774});
}});
MochiKit.Visual.Move=function(_775,_776){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_775,_776);
}
this.__init__(_775,_776);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_778,_779){
this.element=MochiKit.DOM.getElement(_778);
_779=MochiKit.Base.update({x:0,y:0,mode:"relative"},_779);
this.start(_779);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _77b=s.visibility;
var _77c=s.display;
if(_77c=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_77c=="none"){
s.visibility=_77b;
s.display=_77c;
}
},update:function(_77d){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_77d+this.originalLeft)+"px",top:Math.round(this.options.y*_77d+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_77e,_77f,_780){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_77e,_77f,_780);
}
this.__init__(_77e,_77f,_780);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_782,_783,_784){
this.element=MochiKit.DOM.getElement(_782);
_784=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_783},_784);
this.start(_784);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _788=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_789){
if(_788.indexOf(_789)>0){
this.fontSize=parseFloat(_788);
this.fontSizeType=_789;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_78a){
var _78b=(this.options.scaleFrom/100)+(this.factor*_78a);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_78b+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_78b,this.dims[1]*_78b);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_78c,_78d){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_78d)+"px";
}
if(this.options.scaleY){
d.height=r(_78c)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_78c-this.dims[0])/2;
var _791=(_78d-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_791+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_791+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_792,_793){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_792,_793);
}
this.__init__(_792,_793);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_795,_796){
this.element=MochiKit.DOM.getElement(_795);
_796=MochiKit.Base.update({startcolor:"#ffff99"},_796);
this.start(_796);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_79b){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_79b));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_79e,_79f){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_79e,_79f);
}
this.__init__(_79e,_79f);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_7a1,_7a2){
this.element=MochiKit.DOM.getElement(_7a1);
this.start(_7a2);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _7a4=p.cumulativeOffset(this.element);
if(this.options.offset){
_7a4.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_7a4.y>max?max:_7a4.y)-this.scrollStart;
},update:function(_7a6){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_7a6*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_7a8,_7a9){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_7a8,_7a9);
}
this.__init__(_7a8,_7a9);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_7ab,_7ac){
this.element=MochiKit.DOM.getElement(_7ab);
this.start(_7ac);
},setup:function(){
var b=MochiKit.Base;
var _7ae=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _7af,unit;
for(var s in _7ae){
_7af=_7ae[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_7af)){
var _7b2=_7af.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_7af=parseFloat(_7b2[1]);
unit=(_7b2.length==3)?_7b2[2]:null;
this.styleEnd[s]=_7af;
this.units[s]=unit;
_7af=MochiKit.Style.getStyle(this.element,s);
_7b2=_7af.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_7af=parseFloat(_7b2[1]);
this.styleStart[s]=_7af;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_7af=c.fromString(_7af);
if(_7af){
this.units[s]="color";
this.styleEnd[s]=_7af.toHexString();
_7af=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_7af).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_7af;
}
}
}
},update:function(_7b6){
var _7b7;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _7ba=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_7ba[i]+(end[i]-_7ba[i])*_7b6));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_7b7=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_7b6*1000)/1000+this.units[s];
this.element.style[s]=_7b7;
}
}
}});
MochiKit.Visual.fade=function(_7bd,_7be){
var s=MochiKit.Style;
var _7c0=s.getStyle(_7bd,"opacity");
_7be=MochiKit.Base.update({from:s.getStyle(_7bd,"opacity")||1,to:0,afterFinishInternal:function(_7c1){
if(_7c1.options.to!==0){
return;
}
s.hideElement(_7c1.element);
s.setStyle(_7c1.element,{"opacity":_7c0});
}},_7be);
return new MochiKit.Visual.Opacity(_7bd,_7be);
};
MochiKit.Visual.appear=function(_7c2,_7c3){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_7c3=MochiKit.Base.update({from:(s.getStyle(_7c2,"display")=="none"?0:s.getStyle(_7c2,"opacity")||0),to:1,afterFinishInternal:function(_7c6){
v._forceRerendering(_7c6.element);
},beforeSetupInternal:function(_7c7){
s.setStyle(_7c7.element,{"opacity":_7c7.options.from});
s.showElement(_7c7.element);
}},_7c3);
return new v.Opacity(_7c2,_7c3);
};
MochiKit.Visual.puff=function(_7c8,_7c9){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_7c8=MochiKit.DOM.getElement(_7c8);
var _7cc=MochiKit.Style.getElementDimensions(_7c8,true);
var _7cd={position:s.getStyle(_7c8,"position"),top:_7c8.style.top,left:_7c8.style.left,width:_7c8.style.width,height:_7c8.style.height,opacity:s.getStyle(_7c8,"opacity")};
_7c9=MochiKit.Base.update({beforeSetupInternal:function(_7ce){
MochiKit.Position.absolutize(_7ce.effects[0].element);
},afterFinishInternal:function(_7cf){
s.hideElement(_7cf.effects[0].element);
s.setStyle(_7cf.effects[0].element,_7cd);
},scaleContent:true,scaleFromCenter:true},_7c9);
return new v.Parallel([new v.Scale(_7c8,200,{sync:true,scaleFromCenter:_7c9.scaleFromCenter,scaleMode:{originalHeight:_7cc.h,originalWidth:_7cc.w},scaleContent:_7c9.scaleContent,restoreAfterFinish:true}),new v.Opacity(_7c8,{sync:true,to:0})],_7c9);
};
MochiKit.Visual.blindUp=function(_7d0,_7d1){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7d0=d.getElement(_7d0);
var _7d4=s.getElementDimensions(_7d0,true);
var _7d5=s.makeClipping(_7d0);
_7d1=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7d4.h,originalWidth:_7d4.w},restoreAfterFinish:true,afterFinishInternal:function(_7d6){
s.hideElement(_7d6.element);
s.undoClipping(_7d6.element,_7d5);
}},_7d1);
return new MochiKit.Visual.Scale(_7d0,0,_7d1);
};
MochiKit.Visual.blindDown=function(_7d7,_7d8){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7d7=d.getElement(_7d7);
var _7db=s.getElementDimensions(_7d7,true);
var _7dc;
_7d8=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7db.h,originalWidth:_7db.w},restoreAfterFinish:true,afterSetupInternal:function(_7dd){
_7dc=s.makeClipping(_7dd.element);
s.setStyle(_7dd.element,{height:"0px"});
s.showElement(_7dd.element);
},afterFinishInternal:function(_7de){
s.undoClipping(_7de.element,_7dc);
}},_7d8);
return new MochiKit.Visual.Scale(_7d7,100,_7d8);
};
MochiKit.Visual.switchOff=function(_7df,_7e0){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7df=d.getElement(_7df);
var _7e3=s.getElementDimensions(_7df,true);
var _7e4=s.getStyle(_7df,"opacity");
var _7e5;
_7e0=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_7e6){
s.makePositioned(_7df);
_7e5=s.makeClipping(_7df);
},afterFinishInternal:function(_7e7){
s.hideElement(_7df);
s.undoClipping(_7df,_7e5);
s.undoPositioned(_7df);
s.setStyle(_7df,{"opacity":_7e4});
}},_7e0);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_7df,{sync:true,duration:0.57*_7e0.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_7df,1,{sync:true,duration:0.43*_7e0.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_7e3.h,originalWidth:_7e3.w},scaleContent:false,restoreAfterFinish:true})],_7e0);
};
MochiKit.Visual.dropOut=function(_7e9,_7ea){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7e9=d.getElement(_7e9);
var _7ed={top:s.getStyle(_7e9,"top"),left:s.getStyle(_7e9,"left"),opacity:s.getStyle(_7e9,"opacity")};
_7ea=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_7ee){
s.makePositioned(_7ee.effects[0].element);
},afterFinishInternal:function(_7ef){
s.hideElement(_7ef.effects[0].element);
s.undoPositioned(_7ef.effects[0].element);
s.setStyle(_7ef.effects[0].element,_7ed);
}},_7ea);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_7e9,{x:0,y:_7ea.distance,sync:true}),new v.Opacity(_7e9,{sync:true,to:0})],_7ea);
};
MochiKit.Visual.shake=function(_7f1,_7f2){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7f1=d.getElement(_7f1);
var _7f6={top:s.getStyle(_7f1,"top"),left:s.getStyle(_7f1,"left")};
_7f2=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_7f7){
s.undoPositioned(_7f1);
s.setStyle(_7f1,_7f6);
}},_7f2);
return new v.Sequence([new v.Move(_7f1,{sync:true,duration:0.1*_7f2.duration,x:20,y:0}),new v.Move(_7f1,{sync:true,duration:0.2*_7f2.duration,x:-40,y:0}),new v.Move(_7f1,{sync:true,duration:0.2*_7f2.duration,x:40,y:0}),new v.Move(_7f1,{sync:true,duration:0.2*_7f2.duration,x:-40,y:0}),new v.Move(_7f1,{sync:true,duration:0.2*_7f2.duration,x:40,y:0}),new v.Move(_7f1,{sync:true,duration:0.1*_7f2.duration,x:-20,y:0})],_7f2);
};
MochiKit.Visual.slideDown=function(_7f8,_7f9){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7f8=d.getElement(_7f8);
if(!_7f8.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_7f8);
var _7fd=s.getStyle(_7f8.firstChild,"bottom")||0;
var _7fe=s.getElementDimensions(_7f8,true);
var _7ff;
_7f9=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7fe.h,originalWidth:_7fe.w},restoreAfterFinish:true,afterSetupInternal:function(_800){
s.makePositioned(_800.element);
s.makePositioned(_800.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_800.element,{top:""});
}
_7ff=s.makeClipping(_800.element);
s.setStyle(_800.element,{height:"0px"});
s.showElement(_800.element);
},afterUpdateInternal:function(_801){
var _802=s.getElementDimensions(_801.element,true);
s.setStyle(_801.element.firstChild,{bottom:(_801.dims[0]-_802.h)+"px"});
},afterFinishInternal:function(_803){
s.undoClipping(_803.element,_7ff);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_803.element);
s.undoPositioned(_803.element.firstChild);
}else{
s.undoPositioned(_803.element.firstChild);
s.undoPositioned(_803.element);
}
s.setStyle(_803.element.firstChild,{bottom:_7fd});
}},_7f9);
return new MochiKit.Visual.Scale(_7f8,100,_7f9);
};
MochiKit.Visual.slideUp=function(_804,_805){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_804=d.getElement(_804);
if(!_804.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_804);
var _809=s.getStyle(_804.firstChild,"bottom");
var _80a=s.getElementDimensions(_804,true);
var _80b;
_805=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_80a.h,originalWidth:_80a.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_80c){
s.makePositioned(_80c.element);
s.makePositioned(_80c.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_80c.element,{top:""});
}
_80b=s.makeClipping(_80c.element);
s.showElement(_80c.element);
},afterUpdateInternal:function(_80d){
var _80e=s.getElementDimensions(_80d.element,true);
s.setStyle(_80d.element.firstChild,{bottom:(_80d.dims[0]-_80e.h)+"px"});
},afterFinishInternal:function(_80f){
s.hideElement(_80f.element);
s.undoClipping(_80f.element,_80b);
s.undoPositioned(_80f.element.firstChild);
s.undoPositioned(_80f.element);
s.setStyle(_80f.element.firstChild,{bottom:_809});
}},_805);
return new MochiKit.Visual.Scale(_804,0,_805);
};
MochiKit.Visual.squish=function(_810,_811){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _815=s.getElementDimensions(_810,true);
var _816;
_811=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_815.h,originalWidth:_815.w},beforeSetupInternal:function(_817){
_816=s.makeClipping(_817.element);
},afterFinishInternal:function(_818){
s.hideElement(_818.element);
s.undoClipping(_818.element,_816);
}},_811);
return new MochiKit.Visual.Scale(_810,/Opera/.test(navigator.userAgent)?1:0,_811);
};
MochiKit.Visual.grow=function(_819,_81a){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_819=d.getElement(_819);
_81a=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_81a);
var _81e={top:_819.style.top,left:_819.style.left,height:_819.style.height,width:_819.style.width,opacity:s.getStyle(_819,"opacity")};
var dims=s.getElementDimensions(_819,true);
var _820,_821;
var _822,_823;
switch(_81a.direction){
case "top-left":
_820=_821=_822=_823=0;
break;
case "top-right":
_820=dims.w;
_821=_823=0;
_822=-dims.w;
break;
case "bottom-left":
_820=_822=0;
_821=dims.h;
_823=-dims.h;
break;
case "bottom-right":
_820=dims.w;
_821=dims.h;
_822=-dims.w;
_823=-dims.h;
break;
case "center":
_820=dims.w/2;
_821=dims.h/2;
_822=-dims.w/2;
_823=-dims.h/2;
break;
}
var _824=MochiKit.Base.update({beforeSetupInternal:function(_825){
s.setStyle(_825.effects[0].element,{height:"0px"});
s.showElement(_825.effects[0].element);
},afterFinishInternal:function(_826){
s.undoClipping(_826.effects[0].element);
s.undoPositioned(_826.effects[0].element);
s.setStyle(_826.effects[0].element,_81e);
}},_81a);
return new v.Move(_819,{x:_820,y:_821,duration:0.01,beforeSetupInternal:function(_827){
s.hideElement(_827.element);
s.makeClipping(_827.element);
s.makePositioned(_827.element);
},afterFinishInternal:function(_828){
new v.Parallel([new v.Opacity(_828.element,{sync:true,to:1,from:0,transition:_81a.opacityTransition}),new v.Move(_828.element,{x:_822,y:_823,sync:true,transition:_81a.moveTransition}),new v.Scale(_828.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_81a.scaleTransition,scaleContent:_81a.scaleContent,scaleFromCenter:_81a.scaleFromCenter,restoreAfterFinish:true})],_824);
}});
};
MochiKit.Visual.shrink=function(_829,_82a){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_829=d.getElement(_829);
_82a=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_82a);
var _82e={top:_829.style.top,left:_829.style.left,height:_829.style.height,width:_829.style.width,opacity:s.getStyle(_829,"opacity")};
var dims=s.getElementDimensions(_829,true);
var _830,_831;
switch(_82a.direction){
case "top-left":
_830=_831=0;
break;
case "top-right":
_830=dims.w;
_831=0;
break;
case "bottom-left":
_830=0;
_831=dims.h;
break;
case "bottom-right":
_830=dims.w;
_831=dims.h;
break;
case "center":
_830=dims.w/2;
_831=dims.h/2;
break;
}
var _832;
var _833=MochiKit.Base.update({beforeStartInternal:function(_834){
s.makePositioned(_834.effects[0].element);
_832=s.makeClipping(_834.effects[0].element);
},afterFinishInternal:function(_835){
s.hideElement(_835.effects[0].element);
s.undoClipping(_835.effects[0].element,_832);
s.undoPositioned(_835.effects[0].element);
s.setStyle(_835.effects[0].element,_82e);
}},_82a);
return new v.Parallel([new v.Opacity(_829,{sync:true,to:0,from:1,transition:_82a.opacityTransition}),new v.Scale(_829,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_82a.scaleTransition,scaleContent:_82a.scaleContent,scaleFromCenter:_82a.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_829,{x:_830,y:_831,sync:true,transition:_82a.moveTransition})],_833);
};
MochiKit.Visual.pulsate=function(_836,_837){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _83b=MochiKit.Style.getStyle(_836,"opacity");
_837=b.update({duration:3,from:0,afterFinishInternal:function(_83c){
MochiKit.Style.setStyle(_83c.element,{"opacity":_83b});
}},_837);
var _83d=_837.transition||v.Transitions.sinoidal;
_837.transition=function(pos){
return _83d(1-v.Transitions.pulse(pos,_837.pulses));
};
return new v.Opacity(_836,_837);
};
MochiKit.Visual.fold=function(_83f,_840){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_83f=d.getElement(_83f);
var _844=s.getElementDimensions(_83f,true);
var _845={top:_83f.style.top,left:_83f.style.left,width:_83f.style.width,height:_83f.style.height};
var _846=s.makeClipping(_83f);
_840=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_844.h,originalWidth:_844.w},afterFinishInternal:function(_847){
new v.Scale(_83f,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_844.h,originalWidth:_844.w},afterFinishInternal:function(_848){
s.hideElement(_848.element);
s.undoClipping(_848.element,_846);
s.setStyle(_848.element,_845);
}});
}},_840);
return new v.Scale(_83f,5,_840);
};
MochiKit.Base.nameFunctions(MochiKit.Visual);
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DragAndDrop");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Signal");
goog.require("MochiKit.Visual");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_849){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_849);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_84e){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_84e)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_84e);
}
},this.drops);
},findDeepestChild:function(_850){
var _851=_850[0];
for(var i=1;i<_850.length;++i){
if(MochiKit.DOM.isChildNode(_850[i].element,_851.element)){
_851=_850[i];
}
}
return _851;
},show:function(_853,_854){
if(!this.drops.length){
return;
}
var _855=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_853,_854)){
_855.push(drop);
}
});
if(_855.length>0){
var drop=this.findDeepestChild(_855);
MochiKit.Position.within(drop.element,_853.page.x,_853.page.y);
drop.options.onhover(_854,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_858,_859){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_858.mouse(),_859)){
this.last_active.options.ondrop(_859,this.last_active.element,_858);
}
},reset:function(_85a){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_85a);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_85c,_85d){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_85c,_85d);
}
this.__init__(_85c,_85d);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_85f,_860){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_85f);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_860);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_864){
if(this.options._containers.length){
var _865;
if(this.options.tree){
_865=_864.treeNode;
}else{
_865=_864.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _865==c;
});
}else{
return true;
}
},isAccepted:function(_867){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_867,c);
}));
},isAffected:function(_869,_86a){
return ((this.element!=_86a)&&this.isContained(_86a)&&this.isAccepted(_86a)&&MochiKit.Position.within(this.element,_869.page.x,_869.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_86b){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_86b);
},unregister:function(_86d){
this.drags=MochiKit.Base.filter(function(d){
return d!=_86d;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_870){
window.focus();
this.activeDraggable=_870;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_871){
if(!this.activeDraggable){
return;
}
var _872=_871.mouse();
if(this._lastPointer&&this._lastPointer.page.x==_872.page.x&&this._lastPointer.page.y==_872.page.y){
return;
}
this._lastPointer=_872;
this.activeDraggable.updateDrag(_871,_872);
},endDrag:function(_873){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_873);
this.activeDraggable=null;
},keyPress:function(_874){
if(this.activeDraggable){
this.activeDraggable.keyPress(_874);
}
},notify:function(_875,_876,_877){
MochiKit.Signal.signal(this,_875,_876,_877);
}};
MochiKit.DragAndDrop.Draggable=function(_878,_879){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_878,_879);
}
this.__init__(_878,_879);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_87b,_87c){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_87c=b.update({handle:false,starteffect:function(_87f){
this._savedOpacity=MochiKit.Style.getStyle(_87f,"opacity")||1;
new v.Opacity(_87f,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_880,_881,_882){
var dur=Math.sqrt(Math.abs(_881^2)+Math.abs(_882^2))*0.02;
return new v.Move(_880,{x:-_882,y:-_881,duration:dur});
},endeffect:function(_884){
new v.Opacity(_884,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_87c);
var d=MochiKit.DOM;
this.element=d.getElement(_87b);
if(_87c.handle&&(typeof (_87c.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_87c.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_87c.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_87c.scroll&&!_87c.scroll.scrollTo&&!_87c.scroll.outerHTML){
_87c.scroll=d.getElement(_87c.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_87c.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_87c;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0",10),parseInt(s(this.element,"top")||"0",10)];
},initDrag:function(_887){
if(!_887.mouse().button.left){
return;
}
var src=_887.target();
var _889=(src.tagName||"").toUpperCase();
if(_889==="INPUT"||_889==="SELECT"||_889==="OPTION"||_889==="BUTTON"||_889==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _88a=_887.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_88a.page.x-pos.x,_88a.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_887.stop();
},startDrag:function(_88c){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=MochiKit.Style.getStyle(this.element,"z-index");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _88d=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_88d.left;
this.originalScrollTop=_88d.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_88c);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_88e,_88f){
if(!this.dragging){
this.startDrag(_88e);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_88f,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_88e);
this.draw(_88f);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _893=[0,0];
if(_88f.page.x>(q.x-this.options.scrollSensitivity)){
_893[0]=_88f.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_88f.page.x<(p.x+this.options.scrollSensitivity)){
_893[0]=_88f.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_88f.page.y>(q.y-this.options.scrollSensitivity)){
_893[1]=_88f.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_88f.page.y<(p.y+this.options.scrollSensitivity)){
_893[1]=_88f.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_893);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_88e.stop();
},finishDrag:function(_894,_895){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_895){
dr.Droppables.fire(_894,this.element);
}
dr.Draggables.notify("end",this,_894);
var _897=this.options.revert;
if(_897&&typeof (_897)=="function"){
_897=_897(this.element);
}
var d=this.currentDelta();
if(_897&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_899){
if(_899.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_899,false);
_899.stop();
},endDrag:function(_89a){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_89a,true);
_89a.stop();
},draw:function(_89b){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_89b.page.x-pos.x-this.offset[0],_89b.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _8a2=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_8a2.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_8a2.top=p[1]+"px";
}
if(_8a2.visibility=="hidden"){
_8a2.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_8a3){
if(!_8a3[0]&&!_8a3[1]){
return;
}
this.scrollSpeed=[_8a3[0]*this.options.scrollSpeed,_8a3[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _8a4=new Date();
var _8a5=_8a4-this.lastScrolled;
this.lastScrolled=_8a4;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_8a5/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_8a5/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_8a5/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_8a5/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_8a5/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Sortable");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Position");
goog.require("MochiKit.DragAndDrop");
}
MochiKit.Base.module(MochiKit,"Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_8ad){
while(_8ad.tagName.toUpperCase()!="BODY"){
if(_8ad.id&&MochiKit.Sortable.sortables[_8ad.id]){
return _8ad;
}
_8ad=_8ad.parentNode;
}
},_createElementId:function(_8ae){
if(_8ae.id==null||_8ae.id==""){
var d=MochiKit.DOM;
var id;
var _8b1=1;
while(d.getElement(id="sortable"+_8b1)!=null){
_8b1+=1;
}
d.setNodeAttribute(_8ae,"id",id);
}
},options:function(_8b2){
_8b2=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_8b2));
if(!_8b2){
return;
}
return MochiKit.Sortable.sortables[_8b2.id];
},destroy:function(_8b3){
var s=MochiKit.Sortable.options(_8b3);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_8b9,_8ba){
_8b9=MochiKit.DOM.getElement(_8b9);
var self=MochiKit.Sortable;
self._createElementId(_8b9);
_8ba=MochiKit.Base.update({element:_8b9,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_8b9],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_8ba);
self.destroy(_8b9);
var _8bc={revert:true,ghosting:_8ba.ghosting,scroll:_8ba.scroll,scrollSensitivity:_8ba.scrollSensitivity,scrollSpeed:_8ba.scrollSpeed,constraint:_8ba.constraint,handle:_8ba.handle};
if(_8ba.starteffect){
_8bc.starteffect=_8ba.starteffect;
}
if(_8ba.reverteffect){
_8bc.reverteffect=_8ba.reverteffect;
}else{
if(_8ba.ghosting){
_8bc.reverteffect=function(_8bd){
_8bd.style.top=0;
_8bd.style.left=0;
};
}
}
if(_8ba.endeffect){
_8bc.endeffect=_8ba.endeffect;
}
if(_8ba.zindex){
_8bc.zindex=_8ba.zindex;
}
var _8be={overlap:_8ba.overlap,containment:_8ba.containment,hoverclass:_8ba.hoverclass,onhover:self.onHover,tree:_8ba.tree,accept:_8ba.accept};
var _8bf={onhover:self.onEmptyHover,overlap:_8ba.overlap,containment:_8ba.containment,hoverclass:_8ba.hoverclass,accept:_8ba.accept};
MochiKit.DOM.removeEmptyTextNodes(_8b9);
_8ba.draggables=[];
_8ba.droppables=[];
if(_8ba.dropOnEmpty||_8ba.tree){
new MochiKit.DragAndDrop.Droppable(_8b9,_8bf);
_8ba.droppables.push(_8b9);
}
MochiKit.Base.map(function(e){
var _8c1=_8ba.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_8ba.handle,e):e;
_8ba.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_8bc,{handle:_8c1})));
new MochiKit.DragAndDrop.Droppable(e,_8be);
if(_8ba.tree){
e.treeNode=_8b9;
}
_8ba.droppables.push(e);
},(self.findElements(_8b9,_8ba)||[]));
if(_8ba.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_8bf);
e.treeNode=_8b9;
_8ba.droppables.push(e);
},(self.findTreeElements(_8b9,_8ba)||[]));
}
self.sortables[_8b9.id]=_8ba;
_8ba.lastValue=self.serialize(_8b9);
_8ba.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_8b9));
_8ba.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_8b9));
},onStart:function(_8c3,_8c4){
var self=MochiKit.Sortable;
var _8c6=self.options(_8c3);
_8c6.lastValue=self.serialize(_8c6.element);
},onEnd:function(_8c7,_8c8){
var self=MochiKit.Sortable;
self.unmark();
var _8ca=self.options(_8c7);
if(_8ca.lastValue!=self.serialize(_8ca.element)){
_8ca.onUpdate(_8ca.element);
}
},findElements:function(_8cb,_8cc){
return MochiKit.Sortable.findChildren(_8cb,_8cc.only,_8cc.tree,_8cc.tag);
},findTreeElements:function(_8cd,_8ce){
return MochiKit.Sortable.findChildren(_8cd,_8ce.only,_8ce.tree?true:false,_8ce.treeTag);
},findChildren:function(_8cf,only,_8d1,_8d2){
if(!_8cf.hasChildNodes()){
return null;
}
_8d2=_8d2.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _8d3=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_8d2&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_8d3.push(e);
}
if(_8d1){
var _8d6=MochiKit.Sortable.findChildren(e,only,_8d1,_8d2);
if(_8d6&&_8d6.length>0){
_8d3=_8d3.concat(_8d6);
}
}
},_8cf.childNodes);
return _8d3;
},onHover:function(_8d7,_8d8,_8d9){
if(MochiKit.DOM.isChildNode(_8d8,_8d7)){
return;
}
var self=MochiKit.Sortable;
if(_8d9>0.33&&_8d9<0.66&&self.options(_8d8).tree){
return;
}else{
if(_8d9>0.5){
self.mark(_8d8,"before");
if(_8d8.previousSibling!=_8d7){
var _8db=_8d7.parentNode;
_8d7.style.visibility="hidden";
_8d8.parentNode.insertBefore(_8d7,_8d8);
if(_8d8.parentNode!=_8db){
self.options(_8db).onChange(_8d7);
}
self.options(_8d8.parentNode).onChange(_8d7);
}
}else{
self.mark(_8d8,"after");
var _8dc=_8d8.nextSibling||null;
if(_8dc!=_8d7){
var _8db=_8d7.parentNode;
_8d7.style.visibility="hidden";
_8d8.parentNode.insertBefore(_8d7,_8dc);
if(_8d8.parentNode!=_8db){
self.options(_8db).onChange(_8d7);
}
self.options(_8d8.parentNode).onChange(_8d7);
}
}
}
},_offsetSize:function(_8dd,type){
if(type=="vertical"||type=="height"){
return _8dd.offsetHeight;
}else{
return _8dd.offsetWidth;
}
},onEmptyHover:function(_8df,_8e0,_8e1){
var _8e2=_8df.parentNode;
var self=MochiKit.Sortable;
var _8e4=self.options(_8e0);
if(!MochiKit.DOM.isChildNode(_8e0,_8df)){
var _8e5;
var _8e6=self.findElements(_8e0,{tag:_8e4.tag,only:_8e4.only});
var _8e7=null;
if(_8e6){
var _8e8=self._offsetSize(_8e0,_8e4.overlap)*(1-_8e1);
for(_8e5=0;_8e5<_8e6.length;_8e5+=1){
if(_8e8-self._offsetSize(_8e6[_8e5],_8e4.overlap)>=0){
_8e8-=self._offsetSize(_8e6[_8e5],_8e4.overlap);
}else{
if(_8e8-(self._offsetSize(_8e6[_8e5],_8e4.overlap)/2)>=0){
_8e7=_8e5+1<_8e6.length?_8e6[_8e5+1]:null;
break;
}else{
_8e7=_8e6[_8e5];
break;
}
}
}
}
_8e0.insertBefore(_8df,_8e7);
self.options(_8e2).onChange(_8df);
_8e4.onChange(_8df);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_8ea,_8eb){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _8ee=self.options(_8ea.parentNode);
if(_8ee&&!_8ee.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _8ef=MochiKit.Position.cumulativeOffset(_8ea);
self._marker.style.left=_8ef.x+"px";
self._marker.style.top=_8ef.y+"px";
if(_8eb=="after"){
if(_8ee.overlap=="horizontal"){
self._marker.style.left=(_8ef.x+_8ea.clientWidth)+"px";
}else{
self._marker.style.top=(_8ef.y+_8ea.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_8f0,_8f1,_8f2){
var self=MochiKit.Sortable;
var _8f4=self.findElements(_8f0,_8f1)||[];
for(var i=0;i<_8f4.length;++i){
var _8f6=_8f4[i].id.match(_8f1.format);
if(!_8f6){
continue;
}
var _8f7={id:encodeURIComponent(_8f6?_8f6[1]:null),element:_8f0,parent:_8f2,children:[],position:_8f2.children.length,container:self._findChildrenElement(_8f4[i],_8f1.treeTag.toUpperCase())};
if(_8f7.container){
self._tree(_8f7.container,_8f1,_8f7);
}
_8f2.children.push(_8f7);
}
return _8f2;
},_findChildrenElement:function(_8f8,_8f9){
if(_8f8&&_8f8.hasChildNodes){
_8f9=_8f9.toUpperCase();
for(var i=0;i<_8f8.childNodes.length;++i){
if(_8f8.childNodes[i].tagName.toUpperCase()==_8f9){
return _8f8.childNodes[i];
}
}
}
return null;
},tree:function(_8fb,_8fc){
_8fb=MochiKit.DOM.getElement(_8fb);
var _8fd=MochiKit.Sortable.options(_8fb);
_8fc=MochiKit.Base.update({tag:_8fd.tag,treeTag:_8fd.treeTag,only:_8fd.only,name:_8fb.id,format:_8fd.format},_8fc||{});
var root={id:null,parent:null,children:new Array,container:_8fb,position:0};
return MochiKit.Sortable._tree(_8fb,_8fc,root);
},setSequence:function(_8ff,_900,_901){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_8ff=MochiKit.DOM.getElement(_8ff);
_901=b.update(self.options(_8ff),_901||{});
var _904={};
b.map(function(n){
var m=n.id.match(_901.format);
if(m){
_904[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_8ff,_901));
b.map(function(_907){
var n=_904[_907];
if(n){
n[1].appendChild(n[0]);
delete _904[_907];
}
},_900);
},_constructIndex:function(node){
var _90a="";
do{
if(node.id){
_90a="["+node.position+"]"+_90a;
}
}while((node=node.parent)!=null);
return _90a;
},sequence:function(_90b,_90c){
_90b=MochiKit.DOM.getElement(_90b);
var self=MochiKit.Sortable;
var _90c=MochiKit.Base.update(self.options(_90b),_90c||{});
return MochiKit.Base.map(function(item){
return item.id.match(_90c.format)?item.id.match(_90c.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_90b,_90c)||[]));
},serialize:function(_90f,_910){
_90f=MochiKit.DOM.getElement(_90f);
var self=MochiKit.Sortable;
_910=MochiKit.Base.update(self.options(_90f),_910||{});
var name=encodeURIComponent(_910.name||_90f.id);
if(_910.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_90f,_910).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_90f,_910)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base_ext");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Base_ext","1.5",["Base"]);
MochiKit.Base._arg_placeholder=function(_915){
this.index=_915;
};
var _1=new MochiKit.Base._arg_placeholder(0);
var _2=new MochiKit.Base._arg_placeholder(1);
var _3=new MochiKit.Base._arg_placeholder(2);
var _4=new MochiKit.Base._arg_placeholder(3);
var _5=new MochiKit.Base._arg_placeholder(4);
var _6=new MochiKit.Base._arg_placeholder(5);
var _7=new MochiKit.Base._arg_placeholder(6);
var _8=new MochiKit.Base._arg_placeholder(7);
var _9=new MochiKit.Base._arg_placeholder(8);
var _10=new MochiKit.Base._arg_placeholder(9);
MochiKit.Base._rebind_preargs=function(_916,args,_918){
_918=_918||{};
for(var i=0;i<_916.length;++i){
var pa=_916[i];
if(pa instanceof MochiKit.Base._arg_placeholder){
if(pa.index<args.length){
_916[i]=args[pa.index];
_918[pa.index]=pa.index;
}
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
MochiKit.Base._rebind_preargs(pa.im_preargs,args,_918);
}
}
}
return _918;
};
MochiKit.Base.bind2=function(func,self,_91d){
if(typeof (func)=="string"){
func=self[func];
}
var _91e=func.im_func;
var _91f=func.im_preargs;
var _920=func.im_self;
var m=MochiKit.Base;
if(typeof (func)=="function"&&typeof (func.apply)=="undefined"){
func=m._wrapDumbFunction(func);
}
if(typeof (_91e)!="function"){
_91e=func;
}
if(typeof (self)!="undefined"){
_920=self;
}
if(typeof (_91f)=="undefined"){
_91f=[];
}else{
_91f=_91f.slice();
}
var args=Array.prototype.slice.call(arguments,self instanceof m._arg_placeholder?1:2);
var _923=MochiKit.Base._rebind_preargs(_91f,args);
for(var _924 in _923){
args.splice(_923[_924],1);
}
m.extend(_91f,args);
var _925=function(){
var me=arguments.callee;
var self=me.im_self;
if(!self){
self=this;
}
var args=[];
if(me.im_preargs.length>0){
var imax=0;
for(var i=0;i<me.im_preargs.length;++i){
var pa=me.im_preargs[i];
if(pa instanceof m._arg_placeholder){
imax=Math.max(imax,pa.index+1);
pa=arguments[pa.index];
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
pa=pa.apply(self,arguments);
}
}
args.push(pa);
}
for(var j=imax;j<arguments.length;++j){
args.push(arguments[j]);
}
}else{
args=arguments;
}
if(self instanceof m._arg_placeholder){
self=arguments[self.index];
}
return me.im_func.apply(self,args);
};
_925.im_self=_920;
_925.im_func=_91e;
_925.im_preargs=_91f;
if(typeof (_91e.NAME)=="string"){
_925.NAME="bind2("+_91e.NAME+",...)";
}
return _925;
};
MochiKit.Base.partial2=function(func,_92e){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,undefined],arguments,1));
};
MochiKit.Base.method2=function(self,func,_932){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,self],arguments,2));
};
MochiKit.Base.bindLate2=function(func,self,_936){
var m=MochiKit.Base;
var args=arguments;
if(typeof (func)==="string"){
args=m.extend([m.forwardCall(func)],arguments,1);
return m.bind2.apply(this,args);
}
return m.bind2.apply(this,args);
};
MochiKit.Base.isBoundFunction=function(fn){
return typeof fn=="function"&&typeof fn.im_func=="function";
};
MochiKit.Base.protect=function(_93a){
return function(){
return _93a.apply(this,arguments);
};
};
MochiKit.Base.apply=function(fn,_93c){
var args=MochiKit.Base.extend([],arguments,1);
return fn.apply(this,args);
};
MochiKit.Base.partition=function(_93e,cmp,left,_941,_942){
cmp=cmp||MochiKit.Base.operator.cle;
left=left||0;
_941=_941||_93e.length-1;
_942=_942||(left+Math.floor((_941-left)/2));
var swap=function(i,j){
var tmp=_93e[i];
_93e[i]=_93e[j];
_93e[j]=tmp;
};
var _947=_93e[_942];
swap(_942,_941);
var _948=left;
for(var i=left;i<=_941;++i){
if(cmp(_93e[i],_947)){
swap(i,_948);
++_948;
}
}
swap(_948,_941);
return _948;
};
MochiKit.Base.negateComparator=function(cmp){
return function(){
return -1*cmp.apply(this,arguments);
};
};
MochiKit.Base._getBaseFn=function(fn){
if(typeof fn.im_func=="function"){
return MochiKit.Base._getBaseFn(fn.im_func);
}
return fn;
};
MochiKit.Base_ext.__new__=function(){
};
MochiKit.Base_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Iter_ext","1.5",["Base","Iter"]);
MochiKit.Iter.treePreOrder=function(_94c,_94d){
var _94e=[_94c];
return {repr:function(){
return "treePreOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_94e.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_94e.pop();
MochiKit.Iter.iextend(_94e,_94d(node));
return node;
}};
};
MochiKit.Iter.treeLevelOrder=function(_950,_951){
var _952=[_950];
return {repr:function(){
return "treeLevelOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_952.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_952.shift();
MochiKit.Iter.iextend(_952,_951(node));
return node;
}};
};
MochiKit.Iter.treePostOrder=function(_954,_955){
var _956=[[_954,false]];
return {repr:function(){
return "treePostOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_956.length==0){
throw MochiKit.Iter.StopIteration;
}
var n=_956.pop();
if(n[1]){
return n[0];
}
n[1]=true;
_956.push(n);
MochiKit.Iter.iextend(_956,MochiKit.Iter.imap(function(node){
return [node,false];
},_955(n[0])));
}
}};
};
MochiKit.Iter.pairView=function(_959,_95a){
_95a=_95a||false;
var it=MochiKit.Iter.iter(_959);
try{
var _95c=it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return MochiKit.Iter.EmptyIter;
}
if(_95a){
it=MochiKit.Iter.chain(it,[_95c]);
}
return {repr:function(){
return "pairView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _95d=it.next();
var pair=[_95c,_95d];
_95c=_95d;
return pair;
}};
};
MochiKit.Iter.windowView=function(_95f,_960,_961){
_960=_960||2;
_961=_961||1;
var it=MochiKit.Iter.iter(_95f);
var win=[];
return {repr:function(){
return "windowView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(win.length<_960){
while(win.length<_960){
win.push(it.next());
}
}else{
for(var i=0;i<_961;++i){
win.shift();
win.push(it.next());
}
}
return win.slice();
}};
};
MochiKit.Iter.filterMap=function(_965,_966,_967){
_967=_967||function(item){
return typeof item!=="undefined"&&item!==null;
};
return MochiKit.Iter.ifilter(_967,MochiKit.Iter.imap(_965,_966));
};
MochiKit.Iter.iflattenArray=function(root){
var _96a=[root];
return {repr:function(){
return "iflattenArray(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_96a.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_96a.shift();
if(node instanceof Array){
Array.prototype.splice.apply(_96a,[0,0].concat(node));
}else{
return node;
}
}
}};
};
MochiKit.Iter.chainFromIter=function(seq,_96d){
_96d=_96d||MochiKit.Iter.iter;
var it=MochiKit.Iter.iter(seq);
var jt=null;
return {repr:function(){
return "chainFromIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(jt==null){
jt=MochiKit.Iter.iter(_96d(it.next()));
}
while(true){
try{
var val=jt.next();
return val;
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=MochiKit.Iter.iter(_96d(it.next()));
}
}
}};
};
MochiKit.Iter.uniqueView=function(_971,pred){
pred=pred||MochiKit.Base.operator.ceq;
var it=MochiKit.Iter.iter(_971);
var _974=true;
var prev;
return {repr:function(){
return "uniqueView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_974){
_974=false;
prev=it.next();
return prev;
}
var val=it.next();
while(pred(prev,val)){
val=it.next();
}
prev=val;
return val;
}};
};
MochiKit.Iter.iproduct=function(_977,_978){
var sa=arguments[0],sb=arguments[1];
var it=MochiKit.Iter.iter(sa);
var jt=null;
var a,b;
return {repr:function(){
return "iproduct(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(jt==null){
a=it.next();
jt=MochiKit.Iter.iter(sb);
}
try{
b=jt.next();
return [a,b];
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=null;
}
}
}};
};
MochiKit.Iter.enumerate=function(_97f,_980){
return MochiKit.Iter.izip(MochiKit.Iter.count(_980),_97f);
};
MochiKit.Iter.breakIt=function(){
throw MochiKit.Iter.StopIteration;
};
MochiKit.Iter.EmptyIter={repr:function(){
return "EmptyIter";
},toString:MochiKit.Base.forwardCall("repr"),next:MochiKit.Iter.breakIt};
MochiKit.Iter.generateN=function(_981,n){
return MochiKit.Iter.imap(function(){
return _981();
},MochiKit.Iter.range(n));
};
MochiKit.Iter.izipLongest=function(_983,_984){
_984=_984||null;
_983=MochiKit.Base.map(MochiKit.Iter.iter,_983);
var _985=_983.length;
return {repr:function(){
return "izipLongest(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _986=new Array(_983.length);
for(var i=0;i<_983.length;++i){
try{
_986[i]=_983[i].next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
_983[i]=MochiKit.Iter.repeat(_984);
_986[i]=_984;
--_985;
}
}
if(_985==0){
throw MochiKit.Iter.StopIteration;
}
return _986;
}};
};
MochiKit.Iter.any=function(){
return MochiKit.Iter.some.apply(this,arguments);
};
MochiKit.Iter.all=function(){
return MochiKit.Iter.every.apply(this,arguments);
};
MochiKit.Iter.starmap=function(){
return MochiKit.Iter.applymap.apply(this,arguments);
};
MochiKit.Iter.advance=function(iter,n){
while(n-->0){
iter.next();
}
return iter;
};
MochiKit.Iter.isSorted=function(_98a,cmp){
return MochiKit.Iter.every(MochiKit.Iter.windowView(_98a),cmp||MochiKit.Base.operator.cle);
};
MochiKit.Iter.interleave=function(_98c,_98d){
return MochiKit.Iter.chainFromIter(MochiKit.Iter.izip.apply(this,arguments));
};
MochiKit.Iter.remapView=function(_98e,lst){
return MochiKit.Iter.imap(MochiKit.Base.partial(MochiKit.Base.operator.getitem,lst),_98e);
};
MochiKit.Iter.compressIter=function(data,_991){
return MochiKit.Iter.imap(function(d_s){
return d_s[0];
},MochiKit.Iter.ifilter(function(d_s){
return d_s[1]?true:false;
},MochiKit.Iter.izip(data,_991)));
};
MochiKit.Iter.combinations=function(_994,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_994);
var n=pool.length;
if(r>n){
return MochiKit.Iter.EmptyIter;
}
var _99a=mi.list(mi.range(r));
var _99b=true;
return {repr:function(){
return "combinations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_99b){
_99b=false;
return mi.list(mi.remapView(_99a,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_99a[i]!=(i+n-r)){
done=false;
break;
}
}
if(done){
throw MochiKit.Iter.StopIteration;
}
_99a[i]+=1;
for(var j=i+1;j<r;++j){
_99a[j]=_99a[j-1]+1;
}
return mi.list(mi.remapView(_99a,pool));
}
}};
};
MochiKit.Iter.combinationsWithReplacement=function(_99f,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_99f);
var n=pool.length;
if(n==0||r==0){
return mi.EmptyIter;
}
var _9a5=mi.list(mi.repeat(0,r));
var _9a6=true;
return {repr:function(){
return "combinationsWithReplacement(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_9a6){
_9a6=false;
return mi.list(mi.remapView(_9a5,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_9a5[i]!=n-1){
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
_9a5=_9a5.slice(0,i).concat(mi.list(mi.repeat(_9a5[i]+1,r-i)));
return mi.list(mi.remapView(_9a5,pool));
}
}};
};
MochiKit.Iter.repeatSeq=function(_9a9,n){
if(n==0){
return MochiKit.Iter.EmptyIter;
}
var it=MochiKit.Iter.iter(_9a9);
return {next:function(){
try{
return it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration||--n<=0){
throw e;
}
it=MochiKit.Iter.iter(_9a9);
return it.next();
}
}};
};
MochiKit.Iter.permutations=function(_9ac,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_9ac);
var n=pool.length;
r=r||n;
if(r>n){
return mi.EmptyIter;
}
var _9b2=mi.list(mi.range(n));
var _9b3=mi.list(mi.range(n,n-r,-1));
var _9b4=true;
return {repr:function(){
return "permutations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_9b4){
_9b4=false;
return mi.list(mi.remapView(mi.islice(_9b2,0,r),pool));
}
if(n==0){
throw mi.StopIteration;
}
var done=true;
for(var i=r-1;i>=0;--i){
_9b3[i]-=1;
if(_9b3[i]==0){
_9b2=_9b2.slice(0,i).concat(_9b2.slice(i+1),_9b2[i]);
_9b3[i]=n-i;
}else{
var j=_9b3[i];
var jdx=_9b2.length-j;
var tmp=_9b2[i];
_9b2[i]=_9b2[jdx];
_9b2[jdx]=tmp;
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
return mi.list(mi.remapView(mi.islice(_9b2,0,r),pool));
}};
};
MochiKit.Iter._Range=function(_9ba,stop,step){
this.start=_9ba;
this.stop=stop;
this.step=step;
};
MochiKit.Iter._Range.prototype.__iterator__=function(){
return new MochiKit.Iter.range(this.start,this.stop,this.step);
};
MochiKit.Iter.xrange=function(){
var _9bd=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_9bd=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_9bd=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("xrange() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("xrange() step must not be 0");
}
return new MochiKit.Iter._Range(_9bd,stop,step);
};
MochiKit.Iter.isJavaLikeIterator=function(_9c0){
return _9c0&&typeof _9c0.hasNext=="function"&&typeof _9c0.next=="function";
};
MochiKit.Iter.javaLikeIterator=function(_9c1){
return {repr:function(){
return "javaLikeIterator";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(!_9c1.hasNext()){
throw MochiKit.Iter.StopIteration;
}
return _9c1.next();
}};
};
MochiKit.Iter.registerJavaLikeIteratorSupport=function(){
MochiKit.Iter.registerIteratorFactory("javaLikeIterator",MochiKit.Iter.isJavaLikeIterator,MochiKit.Iter.javaLikeIterator);
};
MochiKit.Iter.countValue=function(_9c2,elem,cmp){
cmp=cmp||MochiKit.Base.operator.ceq;
var n=0;
MochiKit.Iter.forEach(_9c2,function(e){
if(cmp(e,elem)){
++n;
}
});
return n;
};
MochiKit.Iter.limit=function(iter,n){
return MochiKit.Iter.takewhile(function(){
return n-->0;
},iter);
};
MochiKit.Iter.accumulate=function(_9c9,func){
var iter=MochiKit.Iter.iter(_9c9);
func=func||MochiKit.Base.operator.add;
var _9cc;
var _9cd=true;
return {next:function(){
if(_9cd){
_9cd=false;
_9cc=iter.next();
return _9cc;
}
_9cc=func(_9cc,iter.next());
return _9cc;
}};
};
MochiKit.Iter_ext.__new__=function(){
};
MochiKit.Iter_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Text");
}
MochiKit.Base.module(MochiKit,"Text_ext","1.5",["Base","Text"]);
MochiKit.Text.levenshteinDistance=function(s,t,_9d0){
_9d0=_9d0||false;
var n=s.length,m=t.length;
if(n==0){
return m;
}
if(m==0){
return n;
}
var d=new Array(n+1);
for(var r=0;r<n+1;++r){
d[r]=new Array(m+1);
}
for(var i=0;i<=n;++i){
d[i][0]=i;
}
for(var j=0;j<=m;++j){
d[0][j]=j;
}
for(var i=1;i<=n;++i){
for(var j=1;j<=m;++j){
var cost=(t[j-1]==s[i-1]?0:1);
var cell=Math.min(Math.min(d[i-1][j]+1,d[i][j-1]+1),d[i-1][j-1]+cost);
if(_9d0&&(i>2&&j>2)){
var _9d9=d[i-2][j-2]+1;
if(s[i-2]!=t[j-1]){
++_9d9;
}
if(s[i-1]!=t[j-2]){
++_9d9;
}
if(cell>_9d9){
cell=_9d9;
}
}
d[i][j]=cell;
}
}
return d[n][m];
};
MochiKit.Text.humanStringCompare=function(a,b){
if(a==b){
return 0;
}
var _9dc=/^(\+|\-)?\d+/;
var _9dd=/^\D+/;
while(a.length>0&&b.length>0){
var a0=null,ainc=-1;
var b0=null,binc=-1;
var ma=a.match(_9dd);
var mb=b.match(_9dd);
if(ma!=null&&mb!=null){
a0=ma[0].toLowerCase();
ainc=a0.length;
b0=mb[0].toLowerCase();
binc=b0.length;
}else{
if(ma==null){
ma=a.match(_9dc);
a0=parseInt(ma[0],10)+2<<15;
ainc=ma[0].length;
}else{
a0=a.charAt(0).toLowerCase().charCodeAt(0);
ainc=1;
}
if(mb==null){
mb=b.match(_9dc);
b0=parseInt(mb[0],10)+2<<15;
binc=mb[0].length;
}else{
b0=b.charAt(0).toLowerCase().charCodeAt(0);
binc=1;
}
}
if(a0<b0){
return -1;
}
if(a0>b0){
return +1;
}
a=a.substring(ainc);
b=b.substring(binc);
}
if(a.length>0){
return +1;
}
if(b.length>0){
return -1;
}
return 0;
};
MochiKit.Text_ext.__new__=function(){
};
MochiKit.Text_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.HeapQ");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"HeapQ","1.5",["Base","Iter"]);
MochiKit.HeapQ.heapify=function(x,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var n=x.length;
for(var i=Math.floor(n/2)-1;i>=0;--i){
MochiKit.HeapQ._siftup(x,i,cmp);
}
return x;
};
MochiKit.HeapQ._siftdown=function(heap,_9e9,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9ec=heap[pos];
while(pos>_9e9){
var _9ed=(pos-1)>>1;
var _9ee=heap[_9ed];
if(cmp(_9ec,_9ee)){
heap[pos]=_9ee;
pos=_9ed;
continue;
}
break;
}
heap[pos]=_9ec;
};
MochiKit.HeapQ._siftup=function(heap,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9f2=heap.length;
var _9f3=pos;
var _9f4=heap[pos];
var _9f5=2*pos+1;
while(_9f5<_9f2){
var _9f6=_9f5+1;
if(_9f6<_9f2&&!(cmp(heap[_9f5],heap[_9f6]))){
_9f5=_9f6;
}
heap[pos]=heap[_9f5];
pos=_9f5;
_9f5=2*pos+1;
}
heap[pos]=_9f4;
MochiKit.HeapQ._siftdown(heap,_9f3,pos,cmp);
};
MochiKit.HeapQ.heapPush=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
heap.push(item);
MochiKit.HeapQ._siftdown(heap,0,heap.length-1,cmp);
};
MochiKit.HeapQ.heapPop=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9fc=heap.pop();
var _9fd;
if(heap.length>0){
_9fd=heap[0];
heap[0]=_9fc;
MochiKit.HeapQ._siftup(heap,0,cmp);
}else{
_9fd=_9fc;
}
return _9fd;
};
MochiKit.HeapQ.heapReplace=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _a01=heap[0];
heap[0]=item;
MochiKit.HeapQ._siftup(heap,0,cmp);
return _a01;
};
MochiKit.HeapQ.heapPushPop=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
if(heap.length>0&&cmp(heap[0],item)){
var tmp=heap[0];
heap[0]=item;
item=tmp;
MochiKit.HeapQ._siftup(heap,0,cmp);
}
return item;
};
MochiKit.HeapQ.imergeSorted=function(_a06,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var _cmp=function(a,b){
var c=cmp(a[0],b[0]);
return c;
};
var h=[];
mi.forEach(mi.izip(mi.count(),mi.imap(mi.iter,_a06)),function(pair){
var _a10=pair[0],it=pair[1];
try{
var next=it.next;
h.push([next(),_a10,next]);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
}
});
m.HeapQ.heapify(h,_cmp);
return {repr:function(){
return "imergeSorted(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(h.length==0){
throw mi.StopIteration;
}
var s=h[0];
var v=s[0];
var next=s[2];
try{
s[0]=next();
m.HeapQ.heapReplace(h,s,_cmp);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
m.HeapQ.heapPop(h,_cmp);
}
return v;
}
}};
};
MochiKit.HeapQ.heapIter=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
return {next:function(){
if(heap.length==0){
throw MochiKit.Iter.StopIteration;
}
return MochiKit.HeapQ.heapPop(heap,cmp);
}};
};
MochiKit.HeapQ.nLargest=function(n,_a19,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var it=mi.iter(_a19);
var _a1e=mi.list(mi.islice(it,n));
if(_a1e.length==0){
return _a1e;
}
m.HeapQ.heapify(_a1e,cmp);
mi.forEach(it,function(elem){
m.HeapQ.heapPushPop(_a1e,elem,cmp);
});
_a1e.sort(function(a,b){
return -1*m.Base.compare(a,b);
});
return _a1e;
};
MochiKit.HeapQ.nSmallest=function(n,_a23,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var h=mi.list(_a23);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),mi.range(Math.min(n,h.length)));
};
MochiKit.HeapQ.isHeap=function(lst,cmp){
cmp=cmp||MochiKit.Base.operator.cle;
for(var pos=1;pos<lst.length;++pos){
var _a2b=(pos-1)>>1;
if(!cmp(lst[_a2b],lst[pos])){
return false;
}
}
return true;
};
MochiKit.HeapQ.heapSort=function(_a2c,cmp){
var m=MochiKit;
var h=m.Iter.list(_a2c);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),m.Iter.range(h.length));
};
MochiKit.HeapQ.__new__=function(){
};
MochiKit.HeapQ.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.HeapQ);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit._MersenneTwister19937");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"_MersenneTwister19937","1.5",["Base"]);
MochiKit._MersenneTwister19937=function(){
var N=624;
var M=397;
var _a32=2567483615;
var _a33=2147483648;
var _a34=2147483647;
var mt=new Array(N);
var mti=N+1;
function unsigned32(n1){
return n1<0?(n1^_a33)+_a33:n1;
}
function subtraction32(n1,n2){
return n1<n2?unsigned32((4294967296-(n2-n1))&4294967295):n1-n2;
}
function addition32(n1,n2){
return unsigned32((n1+n2)&4294967295);
}
function multiplication32(n1,n2){
var sum=0;
for(var i=0;i<32;++i){
if((n1>>>i)&1){
sum=addition32(sum,unsigned32(n2<<i));
}
}
return sum;
}
this.init_genrand=function(s){
mt[0]=unsigned32(s&4294967295);
for(mti=1;mti<N;mti++){
mt[mti]=addition32(multiplication32(1812433253,unsigned32(mt[mti-1]^(mt[mti-1]>>>30))),mti);
mt[mti]=unsigned32(mt[mti]&4294967295);
}
};
this.init_by_array=function(_a41,_a42){
var i,j,k;
this.init_genrand(19650218);
i=1;
j=0;
k=(N>_a42?N:_a42);
for(;k;k--){
mt[i]=addition32(addition32(unsigned32(mt[i]^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1664525)),_a41[j]),j);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=_a42){
j=0;
}
}
for(k=N-1;k;k--){
mt[i]=subtraction32(unsigned32((mt[i])^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1566083941)),i);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
}
mt[0]=2147483648;
};
this.genrand_int32=function(){
var y;
var _a47=new Array(0,_a32);
if(mti>=N){
var kk;
if(mti==N+1){
this.init_genrand(5489);
}
for(kk=0;kk<N-M;kk++){
y=unsigned32((mt[kk]&_a33)|(mt[kk+1]&_a34));
mt[kk]=unsigned32(mt[kk+M]^(y>>>1)^_a47[y&1]);
}
for(;kk<N-1;kk++){
y=unsigned32((mt[kk]&_a33)|(mt[kk+1]&_a34));
mt[kk]=unsigned32(mt[kk+(M-N)]^(y>>>1)^_a47[y&1]);
}
y=unsigned32((mt[N-1]&_a33)|(mt[0]&_a34));
mt[N-1]=unsigned32(mt[M-1]^(y>>>1)^_a47[y&1]);
mti=0;
}
y=mt[mti++];
y=unsigned32(y^(y>>>11));
y=unsigned32(y^((y<<7)&2636928640));
y=unsigned32(y^((y<<15)&4022730752));
y=unsigned32(y^(y>>>18));
return y;
};
this.genrand_int31=function(){
return (this.genrand_int32()>>>1);
};
this.genrand_real1=function(){
return this.genrand_int32()*(1/4294967295);
};
this.genrand_real2=function(){
return this.genrand_int32()*(1/4294967296);
};
this.genrand_real3=function(){
return ((this.genrand_int32())+0.5)*(1/4294967296);
};
this.genrand_res53=function(){
var a=this.genrand_int32()>>>5,b=this.genrand_int32()>>>6;
return (a*67108864+b)*(1/9007199254740992);
};
this._getState=function(){
return {mt:mt.slice(),mti:mti};
};
this._setState=function(_a4b){
mt=_a4b.mt;
mti=_a4b.mti;
};
};
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Random");
goog.require("MochiKit.Base");
goog.require("MochiKit._MersenneTwister19937");
}
MochiKit.Base.module(MochiKit,"Random","1.5",["Base","_MersenneTwister19937"]);
MochiKit.Random.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
MochiKit.Random._generator.seed(x);
};
MochiKit.Random.getState=function(){
return MochiKit.Random._generator.getState();
};
MochiKit.Random.setState=function(_a4d){
MochiKit.Random._generator.setState(_a4d);
};
MochiKit.Random.random=function(){
return MochiKit.Random._generator.random();
};
MochiKit.Random.randRange=function(_a4e,_a4f,step){
var self=MochiKit.Random;
if(arguments.length==1){
_a4f=_a4e;
_a4e=0;
}
step=step||1;
var _a52=_a4f-_a4e;
if(step==1&&_a52>0){
return Math.floor(_a4e+Math.floor(self.random()*_a52));
}
if(step>0){
var n=Math.floor((_a52+step-1)/step);
}else{
if(step<0){
var n=Math.floor((_a52+step+1)/step);
}
}
return _a4e+step*Math.floor(self.random()*n);
};
MochiKit.Random.uniform=function(a,b){
return a+(b-a)*MochiKit.Random.random();
};
MochiKit.Random.shuffle=function(_a56){
for(var i=_a56.length-1;i>0;--i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
var tmp=_a56[i];
_a56[i]=_a56[j];
_a56[j]=tmp;
}
return _a56;
};
MochiKit.Random.deal=function(_a5a,func){
func=func||MochiKit.Base.operator.identity;
var deck=new Array(_a5a);
for(var i=0;i<_a5a;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
deck[i]=deck[j];
deck[j]=func(i);
}
return deck;
};
MochiKit.Random.choice=function(seq){
return seq[Math.floor(MochiKit.Random.random()*seq.length)];
};
MochiKit.Random.shuffled=function(_a60){
var n=_a60.length;
var a=new Array(n);
a[0]=_a60[0];
for(var i=1;i<n-1;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
a[i]=a[j];
a[j]=_a60[i];
}
return a;
};
MochiKit.Random.sample=function(_a65,k){
var n=_a65.length;
var _a68=new Array(k);
var _a69={};
for(var i=0;i<k;++i){
var j=MochiKit.Random.randRange(n);
while(j in _a69){
j=MochiKit.Random.randRange(n);
}
_a69[j]=true;
_a68[i]=_a65[j];
}
return _a68;
};
MochiKit.Random._IRndGenerator=function(){
};
MochiKit.Random._IRndGenerator.prototype.seed=function(x){
};
MochiKit.Random._IRndGenerator.prototype.getState=function(){
};
MochiKit.Random._IRndGenerator.prototype.setState=function(_a6d){
};
MochiKit.Random._IRndGenerator.prototype.random=function(){
};
MochiKit.Random.MersenneTwister=function(x){
this._mt=new MochiKit._MersenneTwister19937();
this.seed(x);
};
MochiKit.Random.MersenneTwister.prototype.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
this._mt.init_genrand(x);
};
MochiKit.Random.MersenneTwister.prototype.getState=function(){
return this._mt._getState();
};
MochiKit.Random.MersenneTwister.prototype.setState=function(_a70){
this._mt._setState(_a70);
};
MochiKit.Random.MersenneTwister.prototype.random=function(){
return this._mt.genrand_real2();
};
MochiKit.Random.SystemRandom=function(){
};
MochiKit.Random.SystemRandom.prototype.seed=function(x){
};
MochiKit.Random.SystemRandom.prototype.getState=function(){
};
MochiKit.Random.SystemRandom.prototype.setState=function(_a72){
};
MochiKit.Random.SystemRandom.prototype.random=function(){
return Math.random();
};
MochiKit.Random._generator=null;
MochiKit.Random._setGenerator=function(_a73){
MochiKit.Random._generator=_a73;
};
MochiKit.Random.__new__=function(){
MochiKit.Random._setGenerator(new MochiKit.Random.MersenneTwister());
};
MochiKit.Random.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Random);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Bisect");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Bisect","1.5",["Base"]);
MochiKit.Bisect.bisectRight=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(x,a[mid])<0){
hi=mid;
}else{
lo=mid+1;
}
}
return lo;
};
MochiKit.Bisect.insortRight=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectRight(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisectLeft=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(a[mid],x)<0){
lo=mid+1;
}else{
hi=mid;
}
}
return lo;
};
MochiKit.Bisect.insortLeft=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectLeft(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisect=MochiKit.Bisect.bisectRight;
MochiKit.Bisect.insort=MochiKit.Bisect.insortRight;
MochiKit.Bisect.__new__=function(){
};
MochiKit.Bisect.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Bisect);


