/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base");
}
var MochiKit=MochiKit||{};
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
MochiKit.NAME="MochiKit";
MochiKit.VERSION="1.5";
MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.Base=MochiKit.Base||{};
MochiKit.Base.module=function(_1,_2,_3,_4){
var _5=_1[_2]=_1[_2]||{};
var _6=(_1.NAME?_1.NAME+".":"");
_5.NAME=_6+_2;
_5.VERSION=_3;
_5.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_5.toString=function(){
return this.__repr__();
};
for(var i=0;_4!=null&&i<_4.length;i++){
if(!(_4[i] in _1)){
throw _5.NAME+" depends on "+_6+_4[i]+"!";
}
}
return _5;
};
MochiKit.Base.module(MochiKit,"Base","1.5",[]);
MochiKit.Base.update=function(_8,_9){
if(_8===null||_8===undefined){
_8={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_8[k]=o[k];
}
}
}
return _8;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_d){
var _e=_d.split("-");
var cc=_e[0];
for(var i=1;i<_e.length;i++){
cc+=_e[i].charAt(0).toUpperCase()+_e[i].substring(1);
}
return cc;
},counter:function(n,_12){
if(arguments.length===0){
n=1;
}
if(arguments.length<2){
_12=1;
}
return function(){
var c=n;
n+=_12;
return c;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _1e=m.extend(null,arguments);
while(_1e.length){
var o=_1e.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_1e.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_21,obj,_23){
if(!_23){
_23=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_21){
_21=[];
}
for(var i=_23;i<l;i++){
_21.push(obj[i]);
}
}
return _21;
},updatetree:function(_26,obj){
if(_26===null||_26===undefined){
_26={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_26[k])=="object"&&typeof (v)=="object"&&!MochiKit.Base.isDateLike(v)&&!(v instanceof Array)){
arguments.callee(_26[k],v);
}else{
_26[k]=v;
}
}
}
}
return _26;
},setdefault:function(_2c,obj){
if(_2c===null||_2c===undefined){
_2c={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _2c)){
_2c[k]=o[k];
}
}
}
return _2c;
},keys:function(obj){
var _32=[];
for(var _33 in obj){
_32.push(_33);
}
return _32;
},values:function(obj){
var _35=[];
for(var _36 in obj){
_35.push(obj[_36]);
}
return _35;
},items:function(obj){
var _38=[];
for(var _39 in obj){
var v;
try{
v=obj[_39];
}
catch(e){
continue;
}
_38.push([_39,v]);
}
return _38;
},_newNamedError:function(_3b,_3c,_3d){
_3d.prototype=new MochiKit.Base.NamedError(_3b.NAME+"."+_3c);
_3d.prototype.constructor=_3d;
_3b[_3c]=_3d;
},operator:{NAME:"operator",truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},floordiv:function(a,b){
return Math.floor(a/b);
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},pow:function(a,b){
return Math.pow(a,b);
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},getitem:function(a,b){
return a[b];
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
},concat:function(a,b){
return MochiKit.Base.concat(a,b);
},iconcat:function(a,b){
return a.concat(b);
},setitem:function(a,b,c){
return a[b]=c;
},delitem:function(a,b){
delete a[b];
}},forwardCall:function(_8a){
return function(){
return this[_8a].apply(this,arguments);
};
},itemgetter:function(_8b){
return function(arg){
return arg[_8b];
};
},bool:function(_8d){
if(typeof (_8d)==="boolean"||_8d instanceof Boolean){
return _8d.valueOf();
}else{
if(typeof (_8d)==="string"||_8d instanceof String){
return _8d.length>0&&_8d!="false"&&_8d!="null"&&_8d!="undefined"&&_8d!="0";
}else{
if(typeof (_8d)==="number"||_8d instanceof Number){
return !isNaN(_8d)&&_8d!=0;
}else{
if(_8d!=null&&typeof (_8d.length)==="number"){
return _8d.length!==0;
}else{
return _8d!=null;
}
}
}
}
},typeMatcher:function(){
var _8e={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_8e[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _8e)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _9f=[];
for(var i=1;i<arguments.length;i++){
_9f.push(fn(arguments[i]));
}
return _9f;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _a5=m.isArrayLike;
if(arguments.length<=2){
if(!_a5(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _a6=[];
for(var i=0;i<lst.length;i++){
_a6.push(fn(lst[i]));
}
return _a6;
}else{
if(fn===null){
fn=Array;
}
var _a8=null;
for(var i=1;i<arguments.length;i++){
if(!_a5(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_a8===null||_a8>l){
_a8=l;
}
}
_a6=[];
for(var i=0;i<_a8;i++){
var _aa=[];
for(var j=1;j<arguments.length;j++){
_aa.push(arguments[j][i]);
}
_a6.push(fn.apply(this,_aa));
}
return _a6;
}
},xfilter:function(fn){
var _ad=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_ad.push(o);
}
}
return _ad;
},filter:function(fn,lst,_b2){
var _b3=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_b2);
}else{
if(typeof (_b2)=="undefined"||_b2===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_b3.push(o);
}
}
}else{
for(var i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_b2,o)){
_b3.push(o);
}
}
}
}
return _b3;
},_wrapDumbFunction:function(_b7){
return function(){
switch(arguments.length){
case 0:
return _b7();
case 1:
return _b7(arguments[0]);
case 2:
return _b7(arguments[0],arguments[1]);
case 3:
return _b7(arguments[0],arguments[1],arguments[2]);
}
var _b8=[];
for(var i=0;i<arguments.length;i++){
_b8.push("arguments["+i+"]");
}
return eval("(func("+_b8.join(",")+"))");
};
},methodcaller:function(_ba){
var _bb=MochiKit.Base.extend(null,arguments,1);
if(typeof (_ba)=="function"){
return function(obj){
return _ba.apply(obj,_bb);
};
}else{
return function(obj){
return obj[_ba].apply(obj,_bb);
};
}
},method:function(_be,_bf){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_bf,_be],arguments,2));
},compose:function(f1,f2){
var _c3=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_c3.push(fn);
}
return function(){
var _c7=arguments;
for(var i=_c3.length-1;i>=0;i--){
_c7=[_c3[i].apply(this,_c7)];
}
return _c7[0];
};
},bind:function(_c9,_ca){
if(typeof (_c9)=="string"){
_c9=_ca[_c9];
}
var _cb=_c9.im_func;
var _cc=_c9.im_preargs;
var _cd=_c9.im_self;
var m=MochiKit.Base;
if(typeof (_c9)=="function"&&typeof (_c9.apply)=="undefined"){
_c9=m._wrapDumbFunction(_c9);
}
if(typeof (_cb)!="function"){
_cb=_c9;
}
if(typeof (_ca)!="undefined"){
_cd=_ca;
}
if(typeof (_cc)=="undefined"){
_cc=[];
}else{
_cc=_cc.slice();
}
m.extend(_cc,arguments,2);
var _cf=function(){
var _d0=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_d0=m.concat(me.im_preargs,_d0);
}
var _d2=me.im_self;
if(!_d2){
_d2=this;
}
return me.im_func.apply(_d2,_d0);
};
_cf.im_self=_cd;
_cf.im_func=_cb;
_cf.im_preargs=_cc;
if(typeof (_cb.NAME)=="string"){
_cf.NAME="bind("+_cb.NAME+",...)";
}
return _cf;
},bindLate:function(_d3,_d4){
var m=MochiKit.Base;
var _d6=arguments;
if(typeof (_d3)==="string"){
_d6=m.extend([m.forwardCall(_d3)],arguments,1);
return m.bind.apply(this,_d6);
}
return m.bind.apply(this,_d6);
},bindMethods:function(_d7){
var _d8=MochiKit.Base.bind;
for(var k in _d7){
var _da=_d7[k];
if(typeof (_da)=="function"){
_d7[k]=_d8(_da,_d7);
}
}
},registerComparator:function(_db,_dc,_dd,_de){
MochiKit.Base.comparatorRegistry.register(_db,_dc,_dd,_de);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _e1=(typeof (a)=="undefined"||a===null);
var _e2=(typeof (b)=="undefined"||b===null);
if(_e1&&_e2){
return 0;
}else{
if(_e1){
return -1;
}else{
if(_e2){
return 1;
}
}
}
var m=MochiKit.Base;
var _e4=m._primitives;
if(!(typeof (a) in _e4&&typeof (b) in _e4)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _e5=m.repr;
throw new TypeError(_e5(a)+" and "+_e5(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _ea=MochiKit.Base.compare;
var _eb=a.length;
var _ec=0;
if(_eb>b.length){
_ec=1;
_eb=b.length;
}else{
if(_eb<b.length){
_ec=-1;
}
}
for(var i=0;i<_eb;i++){
var cmp=_ea(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _ec;
},registerRepr:function(_ef,_f0,_f1,_f2){
MochiKit.Base.reprRegistry.register(_ef,_f0,_f1,_f2);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
try{
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
catch(ignore){
}
}
try{
var _f4=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_f4=_f4.replace(/^\s+/,"").replace(/\s+/g," ");
_f4=_f4.replace(/,(\S)/,", $1");
var idx=_f4.indexOf("{");
if(idx!=-1){
_f4=_f4.substr(0,idx)+"{...}";
}
}
return _f4;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_fa,_fb,_fc,_fd){
MochiKit.Base.jsonRegistry.register(_fa,_fb,_fc,_fd);
},evalJSON:function(_fe){
return eval("("+MochiKit.Base._filterJSON(_fe)+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
return (m)?m[1]:s;
},serializeJSON:function(o){
var _102=typeof (o);
if(_102=="number"||_102=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_102=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _108;
if(typeof (o.toJSON)=="function"){
_108=o.toJSON();
if(o!==_108){
return me(_108);
}
}
if(typeof (o.__json__)=="function"){
_108=o.__json__();
if(o!==_108){
return me(_108);
}
}
if(typeof (o.json)=="function"){
_108=o.json();
if(o!==_108){
return me(_108);
}
}
if(_102!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_108=m.jsonRegistry.match(o);
if(o!==_108){
return me(_108);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_102=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_102=="function"){
return null;
}
res=[];
for(var k in o){
var _10c;
if(typeof (k)=="number"){
_10c="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_10c=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_10c+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(self,arr){
if(self.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(self,arr)===0);
},concat:function(){
var rval=[];
var _112=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_112(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _116=m.compare;
if(arguments.length==1){
return function(a,b){
return _116(a[key],b[key]);
};
}
var _119=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_119.length);i++){
var key=_119[i];
rval=_116(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _120=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _120(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_125,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _128=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_128(o,cur)==_125){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_12c,_12d,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_12d)=="undefined"||_12d===null){
_12d=0;
}
for(var i=_12d;i<end;i++){
if(lst[i]===_12c){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _133=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_133+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_133<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_133;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(MochiKit.Base.compare);
if(data.length%2==0){
var _137=data.length/2;
return (data[_137]+data[_137-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_139,_13a,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_13a)=="undefined"||_13a===null){
_13a=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_13a;i<end;i++){
if(cmp(lst[i],_139)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_13f){
var _140=[node];
var _141=MochiKit.Base.extend;
while(_140.length){
var res=_13f(_140.shift());
if(res){
_141(_140,res);
}
}
},nameFunctions:function(_143){
var base=_143.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _143){
var o=_143[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_147,_148){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_147)=="string"||(typeof (_147.nodeType)!="undefined"&&_147.nodeType>0))){
var kv=MochiKit.DOM.formContents(_147);
_147=kv[0];
_148=kv[1];
}else{
if(arguments.length==1){
if(typeof (_147.length)=="number"&&_147.length==2){
return arguments.callee(_147[0],_147[1]);
}
var o=_147;
_147=[];
_148=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_147.push(k);
_148.push(v[i]);
}
}else{
_147.push(k);
_148.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_147.length,_148.length);
var _150=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_148[i];
if(typeof (v)!="undefined"&&v!==null){
if(MochiKit.Base.isDateLike(v)){
v=MochiKit.DateTime.toISOTimestamp(v,true);
}
rval.push(_150(_147[i])+"="+_150(v));
}
}
return rval.join("&");
},parseQueryString:function(_151,_152){
var qstr=(_151.charAt(0)=="?")?_151.substring(1):_151;
var _154=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _156;
if(typeof (decodeURIComponent)!="undefined"){
_156=decodeURIComponent;
}else{
_156=unescape;
}
if(_152){
for(var i=0;i<_154.length;i++){
var pair=_154[i].split("=");
var name=_156(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_156(pair.join("=")));
}
}else{
for(var i=0;i<_154.length;i++){
pair=_154[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_156(name)]=_156(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_15c,wrap,_15e){
if(_15e){
this.pairs.unshift([name,_15c,wrap]);
}else{
this.pairs.push([name,_15c,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.moduleExport=function(_164,_165){
var SKIP={toString:true,NAME:true,VERSION:true};
var mods=MochiKit.Base.extend([],arguments,1);
while((_165=mods.shift())!=null){
for(var k in _165){
var v=_165[k];
if(v!=null){
var _16a=(typeof (v.__export__)=="boolean");
var _16b=(k[0]!=="_"&&!SKIP[k]);
if(_16a?v.__export__:_16b){
if(typeof (v)=="object"&&v.NAME&&v.VERSION){
mods.push(v);
}else{
_164[k]=_165[k];
}
}
}
}
}
return _164;
};
MochiKit.Base._exportSymbols=function(_16c,_16d){
if(MochiKit.__export__!==false&&_16d.__export__!==false){
MochiKit.Base.moduleExport(_16c,_16d);
}
};
MochiKit.Base._deprecated=function(_16e,name,_170,_171,_172){
if(typeof (_16e)==="string"){
if(_16e.indexOf("MochiKit.")===0){
_16e=_16e.substring(9);
}
_16e=MochiKit[_16e];
}
var _173=_170.split(".")[1];
var _174=_170.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_16e.NAME+"."+name+" is deprecated since version "+_171+". Use "+_170+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_173]){
throw new Error(msg);
}
return MochiKit[_173][_174].apply(this,arguments);
};
func.__export__=(_172===true);
_16e[name]=func;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=function(){
};
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3");
m._deprecated(m,"find","MochiKit.Base.findValue","1.3");
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_179){
return encodeURIComponent(_179).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_17a){
return escape(_17a).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.NamedError.prototype.constructor=m.NamedError;
m.NamedError.prototype.repr=function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
};
m.NamedError.prototype.toString=m.forwardCall("repr");
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.isValue=m.typeMatcher("boolean","number","string");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
m.nameFunctions(this.operator);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Iter","1.5",["Base"]);
MochiKit.Base.update(MochiKit.Iter,{registerIteratorFactory:function(name,_17d,_17e,_17f){
MochiKit.Iter.iteratorRegistry.register(name,_17d,_17e,_17f);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_181,_182){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_182;
},_181);
}
if(typeof (_181.next)=="function"){
return _181;
}else{
if(typeof (_181.iter)=="function"){
return _181.iter();
}else{
if(typeof (_181.__iterator__)=="function"){
return _181.__iterator__(false);
}
}
}
try{
return self.iteratorRegistry.match(_181);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_181)+": "+m.repr(_181)+" is not iterable");
}
throw e;
}
},count:function(n,step){
if(!n){
n=0;
}
if(arguments.length<2){
step=1;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n,step)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _18d=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_18d.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_193){
return _193.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _199=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_199);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _1a5=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_1a5=arguments[1];
stop=arguments[2];
}else{
_1a5=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_1a5,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
if(_1a5>=stop){
throw self.StopIteration;
}
var rval;
while(i<_1a5){
rval=seq.next();
i++;
}
_1a5+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _1af=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_1af));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1ba=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1ba.length>1){
try{
return _1ba[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1ba.shift();
}
}
if(_1ba.length==1){
var arg=_1ba.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1c5,sync,_1c7){
sync.pos[_1c5]=-1;
var m=MochiKit.Base;
var _1c9=m.listMin;
return {repr:function(){
return "tee("+_1c5+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1c5];
if(i==sync.max){
rval=_1c7.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1c5]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1c5]+=1;
if(i==sync.min&&_1c9(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1cc,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1cc=self.iter(_1cc);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1cc));
}
return rval;
},list:function(_1d3){
var rval;
if(_1d3 instanceof Array){
return _1d3.slice();
}
if(typeof (_1d3)=="function"&&!(_1d3 instanceof Function)&&typeof (_1d3.length)=="number"){
rval=[];
for(var i=0;i<_1d3.length;i++){
rval.push(_1d3[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1d3=self.iter(_1d3);
rval=[];
var _1d7;
try{
while(true){
_1d7=_1d3.next();
rval.push(_1d7);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1d9,_1da){
var i=0;
var x=_1da;
var self=MochiKit.Iter;
_1d9=self.iter(_1d9);
if(arguments.length<3){
try{
x=_1d9.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1d9.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1de=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1de=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1de=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1de>=stop)||(step<0&&_1de<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1de;
_1de+=step;
return rval;
},repr:function(){
return "range("+[_1de,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1e2,_1e3){
if(typeof (_1e3)=="undefined"||_1e3===null){
_1e3=0;
}
var x=_1e3;
var self=MochiKit.Iter;
_1e2=self.iter(_1e2);
try{
while(true){
x+=_1e2.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1e6){
var self=MochiKit.Iter;
_1e6=self.iter(_1e6);
try{
while(true){
_1e6.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1e8,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_1e8)&&!self.isIterable(_1e8)){
try{
for(var i=0;i<_1e8.length;i++){
func(_1e8[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_1e8));
}
return func;
},every:function(_1ee,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1ee).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1f1,cmp){
var rval=MochiKit.Iter.list(_1f1);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1f4){
var rval=MochiKit.Iter.list(_1f4);
rval.reverse();
return rval;
},some:function(_1f6,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1f6).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1fa,skip){
skip=skip||0;
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_1fa)&&!self.isIterable(_1fa)){
for(var i=skip;i<_1fa.length;i++){
lst.push(_1fa[i]);
}
}else{
_1fa=self.iter(_1fa);
try{
while(skip-->0){
_1fa.next();
}
while(true){
lst.push(_1fa.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1ff,_200){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_200=m.operator.identity;
}
_1ff=self.iter(_1ff);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1ff.next();
k=_200(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _207=true;
var _208=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_208(k,pk)===0){
fetch();
if(_207){
_207=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_208(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_209,_20a){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_20a=m.operator.identity;
}
_209=self.iter(_209);
var _20d=[];
var _20e=true;
var _20f;
var _210=m.compare;
while(true){
try{
var _211=_209.next();
var key=_20a(_211);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_20e||_210(key,_20f)!==0){
var _213=[];
_20d.push([key,_213]);
}
_213.push(_211);
_20e=false;
_20f=key;
}
return _20d;
},arrayLikeIter:function(_214){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_214.length){
throw MochiKit.Iter.StopIteration;
}
return _214[i++];
}};
},hasIterateNext:function(_216){
return (_216&&typeof (_216.iterateNext)=="function");
},iterateNextIter:function(_217){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_217.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Logging");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_21b,info){
this.num=num;
this.level=_21b;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_21e){
var self=MochiKit.Logging;
if(typeof (_21e)=="string"){
_21e=self.LogLevel[_21e];
}
return function(msg){
var _221=msg.level;
if(typeof (_221)=="string"){
_221=self.LogLevel[_221];
}
return _221>=_21e;
};
},isLogMessage:function(){
var _222=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _222)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_227){
this.counter=0;
if(typeof (_227)=="undefined"||_227===null){
_227=-1;
}
this.maxSize=_227;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_22c,_22d,_22e){
if(typeof (_22d)=="string"){
_22d=MochiKit.Logging.logLevelAtLeast(_22d);
}
var _22f=[_22d,_22e];
_22f.ident=_22c;
this.listeners[_22c]=_22f;
},removeListener:function(_230){
delete this.listeners[_230];
},baseLog:function(_231,_232){
if(typeof (_231)=="number"){
if(_231>=MochiKit.Logging.LogLevel.FATAL){
_231="FATAL";
}else{
if(_231>=MochiKit.Logging.LogLevel.ERROR){
_231="ERROR";
}else{
if(_231>=MochiKit.Logging.LogLevel.WARNING){
_231="WARNING";
}else{
if(_231>=MochiKit.Logging.LogLevel.INFO){
_231="INFO";
}else{
_231="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_231,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_234){
var _235=0;
if(!(typeof (_234)=="undefined"||_234===null)){
_235=Math.max(0,this._messages.length-_234);
}
return this._messages.slice(_235);
},getMessageText:function(_236){
if(typeof (_236)=="undefined"||_236===null){
_236=30;
}
var _237=this.getMessages(_236);
if(_237.length){
var lst=MochiKit.Base.map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_237);
lst.unshift("LAST "+_237.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_23a){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_23a||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _23c=m.partial;
var _23d=this.Logger;
var _23e=_23d.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_23c(_23e,"DEBUG"),log:_23c(_23e,"INFO"),error:_23c(_23e,"ERROR"),fatal:_23c(_23e,"FATAL"),warning:_23c(_23e,"WARNING")});
var self=this;
var _240=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_240("log");
this.logError=_240("error");
this.logDebug=_240("debug");
this.logFatal=_240("fatal");
this.logWarning=_240("warning");
this.logger=new _23d();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DateTime");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var date=new Date(parseInt(iso[0],10),parseInt(iso[1],10)-1,parseInt(iso[2],10));
date.setFullYear(iso[0]);
date.setMonth(iso[1]-1);
date.setDate(iso[2]);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_248,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_248=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_248,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_248,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_248,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_250){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _251=MochiKit.DateTime._padTwo;
if(_250){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
var lst=[(_250?_251(date.getHours()):date.getHours()),_251(date.getMinutes()),_251(date.getSeconds())];
return lst.join(":")+(_250?"Z":"");
};
MochiKit.DateTime.toISOTimestamp=function(date,_254){
if(typeof (date)=="undefined"||date===null){
return null;
}
var time=MochiKit.DateTime.toISOTime(date,_254);
var sep=_254?"T":" ";
if(_254){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+time;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _258=MochiKit.DateTime._padTwo;
var _259=MochiKit.DateTime._padFour;
return [_259(date.getFullYear()),_258(date.getMonth()+1),_258(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _25f=MochiKit.DateTime._padTwo;
return [_25f(d.getMonth()+1),_25f(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Format");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_261,_262,_263,_264,_265,_266,_267,_268,_269){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _261;
}
var _26b=_262;
var _26c=_263;
if(num<0){
num=-num;
}else{
_26b=_26b.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_264);
if(_265){
num=num*100;
_26c=fmt.percent+_26c;
}
num=MochiKit.Format.roundToFixed(num,_266);
var _26f=num.split(/\./);
var _270=_26f[0];
var frac=(_26f.length==1)?"":_26f[1];
var res="";
while(_270.length<_267){
_270="0"+_270;
}
if(_268){
while(_270.length>_268){
var i=_270.length-_268;
res=fmt.separator+_270.substring(i,_270.length)+res;
_270=_270.substring(0,i);
}
}
res=_270+res;
if(_266>0){
while(frac.length<_269){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _26b+res+_26c;
};
};
MochiKit.Format.numberFormatter=function(_274,_275,_276){
if(typeof (_275)=="undefined"){
_275="";
}
var _277=_274.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_277){
throw TypeError("Invalid pattern");
}
var _278=_274.substr(0,_277.index);
var _279=_274.substr(_277.index+_277[0].length);
if(_278.search(/-/)==-1){
_278=_278+"-";
}
var _27a=_277[1];
var frac=(typeof (_277[2])=="string"&&_277[2]!="")?_277[2]:"";
var _27c=(typeof (_277[3])=="string"&&_277[3]!="");
var tmp=_27a.split(/,/);
var _27e;
if(typeof (_276)=="undefined"){
_276="default";
}
if(tmp.length==1){
_27e=null;
}else{
_27e=tmp[1].length;
}
var _27f=_27a.length-_27a.replace(/0/g,"").length;
var _280=frac.length-frac.replace(/0/g,"").length;
var _281=frac.length;
var rval=MochiKit.Format._numberFormatter(_275,_278,_279,_276,_27c,_281,_27f,_27e,_280);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",m.map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_286){
if(typeof (_286)=="undefined"||_286===null){
_286="default";
}
if(typeof (_286)=="string"){
var rval=MochiKit.Format.LOCALE[_286];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_286]=rval;
}
return rval;
}else{
return _286;
}
};
MochiKit.Format.twoDigitAverage=function(_288,_289){
if(_289){
var res=_288/_289;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_28b){
var res=MochiKit.Format.roundToFixed(_28b,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_28e){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_28e){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_28e+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_290){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_290){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_290+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_292){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_292),_292);
};
MochiKit.Format.truncToFixed=function(_294,_295){
var _296=MochiKit.Format._numberToFixed(_294,_295);
var _297=_296.indexOf(".");
if(_297>0&&_297+_295+1<_296.length){
_296=_296.substring(0,_297+_295+1);
_296=MochiKit.Format._shiftNumber(_296,0);
}
return _296;
};
MochiKit.Format.roundToFixed=function(_298,_299){
var _29a=MochiKit.Format._numberToFixed(_298,_299);
var _29b=_29a.indexOf(".");
if(_29b>0&&_29b+_299+1<_29a.length){
var str=MochiKit.Format._shiftNumber(_29a,_299);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_29a=MochiKit.Format._shiftNumber(str,-_299);
}
return _29a;
};
MochiKit.Format._numberToFixed=function(_29d,_29e){
var str=_29d.toString();
var _2a0=str.split(/[eE]/);
var exp=(_2a0.length===1)?0:parseInt(_2a0[1],10)||0;
var _2a2=MochiKit.Format._shiftNumber(_2a0[0],exp);
_2a0=_2a2.split(/\./);
var _2a3=_2a0[0];
var frac=(_2a0.length===1)?"":_2a0[1];
while(frac.length<_29e){
frac+="0";
}
if(frac.length>0){
return _2a3+"."+frac;
}else{
return _2a3;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_2a8){
return MochiKit.Format.twoDigitFloat(100*_2a8)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text");
goog.require("MochiKit.Base");
goog.require("MochiKit.Format");
}
MochiKit.Base.module(MochiKit,"Text","1.5",["Base","Format"]);
MochiKit.Text.startsWith=function(_2ad,str){
return str!=null&&_2ad!=null&&str.indexOf(_2ad)==0;
};
MochiKit.Text.endsWith=function(_2af,str){
return str!=null&&_2af!=null&&str.lastIndexOf(_2af)==Math.max(str.length-_2af.length,0);
};
MochiKit.Text.contains=function(_2b1,str){
return str!=null&&_2b1!=null&&str.indexOf(_2b1)>=0;
};
MochiKit.Text.padLeft=function(str,_2b4,_2b5){
str=str||"";
_2b5=_2b5||" ";
while(str.length<_2b4){
str=_2b5+str;
}
return str;
};
MochiKit.Text.padRight=function(str,_2b7,_2b8){
str=str||"";
_2b8=_2b8||" ";
while(str.length<_2b7){
str+=_2b8;
}
return str;
};
MochiKit.Text.truncate=function(str,_2ba,tail){
if(str==null||str.length<=_2ba||_2ba<0){
return str;
}else{
if(tail!=null){
str=str.slice(0,Math.max(0,_2ba-tail.length));
if(typeof (str)=="string"){
return str+tail;
}else{
return MochiKit.Base.extend(str,tail);
}
}else{
return str.slice(0,_2ba);
}
}
};
MochiKit.Text.split=function(str,_2bd,max){
if(str==null){
return str;
}
_2bd=_2bd||"\n";
var bits=str.split(_2bd);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(max,bits.length,bits.slice(max,bits.length).join(_2bd));
return bits;
};
MochiKit.Text.rsplit=function(str,_2c1,max){
if(str==null){
return str;
}
_2c1=_2c1||"\n";
var bits=str.split(_2c1);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(0,bits.length-max,bits.slice(0,bits.length-max).join(_2c1));
return bits;
};
MochiKit.Text.formatter=function(_2c4,_2c5){
if(typeof (_2c5)=="undefined"){
_2c5=MochiKit.Format.formatLocale();
}else{
if(typeof (_2c5)=="string"){
_2c5=MochiKit.Format.formatLocale(_2c5);
}
}
var _2c6=MochiKit.Text._parsePattern(_2c4);
return function(){
var _2c7=MochiKit.Base.extend([],arguments);
var res=[];
for(var i=0;i<_2c6.length;i++){
if(typeof (_2c6[i])=="string"){
res.push(_2c6[i]);
}else{
res.push(MochiKit.Text.formatValue(_2c6[i],_2c7,_2c5));
}
}
return res.join("");
};
};
MochiKit.Text.format=function(_2ca){
var func=MochiKit.Text.formatter(_2ca);
return func.apply(this,MochiKit.Base.extend([],arguments,1));
};
MochiKit.Text.formatValue=function(spec,_2cd,_2ce){
var self=MochiKit.Text;
if(typeof (spec)==="string"){
spec=self._parseFormatFlags(spec,0,spec.length-1);
}
for(var i=0;spec.path!=null&&i<spec.path.length;i++){
if(_2cd!=null){
_2cd=_2cd[spec.path[i]];
}
}
if(typeof (_2ce)=="undefined"){
_2ce=MochiKit.Format.formatLocale();
}else{
if(typeof (_2ce)=="string"){
_2ce=MochiKit.Format.formatLocale(_2ce);
}
}
var str="";
if(spec.numeric){
if(typeof (_2cd)!="number"||isNaN(_2cd)){
str="";
}else{
if(_2cd===Number.POSITIVE_INFINITY){
str="\u221e";
}else{
if(_2cd===Number.NEGATIVE_INFINITY){
str="-\u221e";
}else{
var sign=(spec.sign==="-")?"":spec.sign;
sign=(_2cd<0)?"-":sign;
_2cd=Math.abs(_2cd);
if(spec.format==="%"){
str=self._truncToPercent(_2cd,spec.precision);
}else{
if(spec.format==="d"){
str=MochiKit.Format.roundToFixed(_2cd,0);
}else{
if(spec.radix!=10){
str=Math.floor(_2cd).toString(spec.radix);
if(spec.format==="x"){
str=str.toLowerCase();
}else{
if(spec.format==="X"){
str=str.toUpperCase();
}
}
}else{
if(spec.precision>=0){
str=MochiKit.Format.roundToFixed(_2cd,spec.precision);
}else{
str=_2cd.toString();
}
}
}
}
if(spec.padding==="0"&&spec.format==="%"){
str=self.padLeft(str,spec.width-sign.length-1,"0");
}else{
if(spec.padding=="0"){
str=self.padLeft(str,spec.width-sign.length,"0");
}
}
str=self._localizeNumber(str,_2ce,spec.grouping);
str=sign+str;
}
}
}
if(str!==""&&spec.format==="%"){
str=str+_2ce.percent;
}
}else{
if(spec.format=="r"){
str=MochiKit.Base.repr(_2cd);
}else{
str=(_2cd==null)?"null":_2cd.toString();
}
str=self.truncate(str,spec.precision);
}
if(spec.align=="<"){
str=self.padRight(str,spec.width);
}else{
str=self.padLeft(str,spec.width);
}
return str;
};
MochiKit.Text._localizeNumber=function(num,_2d4,_2d5){
var _2d6=num.split(/\./);
var _2d7=_2d6[0];
var frac=(_2d6.length==1)?"":_2d6[1];
var res=(frac.length>0)?_2d4.decimal:"";
while(_2d5&&frac.length>3){
res=res+frac.substring(0,3)+_2d4.separator;
frac=frac.substring(3);
if(_2d7.charAt(0)=="0"){
_2d7=_2d7.substring(1);
}
}
if(frac.length>0){
res+=frac;
}
while(_2d5&&_2d7.length>3){
var pos=_2d7.length-3;
res=_2d4.separator+_2d7.substring(pos)+res;
_2d7=_2d7.substring((_2d7.charAt(0)=="0")?1:0,pos);
}
return _2d7+res;
};
MochiKit.Text._parsePattern=function(_2db){
var self=MochiKit.Text;
var _2dd=[];
var re=/{[^{}]*}|{{?|}}?/g;
var _2df=re.lastIndex=0;
var m;
while((m=re.exec(_2db))!=null){
if(_2df<m.index){
_2dd.push(_2db.substring(_2df,m.index));
}
var str=m[0];
_2df=m.index+str.length;
if(self.startsWith("{",str)&&self.endsWith("}",str)){
_2dd.push(self._parseFormat(_2db,m.index+1,_2df-1));
}else{
if(self.startsWith("{{",str)||self.startsWith("}}",str)){
_2dd.push(str.substring(1));
}else{
if(self.startsWith("{",str)){
var msg="unescaped { char, should be escaped as {{";
throw new self.FormatPatternError(_2db,m.index,msg);
}else{
if(self.startsWith("}",str)){
var msg="unescaped } char, should be escaped as }}";
throw new self.FormatPatternError(_2db,m.index,msg);
}
}
}
}
}
if(_2df<_2db.length){
_2dd.push(_2db.substring(_2df));
}
return _2dd;
};
MochiKit.Text._parseFormat=function(_2e3,_2e4,_2e5){
var self=MochiKit.Text;
var text=_2e3.substring(_2e4,_2e5);
var _2e8=self.split(text,":",1);
var path=_2e8[0];
var _2ea=_2e4+path.length+((_2e8.length==1)?0:1);
var info=self._parseFormatFlags(_2e3,_2ea,_2e5);
info.path=(path=="")?[]:path.split(".");
for(var i=0;i<info.path.length;i++){
var v=info.path[i];
v=v.replace(/^\s+/,"").replace(/\s+$/,"");
if(v==""&&info.path.length==1){
v=0;
}else{
if(v==""){
var msg="format value path contains blanks";
throw new self.FormatPatternError(_2e3,_2e4,msg);
}else{
if(/^\d+$/.test(v)){
v=parseInt(v,10);
}
}
}
info.path[i]=v;
}
if(info.path.length<=0||typeof (info.path[0])!="number"){
info.path.unshift(0);
}
return info;
};
MochiKit.Text._parseFormatFlags=function(_2ef,_2f0,_2f1){
var _2f2=MochiKit.Base.update;
var info={numeric:false,format:"s",width:0,precision:-1,align:">",sign:"-",padding:" ",grouping:false};
var text=_2ef.substring(_2f0,_2f1).replace(/\s+$/,"");
var m=/^([<>+ 0,-]+)?(\d+)?(\.\d*)?([srbdoxXf%])?(.*)$/.exec(text);
var _2f6=m[1];
var _2f7=m[2];
var _2f8=m[3];
var type=m[4];
var _2fa=m[5];
for(var i=0;_2f6&&i<_2f6.length;i++){
var chr=_2f6.charAt(i);
if(chr=="<"||chr==">"){
info.align=chr;
}else{
if(chr=="+"||chr=="-"||chr==" "){
info.sign=chr;
}else{
if(chr=="0"){
info.padding=chr;
}else{
if(chr==","){
info.grouping=true;
}
}
}
}
}
if(_2f7){
info.width=parseInt(_2f7,10);
}
if(_2f8&&_2f8.length>1){
info.precision=parseInt(_2f8.substring(1),10);
}
if(type=="s"||type=="r"){
info.format=type;
}else{
if(type=="b"){
_2f2(info,{numeric:true,format:type,radix:2});
}else{
if(type=="o"){
_2f2(info,{numeric:true,format:type,radix:8});
}else{
if(type=="x"||type=="X"){
_2f2(info,{numeric:true,format:type,radix:16});
}else{
if(type=="d"||type=="f"||type=="%"){
_2f2(info,{numeric:true,format:type,radix:10});
}
}
}
}
}
if(_2fa){
var msg="unsupported format flag: "+_2fa.charAt(0);
throw new MochiKit.Text.FormatPatternError(_2ef,_2f0,msg);
}
return info;
};
MochiKit.Text._truncToPercent=function(_2fe,_2ff){
var str;
if(_2ff>=0){
str=MochiKit.Format.roundToFixed(_2fe,_2ff+2);
}else{
str=(_2fe==null)?"0":_2fe.toString();
}
var arr=MochiKit.Text.split(str,".",2);
var frac=MochiKit.Text.padRight(arr[1],2,"0");
var _303=arr[0]+frac.substring(0,2);
frac=frac.substring(2);
while(/^0[0-9]/.test(_303)){
_303=_303.substring(1);
}
return (frac.length<=0)?_303:_303+"."+frac;
};
MochiKit.Text.FormatPatternError=function(_304,pos,_306){
this.pattern=_304;
this.pos=pos;
this.message=_306;
};
MochiKit.Text.FormatPatternError.prototype=new MochiKit.Base.NamedError("MochiKit.Text.FormatPatternError");
MochiKit.Text.FormatPatternError.constructor=MochiKit.Text.FormatPatternError;
if(MochiKit.__export__){
formatter=MochiKit.Text.formatter;
format=MochiKit.Text.format;
formatValue=MochiKit.Text.formatValue;
}
MochiKit.Base.nameFunctions(MochiKit.Text);
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Async");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_307){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_307;
this.silentlyCancelled=false;
this.chained=false;
this.finalized=false;
};
MochiKit.Async.Deferred.prototype.repr=function(){
return "Deferred("+this.id+", "+this.state()+")";
};
MochiKit.Async.Deferred.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.Deferred.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.Deferred.prototype.state=function(){
if(this.fired==-1){
return "unfired";
}else{
if(this.fired===0){
return "success";
}else{
return "error";
}
}
};
MochiKit.Async.Deferred.prototype.cancel=function(e){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(typeof (e)==="string"){
e=new self.GenericError(e);
}else{
if(!(e instanceof Error)){
e=new self.CancelledError(this);
}
}
this.errback(e);
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel(e);
}
}
};
MochiKit.Async.Deferred.prototype._resback=function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
if(this.paused===0){
this._fire();
}
};
MochiKit.Async.Deferred.prototype._check=function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
};
MochiKit.Async.Deferred.prototype.callback=function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.errback=function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.addBoth=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
};
MochiKit.Async.Deferred.prototype.addCallback=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
};
MochiKit.Async.Deferred.prototype.addErrback=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
};
MochiKit.Async.Deferred.prototype.addCallbacks=function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype.setFinalizer=function(fn){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
this._finalizer=fn;
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype._fire=function(){
var _314=this.chain;
var _315=this.fired;
var res=this.results[_315];
var self=this;
var cb=null;
while(_314.length>0&&this.paused===0){
var pair=_314.shift();
var f=pair[_315];
if(f===null){
continue;
}
try{
var ret=f(res);
if(ret!==undefined){
res=ret;
}
_315=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self.paused--;
self._resback(res);
};
this.paused++;
}
}
catch(err){
_315=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_315;
this.results[_315]=res;
if(this.chain.length==0&&this.paused===0&&this._finalizer){
this.finalized=true;
this._finalizer(res);
}
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_31e){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_320){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _323=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_323.length;i++){
var func=_323[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e2){
}
}
var _328=null;
try{
_328=this.status;
if(!_328&&m.isNotEmpty(this.responseText)){
_328=304;
}
}
catch(e){
}
if(_328==200||_328==201||_328==204||_328==304||_328==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e2){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_32c){
if(typeof (_32c)=="undefined"||_32c===null){
_32c="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_32c);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self.callLater(0,self._doXHR,url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:"",async:true},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,opts.async,opts.username,opts.password);
}else{
req.open(opts.method,url,opts.async);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _339=opts.headers;
if(!m.isArrayLike(_339)){
_339=m.items(_339);
}
for(var i=0;i<_339.length;i++){
var _33b=_339[i];
var name=_33b[0];
var _33d=_33b[1];
req.setRequestHeader(name,_33d);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},loadScript:function(url){
var d=new MochiKit.Async.Deferred();
var _348=document.createElement("script");
_348.type="text/javascript";
_348.src=url;
_348.onload=function(){
_348.onload=null;
_348.onerror=null;
_348.onreadystatechange=null;
_348=null;
d.callback();
};
_348.onerror=function(msg){
_348.onload=null;
_348.onerror=null;
_348.onreadystatechange=null;
_348=null;
msg="Failed to load script at "+url+": "+msg;
d.errback(new URIError(msg,url));
};
_348.onreadystatechange=function(){
if(_348.readyState=="loaded"||_348.readyState=="complete"){
_348.onload();
}else{
MochiKit.Async.callLater(10,_348.onerror,"Script loading timed out");
}
};
document.getElementsByTagName("head")[0].appendChild(_348);
return d;
},wait:function(_34a,_34b){
var d=new MochiKit.Async.Deferred();
var cb=MochiKit.Base.bind("callback",d,_34b);
var _34e=setTimeout(cb,Math.floor(_34a*1000));
d.canceller=function(){
try{
clearTimeout(_34e);
}
catch(e){
}
};
return d;
},callLater:function(_34f,func){
var m=MochiKit.Base;
var _352=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_34f).addCallback(function(res){
return _352();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype.__class__=MochiKit.Async.DeferredLock;
MochiKit.Async.DeferredLock.prototype.acquire=function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
};
MochiKit.Async.DeferredLock.prototype.release=function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
};
MochiKit.Async.DeferredLock.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.DeferredLock.prototype.repr=function(){
var _355;
if(this.locked){
_355="locked, "+this.waiting.length+" waiting";
}else{
_355="unlocked";
}
return "DeferredLock("+this.id+", "+_355+")";
};
MochiKit.Async.DeferredLock.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.DeferredList=function(list,_357,_358,_359,_35a){
MochiKit.Async.Deferred.apply(this,[_35a]);
this.list=list;
var _35b=[];
this.resultList=_35b;
this.finishedCount=0;
this.fireOnOneCallback=_357;
this.fireOnOneErrback=_358;
this.consumeErrors=_359;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_35b.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_357){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype.constructor=MochiKit.Async.DeferredList;
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_35f,_360,_361){
this.resultList[_35f]=[_360,_361];
this.finishedCount+=1;
if(this.fired==-1){
if(_360&&this.fireOnOneCallback){
this.callback([_35f,_361]);
}else{
if(!_360&&this.fireOnOneErrback){
this.errback(_361);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_360&&this.consumeErrors){
_361=null;
}
return _361;
};
MochiKit.Async.gatherResults=function(_362){
var d=new MochiKit.Async.DeferredList(_362,false,true,false);
d.addCallback(function(_364){
var ret=[];
for(var i=0;i<_364.length;i++){
ret.push(_364[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _369;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_369=r;
}else{
if(r instanceof Error){
_369=self.fail(r);
}else{
_369=self.succeed(r);
}
}
}
catch(e){
_369=self.fail(e);
}
return _369;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_36d){
this.deferred=_36d;
});
ne("CancelledError",function(_36e){
this.deferred=_36e;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DOM");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _376=self._document;
var _377=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_377;
self._document=_376;
throw e;
}
self._window=_377;
self._document=_376;
return rval;
},formContents:function(elem){
var _37a=[];
var _37b=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _380=elem.tagName.toUpperCase();
if(_380==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_380==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_37a.push(name);
_37b.push(v);
return null;
}
_37a.push(name);
_37b.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_37a.push(name);
_37b.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_37a.push(name);
_37b.push(v);
}
return null;
}
}
if(_380==="FORM"||_380==="P"||_380==="SPAN"||_380==="DIV"){
return elem.childNodes;
}
_37a.push(name);
_37b.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_37a,_37b];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _389=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_389;
throw e;
}
self._document=_389;
return rval;
},registerDOMConverter:function(name,_38c,wrap,_38e){
MochiKit.DOM.domConverters.register(name,_38c,wrap,_38e);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _395=im.repeat;
}
var map=m.map;
var _397=self.domConverters;
var _398=arguments.callee;
var _399=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _39a=null;
try{
_39a=iter(node);
}
catch(e){
}
if(_39a){
return map(_398,_39a,_395(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _398(n,ctx);
};
return map(func,node);
}
}
try{
node=_397.match(node,ctx);
continue;
}
catch(e){
if(e!=_399){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_39e){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_39e)=="string"){
_39e=self.getElement(_39e);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_39e){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_3a2){
var o={};
o[attr]=_3a2;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3a7=self.attributeArray.renames[attr];
var _3a8=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_3a7){
return node[_3a7];
}
var _3a9=node.getAttribute(attr);
if(_3a9!=_3a8){
return _3a9;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3ad=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_3ad){
return node[_3ad];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_3af){
var elem=node;
var self=MochiKit.DOM;
var base=MochiKit.Base;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_3af){
if(self.attributeArray.compliant){
for(var k in _3af){
var v=_3af[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _3b5=self.attributeArray.renames;
for(var k in _3af){
v=_3af[k];
var _3b6=_3b5[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_3b6)=="string"){
elem[_3b6]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3ba=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3bb=MochiKit.Base.concat;
while(_3ba.length){
var n=_3ba.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_3ba=_3bb(n,_3ba);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3c0=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3c1=elem.parentNode;
var _3c2=MochiKit.Base.concat;
while(_3c0.length){
var n=_3c0.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_3c1.insertBefore(n,elem);
}else{
_3c0=_3c2(n,_3c0);
}
}
}
return _3c1;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3c7=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_3c7);
}else{
return self.appendChildNodes(elem.parentNode,_3c7);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _3cb;
while((_3cb=elem.firstChild)){
elem.removeChild(_3cb);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_3cd){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_3cd)=="string"||typeof (_3cd)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _3d2=self._xhtml;
if(_3cd&&!self.attributeArray.compliant){
var _3d3="";
if("name" in _3cd){
_3d3+=" name=\""+self.escapeHTML(_3cd.name)+"\"";
}
if(name=="input"&&"type" in _3cd){
_3d3+=" type=\""+self.escapeHTML(_3cd.type)+"\"";
}
if(_3d3){
name="<"+name+_3d3+">";
_3d2=false;
}
}
var d=self._document;
if(_3d2&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_3cd){
self.updateNodeAttributes(elem,_3cd);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
if(e&&e.parentNode){
e.parentNode.removeChild(e);
}
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _3dc=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_3dc);
_3dc.replaceChild(src,dest);
}else{
_3dc.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByClassName:function(_3df,_3e0){
var self=MochiKit.DOM;
if(self._document.getElementsByClassName){
self.getElementsByClassName=function(_3e2,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _3e4=elm.getElementsByClassName(_3e2);
return MochiKit.Base.extend([],_3e4);
};
}else{
if(self._document.evaluate){
self.getElementsByClassName=function(_3e5,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _3e7=_3e5.split(" ");
var _3e8="";
for(var k=0,kl=_3e7.length;k<kl;++k){
_3e8+="[contains(concat(' ', @class, ' '), ' "+_3e7[k]+" ')]";
}
var tag="*";
var _3ec=[];
try{
var _3ed="http://www.w3.org/1999/xhtml";
var _3ee=(self._document.documentElement.namespaceURI===_3ed)?_3ed:null;
_3ec=self._document.evaluate(".//"+tag+_3e8,elm,_3ee,0,null);
}
catch(e){
_3ec=self._document.evaluate(".//"+tag+_3e8,elm,null,0,null);
}
return MochiKit.Iter.list(_3ec);
};
}else{
self.getElementsByClassName=function(_3ef,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _3f1=_3ef.split(" ");
var _3f2=[];
for(var k=0,kl=_3f1.length;k<kl;++k){
_3f2.push(new RegExp("(^|\\s)"+_3f1[k]+"(\\s|$)"));
}
var _3f5=elm.all?elm.all:elm.getElementsByTagName("*");
var _3f6=[];
for(var l=0,ll=_3f5.length;l<ll;++l){
var _3f9=_3f5[l];
var _3fa=false;
for(var m=0,ml=_3f2.length;m<ml;++m){
_3fa=_3f2[m].test(_3f9.className);
if(!_3fa){
break;
}
}
if(_3fa){
_3f6.push(_3f9);
}
}
return _3f6;
};
}
}
return self.getElementsByClassName(_3df,_3e0);
},getElementsByTagAndClassName:function(_3fd,_3fe,_3ff){
var self=MochiKit.DOM;
if(typeof (_3fd)=="undefined"||_3fd===null){
_3fd="*";
}
if(typeof (_3ff)=="undefined"||_3ff===null){
_3ff=self._document;
}
_3ff=self.getElement(_3ff);
if(_3ff==null){
return [];
}
if(_3fd=="*"){
return self.getElementsByClassName(_3fe,_3ff);
}
var _401=(_3ff.getElementsByTagName(_3fd)||self._document.all);
if(typeof (_3fe)=="undefined"||_3fe===null){
return MochiKit.Base.extend(null,_401);
}
var _402=[];
for(var i=0;i<_401.length;i++){
var _404=_401[i];
var cls=_404.className;
if(typeof (cls)!="string"){
cls=_404.getAttribute("class");
}
if(typeof (cls)=="string"){
var _406=cls.split(" ");
for(var j=0;j<_406.length;j++){
if(_406[j]==_3fe){
_402.push(_404);
break;
}
}
}
}
return _402;
},_newCallStack:function(path,once){
var rval=function(){
var _40b=arguments.callee.callStack;
for(var i=0;i<_40b.length;i++){
if(_40b[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_40d,path,func,once){
var self=MochiKit.DOM;
var _412=_40d[path];
var _413=_412;
if(!(typeof (_412)=="function"&&typeof (_412.callStack)=="object"&&_412.callStack!==null)){
_413=self._newCallStack(path,once);
if(typeof (_412)=="function"){
_413.callStack.push(_412);
}
_40d[path]=_413;
}
_413.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_416){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_416=self.getElement(_416);
if(_416){
_416.focus();
}
});
},setElementClass:function(_418,_419){
var self=MochiKit.DOM;
var obj=self.getElement(_418);
if(self.attributeArray.compliant){
obj.setAttribute("class",_419);
}else{
obj.setAttribute("className",_419);
}
},toggleElementClass:function(_41c){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_41c)){
self.removeElementClass(obj,_41c);
}
}
},addElementClass:function(_420,_421){
var self=MochiKit.DOM;
var obj=self.getElement(_420);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_421);
return true;
}
if(cls==_421){
return false;
}
var _425=cls.split(" ");
for(var i=0;i<_425.length;i++){
if(_425[i]==_421){
return false;
}
}
self.setElementClass(obj,cls+" "+_421);
return true;
},removeElementClass:function(_427,_428){
var self=MochiKit.DOM;
var obj=self.getElement(_427);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_428){
self.setElementClass(obj,"");
return true;
}
var _42c=cls.split(" ");
for(var i=0;i<_42c.length;i++){
if(_42c[i]==_428){
_42c.splice(i,1);
self.setElementClass(obj,_42c.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_42e,_42f,_430){
var obj=MochiKit.DOM.getElement(_42e);
var res=MochiKit.DOM.removeElementClass(obj,_42f);
if(res){
MochiKit.DOM.addElementClass(obj,_430);
}
return res;
},hasElementClass:function(_433,_434){
var obj=MochiKit.DOM.getElement(_433);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _437=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_437.length;j++){
if(_437[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _43f=[dom];
var self=MochiKit.DOM;
var _441=self.escapeHTML;
var _442=self.attributeArray;
while(_43f.length){
dom=_43f.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _443=[];
var _444=_442(dom);
for(var i=0;i<_444.length;i++){
var a=_444[i];
_443.push([" ",a.name,"=\"",_441(a.value),"\""]);
}
_443.sort();
for(i=0;i<_443.length;i++){
var _447=_443[i];
for(var j=0;j<_447.length;j++){
lst.push(_447[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_43f.push("</"+dom.tagName.toLowerCase()+">");
var _449=dom.childNodes;
for(i=_449.length-1;i>=0;i--){
_43f.push(_449[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_441(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_44b){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _450=node.nodeValue;
if(typeof (_450)=="string"){
rval.push(_450);
}
})(MochiKit.DOM.getElement(node));
if(_44b){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_451){
_451=MochiKit.DOM.getElement(_451);
for(var i=0;i<_451.childNodes.length;i++){
var node=_451.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_454,_455,_456){
var self=MochiKit.DOM;
if(typeof (_454)=="undefined"||_454===null){
_454="*";
}
if(typeof (_456)=="undefined"||_456===null){
_456=self._document;
}
_456=self.getElement(_456);
if(_456==null){
return null;
}
var _458=(_456.getElementsByTagName(_454)||self._document.all);
if(_458.length<=0){
return null;
}else{
if(typeof (_455)=="undefined"||_455===null){
return _458[0];
}
}
for(var i=0;i<_458.length;i++){
var _45a=_458[i];
var cls=_45a.className;
if(typeof (cls)!="string"){
cls=_45a.getAttribute("class");
}
if(typeof (cls)=="string"){
var _45c=cls.split(" ");
for(var j=0;j<_45c.length;j++){
if(_45c[j]==_455){
return _45a;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_45f,_460){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_45f)=="undefined"||_45f===null){
_45f="*";
}else{
_45f=_45f.toUpperCase();
}
if(typeof (_460)=="undefined"||_460===null){
_460=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _462=elem.tagName.toUpperCase();
if((_45f==="*"||_45f==_462)&&(_460===null||self.hasElementClass(elem,_460))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _465="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_465);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _466=this._document.createElement("span");
var _467;
if(_466&&_466.attributes&&_466.attributes.length>0){
var _468=m.filter;
_467=function(node){
return _468(_467.ignoreAttrFilter,node.attributes);
};
_467.ignoreAttr={};
var _46a=_466.attributes;
var _46b=_467.ignoreAttr;
for(var i=0;i<_46a.length;i++){
var a=_46a[i];
_46b[a.name]=a.value;
}
_467.ignoreAttrFilter=function(a){
return (_467.ignoreAttr[a.name]!=a.value);
};
_467.compliant=false;
_467.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","rowspan":"rowSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_467=function(node){
return node.attributes;
};
_467.compliant=true;
_467.ignoreAttr={};
_467.renames={};
}
_467.__export__=false;
this.attributeArray=_467;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _470=this.createDOMFunc;
this.UL=_470("ul");
this.OL=_470("ol");
this.LI=_470("li");
this.DL=_470("dl");
this.DT=_470("dt");
this.DD=_470("dd");
this.TD=_470("td");
this.TR=_470("tr");
this.TBODY=_470("tbody");
this.THEAD=_470("thead");
this.TFOOT=_470("tfoot");
this.TABLE=_470("table");
this.TH=_470("th");
this.INPUT=_470("input");
this.SPAN=_470("span");
this.A=_470("a");
this.DIV=_470("div");
this.IMG=_470("img");
this.BUTTON=_470("button");
this.TT=_470("tt");
this.PRE=_470("pre");
this.H1=_470("h1");
this.H2=_470("h2");
this.H3=_470("h3");
this.H4=_470("h4");
this.H5=_470("h5");
this.H6=_470("h6");
this.BR=_470("br");
this.HR=_470("hr");
this.LABEL=_470("label");
this.TEXTAREA=_470("textarea");
this.FORM=_470("form");
this.P=_470("p");
this.SELECT=_470("select");
this.OPTION=_470("option");
this.OPTGROUP=_470("optgroup");
this.LEGEND=_470("legend");
this.FIELDSET=_470("fieldset");
this.STRONG=_470("strong");
this.CANVAS=_470("canvas");
this.IFRAME=_470("iframe");
this.LINK=_470("link");
this.SCRIPT=_470("script");
this.$=this.getElement;
this.NBSP="\xa0";
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Selector");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_471){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_471.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_472){
throw "Parse error in selector: "+_472;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _474=this.params;
var expr=this.expression;
var _476,_477,_478,rest;
while(_476=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_474.attributes=_474.attributes||[];
_474.attributes.push({name:_476[2],operator:_476[3],value:_476[4]||_476[5]||""});
expr=_476[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_476=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_477=_476[1];
_478=_476[2];
rest=_476[3];
switch(_477){
case "#":
_474.id=_478;
break;
case ".":
_474.classNames.push(_478);
break;
case ":":
_474.pseudoClassNames.push(_478);
break;
case "":
case undefined:
_474.tagName=_478.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _47b=this.params;
var _47c=[];
var _47d,i;
function childElements(_47f){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_47f+".childNodes)";
}
if(_47b.wildcard){
_47c.push("true");
}
if(_47d=_47b.id){
_47c.push("element.id == "+repr(_47d));
}
if(_47d=_47b.tagName){
_47c.push("element.tagName.toUpperCase() == "+repr(_47d));
}
if((_47d=_47b.classNames).length>0){
for(i=0;i<_47d.length;i++){
_47c.push("MochiKit.DOM.hasElementClass(element, "+repr(_47d[i])+")");
}
}
if((_47d=_47b.pseudoClassNames).length>0){
for(i=0;i<_47d.length;i++){
var _480=_47d[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _481=_480[1];
var _482=_480[2];
switch(_481){
case "root":
_47c.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_480=_482.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_480){
throw "Invalid argument to pseudo element nth-child: "+_482;
}
var a,b;
if(_480[0]=="odd"){
a=2;
b=1;
}else{
if(_480[0]=="even"){
a=2;
b=0;
}else{
a=_480[2]&&parseInt(_480,10)||null;
b=parseInt(_480[3],10);
}
}
_47c.push("this.nthChild(element,"+a+","+b+","+!!_481.match("^nth-last")+","+!!_481.match("of-type$")+")");
break;
case "first-child":
_47c.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_47c.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_47c.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_47c.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_47c.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_47c.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_47c.push("element.childNodes.length == 0");
break;
case "enabled":
_47c.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_47c.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_47c.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _485=new MochiKit.Selector.Selector(_482);
_47c.push("!( "+_485.buildMatchExpression()+")");
break;
}
}
}
if(_47d=_47b.attributes){
MochiKit.Base.map(function(_486){
var _487="MochiKit.DOM.getNodeAttribute(element, "+repr(_486.name)+")";
var _488=function(_489){
return _487+".split("+repr(_489)+")";
};
_47c.push(_487+" != null");
switch(_486.operator){
case "=":
_47c.push(_487+" == "+repr(_486.value));
break;
case "~=":
_47c.push("MochiKit.Base.findValue("+_488(" ")+", "+repr(_486.value)+") > -1");
break;
case "^=":
_47c.push(_487+".substring(0, "+_486.value.length+") == "+repr(_486.value));
break;
case "$=":
_47c.push(_487+".substring("+_487+".length - "+_486.value.length+") == "+repr(_486.value));
break;
case "*=":
_47c.push(_487+".match("+repr(_486.value)+")");
break;
case "|=":
_47c.push(_488("-")+"[0].toUpperCase() == "+repr(_486.value.toUpperCase()));
break;
case "!=":
_47c.push(_487+" != "+repr(_486.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_486.operator+" in selector";
}
},_47d);
}
return _47c.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_48b,a,b,_48e,_48f){
var _490=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_48b.parentNode.childNodes);
if(_48f){
_490=MochiKit.Base.filter(function(node){
return node.tagName==_48b.tagName;
},_490);
}
if(_48e){
_490=MochiKit.Iter.reversed(_490);
}
if(a){
var _493=MochiKit.Base.findIdentical(_490,_48b);
return ((_493+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_490,_48b)+1;
}
},isUIElement:function(_494){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_494.tagName.toLowerCase())>-1;
},findElements:function(_495,axis){
var _497;
if(axis==undefined){
axis="";
}
function inScope(_498,_499){
if(axis==""){
return MochiKit.DOM.isChildNode(_498,_499);
}else{
if(axis==">"){
return _498.parentNode===_499;
}else{
if(axis=="+"){
return _498===nextSiblingElement(_499);
}else{
if(axis=="~"){
var _49a=_499;
while(_49a=nextSiblingElement(_49a)){
if(_498===_49a){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_497=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_497)){
if(!_495||inScope(_497,_495)){
return [_497];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_495=(_495||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_495){
throw "> combinator not allowed without preceeding expression";
}
_495=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_495.childNodes);
}else{
if(axis=="+"){
if(!_495){
throw "+ combinator not allowed without preceeding expression";
}
_495=nextSiblingElement(_495)&&[nextSiblingElement(_495)];
}else{
if(axis=="~"){
if(!_495){
throw "~ combinator not allowed without preceeding expression";
}
var _49d=[];
while(nextSiblingElement(_495)){
_495=nextSiblingElement(_495);
_49d.push(_495);
}
_495=_49d;
}
}
}
}
if(!_495){
return [];
}
var _49e=MochiKit.Base.filter(MochiKit.Base.bind(function(_49f){
return this.match(_49f);
},this),_495);
return _49e;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_4a0,_4a1){
_4a0=MochiKit.DOM.getElement(_4a0);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_4a6){
try{
var res=_4a0.querySelectorAll(_4a6);
return Array.prototype.slice.call(res,0);
}
catch(ignore){
}
var _4a8="";
var _4a9=function(_4aa,expr){
var _4ac=expr.match(/^[>+~]$/);
if(_4ac){
_4a8=_4ac[0];
return _4aa;
}else{
var _4ad=new MochiKit.Selector.Selector(expr);
var _4ae=MochiKit.Iter.reduce(function(_4af,_4b0){
return MochiKit.Base.extend(_4af,_4ad.findElements(_4b0||_4a0,_4a8));
},_4aa,[]);
_4a8="";
return _4ae;
}
};
var _4b1=_4a6.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_4a9,_4b1,[null]));
},_4a1));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Style");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_4b9){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_4b9=MochiKit.Base.camelize(_4b9);
if(!elem||elem==d){
return undefined;
}
if(_4b9=="opacity"&&typeof (elem.filters)!="undefined"){
var _4bc=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_4bc&&_4bc[1]){
return parseFloat(_4bc[1])/100;
}
return 1;
}
if(_4b9=="float"||_4b9=="cssFloat"||_4b9=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _4bd=elem.style?elem.style[_4b9]:null;
if(!_4bd){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_4b9=_4b9.replace(/([A-Z])/g,"-$1").toLowerCase();
_4bd=css?css.getPropertyValue(_4b9):null;
}else{
if(elem.currentStyle){
_4bd=elem.currentStyle[_4b9];
if(/^\d/.test(_4bd)&&!/px$/.test(_4bd)&&_4b9!="fontWeight"){
var left=elem.style.left;
var _4c0=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_4bd||0;
_4bd=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_4c0;
}
}
}
}
if(_4b9=="opacity"){
_4bd=parseFloat(_4bd);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_4b9)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_4bd="auto";
}
}
return _4bd=="auto"?null:_4bd;
},setStyle:function(elem,_4c2){
elem=MochiKit.DOM.getElement(elem);
for(var name in _4c2){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_4c2[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_4c2[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_4c2[name];
}else{
elem.style.styleFloat=_4c2[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_4c2[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _4c7=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_4c7?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_4c9){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _4cc=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(typeof (elem)=="string"){
elem=dom.getElement(elem);
}
if(elem==null||(!_4cc(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _4d0=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_4d0=elem.offsetParent;
if(_4d0!=elem){
while(_4d0){
c.x+=parseInt(_4d0.style.borderLeftWidth,10)||0;
c.y+=parseInt(_4d0.style.borderTopWidth,10)||0;
c.x+=_4d0.offsetLeft;
c.y+=_4d0.offsetTop;
_4d0=_4d0.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_4d0=elem.parentNode;
}else{
_4d0=null;
}
while(_4d0){
var _4d5=_4d0.tagName.toUpperCase();
if(_4d5==="BODY"||_4d5==="HTML"){
break;
}
var disp=self.getStyle(_4d0,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_4d0.scrollLeft;
c.y-=_4d0.scrollTop;
}
if(_4d0.parentNode){
_4d0=_4d0.parentNode;
}else{
_4d0=null;
}
}
}
}
}
if(_4c9){
_4c9=arguments.callee(_4c9);
if(_4c9){
c.x-=(_4c9.x||0);
c.y-=(_4c9.y||0);
}
}
return c;
},setElementPosition:function(elem,_4d8,_4d9){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_4d9)=="undefined"){
_4d9="px";
}
var _4da={};
var _4db=MochiKit.Base.isUndefinedOrNull;
if(!_4db(_4d8.x)){
_4da["left"]=_4d8.x+_4d9;
}
if(!_4db(_4d8.y)){
_4da["top"]=_4d8.y+_4d9;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_4da});
},makePositioned:function(_4dc){
_4dc=MochiKit.DOM.getElement(_4dc);
var pos=MochiKit.Style.getStyle(_4dc,"position");
if(pos=="static"||!pos){
_4dc.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_4dc.style.top=0;
_4dc.style.left=0;
}
}
},undoPositioned:function(_4de){
_4de=MochiKit.DOM.getElement(_4de);
if(_4de.style.position=="relative"){
_4de.style.position=_4de.style.top=_4de.style.left=_4de.style.bottom=_4de.style.right="";
}
},makeClipping:function(_4df){
_4df=MochiKit.DOM.getElement(_4df);
var s=_4df.style;
var _4e1={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_4df,"overflow")||"visible")!="hidden"){
_4df.style.overflow="hidden";
_4df.style.overflowX="hidden";
_4df.style.overflowY="hidden";
}
return _4e1;
},undoClipping:function(_4e2,_4e3){
_4e2=MochiKit.DOM.getElement(_4e2);
if(typeof (_4e3)=="string"){
_4e2.style.overflow=_4e3;
}else{
if(_4e3!=null){
_4e2.style.overflow=_4e3["overflow"];
_4e2.style.overflowX=_4e3["overflow-x"];
_4e2.style.overflowY=_4e3["overflow-y"];
}
}
},getElementDimensions:function(elem,_4e5){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _4ea=s.visibility;
var _4eb=s.position;
var _4ec=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _4ed=elem.offsetWidth;
var _4ee=elem.offsetHeight;
s.display=_4ec;
s.position=_4eb;
s.visibility=_4ea;
}else{
_4ed=elem.offsetWidth||0;
_4ee=elem.offsetHeight||0;
}
if(_4e5){
var _4ef="colSpan" in elem&&"rowSpan" in elem;
var _4f0=(_4ef&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_4f0){
if(/MSIE/.test(navigator.userAgent)){
var _4f1=elem.previousSibling?0.5:1;
var _4f2=elem.nextSibling?0.5:1;
}else{
var _4f1=0.5;
var _4f2=0.5;
}
}else{
var _4f1=1;
var _4f2=1;
}
_4ed-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_4f1*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_4f2*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_4ef){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _4f3=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _4f3=1;
}else{
var _4f3=_4f0?0.5:1;
}
}
}else{
var _4f3=1;
}
_4ee-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_4f3*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_4ed,_4ee);
},setElementDimensions:function(elem,_4f5,_4f6){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_4f6)=="undefined"){
_4f6="px";
}
var _4f7={};
var _4f8=MochiKit.Base.isUndefinedOrNull;
if(!_4f8(_4f5.w)){
_4f7["width"]=_4f5.w+_4f6;
}
if(!_4f8(_4f5.h)){
_4f7["height"]=_4f5.h+_4f6;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_4f7});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _4fc=elem.tagName.toUpperCase();
return self._defaultDisplay[_4fc]||"block";
},setDisplayForElement:function(_4fd,_4fe){
var _4ff=MochiKit.Base.extend(null,arguments,1);
var _500=MochiKit.DOM.getElement;
for(var i=0;i<_4ff.length;i++){
_4fe=_500(_4ff[i]);
if(_4fe){
_4fe.style.display=_4fd;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _50a=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_50a.length;i++){
this._defaultDisplay[_50a[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3",true);
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.LoggingPane");
goog.require("MochiKit.Base");
goog.require("MochiKit.Logging");
}
MochiKit.Base.module(MochiKit,"LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_50e){
var m=MochiKit.LoggingPane;
_50e=!(!_50e);
if(m._loggingPane&&m._loggingPane.inline!=_50e){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_50e,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_510,_511){
if(typeof (_511)=="undefined"||_511===null){
_511=MochiKit.Logging.logger;
}
this.logger=_511;
var _512=MochiKit.Base.update;
var _513=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _515=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_510){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _51c=doc.getElementById(uid);
var _51d=!!_51c;
if(_51c&&typeof (_51c.loggingPane)!="undefined"){
_51c.loggingPane.logger=this.logger;
_51c.loggingPane.buildAndApplyFilter();
return _51c.loggingPane;
}
if(_51d){
var _51e;
while((_51e=_51c.firstChild)){
_51c.removeChild(_51e);
}
}else{
_51c=doc.createElement("div");
_51c.id=uid;
}
_51c.loggingPane=this;
var _51f=doc.createElement("input");
var _520=doc.createElement("input");
var _521=doc.createElement("button");
var _522=doc.createElement("button");
var _523=doc.createElement("button");
var _524=doc.createElement("button");
var _525=doc.createElement("div");
var _526=doc.createElement("div");
var _527=uid+"_Listener";
this.colorTable=_515(this.colorTable);
var _528=[];
var _529=null;
var _52a=function(msg){
var _52c=msg.level;
if(typeof (_52c)=="number"){
_52c=MochiKit.Logging.LogLevel[_52c];
}
return _52c;
};
var _52d=function(msg){
return msg.info.join(" ");
};
var _52f=bind(function(msg){
var _531=_52a(msg);
var text=_52d(msg);
var c=this.colorTable[_531];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_531;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_531+": "+text));
_526.appendChild(p);
_526.appendChild(doc.createElement("br"));
if(_525.offsetHeight>_525.scrollHeight){
_525.scrollTop=0;
}else{
_525.scrollTop=_525.scrollHeight;
}
},this);
var _535=function(msg){
_528[_528.length]=msg;
_52f(msg);
};
var _537=function(){
var _538,_539;
try{
_538=new RegExp(_51f.value);
_539=new RegExp(_520.value);
}
catch(e){
MochiKit.Logging.logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_538.test(_52a(msg))&&_539.test(_52d(msg)));
};
};
var _53b=function(){
while(_526.firstChild){
_526.removeChild(_526.firstChild);
}
};
var _53c=function(){
_528=[];
_53b();
};
var _53d=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_527);
try{
try{
_51c.loggingPane=null;
}
catch(e){
MochiKit.Logging.logFatal("Bookmarklet was closed incorrectly.");
}
if(_510){
_51c.parentNode.removeChild(_51c);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _53e=function(){
_53b();
for(var i=0;i<_528.length;i++){
var msg=_528[i];
if(_529===null||_529(msg)){
_52f(msg);
}
}
};
this.buildAndApplyFilter=function(){
_529=_537();
_53e();
this.logger.removeListener(_527);
this.logger.addListener(_527,_529,_535);
};
var _541=bind(function(){
_528=this.logger.getMessages();
_53e();
},this);
var _542=bind(function(_543){
_543=_543||window.event;
var key=_543.which||_543.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _545="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_510){
_545+="; height: 10em; border-top: 2px solid black";
}else{
_545+="; height: 100%;";
}
_51c.style.cssText=_545;
if(!_51d){
doc.body.appendChild(_51c);
}
_545={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_513(_51f,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_542,"style":_545});
_51c.appendChild(_51f);
_513(_520,{"value":".*","onkeypress":_542,"style":_545});
_51c.appendChild(_520);
_545="width: 8%; display:inline; font: "+this.logFont;
_521.appendChild(doc.createTextNode("Filter"));
_521.onclick=bind("buildAndApplyFilter",this);
_521.style.cssText=_545;
_51c.appendChild(_521);
_522.appendChild(doc.createTextNode("Load"));
_522.onclick=_541;
_522.style.cssText=_545;
_51c.appendChild(_522);
_523.appendChild(doc.createTextNode("Clear"));
_523.onclick=_53c;
_523.style.cssText=_545;
_51c.appendChild(_523);
_524.appendChild(doc.createTextNode("Close"));
_524.onclick=_53d;
_524.style.cssText=_545;
_51c.appendChild(_524);
_525.style.cssText="overflow: auto; width: 100%";
_526.style.cssText="width: 100%; height: "+(_510?"8em":"100%");
_525.appendChild(_526);
_51c.appendChild(_525);
this.buildAndApplyFilter();
_541();
if(_510){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_510;
this.closePane=_53d;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Color");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_547,blue,_549){
if(typeof (_549)=="undefined"||_549===null){
_549=1;
}
this.rgb={r:red,g:_547,b:blue,a:_549};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_54a){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_54a);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_550){
var hsl=this.asHSL();
hsl.s=_550;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_553){
var hsl=this.asHSL();
hsl.l=_553;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_556){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_556,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_559){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_559,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_55c,_55d){
if(typeof (_55d)=="undefined"||_55d===null){
_55d=0.5;
}
var sf=1-_55d;
var s=this.rgb;
var d=_55c.rgb;
var df=_55d;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_562){
var a=this.asRGB();
var b=_562.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().l>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_579,blue,_57b){
var _57c=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_579=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_57b=undefined;
}else{
_57b=rgb.a;
}
}
return new _57c(red,_579,blue,_57b);
},fromHSL:function(hue,_57f,_580,_581){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_584,_585,_586){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _589=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _58a=_589._namedColors[name.toLowerCase()];
if(typeof (_58a)=="string"){
return _589.fromHexString(_58a);
}else{
if(name=="transparent"){
return _589.transparentColor();
}
}
return null;
},fromString:function(_58b){
var self=MochiKit.Color.Color;
var _58d=_58b.substr(0,3);
if(_58d=="rgb"){
return self.fromRGBString(_58b);
}else{
if(_58d=="hsl"){
return self.fromHSLString(_58b);
}else{
if(_58b.charAt(0)=="#"){
return self.fromHexString(_58b);
}
}
}
return self.fromName(_58b);
},fromHexString:function(_58e){
if(_58e.charAt(0)=="#"){
_58e=_58e.substring(1);
}
var _58f=[];
var i,hex;
if(_58e.length==3){
for(i=0;i<3;i++){
hex=_58e.substr(i,1);
_58f.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_58e.substr(i,2);
_58f.push(parseInt(hex,16)/255);
}
}
var _592=MochiKit.Color.Color;
return _592.fromRGB.apply(_592,_58f);
},_fromColorString:function(pre,_594,_595,_596){
if(_596.indexOf(pre)===0){
_596=_596.substring(_596.indexOf("(",3)+1,_596.length-1);
}
var _597=_596.split(/\s*,\s*/);
var _598=[];
for(var i=0;i<_597.length;i++){
var c=_597[i];
var val;
var _59c=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_59c=="deg"){
val=parseFloat(c)/360;
}else{
if(_59c=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_595[i]*parseFloat(c);
}
}
}
_598.push(val);
}
return this[_594].apply(this,_598);
},fromComputedStyle:function(elem,_59e){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _5a1=MochiKit.Style.getStyle.apply(d,arguments);
if(!_5a1){
continue;
}
var _5a2=cls.fromString(_5a1);
if(!_5a2){
break;
}
if(_5a2.asRGB().a>0){
return _5a2;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_5a8){
v*=_5a8;
if(v<0){
return 0;
}else{
if(v>_5a8){
return _5a8;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_5ae,_5af,_5b0){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_5ae=hsv.s;
_5af=hsv.v;
_5b0=hsv.a;
}
var red;
var _5b3;
var blue;
if(_5ae===0){
red=_5af;
_5b3=_5af;
blue=_5af;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_5af*(1-_5ae);
var q=_5af*(1-(_5ae*f));
var t=_5af*(1-(_5ae*(1-f)));
switch(i){
case 1:
red=q;
_5b3=_5af;
blue=p;
break;
case 2:
red=p;
_5b3=_5af;
blue=t;
break;
case 3:
red=p;
_5b3=q;
blue=_5af;
break;
case 4:
red=t;
_5b3=p;
blue=_5af;
break;
case 5:
red=_5af;
_5b3=p;
blue=q;
break;
case 6:
case 0:
red=_5af;
_5b3=t;
blue=p;
break;
}
}
return {r:red,g:_5b3,b:blue,a:_5b0};
},hslToRGB:function(hue,_5bb,_5bc,_5bd){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_5bb=hsl.s;
_5bc=hsl.l;
_5bd=hsl.a;
}
var red;
var _5c0;
var blue;
if(_5bb===0){
red=_5bc;
_5c0=_5bc;
blue=_5bc;
}else{
var m2;
if(_5bc<=0.5){
m2=_5bc*(1+_5bb);
}else{
m2=_5bc+_5bb-(_5bc*_5bb);
}
var m1=(2*_5bc)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_5c0=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_5c0,b:blue,a:_5bd};
},rgbToHSV:function(red,_5c7,blue,_5c9){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5c7=rgb.g;
blue=rgb.b;
_5c9=rgb.a;
}
var max=Math.max(Math.max(red,_5c7),blue);
var min=Math.min(Math.min(red,_5c7),blue);
var hue;
var _5ce;
var _5cf=max;
if(min==max){
hue=0;
_5ce=0;
}else{
var _5d0=(max-min);
_5ce=_5d0/max;
if(red==max){
hue=(_5c7-blue)/_5d0;
}else{
if(_5c7==max){
hue=2+((blue-red)/_5d0);
}else{
hue=4+((red-_5c7)/_5d0);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_5ce,v:_5cf,a:_5c9};
},rgbToHSL:function(red,_5d2,blue,_5d4){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5d2=rgb.g;
blue=rgb.b;
_5d4=rgb.a;
}
var max=Math.max(red,Math.max(_5d2,blue));
var min=Math.min(red,Math.min(_5d2,blue));
var hue;
var _5d9;
var _5da=(max+min)/2;
var _5db=max-min;
if(_5db===0){
hue=0;
_5d9=0;
}else{
if(_5da<=0.5){
_5d9=_5db/(max+min);
}else{
_5d9=_5db/(2-max-min);
}
if(red==max){
hue=(_5d2-blue)/_5db;
}else{
if(_5d2==max){
hue=2+((blue-red)/_5db);
}else{
hue=4+((red-_5d2)/_5db);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_5d9,l:_5da,a:_5d4};
},toColorPart:function(num){
num=Math.round(num);
var _5dd=num.toString(16);
if(num<16){
return "0"+_5dd;
}
return _5dd;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _5df=1/3;
var _5e0={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_5df,_5df,_5df],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_5df,2*_5df,2*_5df],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
for(var k in _5e0){
var name=k+"Color";
var _5e3=this.Color.fromRGB.apply(this.Color,_5e0[k]);
this.Color[name]=m.partial(m.operator.identity,_5e3);
}
var _5e4=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _5e6=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_5e4,_5e6);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Signal");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Signal","1.5",["Base","DOM"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Signal.Event.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
};
MochiKit.Signal.Event.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Signal.Event.prototype.src=function(){
return this._src;
};
MochiKit.Signal.Event.prototype.event=function(){
return this._event;
};
MochiKit.Signal.Event.prototype.type=function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
};
MochiKit.Signal.Event.prototype.target=function(){
return this._event.target||this._event.srcElement;
};
MochiKit.Signal.Event.prototype._relatedTarget=null;
MochiKit.Signal.Event.prototype.relatedTarget=function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
};
MochiKit.Signal.Event.prototype._modifier=null;
MochiKit.Signal.Event.prototype.modifier=function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
};
MochiKit.Signal.Event.prototype._key=null;
MochiKit.Signal.Event.prototype.key=function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
};
MochiKit.Signal.Event.prototype._mouse=null;
MochiKit.Signal.Event.prototype.mouse=function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("drag")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client={x:0,y:0};
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page={x:0,y:0};
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel={x:0,y:0};
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
};
MochiKit.Signal.Event.prototype.stop=function(){
this.stopPropagation();
this.preventDefault();
};
MochiKit.Signal.Event.prototype.stopPropagation=function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
};
MochiKit.Signal.Event.prototype.preventDefault=function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
};
MochiKit.Signal.Event.prototype._confirmUnload=null;
MochiKit.Signal.Event.prototype.confirmUnload=function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
};
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _5f5=MochiKit.Signal._specialMacKeys;
for(var i=63236;i<=63242;i++){
_5f5[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _5f7=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_5f7[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_5f7[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_5f7[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_5f7[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_5f9){
this.source=_5f9.source;
this.signal=_5f9.signal;
this.listener=_5f9.listener;
this.isDOM=_5f9.isDOM;
this.objOrFunc=_5f9.objOrFunc;
this.funcOrStr=_5f9.funcOrStr;
this.connected=_5f9.connected;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _5fb=self._observers;
for(var i=0;i<_5fb.length;i++){
if(_5fb[i].signal!=="onload"&&_5fb[i].signal!=="onunload"){
self._disconnect(_5fb[i]);
}
}
},_listener:function(src,sig,func,obj,_601){
var self=MochiKit.Signal;
var E=self.Event;
if(!_601){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_604){
obj[func].apply(obj,[new E(src,_604)]);
var _605=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_605);
};
}else{
return function(_606){
obj[func].apply(obj,[new E(src,_606)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_607){
func.apply(obj,[new E(src,_607)]);
var _608=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_608);
};
}else{
return function(_609){
func.apply(obj,[new E(src,_609)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_60f){
var e=new E(src,_60f);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_611,_612){
var obj=null;
var func=null;
if(typeof (_612)!="undefined"){
obj=_611;
func=_612;
if(typeof (_612)=="string"){
if(typeof (_611[_612])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_612)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_611)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_611;
}
}
return [obj,func];
},connect:function(src,sig,_617,_618){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _61a=self._getDestPair(_617,_618);
var obj=_61a[0];
var func=_61a[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _61d=!!(src.addEventListener||src.attachEvent);
if(_61d&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _61e=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_61d&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _61e=self._listener(src,sig,func,obj,_61d);
sig="onDOMMouseScroll";
}else{
var _61e=self._listener(src,sig,func,obj,_61d);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_61e,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_61e);
}
}
var _61f=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_61e,isDOM:_61d,objOrFunc:_617,funcOrStr:_618,connected:true});
self._observers.push(_61f);
if(!_61d&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_61f],arguments,1);
src.__connect__.apply(src,args);
}
return _61f;
},connectOnce:function(src,sig,_623,_624){
var self=MochiKit.Signal;
var _626=self.connect(src,sig,_623,_624);
var _627;
_627=self.connect(src,sig,function(){
self.disconnect(_626);
self.disconnect(_627);
});
return _626;
},_disconnect:function(_628){
if(!_628.connected){
return;
}
_628.connected=false;
var src=_628.source;
var sig=_628.signal;
var _62b=_628.listener;
if(!_628.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_628,sig,_628.objOrFunc,_628.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_62b,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_62b);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_62c){
var self=MochiKit.Signal;
var _62e=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_62e.length-1;i>=0;i--){
var o=_62e[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(self._lock===0){
_62e.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_62e,_62c);
if(idx>=0){
self._disconnect(_62c);
if(self._lock===0){
_62e.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_637,_638){
var self=MochiKit.Signal;
var _63a=self._observers;
var _63b=self._disconnect;
var lock=self._lock;
var _63d=self._dirty;
if(typeof (_638)==="undefined"){
_638=null;
}
for(var i=_63a.length-1;i>=0;i--){
var _63f=_63a[i];
if(_63f.objOrFunc===_637&&(_638===null||_63f.funcOrStr===_638)){
_63b(_63f);
if(lock===0){
_63a.splice(i,1);
}else{
_63d=true;
}
}
}
self._dirty=_63d;
},disconnectAll:function(src,sig){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _643=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _645=self._disconnect;
var _646=self._observers;
var i,_648;
var lock=self._lock;
var _64a=self._dirty;
if(_643.length===0){
for(i=_646.length-1;i>=0;i--){
_648=_646[i];
if(_648.source===src){
_645(_648);
if(lock===0){
_646.splice(i,1);
}else{
_64a=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_643.length;i++){
sigs[_643[i]]=true;
}
for(i=_646.length-1;i>=0;i--){
_648=_646[i];
if(_648.source===src&&_648.signal in sigs){
_645(_648);
if(lock===0){
_646.splice(i,1);
}else{
_64a=true;
}
}
}
}
self._dirty=_64a;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _64f=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _651=[];
self._lock++;
for(var i=0;i<_64f.length;i++){
var _653=_64f[i];
if(_653.source===src&&_653.signal===sig&&_653.connected){
try{
if(_653.isDOM&&_653.funcOrStr!=null){
var obj=_653.objOrFunc;
obj[_653.funcOrStr].apply(obj,args);
}else{
if(_653.isDOM){
_653.objOrFunc.apply(src,args);
}else{
_653.listener.apply(src,args);
}
}
}
catch(e){
_651.push(e);
}
}
}
self._lock--;
self._gc();
if(_651.length==1){
throw _651[0];
}else{
if(_651.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_651;
throw e;
}
}
},_gc:function(){
var self=MochiKit.Signal;
var _657=self._observers;
if(self._lock===0&&self._dirty){
for(var i=_657.length-1;i>=0;i--){
if(!_657[i].connected){
_657.splice(i,1);
}
}
self._dirty=false;
return true;
}
return false;
}});
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=0;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Position");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _65b=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _65c=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_65b,_65c);
},cumulativeOffset:function(_65d){
var _65e=0;
var _65f=0;
do{
_65e+=_65d.offsetTop||0;
_65f+=_65d.offsetLeft||0;
_65d=_65d.offsetParent;
}while(_65d);
return new MochiKit.Style.Coordinates(_65f,_65e);
},realOffset:function(_660){
var _661=0;
var _662=0;
do{
_661+=_660.scrollTop||0;
_662+=_660.scrollLeft||0;
_660=_660.parentNode;
}while(_660);
return new MochiKit.Style.Coordinates(_662,_661);
},within:function(_663,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_663,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_663);
if(_663.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_663.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_663.offsetWidth);
},withinIncludingScrolloffsets:function(_666,x,y){
var _669=this.realOffset(_666);
this.xcomp=x+_669.x-this.windowOffset.x;
this.ycomp=y+_669.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_666);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_666.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_666.offsetWidth);
},overlap:function(mode,_66b){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_66b.offsetHeight)-this.ycomp)/_66b.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_66b.offsetWidth)-this.xcomp)/_66b.offsetWidth;
}
},absolutize:function(_66c){
_66c=MochiKit.DOM.getElement(_66c);
if(_66c.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _66d=MochiKit.Position.positionedOffset(_66c);
var _66e=_66c.clientWidth;
var _66f=_66c.clientHeight;
var _670={"position":_66c.style.position,"left":_66d.x-parseFloat(_66c.style.left||0),"top":_66d.y-parseFloat(_66c.style.top||0),"width":_66c.style.width,"height":_66c.style.height};
_66c.style.position="absolute";
_66c.style.top=_66d.y+"px";
_66c.style.left=_66d.x+"px";
_66c.style.width=_66e+"px";
_66c.style.height=_66f+"px";
return _670;
},positionedOffset:function(_671){
var _672=0,_673=0;
do{
_672+=_671.offsetTop||0;
_673+=_671.offsetLeft||0;
_671=_671.offsetParent;
if(_671){
var p=MochiKit.Style.getStyle(_671,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_671);
return new MochiKit.Style.Coordinates(_673,_672);
},relativize:function(_675,_676){
_675=MochiKit.DOM.getElement(_675);
if(_675.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_675.style.top||0)-(_676["top"]||0);
var left=parseFloat(_675.style.left||0)-(_676["left"]||0);
_675.style.position=_676["position"];
_675.style.top=top+"px";
_675.style.left=left+"px";
_675.style.width=_676["width"];
_675.style.height=_676["height"];
},clone:function(_679,_67a){
_679=MochiKit.DOM.getElement(_679);
_67a=MochiKit.DOM.getElement(_67a);
_67a.style.position="absolute";
var _67b=this.cumulativeOffset(_679);
_67a.style.top=_67b.y+"px";
_67a.style.left=_67b.x+"px";
_67a.style.width=_679.offsetWidth+"px";
_67a.style.height=_679.offsetHeight+"px";
},page:function(_67c){
var _67d=0;
var _67e=0;
var _67f=_67c;
do{
_67d+=_67f.offsetTop||0;
_67e+=_67f.offsetLeft||0;
if(_67f.offsetParent==document.body&&MochiKit.Style.getStyle(_67f,"position")=="absolute"){
break;
}
}while(_67f=_67f.offsetParent);
_67f=_67c;
do{
_67d-=_67f.scrollTop||0;
_67e-=_67f.scrollLeft||0;
}while(_67f=_67f.parentNode);
return new MochiKit.Style.Coordinates(_67e,_67d);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Visual");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
goog.require("MochiKit.Color");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_682){
e=MochiKit.DOM.getElement(e);
this._setOptions(_682);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _683=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_683=C.fromBackground(e);
}else{
if(!(_683 instanceof C)){
_683=C.fromString(_683);
}
}
this.isTransparent=(_683.asRGB().a<=0);
var _685=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_685=C.fromBackground(e.offsetParent);
}else{
if(!(_685 instanceof C)){
_685=C.fromString(_685);
}
}
this._roundCornersImpl(e,_683,_685);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _687=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _689=doc.defaultView.getComputedStyle(e,null);
if(typeof (_689)==="undefined"||_689===null){
return e;
}
var _68a=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_689.getPropertyValue("padding-top"),marginRight:_689.getPropertyValue("padding-right"),marginBottom:_689.getPropertyValue("padding-bottom"),marginLeft:_689.getPropertyValue("padding-left"),padding:"0px"}});
_68a.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_68a);
return e;
},_roundCornersImpl:function(e,_68c,_68d){
if(this.options.border){
this._renderBorder(e,_68d);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_68c,_68d);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_68c,_68d);
}
},_renderBorder:function(el,_68f){
var _690="1px solid "+this._borderColor(_68f);
var _691="border-left: "+_690;
var _692="border-right: "+_690;
var _693="style='"+_691+";"+_692+"'";
el.innerHTML="<div "+_693+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_695,_696){
var _697=this._createCorner(_696);
for(var i=0;i<this.options.numSlices;i++){
_697.appendChild(this._createCornerSlice(_695,_696,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_697,el.firstChild);
},_roundBottomCorners:function(el,_69a,_69b){
var _69c=this._createCorner(_69b);
for(var i=(this.options.numSlices-1);i>=0;i--){
_69c.appendChild(this._createCornerSlice(_69a,_69b,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_69c);
},_createCorner:function(_69e){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_69e.toString()}});
},_createCornerSlice:function(_6a0,_6a1,n,_6a3){
var _6a4=MochiKit.DOM.SPAN();
var _6a5=_6a4.style;
_6a5.backgroundColor=_6a0.toString();
_6a5.display="block";
_6a5.height="1px";
_6a5.overflow="hidden";
_6a5.fontSize="1px";
var _6a6=this._borderColor(_6a0,_6a1);
if(this.options.border&&n===0){
_6a5.borderTopStyle="solid";
_6a5.borderTopWidth="1px";
_6a5.borderLeftWidth="0px";
_6a5.borderRightWidth="0px";
_6a5.borderBottomWidth="0px";
_6a5.height="0px";
_6a5.borderColor=_6a6.toString();
}else{
if(_6a6){
_6a5.borderColor=_6a6.toString();
_6a5.borderStyle="solid";
_6a5.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_6a5.height="2px";
}
this._setMargin(_6a4,n,_6a3);
this._setBorder(_6a4,n,_6a3);
return _6a4;
},_setOptions:function(_6a7){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_6a7);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _6a8=this.options.corners;
if(this._hasString(_6a8,"all","top")){
return "";
}
var _6a9=(_6a8.indexOf("tl")!=-1);
var _6aa=(_6a8.indexOf("tr")!=-1);
if(_6a9&&_6aa){
return "";
}
if(_6a9){
return "left";
}
if(_6aa){
return "right";
}
return "";
},_whichSideBottom:function(){
var _6ab=this.options.corners;
if(this._hasString(_6ab,"all","bottom")){
return "";
}
var _6ac=(_6ab.indexOf("bl")!=-1);
var _6ad=(_6ab.indexOf("br")!=-1);
if(_6ac&&_6ad){
return "";
}
if(_6ac){
return "left";
}
if(_6ad){
return "right";
}
return "";
},_borderColor:function(_6ae,_6af){
if(_6ae=="transparent"){
return _6af;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _6af.blendedColor(_6ae);
}
}
}
return "";
},_setMargin:function(el,n,_6b2){
var _6b3=this._marginSize(n)+"px";
var _6b4=(_6b2=="top"?this._whichSideTop():this._whichSideBottom());
var _6b5=el.style;
if(_6b4=="left"){
_6b5.marginLeft=_6b3;
_6b5.marginRight="0px";
}else{
if(_6b4=="right"){
_6b5.marginRight=_6b3;
_6b5.marginLeft="0px";
}else{
_6b5.marginLeft=_6b3;
_6b5.marginRight=_6b3;
}
}
},_setBorder:function(el,n,_6b8){
var _6b9=this._borderSize(n)+"px";
var _6ba=(_6b8=="top"?this._whichSideTop():this._whichSideBottom());
var _6bb=el.style;
if(_6ba=="left"){
_6bb.borderLeftWidth=_6b9;
_6bb.borderRightWidth="0px";
}else{
if(_6ba=="right"){
_6bb.borderRightWidth=_6b9;
_6bb.borderLeftWidth="0px";
}else{
_6bb.borderLeftWidth=_6b9;
_6bb.borderRightWidth=_6b9;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _6be=[1,0];
return _6be[n];
}else{
if(o.compact){
var _6bf=[2,1];
return _6bf[n];
}else{
if(o.blend){
var _6c0=[3,2,1,0];
return _6c0[n];
}else{
var _6c1=[5,3,2,1];
return _6c1[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _6c4;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_6c4=[1,0];
}else{
if(o.blend){
_6c4=[2,1,1,1];
}else{
if(o.border){
_6c4=[0,2,0,0];
}else{
if(this.isTransparent){
_6c4=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _6c4[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_6c9){
new MochiKit.Visual._RoundCorners(e,_6c9);
};
MochiKit.Visual.roundClass=function(_6ca,_6cb,_6cc){
var _6cd=MochiKit.DOM.getElementsByTagAndClassName(_6ca,_6cb);
for(var i=0;i<_6cd.length;i++){
MochiKit.Visual.roundElement(_6cd[i],_6cc);
}
};
MochiKit.Visual.tagifyText=function(_6cf,_6d0){
_6d0=_6d0||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_6d0+=";zoom:1";
}
_6cf=MochiKit.DOM.getElement(_6cf);
var ma=MochiKit.Base.map;
ma(function(_6d2){
if(_6d2.nodeType==3){
ma(function(_6d3){
_6cf.insertBefore(MochiKit.DOM.SPAN({style:_6d0},_6d3==" "?String.fromCharCode(160):_6d3),_6d2);
},_6d2.nodeValue.split(""));
MochiKit.DOM.removeElement(_6d2);
}
},_6cf.childNodes);
};
MochiKit.Visual._forceRerendering=function(_6d4){
try{
_6d4=MochiKit.DOM.getElement(_6d4);
var n=document.createTextNode(" ");
_6d4.appendChild(n);
_6d4.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_6d6,_6d7,_6d8){
_6d8=MochiKit.Base.update({speed:0.1,delay:0},_6d8);
var _6d9=_6d8.delay;
var _6da=0;
MochiKit.Base.map(function(_6db){
_6d8.delay=_6da*_6d8.speed+_6d9;
new _6d7(_6db,_6d8);
_6da+=1;
},_6d6);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_6dc,_6dd,_6de){
_6dc=MochiKit.DOM.getElement(_6dc);
_6dd=(_6dd||"appear").toLowerCase();
_6de=MochiKit.Base.update({queue:{position:"end",scope:(_6dc.id||"global"),limit:1}},_6de);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_6dc,"display")!="none"?v.PAIRS[_6dd][1]:v.PAIRS[_6dd][0]](_6dc,_6de);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_6e6){
if(_6e6){
pos*=2*_6e6;
}else{
pos*=10;
}
var _6e7=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_6e7:1-_6e7;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.spring=function(pos){
return 1-(Math.cos(pos*2.5*Math.PI)*Math.exp(-pos*6));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_6ed){
var _6ee=new Date().getTime();
var _6ef=(typeof (_6ed.options.queue)=="string")?_6ed.options.queue:_6ed.options.queue.position;
var ma=MochiKit.Base.map;
switch(_6ef){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_6ed.finishOn;
e.finishOn+=_6ed.finishOn;
}
},this.effects);
break;
case "end":
var _6f2;
ma(function(e){
var i=e.finishOn;
if(i>=(_6f2||i)){
_6f2=i;
}
},this.effects);
_6ee=_6f2||_6ee;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
case "replace":
ma(function(e){
e.cancel();
},this.effects);
break;
}
_6ed.startOn+=_6ee;
_6ed.finishOn+=_6ee;
if(!_6ed.options.queue.limit||this.effects.length<_6ed.options.queue.limit){
this.effects.push(_6ed);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_6f8){
return setInterval(func,_6f8);
},remove:function(_6f9){
this.effects=MochiKit.Base.filter(function(e){
return e!=_6f9;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_6fb){
clearInterval(_6fb);
},loop:function(){
var _6fc=new Date().getTime();
MochiKit.Base.map(function(_6fd){
_6fd.loop(_6fc);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_6fe){
if(typeof (_6fe)!="string"){
return _6fe;
}
if(!this.instances[_6fe]){
this.instances[_6fe]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_6fe];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_6ff){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_6ff,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_701){
if(_701>=this.startOn){
if(_701>=this.finishOn){
return this.finalize();
}
var pos=(_701-this.startOn)/(this.finishOn-this.startOn);
var _703=Math.round(pos*this.options.fps*this.options.duration);
if(_703>this.currentFrame){
this.render(pos);
this.currentFrame=_703;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
var _705=this.options.transition;
if(typeof (_705)=="string"){
_705=MochiKit.Visual.Transitions[_705];
}
if(typeof (_705)=="function"){
pos=_705(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_706){
},event:function(_707){
if(this.options[_707+"Internal"]){
this.options[_707+"Internal"](this);
}
if(this.options[_707]){
this.options[_707](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_708,_709){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_708,_709);
}
this.__init__(_708,_709);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_70b,_70c){
this.effects=_70b||[];
this.start(_70c);
},update:function(_70d){
MochiKit.Base.map(function(_70e){
_70e.render(_70d);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_70f){
_70f.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_710,_711){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_710,_711);
}
this.__init__(_710,_711);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_713,_714){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_713||[];
MochiKit.Base.map(function(_716){
defs.duration+=_716.options.duration;
},this.effects);
MochiKit.Base.setdefault(_714,defs);
this.start(_714);
},update:function(_717){
var time=_717*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _71a=this.effects[i];
if(time<=_71a.options.duration){
_71a.render(time/_71a.options.duration);
break;
}else{
time-=_71a.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_71b){
_71b.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_71c,_71d){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_71c,_71d);
}
this.__init__(_71c,_71d);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_71f,_720){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_71f);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_720=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_720);
this.start(_720);
},update:function(_723){
MochiKit.Style.setStyle(this.element,{"opacity":_723});
}});
MochiKit.Visual.Move=function(_724,_725){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_724,_725);
}
this.__init__(_724,_725);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_727,_728){
this.element=MochiKit.DOM.getElement(_727);
_728=MochiKit.Base.update({x:0,y:0,mode:"relative"},_728);
this.start(_728);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _72a=s.visibility;
var _72b=s.display;
if(_72b=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_72b=="none"){
s.visibility=_72a;
s.display=_72b;
}
},update:function(_72c){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_72c+this.originalLeft)+"px",top:Math.round(this.options.y*_72c+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_72d,_72e,_72f){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_72d,_72e,_72f);
}
this.__init__(_72d,_72e,_72f);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_731,_732,_733){
this.element=MochiKit.DOM.getElement(_731);
_733=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_732},_733);
this.start(_733);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _737=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_738){
if(_737.indexOf(_738)>0){
this.fontSize=parseFloat(_737);
this.fontSizeType=_738;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_739){
var _73a=(this.options.scaleFrom/100)+(this.factor*_739);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_73a+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_73a,this.dims[1]*_73a);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_73b,_73c){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_73c)+"px";
}
if(this.options.scaleY){
d.height=r(_73b)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_73b-this.dims[0])/2;
var _740=(_73c-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_740+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_740+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_741,_742){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_741,_742);
}
this.__init__(_741,_742);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_744,_745){
this.element=MochiKit.DOM.getElement(_744);
_745=MochiKit.Base.update({startcolor:"#ffff99"},_745);
this.start(_745);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_74a){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_74a));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_74d,_74e){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_74d,_74e);
}
this.__init__(_74d,_74e);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_750,_751){
this.element=MochiKit.DOM.getElement(_750);
this.start(_751);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _753=p.cumulativeOffset(this.element);
if(this.options.offset){
_753.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_753.y>max?max:_753.y)-this.scrollStart;
},update:function(_755){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_755*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_757,_758){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_757,_758);
}
this.__init__(_757,_758);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_75a,_75b){
this.element=MochiKit.DOM.getElement(_75a);
this.start(_75b);
},setup:function(){
var b=MochiKit.Base;
var _75d=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _75e,unit;
for(var s in _75d){
_75e=_75d[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_75e)){
var _761=_75e.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_75e=parseFloat(_761[1]);
unit=(_761.length==3)?_761[2]:null;
this.styleEnd[s]=_75e;
this.units[s]=unit;
_75e=MochiKit.Style.getStyle(this.element,s);
_761=_75e.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_75e=parseFloat(_761[1]);
this.styleStart[s]=_75e;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_75e=c.fromString(_75e);
if(_75e){
this.units[s]="color";
this.styleEnd[s]=_75e.toHexString();
_75e=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_75e).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_75e;
}
}
}
},update:function(_765){
var _766;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _769=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_769[i]+(end[i]-_769[i])*_765));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_766=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_765*1000)/1000+this.units[s];
this.element.style[s]=_766;
}
}
}});
MochiKit.Visual.fade=function(_76c,_76d){
var s=MochiKit.Style;
var _76f=s.getStyle(_76c,"opacity");
_76d=MochiKit.Base.update({from:s.getStyle(_76c,"opacity")||1,to:0,afterFinishInternal:function(_770){
if(_770.options.to!==0){
return;
}
s.hideElement(_770.element);
s.setStyle(_770.element,{"opacity":_76f});
}},_76d);
return new MochiKit.Visual.Opacity(_76c,_76d);
};
MochiKit.Visual.appear=function(_771,_772){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_772=MochiKit.Base.update({from:(s.getStyle(_771,"display")=="none"?0:s.getStyle(_771,"opacity")||0),to:1,afterFinishInternal:function(_775){
v._forceRerendering(_775.element);
},beforeSetupInternal:function(_776){
s.setStyle(_776.element,{"opacity":_776.options.from});
s.showElement(_776.element);
}},_772);
return new v.Opacity(_771,_772);
};
MochiKit.Visual.puff=function(_777,_778){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_777=MochiKit.DOM.getElement(_777);
var _77b=MochiKit.Style.getElementDimensions(_777,true);
var _77c={position:s.getStyle(_777,"position"),top:_777.style.top,left:_777.style.left,width:_777.style.width,height:_777.style.height,opacity:s.getStyle(_777,"opacity")};
_778=MochiKit.Base.update({beforeSetupInternal:function(_77d){
MochiKit.Position.absolutize(_77d.effects[0].element);
},afterFinishInternal:function(_77e){
s.hideElement(_77e.effects[0].element);
s.setStyle(_77e.effects[0].element,_77c);
},scaleContent:true,scaleFromCenter:true},_778);
return new v.Parallel([new v.Scale(_777,200,{sync:true,scaleFromCenter:_778.scaleFromCenter,scaleMode:{originalHeight:_77b.h,originalWidth:_77b.w},scaleContent:_778.scaleContent,restoreAfterFinish:true}),new v.Opacity(_777,{sync:true,to:0})],_778);
};
MochiKit.Visual.blindUp=function(_77f,_780){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_77f=d.getElement(_77f);
var _783=s.getElementDimensions(_77f,true);
var _784=s.makeClipping(_77f);
_780=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_783.h,originalWidth:_783.w},restoreAfterFinish:true,afterFinishInternal:function(_785){
s.hideElement(_785.element);
s.undoClipping(_785.element,_784);
}},_780);
return new MochiKit.Visual.Scale(_77f,0,_780);
};
MochiKit.Visual.blindDown=function(_786,_787){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_786=d.getElement(_786);
var _78a=s.getElementDimensions(_786,true);
var _78b;
_787=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_78a.h,originalWidth:_78a.w},restoreAfterFinish:true,afterSetupInternal:function(_78c){
_78b=s.makeClipping(_78c.element);
s.setStyle(_78c.element,{height:"0px"});
s.showElement(_78c.element);
},afterFinishInternal:function(_78d){
s.undoClipping(_78d.element,_78b);
}},_787);
return new MochiKit.Visual.Scale(_786,100,_787);
};
MochiKit.Visual.switchOff=function(_78e,_78f){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_78e=d.getElement(_78e);
var _792=s.getElementDimensions(_78e,true);
var _793=s.getStyle(_78e,"opacity");
var _794;
_78f=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_795){
s.makePositioned(_78e);
_794=s.makeClipping(_78e);
},afterFinishInternal:function(_796){
s.hideElement(_78e);
s.undoClipping(_78e,_794);
s.undoPositioned(_78e);
s.setStyle(_78e,{"opacity":_793});
}},_78f);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_78e,{sync:true,duration:0.57*_78f.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_78e,1,{sync:true,duration:0.43*_78f.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_792.h,originalWidth:_792.w},scaleContent:false,restoreAfterFinish:true})],_78f);
};
MochiKit.Visual.dropOut=function(_798,_799){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_798=d.getElement(_798);
var _79c={top:s.getStyle(_798,"top"),left:s.getStyle(_798,"left"),opacity:s.getStyle(_798,"opacity")};
_799=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_79d){
s.makePositioned(_79d.effects[0].element);
},afterFinishInternal:function(_79e){
s.hideElement(_79e.effects[0].element);
s.undoPositioned(_79e.effects[0].element);
s.setStyle(_79e.effects[0].element,_79c);
}},_799);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_798,{x:0,y:_799.distance,sync:true}),new v.Opacity(_798,{sync:true,to:0})],_799);
};
MochiKit.Visual.shake=function(_7a0,_7a1){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7a0=d.getElement(_7a0);
var _7a5={top:s.getStyle(_7a0,"top"),left:s.getStyle(_7a0,"left")};
_7a1=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_7a6){
s.undoPositioned(_7a0);
s.setStyle(_7a0,_7a5);
}},_7a1);
return new v.Sequence([new v.Move(_7a0,{sync:true,duration:0.1*_7a1.duration,x:20,y:0}),new v.Move(_7a0,{sync:true,duration:0.2*_7a1.duration,x:-40,y:0}),new v.Move(_7a0,{sync:true,duration:0.2*_7a1.duration,x:40,y:0}),new v.Move(_7a0,{sync:true,duration:0.2*_7a1.duration,x:-40,y:0}),new v.Move(_7a0,{sync:true,duration:0.2*_7a1.duration,x:40,y:0}),new v.Move(_7a0,{sync:true,duration:0.1*_7a1.duration,x:-20,y:0})],_7a1);
};
MochiKit.Visual.slideDown=function(_7a7,_7a8){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7a7=d.getElement(_7a7);
if(!_7a7.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_7a7);
var _7ac=s.getStyle(_7a7.firstChild,"bottom")||0;
var _7ad=s.getElementDimensions(_7a7,true);
var _7ae;
_7a8=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7ad.h,originalWidth:_7ad.w},restoreAfterFinish:true,afterSetupInternal:function(_7af){
s.makePositioned(_7af.element);
s.makePositioned(_7af.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7af.element,{top:""});
}
_7ae=s.makeClipping(_7af.element);
s.setStyle(_7af.element,{height:"0px"});
s.showElement(_7af.element);
},afterUpdateInternal:function(_7b0){
var _7b1=s.getElementDimensions(_7b0.element,true);
s.setStyle(_7b0.element.firstChild,{bottom:(_7b0.dims[0]-_7b1.h)+"px"});
},afterFinishInternal:function(_7b2){
s.undoClipping(_7b2.element,_7ae);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_7b2.element);
s.undoPositioned(_7b2.element.firstChild);
}else{
s.undoPositioned(_7b2.element.firstChild);
s.undoPositioned(_7b2.element);
}
s.setStyle(_7b2.element.firstChild,{bottom:_7ac});
}},_7a8);
return new MochiKit.Visual.Scale(_7a7,100,_7a8);
};
MochiKit.Visual.slideUp=function(_7b3,_7b4){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7b3=d.getElement(_7b3);
if(!_7b3.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_7b3);
var _7b8=s.getStyle(_7b3.firstChild,"bottom");
var _7b9=s.getElementDimensions(_7b3,true);
var _7ba;
_7b4=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7b9.h,originalWidth:_7b9.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_7bb){
s.makePositioned(_7bb.element);
s.makePositioned(_7bb.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7bb.element,{top:""});
}
_7ba=s.makeClipping(_7bb.element);
s.showElement(_7bb.element);
},afterUpdateInternal:function(_7bc){
var _7bd=s.getElementDimensions(_7bc.element,true);
s.setStyle(_7bc.element.firstChild,{bottom:(_7bc.dims[0]-_7bd.h)+"px"});
},afterFinishInternal:function(_7be){
s.hideElement(_7be.element);
s.undoClipping(_7be.element,_7ba);
s.undoPositioned(_7be.element.firstChild);
s.undoPositioned(_7be.element);
s.setStyle(_7be.element.firstChild,{bottom:_7b8});
}},_7b4);
return new MochiKit.Visual.Scale(_7b3,0,_7b4);
};
MochiKit.Visual.squish=function(_7bf,_7c0){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _7c4=s.getElementDimensions(_7bf,true);
var _7c5;
_7c0=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_7c4.w,originalWidth:_7c4.h},beforeSetupInternal:function(_7c6){
_7c5=s.makeClipping(_7c6.element);
},afterFinishInternal:function(_7c7){
s.hideElement(_7c7.element);
s.undoClipping(_7c7.element,_7c5);
}},_7c0);
return new MochiKit.Visual.Scale(_7bf,/Opera/.test(navigator.userAgent)?1:0,_7c0);
};
MochiKit.Visual.grow=function(_7c8,_7c9){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7c8=d.getElement(_7c8);
_7c9=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_7c9);
var _7cd={top:_7c8.style.top,left:_7c8.style.left,height:_7c8.style.height,width:_7c8.style.width,opacity:s.getStyle(_7c8,"opacity")};
var dims=s.getElementDimensions(_7c8,true);
var _7cf,_7d0;
var _7d1,_7d2;
switch(_7c9.direction){
case "top-left":
_7cf=_7d0=_7d1=_7d2=0;
break;
case "top-right":
_7cf=dims.w;
_7d0=_7d2=0;
_7d1=-dims.w;
break;
case "bottom-left":
_7cf=_7d1=0;
_7d0=dims.h;
_7d2=-dims.h;
break;
case "bottom-right":
_7cf=dims.w;
_7d0=dims.h;
_7d1=-dims.w;
_7d2=-dims.h;
break;
case "center":
_7cf=dims.w/2;
_7d0=dims.h/2;
_7d1=-dims.w/2;
_7d2=-dims.h/2;
break;
}
var _7d3=MochiKit.Base.update({beforeSetupInternal:function(_7d4){
s.setStyle(_7d4.effects[0].element,{height:"0px"});
s.showElement(_7d4.effects[0].element);
},afterFinishInternal:function(_7d5){
s.undoClipping(_7d5.effects[0].element);
s.undoPositioned(_7d5.effects[0].element);
s.setStyle(_7d5.effects[0].element,_7cd);
}},_7c9);
return new v.Move(_7c8,{x:_7cf,y:_7d0,duration:0.01,beforeSetupInternal:function(_7d6){
s.hideElement(_7d6.element);
s.makeClipping(_7d6.element);
s.makePositioned(_7d6.element);
},afterFinishInternal:function(_7d7){
new v.Parallel([new v.Opacity(_7d7.element,{sync:true,to:1,from:0,transition:_7c9.opacityTransition}),new v.Move(_7d7.element,{x:_7d1,y:_7d2,sync:true,transition:_7c9.moveTransition}),new v.Scale(_7d7.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_7c9.scaleTransition,scaleContent:_7c9.scaleContent,scaleFromCenter:_7c9.scaleFromCenter,restoreAfterFinish:true})],_7d3);
}});
};
MochiKit.Visual.shrink=function(_7d8,_7d9){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7d8=d.getElement(_7d8);
_7d9=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_7d9);
var _7dd={top:_7d8.style.top,left:_7d8.style.left,height:_7d8.style.height,width:_7d8.style.width,opacity:s.getStyle(_7d8,"opacity")};
var dims=s.getElementDimensions(_7d8,true);
var _7df,_7e0;
switch(_7d9.direction){
case "top-left":
_7df=_7e0=0;
break;
case "top-right":
_7df=dims.w;
_7e0=0;
break;
case "bottom-left":
_7df=0;
_7e0=dims.h;
break;
case "bottom-right":
_7df=dims.w;
_7e0=dims.h;
break;
case "center":
_7df=dims.w/2;
_7e0=dims.h/2;
break;
}
var _7e1;
var _7e2=MochiKit.Base.update({beforeStartInternal:function(_7e3){
s.makePositioned(_7e3.effects[0].element);
_7e1=s.makeClipping(_7e3.effects[0].element);
},afterFinishInternal:function(_7e4){
s.hideElement(_7e4.effects[0].element);
s.undoClipping(_7e4.effects[0].element,_7e1);
s.undoPositioned(_7e4.effects[0].element);
s.setStyle(_7e4.effects[0].element,_7dd);
}},_7d9);
return new v.Parallel([new v.Opacity(_7d8,{sync:true,to:0,from:1,transition:_7d9.opacityTransition}),new v.Scale(_7d8,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_7d9.scaleTransition,scaleContent:_7d9.scaleContent,scaleFromCenter:_7d9.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_7d8,{x:_7df,y:_7e0,sync:true,transition:_7d9.moveTransition})],_7e2);
};
MochiKit.Visual.pulsate=function(_7e5,_7e6){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _7ea=MochiKit.Style.getStyle(_7e5,"opacity");
_7e6=b.update({duration:3,from:0,afterFinishInternal:function(_7eb){
MochiKit.Style.setStyle(_7eb.element,{"opacity":_7ea});
}},_7e6);
var _7ec=_7e6.transition||v.Transitions.sinoidal;
_7e6.transition=function(pos){
return _7ec(1-v.Transitions.pulse(pos,_7e6.pulses));
};
return new v.Opacity(_7e5,_7e6);
};
MochiKit.Visual.fold=function(_7ee,_7ef){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7ee=d.getElement(_7ee);
var _7f3=s.getElementDimensions(_7ee,true);
var _7f4={top:_7ee.style.top,left:_7ee.style.left,width:_7ee.style.width,height:_7ee.style.height};
var _7f5=s.makeClipping(_7ee);
_7ef=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7f3.h,originalWidth:_7f3.w},afterFinishInternal:function(_7f6){
new v.Scale(_7ee,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_7f3.h,originalWidth:_7f3.w},afterFinishInternal:function(_7f7){
s.hideElement(_7f7.element);
s.undoClipping(_7f7.element,_7f5);
s.setStyle(_7f7.element,_7f4);
}});
}},_7ef);
return new v.Scale(_7ee,5,_7ef);
};
MochiKit.Base.nameFunctions(MochiKit.Visual);
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DragAndDrop");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Signal");
goog.require("MochiKit.Visual");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_7f8){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_7f8);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_7fd){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_7fd)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_7fd);
}
},this.drops);
},findDeepestChild:function(_7ff){
var _800=_7ff[0];
for(var i=1;i<_7ff.length;++i){
if(MochiKit.DOM.isChildNode(_7ff[i].element,_800.element)){
_800=_7ff[i];
}
}
return _800;
},show:function(_802,_803){
if(!this.drops.length){
return;
}
var _804=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_802,_803)){
_804.push(drop);
}
});
if(_804.length>0){
var drop=this.findDeepestChild(_804);
MochiKit.Position.within(drop.element,_802.page.x,_802.page.y);
drop.options.onhover(_803,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_807,_808){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_807.mouse(),_808)){
this.last_active.options.ondrop(_808,this.last_active.element,_807);
}
},reset:function(_809){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_809);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_80b,_80c){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_80b,_80c);
}
this.__init__(_80b,_80c);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_80e,_80f){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_80e);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_80f);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_813){
if(this.options._containers.length){
var _814;
if(this.options.tree){
_814=_813.treeNode;
}else{
_814=_813.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _814==c;
});
}else{
return true;
}
},isAccepted:function(_816){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_816,c);
}));
},isAffected:function(_818,_819){
return ((this.element!=_819)&&this.isContained(_819)&&this.isAccepted(_819)&&MochiKit.Position.within(this.element,_818.page.x,_818.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_81a){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_81a);
},unregister:function(_81c){
this.drags=MochiKit.Base.filter(function(d){
return d!=_81c;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_81f){
window.focus();
this.activeDraggable=_81f;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_820){
if(!this.activeDraggable){
return;
}
var _821=_820.mouse();
if(this._lastPointer&&(MochiKit.Base.repr(this._lastPointer.page)==MochiKit.Base.repr(_821.page))){
return;
}
this._lastPointer=_821;
this.activeDraggable.updateDrag(_820,_821);
},endDrag:function(_822){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_822);
this.activeDraggable=null;
},keyPress:function(_823){
if(this.activeDraggable){
this.activeDraggable.keyPress(_823);
}
},notify:function(_824,_825,_826){
MochiKit.Signal.signal(this,_824,_825,_826);
}};
MochiKit.DragAndDrop.Draggable=function(_827,_828){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_827,_828);
}
this.__init__(_827,_828);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_82a,_82b){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_82b=b.update({handle:false,starteffect:function(_82e){
this._savedOpacity=MochiKit.Style.getStyle(_82e,"opacity")||1;
new v.Opacity(_82e,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_82f,_830,_831){
var dur=Math.sqrt(Math.abs(_830^2)+Math.abs(_831^2))*0.02;
return new v.Move(_82f,{x:-_831,y:-_830,duration:dur});
},endeffect:function(_833){
new v.Opacity(_833,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_82b);
var d=MochiKit.DOM;
this.element=d.getElement(_82a);
if(_82b.handle&&(typeof (_82b.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_82b.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_82b.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_82b.scroll&&!_82b.scroll.scrollTo&&!_82b.scroll.outerHTML){
_82b.scroll=d.getElement(_82b.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_82b.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_82b;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0",10),parseInt(s(this.element,"top")||"0",10)];
},initDrag:function(_836){
if(!_836.mouse().button.left){
return;
}
var src=_836.target();
var _838=(src.tagName||"").toUpperCase();
if(_838==="INPUT"||_838==="SELECT"||_838==="OPTION"||_838==="BUTTON"||_838==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _839=_836.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_839.page.x-pos.x,_839.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_836.stop();
},startDrag:function(_83b){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=MochiKit.Style.getStyle(this.element,"z-index");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _83c=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_83c.left;
this.originalScrollTop=_83c.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_83b);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_83d,_83e){
if(!this.dragging){
this.startDrag(_83d);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_83e,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_83d);
this.draw(_83e);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _842=[0,0];
if(_83e.page.x>(q.x-this.options.scrollSensitivity)){
_842[0]=_83e.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_83e.page.x<(p.x+this.options.scrollSensitivity)){
_842[0]=_83e.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_83e.page.y>(q.y-this.options.scrollSensitivity)){
_842[1]=_83e.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_83e.page.y<(p.y+this.options.scrollSensitivity)){
_842[1]=_83e.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_842);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_83d.stop();
},finishDrag:function(_843,_844){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_844){
dr.Droppables.fire(_843,this.element);
}
dr.Draggables.notify("end",this,_843);
var _846=this.options.revert;
if(_846&&typeof (_846)=="function"){
_846=_846(this.element);
}
var d=this.currentDelta();
if(_846&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_848){
if(_848.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_848,false);
_848.stop();
},endDrag:function(_849){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_849,true);
_849.stop();
},draw:function(_84a){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_84a.page.x-pos.x-this.offset[0],_84a.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _851=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_851.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_851.top=p[1]+"px";
}
if(_851.visibility=="hidden"){
_851.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_852){
if(!_852[0]&&!_852[1]){
return;
}
this.scrollSpeed=[_852[0]*this.options.scrollSpeed,_852[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _853=new Date();
var _854=_853-this.lastScrolled;
this.lastScrolled=_853;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_854/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_854/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_854/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_854/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_854/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Sortable");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Position");
goog.require("MochiKit.DragAndDrop");
}
MochiKit.Base.module(MochiKit,"Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_85c){
while(_85c.tagName.toUpperCase()!="BODY"){
if(_85c.id&&MochiKit.Sortable.sortables[_85c.id]){
return _85c;
}
_85c=_85c.parentNode;
}
},_createElementId:function(_85d){
if(_85d.id==null||_85d.id==""){
var d=MochiKit.DOM;
var id;
var _860=1;
while(d.getElement(id="sortable"+_860)!=null){
_860+=1;
}
d.setNodeAttribute(_85d,"id",id);
}
},options:function(_861){
_861=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_861));
if(!_861){
return;
}
return MochiKit.Sortable.sortables[_861.id];
},destroy:function(_862){
var s=MochiKit.Sortable.options(_862);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_868,_869){
_868=MochiKit.DOM.getElement(_868);
var self=MochiKit.Sortable;
self._createElementId(_868);
_869=MochiKit.Base.update({element:_868,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_868],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_869);
self.destroy(_868);
var _86b={revert:true,ghosting:_869.ghosting,scroll:_869.scroll,scrollSensitivity:_869.scrollSensitivity,scrollSpeed:_869.scrollSpeed,constraint:_869.constraint,handle:_869.handle};
if(_869.starteffect){
_86b.starteffect=_869.starteffect;
}
if(_869.reverteffect){
_86b.reverteffect=_869.reverteffect;
}else{
if(_869.ghosting){
_86b.reverteffect=function(_86c){
_86c.style.top=0;
_86c.style.left=0;
};
}
}
if(_869.endeffect){
_86b.endeffect=_869.endeffect;
}
if(_869.zindex){
_86b.zindex=_869.zindex;
}
var _86d={overlap:_869.overlap,containment:_869.containment,hoverclass:_869.hoverclass,onhover:self.onHover,tree:_869.tree,accept:_869.accept};
var _86e={onhover:self.onEmptyHover,overlap:_869.overlap,containment:_869.containment,hoverclass:_869.hoverclass,accept:_869.accept};
MochiKit.DOM.removeEmptyTextNodes(_868);
_869.draggables=[];
_869.droppables=[];
if(_869.dropOnEmpty||_869.tree){
new MochiKit.DragAndDrop.Droppable(_868,_86e);
_869.droppables.push(_868);
}
MochiKit.Base.map(function(e){
var _870=_869.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_869.handle,e):e;
_869.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_86b,{handle:_870})));
new MochiKit.DragAndDrop.Droppable(e,_86d);
if(_869.tree){
e.treeNode=_868;
}
_869.droppables.push(e);
},(self.findElements(_868,_869)||[]));
if(_869.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_86e);
e.treeNode=_868;
_869.droppables.push(e);
},(self.findTreeElements(_868,_869)||[]));
}
self.sortables[_868.id]=_869;
_869.lastValue=self.serialize(_868);
_869.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_868));
_869.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_868));
},onStart:function(_872,_873){
var self=MochiKit.Sortable;
var _875=self.options(_872);
_875.lastValue=self.serialize(_875.element);
},onEnd:function(_876,_877){
var self=MochiKit.Sortable;
self.unmark();
var _879=self.options(_876);
if(_879.lastValue!=self.serialize(_879.element)){
_879.onUpdate(_879.element);
}
},findElements:function(_87a,_87b){
return MochiKit.Sortable.findChildren(_87a,_87b.only,_87b.tree,_87b.tag);
},findTreeElements:function(_87c,_87d){
return MochiKit.Sortable.findChildren(_87c,_87d.only,_87d.tree?true:false,_87d.treeTag);
},findChildren:function(_87e,only,_880,_881){
if(!_87e.hasChildNodes()){
return null;
}
_881=_881.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _882=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_881&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_882.push(e);
}
if(_880){
var _885=MochiKit.Sortable.findChildren(e,only,_880,_881);
if(_885&&_885.length>0){
_882=_882.concat(_885);
}
}
},_87e.childNodes);
return _882;
},onHover:function(_886,_887,_888){
if(MochiKit.DOM.isChildNode(_887,_886)){
return;
}
var self=MochiKit.Sortable;
if(_888>0.33&&_888<0.66&&self.options(_887).tree){
return;
}else{
if(_888>0.5){
self.mark(_887,"before");
if(_887.previousSibling!=_886){
var _88a=_886.parentNode;
_886.style.visibility="hidden";
_887.parentNode.insertBefore(_886,_887);
if(_887.parentNode!=_88a){
self.options(_88a).onChange(_886);
}
self.options(_887.parentNode).onChange(_886);
}
}else{
self.mark(_887,"after");
var _88b=_887.nextSibling||null;
if(_88b!=_886){
var _88a=_886.parentNode;
_886.style.visibility="hidden";
_887.parentNode.insertBefore(_886,_88b);
if(_887.parentNode!=_88a){
self.options(_88a).onChange(_886);
}
self.options(_887.parentNode).onChange(_886);
}
}
}
},_offsetSize:function(_88c,type){
if(type=="vertical"||type=="height"){
return _88c.offsetHeight;
}else{
return _88c.offsetWidth;
}
},onEmptyHover:function(_88e,_88f,_890){
var _891=_88e.parentNode;
var self=MochiKit.Sortable;
var _893=self.options(_88f);
if(!MochiKit.DOM.isChildNode(_88f,_88e)){
var _894;
var _895=self.findElements(_88f,{tag:_893.tag,only:_893.only});
var _896=null;
if(_895){
var _897=self._offsetSize(_88f,_893.overlap)*(1-_890);
for(_894=0;_894<_895.length;_894+=1){
if(_897-self._offsetSize(_895[_894],_893.overlap)>=0){
_897-=self._offsetSize(_895[_894],_893.overlap);
}else{
if(_897-(self._offsetSize(_895[_894],_893.overlap)/2)>=0){
_896=_894+1<_895.length?_895[_894+1]:null;
break;
}else{
_896=_895[_894];
break;
}
}
}
}
_88f.insertBefore(_88e,_896);
self.options(_891).onChange(_88e);
_893.onChange(_88e);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_899,_89a){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _89d=self.options(_899.parentNode);
if(_89d&&!_89d.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _89e=MochiKit.Position.cumulativeOffset(_899);
self._marker.style.left=_89e.x+"px";
self._marker.style.top=_89e.y+"px";
if(_89a=="after"){
if(_89d.overlap=="horizontal"){
self._marker.style.left=(_89e.x+_899.clientWidth)+"px";
}else{
self._marker.style.top=(_89e.y+_899.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_89f,_8a0,_8a1){
var self=MochiKit.Sortable;
var _8a3=self.findElements(_89f,_8a0)||[];
for(var i=0;i<_8a3.length;++i){
var _8a5=_8a3[i].id.match(_8a0.format);
if(!_8a5){
continue;
}
var _8a6={id:encodeURIComponent(_8a5?_8a5[1]:null),element:_89f,parent:_8a1,children:[],position:_8a1.children.length,container:self._findChildrenElement(_8a3[i],_8a0.treeTag.toUpperCase())};
if(_8a6.container){
self._tree(_8a6.container,_8a0,_8a6);
}
_8a1.children.push(_8a6);
}
return _8a1;
},_findChildrenElement:function(_8a7,_8a8){
if(_8a7&&_8a7.hasChildNodes){
_8a8=_8a8.toUpperCase();
for(var i=0;i<_8a7.childNodes.length;++i){
if(_8a7.childNodes[i].tagName.toUpperCase()==_8a8){
return _8a7.childNodes[i];
}
}
}
return null;
},tree:function(_8aa,_8ab){
_8aa=MochiKit.DOM.getElement(_8aa);
var _8ac=MochiKit.Sortable.options(_8aa);
_8ab=MochiKit.Base.update({tag:_8ac.tag,treeTag:_8ac.treeTag,only:_8ac.only,name:_8aa.id,format:_8ac.format},_8ab||{});
var root={id:null,parent:null,children:new Array,container:_8aa,position:0};
return MochiKit.Sortable._tree(_8aa,_8ab,root);
},setSequence:function(_8ae,_8af,_8b0){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_8ae=MochiKit.DOM.getElement(_8ae);
_8b0=b.update(self.options(_8ae),_8b0||{});
var _8b3={};
b.map(function(n){
var m=n.id.match(_8b0.format);
if(m){
_8b3[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_8ae,_8b0));
b.map(function(_8b6){
var n=_8b3[_8b6];
if(n){
n[1].appendChild(n[0]);
delete _8b3[_8b6];
}
},_8af);
},_constructIndex:function(node){
var _8b9="";
do{
if(node.id){
_8b9="["+node.position+"]"+_8b9;
}
}while((node=node.parent)!=null);
return _8b9;
},sequence:function(_8ba,_8bb){
_8ba=MochiKit.DOM.getElement(_8ba);
var self=MochiKit.Sortable;
var _8bb=MochiKit.Base.update(self.options(_8ba),_8bb||{});
return MochiKit.Base.map(function(item){
return item.id.match(_8bb.format)?item.id.match(_8bb.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_8ba,_8bb)||[]));
},serialize:function(_8be,_8bf){
_8be=MochiKit.DOM.getElement(_8be);
var self=MochiKit.Sortable;
_8bf=MochiKit.Base.update(self.options(_8be),_8bf||{});
var name=encodeURIComponent(_8bf.name||_8be.id);
if(_8bf.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_8be,_8bf).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_8be,_8bf)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base_ext");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Base_ext","1.5",["Base"]);
MochiKit.Base._arg_placeholder=function(_8c4){
this.index=_8c4;
};
var _1=new MochiKit.Base._arg_placeholder(0);
var _2=new MochiKit.Base._arg_placeholder(1);
var _3=new MochiKit.Base._arg_placeholder(2);
var _4=new MochiKit.Base._arg_placeholder(3);
var _5=new MochiKit.Base._arg_placeholder(4);
var _6=new MochiKit.Base._arg_placeholder(5);
var _7=new MochiKit.Base._arg_placeholder(6);
var _8=new MochiKit.Base._arg_placeholder(7);
var _9=new MochiKit.Base._arg_placeholder(8);
var _10=new MochiKit.Base._arg_placeholder(9);
MochiKit.Base._rebind_preargs=function(_8c5,args,_8c7){
_8c7=_8c7||{};
for(var i=0;i<_8c5.length;++i){
var pa=_8c5[i];
if(pa instanceof MochiKit.Base._arg_placeholder){
if(pa.index<args.length){
_8c5[i]=args[pa.index];
_8c7[pa.index]=pa.index;
}
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
MochiKit.Base._rebind_preargs(pa.im_preargs,args,_8c7);
}
}
}
return _8c7;
};
MochiKit.Base.bind2=function(func,self,_8cc){
if(typeof (func)=="string"){
func=self[func];
}
var _8cd=func.im_func;
var _8ce=func.im_preargs;
var _8cf=func.im_self;
var m=MochiKit.Base;
if(typeof (func)=="function"&&typeof (func.apply)=="undefined"){
func=m._wrapDumbFunction(func);
}
if(typeof (_8cd)!="function"){
_8cd=func;
}
if(typeof (self)!="undefined"){
_8cf=self;
}
if(typeof (_8ce)=="undefined"){
_8ce=[];
}else{
_8ce=_8ce.slice();
}
var args=Array.prototype.slice.call(arguments,self instanceof m._arg_placeholder?1:2);
var _8d2=MochiKit.Base._rebind_preargs(_8ce,args);
for(var _8d3 in _8d2){
args.splice(_8d2[_8d3],1);
}
m.extend(_8ce,args);
var _8d4=function(){
var me=arguments.callee;
var self=me.im_self;
if(!self){
self=this;
}
var args=[];
if(me.im_preargs.length>0){
var imax=0;
for(var i=0;i<me.im_preargs.length;++i){
var pa=me.im_preargs[i];
if(pa instanceof m._arg_placeholder){
imax=Math.max(imax,pa.index+1);
pa=arguments[pa.index];
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
pa=pa.apply(self,arguments);
}
}
args.push(pa);
}
for(var j=imax;j<arguments.length;++j){
args.push(arguments[j]);
}
}else{
args=arguments;
}
if(self instanceof m._arg_placeholder){
self=arguments[self.index];
}
return me.im_func.apply(self,args);
};
_8d4.im_self=_8cf;
_8d4.im_func=_8cd;
_8d4.im_preargs=_8ce;
if(typeof (_8cd.NAME)=="string"){
_8d4.NAME="bind2("+_8cd.NAME+",...)";
}
return _8d4;
};
MochiKit.Base.partial2=function(func,_8dd){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,undefined],arguments,1));
};
MochiKit.Base.method2=function(self,func,_8e1){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,self],arguments,2));
};
MochiKit.Base.bindLate2=function(func,self,_8e5){
var m=MochiKit.Base;
var args=arguments;
if(typeof (func)==="string"){
args=m.extend([m.forwardCall(func)],arguments,1);
return m.bind2.apply(this,args);
}
return m.bind2.apply(this,args);
};
MochiKit.Base.isBoundFunction=function(fn){
return typeof fn=="function"&&typeof fn.im_func=="function";
};
MochiKit.Base.protect=function(_8e9){
return function(){
return _8e9.apply(this,arguments);
};
};
MochiKit.Base.apply=function(fn,_8eb){
var args=MochiKit.Base.extend([],arguments,1);
return fn.apply(this,args);
};
MochiKit.Base.partition=function(_8ed,cmp,left,_8f0,_8f1){
cmp=cmp||MochiKit.Base.operator.cle;
left=left||0;
_8f0=_8f0||_8ed.length-1;
_8f1=_8f1||(left+Math.floor((_8f0-left)/2));
function swap(i,j){
var tmp=_8ed[i];
_8ed[i]=_8ed[j];
_8ed[j]=tmp;
}
var _8f5=_8ed[_8f1];
swap(_8f1,_8f0);
var _8f6=left;
for(var i=left;i<=_8f0;++i){
if(cmp(_8ed[i],_8f5)){
swap(i,_8f6);
++_8f6;
}
}
swap(_8f6,_8f0);
return _8f6;
};
MochiKit.Base.countValue=function(_8f8,elem,cmp){
cmp=cmp||MochiKit.Base.operator.ceq;
var n=0;
MochiKit.Iter.forEach(_8f8,function(e){
if(cmp(e,item)){
++n;
}
});
return n;
};
MochiKit.Base.negateComparator=function(cmp){
return function(){
return -1*cmp.apply(this,arguments);
};
};
MochiKit.Base_ext.__new__=function(){
};
MochiKit.Base_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Iter_ext","1.5",["Base","Iter"]);
MochiKit.Iter.treePreOrder=function(_8fe,_8ff){
var _900=[_8fe];
return {repr:function(){
return "treePreOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_900.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_900.pop();
MochiKit.Iter.iextend(_900,_8ff(node));
return node;
}};
};
MochiKit.Iter.treeLevelOrder=function(_902,_903){
var _904=[_902];
return {repr:function(){
return "treeLevelOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_904.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_904.shift();
MochiKit.Iter.iextend(_904,_903(node));
return node;
}};
};
MochiKit.Iter.treePostOrder=function(_906,_907){
var _908=[[_906,false]];
return {repr:function(){
return "treePostOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_908.length==0){
throw MochiKit.Iter.StopIteration;
}
var n=_908.pop();
if(n[1]){
return n[0];
}
n[1]=true;
_908.push(n);
MochiKit.Iter.iextend(_908,MochiKit.Iter.imap(function(node){
return [node,false];
},_907(n[0])));
}
}};
};
MochiKit.Iter.pairView=function(_90b,_90c){
_90c=_90c||false;
var it=MochiKit.Iter.iter(_90b);
try{
var _90e=it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return {next:function(){
throw e;
}};
}
if(_90c){
it=MochiKit.Iter.chain(it,[_90e]);
}
return {repr:function(){
return "pairView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _90f=it.next();
var pair=[_90e,_90f];
_90e=_90f;
return pair;
}};
};
MochiKit.Iter.windowView=function(_911,_912,_913){
_912=_912||2;
_913=_913||1;
var it=MochiKit.Iter.iter(_911);
var win=[];
return {repr:function(){
return "windowView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(win.length<_912){
while(win.length<_912){
win.push(it.next());
}
}else{
for(var i=0;i<_913;++i){
win.shift();
win.push(it.next());
}
}
return win.slice();
}};
};
MochiKit.Iter.filterMap=function(_917,_918,_919){
_919=_919||function(item){
return typeof item!=="undefined"&&item!==null;
};
return MochiKit.Iter.ifilter(_919,MochiKit.Iter.imap(_917,_918));
};
MochiKit.Iter.iflattenArray=function(root){
var _91c=[root];
return {repr:function(){
return "iflattenArray(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_91c.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_91c.shift();
if(node instanceof Array){
Array.prototype.splice.apply(_91c,[0,0].concat(node));
}else{
return node;
}
}
}};
};
MochiKit.Iter.chainFromIter=function(seq,_91f){
_91f=_91f||MochiKit.Iter.iter;
var it=MochiKit.Iter.iter(seq);
var jt=null;
return {repr:function(){
return "chainFromIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(jt==null){
jt=MochiKit.Iter.iter(_91f(it.next()));
}
while(true){
try{
var val=jt.next();
return val;
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=MochiKit.Iter.iter(_91f(it.next()));
}
}
}};
};
MochiKit.Iter.uniqueView=function(_923,pred){
pred=pred||MochiKit.Base.operator.eq;
var it=MochiKit.Iter.iter(_923);
var _926=true;
var prev;
return {repr:function(){
return "uniqueView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_926){
_926=false;
prev=it.next();
return prev;
}
var val=it.next();
while(pred(prev,val)){
val=it.next();
}
prev=val;
return val;
}};
};
MochiKit.Iter.iproduct=function(_929,_92a){
var sa=arguments[0],sb=arguments[1];
var it=MochiKit.Iter.iter(sa);
var jt=null;
var a,b;
return {repr:function(){
return "iproduct(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(jt==null){
a=it.next();
jt=MochiKit.Iter.iter(sb);
}
try{
b=jt.next();
return [a,b];
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=null;
}
}
}};
};
MochiKit.Iter.enumerate=function(_931,_932){
return MochiKit.Iter.izip(MochiKit.Iter.count(_932),_931);
};
MochiKit.Iter.breakIt=function(){
throw MochiKit.Iter.StopIteration;
};
MochiKit.Iter.generateN=function(_933,n){
return MochiKit.Iter.imap(function(){
return _933();
},MochiKit.Iter.range(n));
};
MochiKit.Iter.izipLongest=function(_935,_936){
_936=_936||null;
_935=MochiKit.Base.map(MochiKit.Iter.iter,_935);
var _937=_935.length;
return {repr:function(){
return "izipLongest(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _938=new Array(_935.length);
for(var i=0;i<_935.length;++i){
try{
_938[i]=_935[i].next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
_935[i]=MochiKit.Iter.repeat(_936);
_938[i]=_936;
--_937;
}
}
if(_937==0){
throw MochiKit.Iter.StopIteration;
}
return _938;
}};
};
MochiKit.Iter.any=MochiKit.Iter.some;
MochiKit.Iter.all=MochiKit.Iter.every;
MochiKit.Iter.starmap=MochiKit.Iter.applymap;
MochiKit.Iter.advance=function(iter,n){
while(n-->0){
iter.next();
}
return iter;
};
MochiKit.Iter.isSorted=function(_93c,cmp){
return MochiKit.Iter.every(MochiKit.Iter.windowView(_93c),cmp||MochiKit.Base.operator.cle);
};
MochiKit.Iter_ext.__new__=function(){
};
MochiKit.Iter_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text_ext");
goog.require("MochiKit.Text");
}
MochiKit.Base.module(MochiKit,"Text_ext","1.5",["Text"]);
MochiKit.Text.levenshteinDistance=function(s,t,_940){
_940=_940||false;
var n=s.length,m=t.length;
if(n==0){
return m;
}
if(m==0){
return n;
}
var d=new Array(n+1);
for(var r=0;r<n+1;++r){
d[r]=new Array(m+1);
}
for(var i=0;i<=n;++i){
d[i][0]=i;
}
for(var j=0;j<=m;++j){
d[0][j]=j;
}
for(var i=1;i<=n;++i){
for(var j=1;j<=m;++j){
var cost=(t[j-1]==s[i-1]?0:1);
var cell=Math.min(Math.min(d[i-1][j]+1,d[i][j-1]+1),d[i-1][j-1]+cost);
if(_940&&(i>2&&j>2)){
var _949=d[i-2][j-2]+1;
if(s[i-2]!=t[j-1]){
++_949;
}
if(s[i-1]!=t[j-2]){
++_949;
}
if(cell>_949){
cell=_949;
}
}
d[i][j]=cell;
}
}
return d[n][m];
};
MochiKit.Text.humanStringCompare=function(a,b){
if(a==b){
return 0;
}
var _94c=/^(\+|\-)?\d+/;
var _94d=/^\D+/;
while(a.length>0&&b.length>0){
var a0=null,ainc=-1;
var b0=null,binc=-1;
var ma=a.match(_94d);
var mb=b.match(_94d);
if(ma!=null&&mb!=null){
a0=ma[0].toLowerCase();
ainc=a0.length;
b0=mb[0].toLowerCase();
binc=b0.length;
}else{
if(ma==null){
ma=a.match(_94c);
a0=parseInt(ma[0],10)+2<<15;
ainc=ma[0].length;
}else{
a0=a.charAt(0).toLowerCase().charCodeAt(0);
ainc=1;
}
if(mb==null){
mb=b.match(_94c);
b0=parseInt(mb[0],10)+2<<15;
binc=mb[0].length;
}else{
b0=b.charAt(0).toLowerCase().charCodeAt(0);
binc=1;
}
}
if(a0<b0){
return -1;
}
if(a0>b0){
return +1;
}
a=a.substring(ainc);
b=b.substring(binc);
}
if(a.length>0){
return +1;
}
if(b.length>0){
return -1;
}
return 0;
};
MochiKit.Text_ext.__new__=function(){
};
MochiKit.Text_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.HeapQ");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"HeapQ","1.5",["Base","Iter"]);
MochiKit.HeapQ.heapify=function(x,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var n=x.length;
for(var i=Math.floor(n/2)-1;i>=0;--i){
MochiKit.HeapQ._siftup(x,i,cmp);
}
return x;
};
MochiKit.HeapQ._siftdown=function(heap,_959,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _95c=heap[pos];
while(pos>_959){
var _95d=(pos-1)>>1;
var _95e=heap[_95d];
if(cmp(_95c,_95e)){
heap[pos]=_95e;
pos=_95d;
continue;
}
break;
}
heap[pos]=_95c;
};
MochiKit.HeapQ._siftup=function(heap,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _962=heap.length;
var _963=pos;
var _964=heap[pos];
var _965=2*pos+1;
while(_965<_962){
var _966=_965+1;
if(_966<_962&&!(cmp(heap[_965],heap[_966]))){
_965=_966;
}
heap[pos]=heap[_965];
pos=_965;
_965=2*pos+1;
}
heap[pos]=_964;
MochiKit.HeapQ._siftdown(heap,_963,pos,cmp);
};
MochiKit.HeapQ.heapPush=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
heap.push(item);
MochiKit.HeapQ._siftdown(heap,0,heap.length-1,cmp);
};
MochiKit.HeapQ.heapPop=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _96c=heap.pop();
var _96d;
if(heap.length>0){
_96d=heap[0];
heap[0]=_96c;
MochiKit.HeapQ._siftup(heap,0,cmp);
}else{
_96d=_96c;
}
return _96d;
};
MochiKit.HeapQ.heapReplace=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _971=heap[0];
heap[0]=item;
MochiKit.HeapQ._siftup(heap,0,cmp);
return _971;
};
MochiKit.HeapQ.heapPushPop=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
if(heap.length>0&&cmp(heap[0],item)){
var tmp=heap[0];
heap[0]=item;
item=tmp;
MochiKit.HeapQ._siftup(heap,0,cmp);
}
return item;
};
MochiKit.HeapQ.imergeSorted=function(_976,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var _cmp=function(a,b){
var c=cmp(a[0],b[0]);
return c;
};
var h=[];
mi.forEach(mi.izip(mi.count(),mi.imap(mi.iter,_976)),function(pair){
var _980=pair[0],it=pair[1];
try{
var next=it.next;
h.push([next(),_980,next]);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
}
});
m.HeapQ.heapify(h,_cmp);
return {repr:function(){
return "imergeSorted(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(h.length==0){
throw mi.StopIteration;
}
var s=h[0];
var v=s[0];
var next=s[2];
try{
s[0]=next();
m.HeapQ.heapReplace(h,s,_cmp);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
m.HeapQ.heapPop(h,_cmp);
}
return v;
}
}};
};
MochiKit.HeapQ.heapIter=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
return {next:function(){
if(heap.length==0){
throw MochiKit.Iter.StopIteration;
}
return MochiKit.HeapQ.heapPop(heap,cmp);
}};
};
MochiKit.HeapQ.nLargest=function(n,_989,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var it=mi.iter(_989);
var _98e=mi.list(mi.islice(it,n));
if(_98e.length==0){
return _98e;
}
m.HeapQ.heapify(_98e,cmp);
mi.forEach(it,function(elem){
m.HeapQ.heapPushPop(_98e,elem,cmp);
});
_98e.sort(function(a,b){
return -1*m.Base.compare(a,b);
});
return _98e;
};
MochiKit.HeapQ.nSmallest=function(n,_993,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var h=mi.list(_993);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),mi.range(Math.min(n,h.length)));
};
MochiKit.HeapQ.isHeap=function(lst,cmp){
cmp=cmp||MochiKit.Base.operator.cle;
for(var pos=1;pos<lst.length;++pos){
var _99b=(pos-1)>>1;
if(!cmp(lst[_99b],lst[pos])){
return false;
}
}
return true;
};
MochiKit.HeapQ.heapSort=function(_99c,cmp){
var m=MochiKit;
var h=m.Iter.list(_99c);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),m.Iter.range(h.length));
};
MochiKit.HeapQ.__new__=function(){
};
MochiKit.HeapQ.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.HeapQ);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Random");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Random","1.5",["Base"]);
MochiKit.Random.random=Math.random;
MochiKit.Random.randRange=function(_9a0,_9a1,step){
var self=MochiKit.Random;
if(arguments.length==1){
_9a1=_9a0;
_9a0=0;
}
step=step||1;
var _9a4=_9a1-_9a0;
if(step==1&&_9a4>0){
return Math.floor(_9a0+Math.floor(self.random()*_9a4));
}
if(step>0){
var n=Math.floor((_9a4+step-1)/step);
}else{
if(step<0){
var n=Math.floor((_9a4+step+1)/step);
}
}
return _9a0+step*Math.floor(self.random()*n);
};
MochiKit.Random.uniform=function(a,b){
return a+(b-a)*MochiKit.Random.random();
};
MochiKit.Random.shuffle=function(_9a8){
for(var i=_9a8.length-1;i>0;--i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
var tmp=_9a8[i];
_9a8[i]=_9a8[j];
_9a8[j]=tmp;
}
return _9a8;
};
MochiKit.Random.deal=function(_9ac,func){
func=func||MochiKit.Base.operator.identity;
var deck=new Array(_9ac);
for(var i=0;i<_9ac;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
deck[i]=deck[j];
deck[j]=func(i);
}
return deck;
};
MochiKit.Random.choice=function(seq){
return seq[Math.floor(MochiKit.Random.random()*seq.length)];
};
MochiKit.Random.shuffled=function(_9b2){
var n=_9b2.length;
var a=new Array(n);
a[0]=_9b2[0];
for(var i=1;i<n-1;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
a[i]=a[j];
a[j]=_9b2[i];
}
return a;
};
MochiKit.Random.sample=function(_9b7,k){
var n=_9b7.length;
var _9ba=new Array(k);
var _9bb={};
for(var i=0;i<k;++i){
var j=MochiKit.Random.randRange(n);
while(j in _9bb){
j=MochiKit.Random.randRange(n);
}
_9bb[j]=true;
_9ba[i]=_9b7[j];
}
return _9ba;
};
MochiKit.Random.__new__=function(){
};
MochiKit.Random.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Random);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Bisect");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Bisect","1.5",["Base"]);
MochiKit.Bisect.bisectRight=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(x,a[mid])<0){
hi=mid;
}else{
lo=mid+1;
}
}
return lo;
};
MochiKit.Bisect.insortRight=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectRight(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisectLeft=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(a[mid],x)<0){
lo=mid+1;
}else{
hi=mid;
}
}
return lo;
};
MochiKit.Bisect.insortLeft=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectLeft(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisect=MochiKit.Bisect.bisectRight;
MochiKit.Bisect.insort=MochiKit.Bisect.insortRight;
MochiKit.Bisect.__new__=function(){
};
MochiKit.Bisect.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Bisect);


