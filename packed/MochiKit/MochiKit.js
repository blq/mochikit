/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base");
}
var MochiKit=MochiKit||{};
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
MochiKit.NAME="MochiKit";
MochiKit.VERSION="1.5";
MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.Base=MochiKit.Base||{};
MochiKit.Base.module=function(_1,_2,_3,_4){
var _5=_1[_2]=_1[_2]||{};
var _6=(_1.NAME?_1.NAME+".":"");
_5.NAME=_6+_2;
_5.VERSION=_3;
_5.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_5.toString=function(){
return this.__repr__();
};
for(var i=0;_4!=null&&i<_4.length;i++){
if(!(_4[i] in _1)){
throw _5.NAME+" depends on "+_6+_4[i]+"!";
}
}
return _5;
};
MochiKit.Base.module(MochiKit,"Base","1.5",[]);
MochiKit.Base.update=function(_8,_9){
if(_8===null||_8===undefined){
_8={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_8[k]=o[k];
}
}
}
return _8;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_d){
var _e=_d.split("-");
var cc=_e[0];
for(var i=1;i<_e.length;i++){
cc+=_e[i].charAt(0).toUpperCase()+_e[i].substring(1);
}
return cc;
},counter:function(n,_12){
if(arguments.length===0){
n=1;
}
if(arguments.length<2){
_12=1;
}
return function(){
var c=n;
n+=_12;
return c;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _1e=m.extend(null,arguments);
while(_1e.length){
var o=_1e.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_1e.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_21,obj,_23){
if(!_23){
_23=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_21){
_21=[];
}
for(var i=_23;i<l;i++){
_21.push(obj[i]);
}
}
return _21;
},updatetree:function(_26,obj){
if(_26===null||_26===undefined){
_26={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_26[k])=="object"&&typeof (v)=="object"&&!MochiKit.Base.isDateLike(v)&&!(v instanceof Array)){
arguments.callee(_26[k],v);
}else{
_26[k]=v;
}
}
}
}
return _26;
},setdefault:function(_2c,obj,_2e){
if(_2c===null||_2c===undefined){
_2c={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _2c)){
_2c[k]=o[k];
}
}
}
return _2c;
},keys:function(obj){
var _33=[];
for(var _34 in obj){
_33.push(_34);
}
return _33;
},values:function(obj){
var _36=[];
for(var _37 in obj){
_36.push(obj[_37]);
}
return _36;
},items:function(obj){
var _39=[];
for(var _3a in obj){
var v;
try{
v=obj[_3a];
}
catch(e){
continue;
}
_39.push([_3a,v]);
}
return _39;
},_newNamedError:function(_3c,_3d,_3e){
_3e.prototype=new MochiKit.Base.NamedError(_3c.NAME+"."+_3d);
_3e.prototype.constructor=_3e;
_3c[_3d]=_3e;
},operator:{NAME:"operator",truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},floordiv:function(a,b){
return Math.floor(a/b);
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},pow:function(a,b){
return Math.pow(a,b);
},divmod:function(a,b){
return [a/b,a%b];
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},getitem:function(a,b){
return a[b];
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
},concat:function(a,b){
return MochiKit.Base.concat(a,b);
},iconcat:function(a,b){
return a.concat(b);
},setitem:function(a,b,c){
return a[b]=c;
},delitem:function(a,b){
delete a[b];
}},forwardCall:function(_8d){
return function(){
return this[_8d].apply(this,arguments);
};
},itemgetter:function(_8e){
return function(arg){
return arg[_8e];
};
},bool:function(_90){
if(typeof (_90)==="boolean"||_90 instanceof Boolean){
return _90.valueOf();
}else{
if(typeof (_90)==="string"||_90 instanceof String){
return _90.length>0&&_90!="false"&&_90!="null"&&_90!="undefined"&&_90!="0";
}else{
if(typeof (_90)==="number"||_90 instanceof Number){
return !isNaN(_90)&&_90!=0;
}else{
if(_90!=null&&typeof (_90.length)==="number"){
return _90.length!==0;
}else{
return _90!=null;
}
}
}
}
},typeMatcher:function(){
var _91={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_91[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _91)){
return false;
}
}
return true;
};
},isNull:function(obj,_96){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(obj,_99){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj,_9d){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj,_9f){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(arr,_a3){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(_a7,_a8){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn,obj,_ad){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _ae=[];
for(var i=1;i<arguments.length;i++){
_ae.push(fn(arguments[i]));
}
return _ae;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _b4=m.isArrayLike;
if(arguments.length<=2){
if(!_b4(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _b5=[];
for(var i=0;i<lst.length;i++){
_b5.push(fn(lst[i]));
}
return _b5;
}else{
if(fn===null){
fn=Array;
}
var _b7=null;
for(var i=1;i<arguments.length;i++){
if(!_b4(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_b7===null||_b7>l){
_b7=l;
}
}
_b5=[];
for(var i=0;i<_b7;i++){
var _b9=[];
for(var j=1;j<arguments.length;j++){
_b9.push(arguments[j][i]);
}
_b5.push(fn.apply(this,_b9));
}
return _b5;
}
},xfilter:function(fn,obj,_bd){
var _be=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_be.push(o);
}
}
return _be;
},filter:function(fn,lst,_c3){
var _c4=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_c3);
}else{
if(typeof (_c3)=="undefined"||_c3===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_c4.push(o);
}
}
}else{
for(var i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_c3,o)){
_c4.push(o);
}
}
}
}
return _c4;
},_wrapDumbFunction:function(_c8){
return function(){
switch(arguments.length){
case 0:
return _c8();
case 1:
return _c8(arguments[0]);
case 2:
return _c8(arguments[0],arguments[1]);
case 3:
return _c8(arguments[0],arguments[1],arguments[2]);
}
var _c9=[];
for(var i=0;i<arguments.length;i++){
_c9.push("arguments["+i+"]");
}
return eval("(func("+_c9.join(",")+"))");
};
},methodcaller:function(_cb,_cc){
var _cd=MochiKit.Base.extend(null,arguments,1);
if(typeof (_cb)=="function"){
return function(obj){
return _cb.apply(obj,_cd);
};
}else{
return function(obj){
return obj[_cb].apply(obj,_cd);
};
}
},method:function(_d0,_d1){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_d1,_d0],arguments,2));
},compose:function(f1,f2,_d5){
var _d6=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_d6.push(fn);
}
return function(){
var _da=arguments;
for(var i=_d6.length-1;i>=0;i--){
_da=[_d6[i].apply(this,_da)];
}
return _da[0];
};
},bind:function(_dc,_dd,_de){
if(typeof (_dc)=="string"){
_dc=_dd[_dc];
}
var _df=_dc.im_func;
var _e0=_dc.im_preargs;
var _e1=_dc.im_self;
var m=MochiKit.Base;
if(typeof (_dc)=="function"&&typeof (_dc.apply)=="undefined"){
_dc=m._wrapDumbFunction(_dc);
}
if(typeof (_df)!="function"){
_df=_dc;
}
if(typeof (_dd)!="undefined"){
_e1=_dd;
}
if(typeof (_e0)=="undefined"){
_e0=[];
}else{
_e0=_e0.slice();
}
m.extend(_e0,arguments,2);
var _e3=function(){
var _e4=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_e4=m.concat(me.im_preargs,_e4);
}
var _e6=me.im_self;
if(!_e6){
_e6=this;
}
return me.im_func.apply(_e6,_e4);
};
_e3.im_self=_e1;
_e3.im_func=_df;
_e3.im_preargs=_e0;
if(typeof (_df.NAME)=="string"){
_e3.NAME="bind("+_df.NAME+",...)";
}
return _e3;
},bindLate:function(_e7,_e8){
var m=MochiKit.Base;
var _ea=arguments;
if(typeof (_e7)==="string"){
_ea=m.extend([m.forwardCall(_e7)],arguments,1);
return m.bind.apply(this,_ea);
}
return m.bind.apply(this,_ea);
},bindMethods:function(_eb){
var _ec=MochiKit.Base.bind;
for(var k in _eb){
var _ee=_eb[k];
if(typeof (_ee)=="function"){
_eb[k]=_ec(_ee,_eb);
}
}
},registerComparator:function(_ef,_f0,_f1,_f2){
MochiKit.Base.comparatorRegistry.register(_ef,_f0,_f1,_f2);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _f5=(typeof (a)=="undefined"||a===null);
var _f6=(typeof (b)=="undefined"||b===null);
if(_f5&&_f6){
return 0;
}else{
if(_f5){
return -1;
}else{
if(_f6){
return 1;
}
}
}
var m=MochiKit.Base;
var _f8=m._primitives;
if(!(typeof (a) in _f8&&typeof (b) in _f8)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _f9=m.repr;
throw new TypeError(_f9(a)+" and "+_f9(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _fe=MochiKit.Base.compare;
var _ff=a.length;
var rval=0;
if(_ff>b.length){
rval=1;
_ff=b.length;
}else{
if(_ff<b.length){
rval=-1;
}
}
for(var i=0;i<_ff;i++){
var cmp=_fe(a[i],b[i]);
if(cmp){
return cmp;
}
}
return rval;
},registerRepr:function(name,_104,wrap,_106){
MochiKit.Base.reprRegistry.register(name,_104,wrap,_106);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
try{
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
catch(ignore){
}
}
try{
var _108=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_108=_108.replace(/^\s+/,"").replace(/\s+/g," ");
_108=_108.replace(/,(\S)/,", $1");
var idx=_108.indexOf("{");
if(idx!=-1){
_108=_108.substr(0,idx)+"{...}";
}
}
return _108;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(name,_10f,wrap,_111){
MochiKit.Base.jsonRegistry.register(name,_10f,wrap,_111);
},evalJSON:function(_112){
return eval("("+MochiKit.Base._filterJSON(_112)+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
return (m)?m[1]:s;
},serializeJSON:function(o){
var _116=typeof (o);
if(_116=="number"||_116=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_116=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _11c;
if(typeof (o.toJSON)=="function"){
_11c=o.toJSON();
if(o!==_11c){
return me(_11c);
}
}
if(typeof (o.__json__)=="function"){
_11c=o.__json__();
if(o!==_11c){
return me(_11c);
}
}
if(typeof (o.json)=="function"){
_11c=o.json();
if(o!==_11c){
return me(_11c);
}
}
if(_116!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_11c=m.jsonRegistry.match(o);
if(o!==_11c){
return me(_11c);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_116=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_116=="function"){
return null;
}
res=[];
for(var k in o){
if(o.hasOwnProperty(k)){
var _120;
if(typeof (k)=="number"){
_120="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_120=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_120+":"+val);
}
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(self,arr){
if(self.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(self,arr)===0);
},concat:function(lst,_126){
var rval=[];
var _128=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_128(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _12c=m.compare;
if(arguments.length==1){
return function(a,b){
return _12c(a[key],b[key]);
};
}
var _12f=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_12f.length);i++){
var key=_12f[i];
rval=_12c(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _136=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _136(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_13b,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _13e=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_13e(o,cur)==_13b){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_142,_143,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_143)=="undefined"||_143===null){
_143=0;
}
for(var i=_143;i<end;i++){
if(lst[i]===_142){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _149=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_149+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_149<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_149;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(MochiKit.Base.compare);
if(data.length%2==0){
var _14d=data.length/2;
return (data[_14d]+data[_14d-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_14f,_150,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_150)=="undefined"||_150===null){
_150=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_150;i<end;i++){
if(cmp(lst[i],_14f)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_155){
var _156=[node];
var _157=MochiKit.Base.extend;
while(_156.length){
var res=_155(_156.shift());
if(res){
_157(_156,res);
}
}
},nameFunctions:function(_159){
var base=_159.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _159){
var o=_159[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_15d,_15e){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_15d)=="string"||(typeof (_15d.nodeType)!="undefined"&&_15d.nodeType>0))){
var kv=MochiKit.DOM.formContents(_15d);
_15d=kv[0];
_15e=kv[1];
}else{
if(arguments.length==1){
if(typeof (_15d.length)=="number"&&_15d.length==2){
return arguments.callee(_15d[0],_15d[1]);
}
var o=_15d;
_15d=[];
_15e=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_15d.push(k);
_15e.push(v[i]);
}
}else{
_15d.push(k);
_15e.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_15d.length,_15e.length);
var _166=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_15e[i];
if(typeof (v)!="undefined"&&v!==null){
if(MochiKit.Base.isDateLike(v)){
v=MochiKit.DateTime.toISOTimestamp(v,true);
}
rval.push(_166(_15d[i])+"="+_166(v));
}
}
return rval.join("&");
},parseQueryString:function(_167,_168){
var qstr=(_167.charAt(0)=="?")?_167.substring(1):_167;
var _16a=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _16c;
if(typeof (decodeURIComponent)!="undefined"){
_16c=decodeURIComponent;
}else{
_16c=unescape;
}
if(_168){
for(var i=0;i<_16a.length;i++){
var pair=_16a[i].split("=");
var name=_16c(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_16c(pair.join("=")));
}
}else{
for(var i=0;i<_16a.length;i++){
pair=_16a[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_16c(name)]=_16c(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_172,wrap,_174){
if(_174){
this.pairs.unshift([name,_172,wrap]);
}else{
this.pairs.push([name,_172,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.moduleExport=function(_17a,_17b){
var SKIP={toString:true,NAME:true,VERSION:true};
var mods=MochiKit.Base.extend([],arguments,1);
while((_17b=mods.shift())!=null){
for(var k in _17b){
var v=_17b[k];
if(v!=null){
var _180=(typeof (v.__export__)=="boolean");
var _181=(k[0]!=="_"&&!SKIP[k]);
if(_180?v.__export__:_181){
if(typeof (v)=="object"&&v.NAME&&v.VERSION){
mods.push(v);
}else{
_17a[k]=_17b[k];
}
}
}
}
}
return _17a;
};
MochiKit.Base._exportSymbols=function(_182,_183){
if(MochiKit.__export__!==false&&_183.__export__!==false){
MochiKit.Base.moduleExport(_182,_183);
}
};
MochiKit.Base._deprecated=function(_184,name,_186,_187,_188){
if(typeof (_184)==="string"){
if(_184.indexOf("MochiKit.")===0){
_184=_184.substring(9);
}
_184=MochiKit[_184];
}
var _189=_186.split(".")[1];
var _18a=_186.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_184.NAME+"."+name+" is deprecated since version "+_187+". Use "+_186+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_189]){
throw new Error(msg);
}
return MochiKit[_189][_18a].apply(this,arguments);
};
func.__export__=(_188===true);
_184[name]=func;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=function(){
};
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3");
m._deprecated(m,"find","MochiKit.Base.findValue","1.3");
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_18f){
return encodeURIComponent(_18f).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_190){
return escape(_190).replace(/\+/g,"%2B").replace(/\"/g,"%22").replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.NamedError.prototype.constructor=m.NamedError;
m.NamedError.prototype.repr=function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
};
m.NamedError.prototype.toString=m.forwardCall("repr");
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.isValue=m.typeMatcher("boolean","number","string");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
m.nameFunctions(this.operator);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Iter","1.5",["Base"]);
MochiKit.Base.update(MochiKit.Iter,{registerIteratorFactory:function(name,_193,_194,_195){
MochiKit.Iter.iteratorRegistry.register(name,_193,_194,_195);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_197,_198){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_198;
},_197);
}
if(typeof (_197.next)=="function"){
return _197;
}else{
if(typeof (_197.iter)=="function"){
return _197.iter();
}else{
if(typeof (_197.__iterator__)=="function"){
return _197.__iterator__(false);
}
}
}
try{
return self.iteratorRegistry.match(_197);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_197)+": "+m.repr(_197)+" is not iterable");
}
throw e;
}
},count:function(n,step){
if(!n){
n=0;
}
if(arguments.length<2){
step=1;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n,step)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _1a3=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_1a3.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_1a9){
return _1a9.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _1af=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_1af);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _1bb=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_1bb=arguments[1];
stop=arguments[2];
}else{
_1bb=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_1bb,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
if(_1bb>=stop){
throw self.StopIteration;
}
var rval;
while(i<_1bb){
rval=seq.next();
i++;
}
_1bb+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _1c5=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_1c5));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1d0=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1d0.length>1){
try{
return _1d0[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1d0.shift();
}
}
if(_1d0.length==1){
var arg=_1d0.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1db,sync,_1dd){
sync.pos[_1db]=-1;
var m=MochiKit.Base;
var _1df=m.listMin;
return {repr:function(){
return "tee("+_1db+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1db];
if(i==sync.max){
rval=_1dd.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1db]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1db]+=1;
if(i==sync.min&&_1df(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1e2,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1e2=self.iter(_1e2);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1e2));
}
return rval;
},list:function(_1e9){
var rval;
if(_1e9 instanceof Array){
return _1e9.slice();
}
if(typeof (_1e9)=="function"&&!(_1e9 instanceof Function)&&typeof (_1e9.length)=="number"){
rval=[];
for(var i=0;i<_1e9.length;i++){
rval.push(_1e9[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1e9=self.iter(_1e9);
rval=[];
var _1ed;
try{
while(true){
_1ed=_1e9.next();
rval.push(_1ed);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1ef,_1f0){
var x=_1f0;
var self=MochiKit.Iter;
_1ef=self.iter(_1ef);
if(arguments.length<3){
try{
x=_1ef.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
}
try{
while(true){
x=fn(x,_1ef.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1f3=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1f3=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1f3=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1f3>=stop)||(step<0&&_1f3<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1f3;
_1f3+=step;
return rval;
},repr:function(){
return "range("+[_1f3,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1f7,_1f8){
if(typeof (_1f8)=="undefined"||_1f8===null){
_1f8=0;
}
var x=_1f8;
var self=MochiKit.Iter;
_1f7=self.iter(_1f7);
try{
while(true){
x+=_1f7.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1fb){
var self=MochiKit.Iter;
_1fb=self.iter(_1fb);
try{
while(true){
_1fb.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1fd,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_1fd)&&!self.isIterable(_1fd)){
try{
for(var i=0;i<_1fd.length;i++){
func(_1fd[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_1fd));
}
return func;
},every:function(_203,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_203).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_206,cmp){
var rval=MochiKit.Iter.list(_206);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_209){
var rval=MochiKit.Iter.list(_209);
rval.reverse();
return rval;
},some:function(_20b,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_20b).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_20f,skip){
skip=skip||0;
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_20f)&&!self.isIterable(_20f)){
for(var i=skip;i<_20f.length;i++){
lst.push(_20f[i]);
}
}else{
_20f=self.iter(_20f);
try{
while(skip-->0){
_20f.next();
}
while(true){
lst.push(_20f.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_214,_215){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_215=m.operator.identity;
}
_214=self.iter(_214);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_214.next();
k=_215(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _21c=true;
var _21d=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_21d(k,pk)===0){
fetch();
if(_21c){
_21c=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_21d(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_21e,_21f){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_21f=m.operator.identity;
}
_21e=self.iter(_21e);
var _222=[];
var _223=true;
var _224;
var _225=m.compare;
while(true){
try{
var _226=_21e.next();
var key=_21f(_226);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_223||_225(key,_224)!==0){
var _228=[];
_222.push([key,_228]);
}
_228.push(_226);
_223=false;
_224=key;
}
return _222;
},arrayLikeIter:function(_229){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_229.length){
throw MochiKit.Iter.StopIteration;
}
return _229[i++];
}};
},hasIterateNext:function(_22b){
return (_22b&&typeof (_22b.iterateNext)=="function");
},iterateNextIter:function(_22c){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_22c.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Logging");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_230,info){
this.num=num;
this.level=_230;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_233){
var self=MochiKit.Logging;
if(typeof (_233)=="string"){
_233=self.LogLevel[_233];
}
return function(msg){
var _236=msg.level;
if(typeof (_236)=="string"){
_236=self.LogLevel[_236];
}
return _236>=_233;
};
},isLogMessage:function(_237){
var _238=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _238)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_23d){
this.counter=0;
if(typeof (_23d)=="undefined"||_23d===null){
_23d=-1;
}
this.maxSize=_23d;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(_23e,msg){
msg=_23e+": "+msg;
if(typeof (window)!="undefined"&&window.console&&window.console.log){
var _240={"INFO":typeof window.console.info=="function"?"info":null,"DEBUG":typeof window.console.debug=="function"?"debug":null,"WARNING":typeof window.console.warn=="function"?"warn":null,"ERROR":typeof window.console.error=="function"?"error":null,"FATAL":typeof window.console.error=="function"?"error":null}[_23e]||"log";
window.console[_240](msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_244,_245,_246){
if(typeof (_245)=="string"){
_245=MochiKit.Logging.logLevelAtLeast(_245);
}
var _247=[_245,_246];
_247.ident=_244;
this.listeners[_244]=_247;
},removeListener:function(_248){
delete this.listeners[_248];
},baseLog:function(_249,_24a,_24b){
if(typeof (_249)=="number"){
if(_249>=MochiKit.Logging.LogLevel.FATAL){
_249="FATAL";
}else{
if(_249>=MochiKit.Logging.LogLevel.ERROR){
_249="ERROR";
}else{
if(_249>=MochiKit.Logging.LogLevel.WARNING){
_249="WARNING";
}else{
if(_249>=MochiKit.Logging.LogLevel.INFO){
_249="INFO";
}else{
_249="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_249,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level,msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_24d){
var _24e=0;
if(!(typeof (_24d)=="undefined"||_24d===null)){
_24e=Math.max(0,this._messages.length-_24d);
}
return this._messages.slice(_24e);
},getMessageText:function(_24f){
if(typeof (_24f)=="undefined"||_24f===null){
_24f=30;
}
var _250=this.getMessages(_24f);
if(_250.length){
var lst=MochiKit.Base.map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_250);
lst.unshift("LAST "+_250.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_253){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_253||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _255=m.partial;
var _256=this.Logger;
var _257=_256.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_255(_257,"DEBUG"),log:_255(_257,"INFO"),error:_255(_257,"ERROR"),fatal:_255(_257,"FATAL"),warning:_255(_257,"WARNING")});
var self=this;
var _259=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_259("log");
this.logError=_259("error");
this.logDebug=_259("debug");
this.logFatal=_259("fatal");
this.logWarning=_259("warning");
this.logger=new _256();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DateTime");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var date=new Date(parseInt(iso[0],10),parseInt(iso[1],10)-1,parseInt(iso[2],10));
date.setFullYear(iso[0]);
date.setMonth(iso[1]-1);
date.setDate(iso[2]);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_261,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_261=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_261,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_261,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_261,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_269){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _26a=MochiKit.DateTime._padTwo;
if(_269){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
var lst=[(_269?_26a(date.getHours()):""+date.getHours()),_26a(date.getMinutes()),_26a(date.getSeconds())];
return lst.join(":")+(_269?"Z":"");
};
MochiKit.DateTime.toISOTimestamp=function(date,_26d){
if(typeof (date)=="undefined"||date===null){
return null;
}
var time=MochiKit.DateTime.toISOTime(date,_26d);
var sep=_26d?"T":" ";
if(_26d){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+time;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _271=MochiKit.DateTime._padTwo;
var _272=MochiKit.DateTime._padFour;
return [_272(date.getFullYear()),_271(date.getMonth()+1),_271(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?""+n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return ""+n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _278=MochiKit.DateTime._padTwo;
return [_278(d.getMonth()+1),_278(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Format");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_27a,_27b,_27c,_27d,_27e,_27f,_280,_281,_282){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _27a;
}
var _284=_27b;
var _285=_27c;
if(num<0){
num=-num;
}else{
_284=_284.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_27d);
if(_27e){
num=num*100;
_285=fmt.percent+_285;
}
num=MochiKit.Format.roundToFixed(num,_27f);
var _288=num.split(/\./);
var _289=_288[0];
var frac=(_288.length==1)?"":_288[1];
var res="";
while(_289.length<_280){
_289="0"+_289;
}
if(_281){
while(_289.length>_281){
var i=_289.length-_281;
res=fmt.separator+_289.substring(i,_289.length)+res;
_289=_289.substring(0,i);
}
}
res=_289+res;
if(_27f>0){
while(frac.length<_282){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _284+res+_285;
};
};
MochiKit.Format.numberFormatter=function(_28d,_28e,_28f){
if(typeof (_28e)=="undefined"){
_28e="";
}
var _290=_28d.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_290){
throw TypeError("Invalid pattern");
}
var _291=_28d.substr(0,_290.index);
var _292=_28d.substr(_290.index+_290[0].length);
if(_291.search(/-/)==-1){
_291=_291+"-";
}
var _293=_290[1];
var frac=(typeof (_290[2])=="string"&&_290[2]!="")?_290[2]:"";
var _295=(typeof (_290[3])=="string"&&_290[3]!="");
var tmp=_293.split(/,/);
var _297;
if(typeof (_28f)=="undefined"){
_28f="default";
}
if(tmp.length==1){
_297=null;
}else{
_297=tmp[1].length;
}
var _298=_293.length-_293.replace(/0/g,"").length;
var _299=frac.length-frac.replace(/0/g,"").length;
var _29a=frac.length;
var rval=MochiKit.Format._numberFormatter(_28e,_291,_292,_28f,_295,_29a,_298,_297,_299);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",m.map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_29f){
if(typeof (_29f)=="undefined"||_29f===null){
_29f="default";
}
if(typeof (_29f)=="string"){
var rval=MochiKit.Format.LOCALE[_29f];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_29f]=rval;
}
return rval;
}else{
return _29f;
}
};
MochiKit.Format.twoDigitAverage=function(_2a1,_2a2){
if(_2a2){
var res=_2a1/_2a2;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_2a4){
var res=MochiKit.Format.roundToFixed(_2a4,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_2a7){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2a7){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_2a7+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_2a9){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2a9){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_2a9+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_2ab){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_2ab),_2ab);
};
MochiKit.Format.truncToFixed=function(_2ad,_2ae){
var _2af=MochiKit.Format._numberToFixed(_2ad,_2ae);
var _2b0=_2af.indexOf(".");
if(_2b0>0&&_2b0+_2ae+1<_2af.length){
_2af=_2af.substring(0,_2b0+_2ae+1);
_2af=MochiKit.Format._shiftNumber(_2af,0);
}
return _2af;
};
MochiKit.Format.roundToFixed=function(_2b1,_2b2){
var _2b3=MochiKit.Format._numberToFixed(_2b1,_2b2);
var _2b4=_2b3.indexOf(".");
if(_2b4>0&&_2b4+_2b2+1<_2b3.length){
var str=MochiKit.Format._shiftNumber(_2b3,_2b2);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_2b3=MochiKit.Format._shiftNumber(str,-_2b2);
}
return _2b3;
};
MochiKit.Format._numberToFixed=function(_2b6,_2b7){
var str=_2b6.toString();
var _2b9=str.split(/[eE]/);
var exp=(_2b9.length===1)?0:parseInt(_2b9[1],10)||0;
var _2bb=MochiKit.Format._shiftNumber(_2b9[0],exp);
_2b9=_2bb.split(/\./);
var _2bc=_2b9[0];
var frac=(_2b9.length===1)?"":_2b9[1];
while(frac.length<_2b7){
frac+="0";
}
if(frac.length>0){
return _2bc+"."+frac;
}else{
return _2bc;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_2c1){
return MochiKit.Format.twoDigitFloat(100*_2c1)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text");
goog.require("MochiKit.Base");
goog.require("MochiKit.Format");
}
MochiKit.Base.module(MochiKit,"Text","1.5",["Base","Format"]);
MochiKit.Text.startsWith=function(_2c6,str){
return str!=null&&_2c6!=null&&str.indexOf(_2c6)==0;
};
MochiKit.Text.endsWith=function(_2c8,str){
return str!=null&&_2c8!=null&&str.lastIndexOf(_2c8)==Math.max(str.length-_2c8.length,0);
};
MochiKit.Text.contains=function(_2ca,str){
return str!=null&&_2ca!=null&&str.indexOf(_2ca)>=0;
};
MochiKit.Text.padLeft=function(str,_2cd,_2ce){
str=str||"";
_2ce=_2ce||" ";
while(str.length<_2cd){
str=_2ce+str;
}
return str;
};
MochiKit.Text.padRight=function(str,_2d0,_2d1){
str=str||"";
_2d1=_2d1||" ";
while(str.length<_2d0){
str+=_2d1;
}
return str;
};
MochiKit.Text.truncate=function(str,_2d3,tail){
if(str==null||str.length<=_2d3||_2d3<0){
return str;
}else{
if(tail!=null){
str=str.slice(0,Math.max(0,_2d3-tail.length));
if(typeof (str)=="string"){
return str+tail;
}else{
return MochiKit.Base.extend(str,tail);
}
}else{
return str.slice(0,_2d3);
}
}
};
MochiKit.Text.split=function(str,_2d6,max){
if(str==null){
return str;
}
_2d6=_2d6||"\n";
var bits=str.split(_2d6);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(max,bits.length,bits.slice(max,bits.length).join(_2d6));
return bits;
};
MochiKit.Text.rsplit=function(str,_2da,max){
if(str==null){
return str;
}
_2da=_2da||"\n";
var bits=str.split(_2da);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(0,bits.length-max,bits.slice(0,bits.length-max).join(_2da));
return bits;
};
MochiKit.Text.formatter=function(_2dd,_2de){
if(_2de==null){
_2de=MochiKit.Format.formatLocale();
}else{
if(typeof (_2de)=="string"){
_2de=MochiKit.Format.formatLocale(_2de);
}
}
var _2df=MochiKit.Text._parsePattern(_2dd);
return function(){
var _2e0=MochiKit.Base.extend([],arguments);
var res=[];
for(var i=0;i<_2df.length;i++){
if(typeof (_2df[i])=="string"){
res.push(_2df[i]);
}else{
res.push(MochiKit.Text.formatValue(_2df[i],_2e0,_2de));
}
}
return res.join("");
};
};
MochiKit.Text.format=function(_2e3){
var func=MochiKit.Text.formatter(_2e3);
return func.apply(this,MochiKit.Base.extend([],arguments,1));
};
MochiKit.Text.formatValue=function(spec,_2e6,_2e7){
var self=MochiKit.Text;
if(typeof (spec)==="string"){
spec=self._parseFormatFlags(spec,0,spec.length);
}
for(var i=0;spec.path!=null&&i<spec.path.length;i++){
if(_2e6!=null){
_2e6=_2e6[spec.path[i]];
}
}
if(_2e7==null){
_2e7=MochiKit.Format.formatLocale();
}else{
if(typeof (_2e7)=="string"){
_2e7=MochiKit.Format.formatLocale(_2e7);
}
}
var str="";
if(spec.type=="number"){
if(_2e6 instanceof Number){
_2e6=_2e6.valueOf();
}
if(typeof (_2e6)!="number"||isNaN(_2e6)){
str="";
}else{
if(_2e6===Number.POSITIVE_INFINITY){
str="\u221e";
}else{
if(_2e6===Number.NEGATIVE_INFINITY){
str="-\u221e";
}else{
var sign=(_2e6<0)?"-":spec.sign;
_2e6=Math.abs(_2e6);
if(spec.format==="%"){
str=self._truncToPercent(_2e6,spec.precision);
}else{
if(spec.format==="d"){
str=MochiKit.Format.roundToFixed(_2e6,0);
}else{
if(spec.radix!=10){
str=Math.floor(_2e6).toString(spec.radix);
if(spec.format==="x"){
str=str.toLowerCase();
}else{
if(spec.format==="X"){
str=str.toUpperCase();
}
}
}else{
if(spec.precision>=0){
str=MochiKit.Format.roundToFixed(_2e6,spec.precision);
}else{
str=_2e6.toString();
}
}
}
}
if(spec.padding==="0"&&spec.format==="%"){
str=self.padLeft(str,spec.width-sign.length-1,"0");
}else{
if(spec.padding=="0"){
str=self.padLeft(str,spec.width-sign.length,"0");
}
}
str=self._localizeNumber(str,_2e7,spec.group);
str=sign+str;
}
}
}
if(str!==""&&spec.format==="%"){
str=str+_2e7.percent;
}
}else{
if(spec.format=="r"){
str=MochiKit.Base.repr(_2e6);
}else{
str=(_2e6==null)?"":_2e6.toString();
}
str=self.truncate(str,spec.precision);
}
if(spec.align=="<"){
str=self.padRight(str,spec.width);
}else{
str=self.padLeft(str,spec.width);
}
return str;
};
MochiKit.Text._localizeNumber=function(num,_2ed,_2ee){
var _2ef=num.split(/\./);
var _2f0=_2ef[0];
var frac=(_2ef.length==1)?"":_2ef[1];
var res=(frac.length>0)?_2ed.decimal:"";
while(_2ee&&frac.length>3){
res=res+frac.substring(0,3)+_2ed.separator;
frac=frac.substring(3);
if(_2f0.charAt(0)=="0"){
_2f0=_2f0.substring(1);
}
}
if(frac.length>0){
res=res+frac;
}
while(_2ee&&_2f0.length>3){
var pos=_2f0.length-3;
res=_2ed.separator+_2f0.substring(pos)+res;
_2f0=_2f0.substring((_2f0.charAt(0)=="0")?1:0,pos);
}
return _2f0+res;
};
MochiKit.Text._parsePattern=function(_2f4){
var self=MochiKit.Text;
var _2f6=[];
var re=/{[^{}]*}|{{?|}}?/g;
var _2f8=re.lastIndex=0;
var m;
while((m=re.exec(_2f4))!=null){
if(_2f8<m.index){
_2f6.push(_2f4.substring(_2f8,m.index));
}
var str=m[0];
_2f8=m.index+str.length;
if(self.startsWith("{",str)&&self.endsWith("}",str)){
_2f6.push(self._parseFormat(_2f4,m.index+1,_2f8-1));
}else{
if(self.startsWith("{{",str)||self.startsWith("}}",str)){
_2f6.push(str.substring(1));
}else{
if(self.startsWith("{",str)){
var msg="unescaped { char, should be escaped as {{";
throw new self.FormatPatternError(_2f4,m.index,msg);
}else{
if(self.startsWith("}",str)){
var msg="unescaped } char, should be escaped as }}";
throw new self.FormatPatternError(_2f4,m.index,msg);
}
}
}
}
}
if(_2f8<_2f4.length){
_2f6.push(_2f4.substring(_2f8));
}
return _2f6;
};
MochiKit.Text._parseFormat=function(_2fc,_2fd,_2fe){
var self=MochiKit.Text;
var text=_2fc.substring(_2fd,_2fe);
var _301=self.split(text,":",1);
var path=_301[0];
var _303=_2fd+path.length+((_301.length==1)?0:1);
var info=self._parseFormatFlags(_2fc,_303,_2fe);
info.path=(path=="")?[]:path.split(".");
for(var i=0;i<info.path.length;i++){
var v=info.path[i];
v=v.replace(/^\s+/,"").replace(/\s+$/,"");
if(v==""&&info.path.length==1){
v=0;
}else{
if(v==""){
var msg="format value path contains blanks";
throw new self.FormatPatternError(_2fc,_2fd,msg);
}else{
if(/^\d+$/.test(v)){
v=parseInt(v,10);
}
}
}
info.path[i]=v;
}
if(info.path.length<=0||typeof (info.path[0])!="number"){
info.path.unshift(0);
}
return info;
};
MochiKit.Text._parseFormatFlags=function(_308,_309,_30a){
var _30b=MochiKit.Base.update;
var info={type:"string",format:"s",width:0,precision:-1,align:">",sign:"",padding:" ",group:false};
var text=_308.substring(_309,_30a).replace(/\s+$/,"");
var m=/^([<>+ 0,-]+)?(\d+)?(\.\d*)?([srbdoxXf%])?(.*)$/.exec(text);
var _30f=m[1];
var _310=m[2];
var _311=m[3];
var type=m[4];
var _313=m[5];
for(var i=0;_30f&&i<_30f.length;i++){
var chr=_30f.charAt(i);
if(chr=="<"||chr==">"){
info.align=chr;
}else{
if(chr=="+"||chr=="-"||chr==" "){
info.sign=(chr=="-")?"":chr;
}else{
if(chr=="0"){
info.padding=chr;
}else{
if(chr==","){
info.group=true;
}
}
}
}
}
if(_310){
info.width=parseInt(_310,10);
}
if(_311&&_311.length>1){
info.precision=parseInt(_311.substring(1),10);
}
if(type=="s"||type=="r"){
info.format=type;
}else{
if(type=="b"){
_30b(info,{type:"number",format:type,radix:2});
}else{
if(type=="o"){
_30b(info,{type:"number",format:type,radix:8});
}else{
if(type=="x"||type=="X"){
_30b(info,{type:"number",format:type,radix:16});
}else{
if(type=="d"||type=="f"||type=="%"){
_30b(info,{type:"number",format:type,radix:10});
}
}
}
}
}
if(_313){
var msg="unsupported format flag: "+_313.charAt(0);
throw new MochiKit.Text.FormatPatternError(_308,_309,msg);
}
return info;
};
MochiKit.Text._truncToPercent=function(_317,_318){
var str;
if(_318>=0){
str=MochiKit.Format.roundToFixed(_317,_318+2);
}else{
str=(_317==null)?"0":_317.toString();
}
var arr=MochiKit.Text.split(str,".",2);
var frac=MochiKit.Text.padRight(arr[1],2,"0");
var _31c=arr[0]+frac.substring(0,2);
frac=frac.substring(2);
while(/^0[0-9]/.test(_31c)){
_31c=_31c.substring(1);
}
return (frac.length<=0)?_31c:_31c+"."+frac;
};
MochiKit.Text.FormatPatternError=function(_31d,pos,_31f){
this.pattern=_31d;
this.pos=pos;
this.message=_31f;
};
MochiKit.Text.FormatPatternError.prototype=new MochiKit.Base.NamedError("MochiKit.Text.FormatPatternError");
MochiKit.Text.FormatPatternError.constructor=MochiKit.Text.FormatPatternError;
if(MochiKit.__export__){
formatter=MochiKit.Text.formatter;
format=MochiKit.Text.format;
formatValue=MochiKit.Text.formatValue;
}
MochiKit.Base.nameFunctions(MochiKit.Text);
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Async");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_320){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_320;
this.silentlyCancelled=false;
this.chained=false;
this.finalized=false;
};
MochiKit.Async.Deferred.prototype.repr=function(){
return "Deferred("+this.id+", "+this.state()+")";
};
MochiKit.Async.Deferred.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.Deferred.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.Deferred.prototype.state=function(){
if(this.fired==-1){
return "unfired";
}else{
if(this.fired===0){
return "success";
}else{
return "error";
}
}
};
MochiKit.Async.Deferred.prototype.cancel=function(e){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(typeof (e)==="string"){
e=new self.GenericError(e);
}else{
if(!(e instanceof Error)){
e=new self.CancelledError(this);
}
}
this.errback(e);
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel(e);
}
}
};
MochiKit.Async.Deferred.prototype._resback=function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
if(this.paused===0){
this._fire();
}
};
MochiKit.Async.Deferred.prototype._check=function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
};
MochiKit.Async.Deferred.prototype.callback=function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.errback=function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.addBoth=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
};
MochiKit.Async.Deferred.prototype.addCallback=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
};
MochiKit.Async.Deferred.prototype.addErrback=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
};
MochiKit.Async.Deferred.prototype.addCallbacks=function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype.setFinalizer=function(fn){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
this._finalizer=fn;
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype._fire=function(){
var _32d=this.chain;
var _32e=this.fired;
var res=this.results[_32e];
var self=this;
var cb=null;
while(_32d.length>0&&this.paused===0){
var pair=_32d.shift();
var f=pair[_32e];
if(f===null){
continue;
}
try{
var ret=f(res);
if(ret!==undefined){
res=ret;
}
_32e=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self.paused--;
self._resback(res);
};
this.paused++;
}
}
catch(err){
_32e=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_32e;
this.results[_32e]=res;
if(this.chain.length==0&&this.paused===0&&this._finalizer){
this.finalized=true;
this._finalizer(res);
}
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_337){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_339){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _33c=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_33c.length;i++){
var func=_33c[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e2){
}
}
var _341=null;
try{
_341=this.status;
if(!_341&&m.isNotEmpty(this.responseText)){
_341=304;
}
}
catch(e){
}
if(_341==200||_341==201||_341==204||_341==304||_341==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e2){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_345){
if(typeof (_345)=="undefined"||_345===null){
_345="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_345);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self._doXHR(url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:"",async:true},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,opts.async,opts.username,opts.password);
}else{
req.open(opts.method,url,opts.async);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _352=opts.headers;
if(!m.isArrayLike(_352)){
_352=m.items(_352);
}
for(var i=0;i<_352.length;i++){
var _354=_352[i];
var name=_354[0];
var _356=_354[1];
req.setRequestHeader(name,_356);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},loadScript:function(url){
var d=new MochiKit.Async.Deferred();
var _361=document.createElement("script");
_361.type="text/javascript";
_361.src=url;
_361.onload=function(){
_361.onload=null;
_361.onerror=null;
_361.onreadystatechange=null;
_361=null;
d.callback();
};
_361.onerror=function(msg){
_361.onload=null;
_361.onerror=null;
_361.onreadystatechange=null;
_361=null;
msg="Failed to load script at "+url+": "+msg;
d.errback(new URIError(msg,url));
};
_361.onreadystatechange=function(){
if(_361.readyState=="loaded"||_361.readyState=="complete"){
_361.onload();
}else{
MochiKit.Async.callLater(10,_361.onerror,"Script loading timed out");
}
};
document.getElementsByTagName("head")[0].appendChild(_361);
return d;
},wait:function(_363,_364){
var d=new MochiKit.Async.Deferred();
var cb=MochiKit.Base.bind("callback",d,_364);
var _367=setTimeout(cb,Math.floor(_363*1000));
d.canceller=function(){
try{
clearTimeout(_367);
}
catch(e){
}
};
return d;
},callLater:function(_368,func){
var m=MochiKit.Base;
var _36b=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_368).addCallback(function(res){
return _36b();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype.__class__=MochiKit.Async.DeferredLock;
MochiKit.Async.DeferredLock.prototype.acquire=function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
};
MochiKit.Async.DeferredLock.prototype.release=function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
};
MochiKit.Async.DeferredLock.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.DeferredLock.prototype.repr=function(){
var _36e;
if(this.locked){
_36e="locked, "+this.waiting.length+" waiting";
}else{
_36e="unlocked";
}
return "DeferredLock("+this.id+", "+_36e+")";
};
MochiKit.Async.DeferredLock.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.DeferredList=function(list,_370,_371,_372,_373){
MochiKit.Async.Deferred.apply(this,[_373]);
this.list=list;
var _374=[];
this.resultList=_374;
this.finishedCount=0;
this.fireOnOneCallback=_370;
this.fireOnOneErrback=_371;
this.consumeErrors=_372;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_374.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_370){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype.constructor=MochiKit.Async.DeferredList;
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_378,_379,_37a){
this.resultList[_378]=[_379,_37a];
this.finishedCount+=1;
if(this.fired==-1){
if(_379&&this.fireOnOneCallback){
this.callback([_378,_37a]);
}else{
if(!_379&&this.fireOnOneErrback){
this.errback(_37a);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_379&&this.consumeErrors){
_37a=null;
}
return _37a;
};
MochiKit.Async.gatherResults=function(_37b){
var d=new MochiKit.Async.DeferredList(_37b,false,true,false);
d.addCallback(function(_37d){
var ret=[];
for(var i=0;i<_37d.length;i++){
ret.push(_37d[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _382;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_382=r;
}else{
if(r instanceof Error){
_382=self.fail(r);
}else{
_382=self.succeed(r);
}
}
}
catch(e){
_382=self.fail(e);
}
return _382;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_386){
this.deferred=_386;
});
ne("CancelledError",function(_387){
this.deferred=_387;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DOM");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _38f=self._document;
var _390=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_390;
self._document=_38f;
throw e;
}
self._window=_390;
self._document=_38f;
return rval;
},formContents:function(elem){
var _393=[];
var _394=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _399=elem.tagName.toUpperCase();
if(_399==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_399==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_393.push(name);
_394.push(v);
return null;
}
_393.push(name);
_394.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_393.push(name);
_394.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_393.push(name);
_394.push(v);
}
return null;
}
}
if(_399==="FORM"||_399==="P"||_399==="SPAN"||_399==="DIV"){
return elem.childNodes;
}
_393.push(name);
_394.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_393,_394];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _3a2=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_3a2;
throw e;
}
self._document=_3a2;
return rval;
},registerDOMConverter:function(name,_3a5,wrap,_3a7){
MochiKit.DOM.domConverters.register(name,_3a5,wrap,_3a7);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _3ae=im.repeat;
}
var map=m.map;
var _3b0=self.domConverters;
var _3b1=arguments.callee;
var _3b2=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _3b3=null;
try{
_3b3=iter(node);
}
catch(e){
}
if(_3b3){
return map(_3b1,_3b3,_3ae(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _3b1(n,ctx);
};
return map(func,node);
}
}
try{
node=_3b0.match(node,ctx);
continue;
}
catch(e){
if(e!=_3b2){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_3b7){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_3b7)=="string"){
_3b7=self.getElement(_3b7);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_3b7){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_3bb){
var o={};
o[attr]=_3bb;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3c0=self.attributeArray.renames[attr];
var _3c1=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_3c0){
return node[_3c0];
}
var _3c2=node.getAttribute(attr);
if(_3c2!=_3c1){
return _3c2;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3c6=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_3c6){
return node[_3c6];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_3c8){
var elem=node;
var self=MochiKit.DOM;
var base=MochiKit.Base;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_3c8){
if(self.attributeArray.compliant){
for(var k in _3c8){
var v=_3c8[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _3ce=self.attributeArray.renames;
for(var k in _3c8){
v=_3c8[k];
var _3cf=_3ce[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_3cf)=="string"){
elem[_3cf]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3d3=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3d4=MochiKit.Base.concat;
while(_3d3.length){
var n=_3d3.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_3d3=_3d4(n,_3d3);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3d9=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3da=elem.parentNode;
var _3db=MochiKit.Base.concat;
while(_3d9.length){
var n=_3d9.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_3da.insertBefore(n,elem);
}else{
_3d9=_3db(n,_3d9);
}
}
}
return _3da;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3e0=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_3e0);
}else{
return self.appendChildNodes(elem.parentNode,_3e0);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _3e4;
while((_3e4=elem.firstChild)){
elem.removeChild(_3e4);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_3e6){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_3e6)=="string"||typeof (_3e6)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _3eb=self._xhtml;
if(_3e6&&!self.attributeArray.compliant){
var _3ec="";
if("name" in _3e6){
_3ec+=" name=\""+self.escapeHTML(_3e6.name)+"\"";
}
if(name=="input"&&"type" in _3e6){
_3ec+=" type=\""+self.escapeHTML(_3e6.type)+"\"";
}
if(_3ec){
name="<"+name+_3ec+">";
_3eb=false;
}
}
var d=self._document;
if(_3eb&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_3e6){
self.updateNodeAttributes(elem,_3e6);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
if(e&&e.parentNode){
e.parentNode.removeChild(e);
}
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _3f5=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_3f5);
_3f5.replaceChild(src,dest);
}else{
_3f5.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByClassName:function(_3f8,_3f9){
var self=MochiKit.DOM;
if(self._document.getElementsByClassName){
self.getElementsByClassName=function(_3fb,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _3fd=elm.getElementsByClassName(_3fb);
return MochiKit.Base.extend([],_3fd);
};
}else{
if(self._document.evaluate){
self.getElementsByClassName=function(_3fe,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _400=_3fe.split(" ");
var _401="";
for(var k=0,kl=_400.length;k<kl;++k){
_401+="[contains(concat(' ', @class, ' '), ' "+_400[k]+" ')]";
}
var tag="*";
var _405=[];
try{
var _406="http://www.w3.org/1999/xhtml";
var _407=(self._document.documentElement.namespaceURI===_406)?_406:null;
_405=self._document.evaluate(".//"+tag+_401,elm,_407,0,null);
}
catch(e){
_405=self._document.evaluate(".//"+tag+_401,elm,null,0,null);
}
return MochiKit.Iter.list(_405);
};
}else{
self.getElementsByClassName=function(_408,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _40a=_408.split(" ");
var _40b=[];
for(var k=0,kl=_40a.length;k<kl;++k){
_40b.push(new RegExp("(^|\\s)"+_40a[k]+"(\\s|$)"));
}
var _40e=elm.all?elm.all:elm.getElementsByTagName("*");
var _40f=[];
for(var l=0,ll=_40e.length;l<ll;++l){
var _412=_40e[l];
var _413=false;
for(var m=0,ml=_40b.length;m<ml;++m){
_413=_40b[m].test(_412.className);
if(!_413){
break;
}
}
if(_413){
_40f.push(_412);
}
}
return _40f;
};
}
}
return self.getElementsByClassName(_3f8,_3f9);
},getElementsByTagAndClassName:function(_416,_417,_418){
var self=MochiKit.DOM;
if(typeof (_416)=="undefined"||_416===null){
_416="*";
}
if(typeof (_418)=="undefined"||_418===null){
_418=self._document;
}
_418=self.getElement(_418);
if(_418==null){
return [];
}
if(_416=="*"){
return self.getElementsByClassName(_417,_418);
}
var _41a=(_418.getElementsByTagName(_416)||self._document.all);
if(typeof (_417)=="undefined"||_417===null){
return MochiKit.Base.extend(null,_41a);
}
var _41b=[];
for(var i=0;i<_41a.length;i++){
var _41d=_41a[i];
var cls=_41d.className;
if(typeof (cls)!="string"){
cls=_41d.getAttribute("class");
}
if(typeof (cls)=="string"){
var _41f=cls.split(" ");
for(var j=0;j<_41f.length;j++){
if(_41f[j]==_417){
_41b.push(_41d);
break;
}
}
}
}
return _41b;
},_newCallStack:function(path,once){
var rval=function(){
var _424=arguments.callee.callStack;
for(var i=0;i<_424.length;i++){
if(_424[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_426,path,func,once){
var self=MochiKit.DOM;
var _42b=_426[path];
var _42c=_42b;
if(!(typeof (_42b)=="function"&&typeof (_42b.callStack)=="object"&&_42b.callStack!==null)){
_42c=self._newCallStack(path,once);
if(typeof (_42b)=="function"){
_42c.callStack.push(_42b);
}
_426[path]=_42c;
}
_42c.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_42f){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_42f=self.getElement(_42f);
if(_42f){
_42f.focus();
}
});
},setElementClass:function(_431,_432){
var self=MochiKit.DOM;
var obj=self.getElement(_431);
if(self.attributeArray.compliant){
obj.setAttribute("class",_432);
}else{
obj.setAttribute("className",_432);
}
},toggleElementClass:function(_435){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_435)){
self.removeElementClass(obj,_435);
}
}
},addElementClass:function(_439,_43a){
var self=MochiKit.DOM;
var obj=self.getElement(_439);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_43a);
return true;
}
if(cls==_43a){
return false;
}
var _43e=cls.split(" ");
for(var i=0;i<_43e.length;i++){
if(_43e[i]==_43a){
return false;
}
}
self.setElementClass(obj,cls+" "+_43a);
return true;
},removeElementClass:function(_440,_441){
var self=MochiKit.DOM;
var obj=self.getElement(_440);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_441){
self.setElementClass(obj,"");
return true;
}
var _445=cls.split(" ");
for(var i=0;i<_445.length;i++){
if(_445[i]==_441){
_445.splice(i,1);
self.setElementClass(obj,_445.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_447,_448,_449){
var obj=MochiKit.DOM.getElement(_447);
var res=MochiKit.DOM.removeElementClass(obj,_448);
if(res){
MochiKit.DOM.addElementClass(obj,_449);
}
return res;
},hasElementClass:function(_44c,_44d,_44e){
var obj=MochiKit.DOM.getElement(_44c);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _451=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_451.length;j++){
if(_451[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _459=[dom];
var self=MochiKit.DOM;
var _45b=self.escapeHTML;
var _45c=self.attributeArray;
while(_459.length){
dom=_459.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _45d=[];
var _45e=_45c(dom);
for(var i=0;i<_45e.length;i++){
var a=_45e[i];
_45d.push([" ",a.name,"=\"",_45b(a.value),"\""]);
}
_45d.sort();
for(i=0;i<_45d.length;i++){
var _461=_45d[i];
for(var j=0;j<_461.length;j++){
lst.push(_461[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_459.push("</"+dom.tagName.toLowerCase()+">");
var _463=dom.childNodes;
for(i=_463.length-1;i>=0;i--){
_459.push(_463[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_45b(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_465){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _46a=node.nodeValue;
if(typeof (_46a)=="string"){
rval.push(_46a);
}
})(MochiKit.DOM.getElement(node));
if(_465){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_46b){
_46b=MochiKit.DOM.getElement(_46b);
for(var i=0;i<_46b.childNodes.length;i++){
var node=_46b.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_46e,_46f,_470){
var self=MochiKit.DOM;
if(typeof (_46e)=="undefined"||_46e===null){
_46e="*";
}
if(typeof (_470)=="undefined"||_470===null){
_470=self._document;
}
_470=self.getElement(_470);
if(_470==null){
return null;
}
var _472=(_470.getElementsByTagName(_46e)||self._document.all);
if(_472.length<=0){
return null;
}else{
if(typeof (_46f)=="undefined"||_46f===null){
return _472[0];
}
}
for(var i=0;i<_472.length;i++){
var _474=_472[i];
var cls=_474.className;
if(typeof (cls)!="string"){
cls=_474.getAttribute("class");
}
if(typeof (cls)=="string"){
var _476=cls.split(" ");
for(var j=0;j<_476.length;j++){
if(_476[j]==_46f){
return _474;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_479,_47a){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_479)=="undefined"||_479===null){
_479="*";
}else{
_479=_479.toUpperCase();
}
if(typeof (_47a)=="undefined"||_47a===null){
_47a=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _47c=elem.tagName.toUpperCase();
if((_479==="*"||_479==_47c)&&(_47a===null||self.hasElementClass(elem,_47a))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _47f="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_47f);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _480=this._document.createElement("span");
var _481;
if(_480&&_480.attributes&&_480.attributes.length>0){
var _482=m.filter;
_481=function(node){
return _482(_481.ignoreAttrFilter,node.attributes);
};
_481.ignoreAttr={};
var _484=_480.attributes;
var _485=_481.ignoreAttr;
for(var i=0;i<_484.length;i++){
var a=_484[i];
_485[a.name]=a.value;
}
_481.ignoreAttrFilter=function(a){
return (_481.ignoreAttr[a.name]!=a.value);
};
_481.compliant=false;
_481.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","rowspan":"rowSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_481=function(node){
return node.attributes;
};
_481.compliant=true;
_481.ignoreAttr={};
_481.renames={};
}
_481.__export__=false;
this.attributeArray=_481;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _48a=this.createDOMFunc;
this.A=_48a("a");
this.ARTICLE=_48a("article");
this.ASIDE=_48a("aside");
this.BR=_48a("br");
this.BUTTON=_48a("button");
this.CANVAS=_48a("canvas");
this.CAPTION=_48a("caption");
this.DD=_48a("dd");
this.DIV=_48a("div");
this.DL=_48a("dl");
this.DT=_48a("dt");
this.FIELDSET=_48a("fieldset");
this.FIGURE=_48a("figure");
this.FIGCAPTION=_48a("figcaption");
this.FOOTER=_48a("footer");
this.FORM=_48a("form");
this.H1=_48a("h1");
this.H2=_48a("h2");
this.H3=_48a("h3");
this.H4=_48a("h4");
this.H5=_48a("h5");
this.H6=_48a("h6");
this.HEADER=_48a("header");
this.HGROUP=_48a("hgroup");
this.HR=_48a("hr");
this.IFRAME=_48a("iframe");
this.IMG=_48a("img");
this.INPUT=_48a("input");
this.LABEL=_48a("label");
this.LEGEND=_48a("legend");
this.LI=_48a("li");
this.LINK=_48a("link");
this.MARK=_48a("mark");
this.METER=_48a("meter");
this.NAV=_48a("nav");
this.OL=_48a("ol");
this.OPTGROUP=_48a("optgroup");
this.OPTION=_48a("option");
this.P=_48a("p");
this.PRE=_48a("pre");
this.PROGRESS=_48a("progress");
this.SCRIPT=_48a("script");
this.SECTION=_48a("section");
this.SELECT=_48a("select");
this.SPAN=_48a("span");
this.STRONG=_48a("strong");
this.STYLE=_48a("style");
this.TABLE=_48a("table");
this.TBODY=_48a("tbody");
this.TD=_48a("td");
this.TEXTAREA=_48a("textarea");
this.TFOOT=_48a("tfoot");
this.TH=_48a("th");
this.THEAD=_48a("thead");
this.TR=_48a("tr");
this.TT=_48a("tt");
this.UL=_48a("ul");
this.NBSP="\xa0";
this.$=this.getElement;
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Selector");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_48b){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_48b.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_48c){
throw "Parse error in selector: "+_48c;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _48e=this.params;
var expr=this.expression;
var _490,_491,_492,rest;
while(_490=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_48e.attributes=_48e.attributes||[];
_48e.attributes.push({name:_490[2],operator:_490[3],value:_490[4]||_490[5]||""});
expr=_490[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_490=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_491=_490[1];
_492=_490[2];
rest=_490[3];
switch(_491){
case "#":
_48e.id=_492;
break;
case ".":
_48e.classNames.push(_492);
break;
case ":":
_48e.pseudoClassNames.push(_492);
break;
case "":
case undefined:
_48e.tagName=_492.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _495=this.params;
var _496=[];
var _497,i;
function childElements(_499){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_499+".childNodes)";
}
if(_495.wildcard){
_496.push("true");
}
if(_497=_495.id){
_496.push("element.id == "+repr(_497));
}
if(_497=_495.tagName){
_496.push("element.tagName.toUpperCase() == "+repr(_497));
}
if((_497=_495.classNames).length>0){
for(i=0;i<_497.length;i++){
_496.push("MochiKit.DOM.hasElementClass(element, "+repr(_497[i])+")");
}
}
if((_497=_495.pseudoClassNames).length>0){
for(i=0;i<_497.length;i++){
var _49a=_497[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _49b=_49a[1];
var _49c=_49a[2];
switch(_49b){
case "root":
_496.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_49a=_49c.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_49a){
throw "Invalid argument to pseudo element nth-child: "+_49c;
}
var a,b;
if(_49a[0]=="odd"){
a=2;
b=1;
}else{
if(_49a[0]=="even"){
a=2;
b=0;
}else{
a=_49a[2]&&parseInt(_49a,10)||null;
b=parseInt(_49a[3],10);
}
}
_496.push("this.nthChild(element,"+a+","+b+","+!!_49b.match("^nth-last")+","+!!_49b.match("of-type$")+")");
break;
case "first-child":
_496.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_496.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_496.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_496.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_496.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_496.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_496.push("element.childNodes.length == 0");
break;
case "enabled":
_496.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_496.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_496.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _49f=new MochiKit.Selector.Selector(_49c);
_496.push("!( "+_49f.buildMatchExpression()+")");
break;
}
}
}
if(_497=_495.attributes){
MochiKit.Base.map(function(_4a0){
var _4a1="MochiKit.DOM.getNodeAttribute(element, "+repr(_4a0.name)+")";
var _4a2=function(_4a3){
return _4a1+".split("+repr(_4a3)+")";
};
_496.push(_4a1+" != null");
switch(_4a0.operator){
case "=":
_496.push(_4a1+" == "+repr(_4a0.value));
break;
case "~=":
_496.push("MochiKit.Base.findValue("+_4a2(" ")+", "+repr(_4a0.value)+") > -1");
break;
case "^=":
_496.push(_4a1+".substring(0, "+_4a0.value.length+") == "+repr(_4a0.value));
break;
case "$=":
_496.push(_4a1+".substring("+_4a1+".length - "+_4a0.value.length+") == "+repr(_4a0.value));
break;
case "*=":
_496.push(_4a1+".match("+repr(_4a0.value)+")");
break;
case "|=":
_496.push(_4a2("-")+"[0].toUpperCase() == "+repr(_4a0.value.toUpperCase()));
break;
case "!=":
_496.push(_4a1+" != "+repr(_4a0.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_4a0.operator+" in selector";
}
},_497);
}
return _496.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_4a5,a,b,_4a8,_4a9){
var _4aa=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4a5.parentNode.childNodes);
if(_4a9){
_4aa=MochiKit.Base.filter(function(node){
return node.tagName==_4a5.tagName;
},_4aa);
}
if(_4a8){
_4aa=MochiKit.Iter.reversed(_4aa);
}
if(a){
var _4ad=MochiKit.Base.findIdentical(_4aa,_4a5);
return ((_4ad+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_4aa,_4a5)+1;
}
},isUIElement:function(_4ae){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_4ae.tagName.toLowerCase())>-1;
},findElements:function(_4af,axis){
var _4b1;
if(axis==undefined){
axis="";
}
function inScope(_4b2,_4b3){
if(axis==""){
return MochiKit.DOM.isChildNode(_4b2,_4b3);
}else{
if(axis==">"){
return _4b2.parentNode===_4b3;
}else{
if(axis=="+"){
return _4b2===nextSiblingElement(_4b3);
}else{
if(axis=="~"){
var _4b4=_4b3;
while(_4b4=nextSiblingElement(_4b4)){
if(_4b2===_4b4){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_4b1=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_4b1)){
if(!_4af||inScope(_4b1,_4af)){
return [_4b1];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_4af=(_4af||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_4af){
throw "> combinator not allowed without preceeding expression";
}
_4af=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4af.childNodes);
}else{
if(axis=="+"){
if(!_4af){
throw "+ combinator not allowed without preceeding expression";
}
_4af=nextSiblingElement(_4af)&&[nextSiblingElement(_4af)];
}else{
if(axis=="~"){
if(!_4af){
throw "~ combinator not allowed without preceeding expression";
}
var _4b7=[];
while(nextSiblingElement(_4af)){
_4af=nextSiblingElement(_4af);
_4b7.push(_4af);
}
_4af=_4b7;
}
}
}
}
if(!_4af){
return [];
}
var _4b8=MochiKit.Base.filter(MochiKit.Base.bind(function(_4b9){
return this.match(_4b9);
},this),_4af);
return _4b8;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_4ba,_4bb){
_4ba=MochiKit.DOM.getElement(_4ba);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_4c0){
try{
var res=_4ba.querySelectorAll(_4c0);
return Array.prototype.slice.call(res,0);
}
catch(ignore){
}
var _4c2="";
var _4c3=function(_4c4,expr){
var _4c6=expr.match(/^[>+~]$/);
if(_4c6){
_4c2=_4c6[0];
return _4c4;
}else{
var _4c7=new MochiKit.Selector.Selector(expr);
var _4c8=MochiKit.Iter.reduce(function(_4c9,_4ca){
return MochiKit.Base.extend(_4c9,_4c7.findElements(_4ca||_4ba,_4c2));
},_4c4,[]);
_4c2="";
return _4c8;
}
};
var _4cb=_4c0.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_4c3,_4cb,[null]));
},_4bb));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Style");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_4d3){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_4d3=MochiKit.Base.camelize(_4d3);
if(!elem||elem==d){
return undefined;
}
if(_4d3=="opacity"&&typeof (elem.filters)!="undefined"){
var _4d6=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_4d6&&_4d6[1]){
return parseFloat(_4d6[1])/100;
}
return 1;
}
if(_4d3=="float"||_4d3=="cssFloat"||_4d3=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _4d7=elem.style?elem.style[_4d3]:null;
if(!_4d7){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_4d3=_4d3.replace(/([A-Z])/g,"-$1").toLowerCase();
_4d7=css?css.getPropertyValue(_4d3):null;
}else{
if(elem.currentStyle){
_4d7=elem.currentStyle[_4d3];
if(/^\d/.test(_4d7)&&!/px$/.test(_4d7)&&_4d3!="fontWeight"){
var left=elem.style.left;
var _4da=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_4d7||0;
_4d7=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_4da;
}
}
}
}
if(_4d3=="opacity"){
_4d7=parseFloat(_4d7);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_4d3)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_4d7="auto";
}
}
return _4d7=="auto"?null:_4d7;
},setStyle:function(elem,_4dc){
elem=MochiKit.DOM.getElement(elem);
for(var name in _4dc){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_4dc[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_4dc[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_4dc[name];
}else{
elem.style.styleFloat=_4dc[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_4dc[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _4e1=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_4e1?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_4e3){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _4e6=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(typeof (elem)=="string"){
elem=dom.getElement(elem);
}
if(elem==null||(!_4e6(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _4ea=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_4ea=elem.offsetParent;
if(_4ea!=elem){
while(_4ea){
c.x+=parseInt(_4ea.style.borderLeftWidth,10)||0;
c.y+=parseInt(_4ea.style.borderTopWidth,10)||0;
c.x+=_4ea.offsetLeft;
c.y+=_4ea.offsetTop;
_4ea=_4ea.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_4ea=elem.parentNode;
}else{
_4ea=null;
}
while(_4ea){
var _4ef=_4ea.tagName.toUpperCase();
if(_4ef==="BODY"||_4ef==="HTML"){
break;
}
var disp=self.getStyle(_4ea,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_4ea.scrollLeft;
c.y-=_4ea.scrollTop;
}
if(_4ea.parentNode){
_4ea=_4ea.parentNode;
}else{
_4ea=null;
}
}
}
}
}
if(_4e3){
_4e3=arguments.callee(_4e3);
if(_4e3){
c.x-=(_4e3.x||0);
c.y-=(_4e3.y||0);
}
}
return c;
},setElementPosition:function(elem,_4f2,_4f3){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_4f3)=="undefined"){
_4f3="px";
}
var _4f4={};
var _4f5=MochiKit.Base.isUndefinedOrNull;
if(!_4f5(_4f2.x)){
_4f4["left"]=_4f2.x+_4f3;
}
if(!_4f5(_4f2.y)){
_4f4["top"]=_4f2.y+_4f3;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_4f4});
},makePositioned:function(_4f6){
_4f6=MochiKit.DOM.getElement(_4f6);
var pos=MochiKit.Style.getStyle(_4f6,"position");
if(pos=="static"||!pos){
_4f6.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_4f6.style.top=0;
_4f6.style.left=0;
}
}
},undoPositioned:function(_4f8){
_4f8=MochiKit.DOM.getElement(_4f8);
if(_4f8.style.position=="relative"){
_4f8.style.position=_4f8.style.top=_4f8.style.left=_4f8.style.bottom=_4f8.style.right="";
}
},makeClipping:function(_4f9){
_4f9=MochiKit.DOM.getElement(_4f9);
var s=_4f9.style;
var _4fb={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_4f9,"overflow")||"visible")!="hidden"){
_4f9.style.overflow="hidden";
_4f9.style.overflowX="hidden";
_4f9.style.overflowY="hidden";
}
return _4fb;
},undoClipping:function(_4fc,_4fd){
_4fc=MochiKit.DOM.getElement(_4fc);
if(typeof (_4fd)=="string"){
_4fc.style.overflow=_4fd;
}else{
if(_4fd!=null){
_4fc.style.overflow=_4fd["overflow"];
_4fc.style.overflowX=_4fd["overflow-x"];
_4fc.style.overflowY=_4fd["overflow-y"];
}
}
},getElementDimensions:function(elem,_4ff){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _504=s.visibility;
var _505=s.position;
var _506=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _507=elem.offsetWidth;
var _508=elem.offsetHeight;
s.display=_506;
s.position=_505;
s.visibility=_504;
}else{
_507=elem.offsetWidth||0;
_508=elem.offsetHeight||0;
}
if(_4ff){
var _509="colSpan" in elem&&"rowSpan" in elem;
var _50a=(_509&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_50a){
if(/MSIE/.test(navigator.userAgent)){
var _50b=elem.previousSibling?0.5:1;
var _50c=elem.nextSibling?0.5:1;
}else{
var _50b=0.5;
var _50c=0.5;
}
}else{
var _50b=1;
var _50c=1;
}
_507-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_50b*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_50c*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_509){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _50d=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _50d=1;
}else{
var _50d=_50a?0.5:1;
}
}
}else{
var _50d=1;
}
_508-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_50d*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_507,_508);
},setElementDimensions:function(elem,_50f,_510){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_510)=="undefined"){
_510="px";
}
var _511={};
var _512=MochiKit.Base.isUndefinedOrNull;
if(!_512(_50f.w)){
_511["width"]=_50f.w+_510;
}
if(!_512(_50f.h)){
_511["height"]=_50f.h+_510;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_511});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _516=elem.tagName.toUpperCase();
return self._defaultDisplay[_516]||"block";
},setDisplayForElement:function(_517,_518){
var _519=MochiKit.Base.extend(null,arguments,1);
var _51a=MochiKit.DOM.getElement;
for(var i=0;i<_519.length;i++){
_518=_51a(_519[i]);
if(_518){
_518.style.display=_517;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _524=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_524.length;i++){
this._defaultDisplay[_524[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3",true);
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.LoggingPane");
goog.require("MochiKit.Base");
goog.require("MochiKit.Logging");
}
MochiKit.Base.module(MochiKit,"LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_528){
var m=MochiKit.LoggingPane;
_528=!(!_528);
if(m._loggingPane&&m._loggingPane.inline!=_528){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_528,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_52a,_52b){
if(typeof (_52b)=="undefined"||_52b===null){
_52b=MochiKit.Logging.logger;
}
this.logger=_52b;
var _52c=MochiKit.Base.update;
var _52d=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _52f=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_52a){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _536=doc.getElementById(uid);
var _537=!!_536;
if(_536&&typeof (_536.loggingPane)!="undefined"){
_536.loggingPane.logger=this.logger;
_536.loggingPane.buildAndApplyFilter();
return _536.loggingPane;
}
if(_537){
var _538;
while((_538=_536.firstChild)){
_536.removeChild(_538);
}
}else{
_536=doc.createElement("div");
_536.id=uid;
}
_536.loggingPane=this;
var _539=doc.createElement("input");
var _53a=doc.createElement("input");
var _53b=doc.createElement("button");
var _53c=doc.createElement("button");
var _53d=doc.createElement("button");
var _53e=doc.createElement("button");
var _53f=doc.createElement("div");
var _540=doc.createElement("div");
var _541=uid+"_Listener";
this.colorTable=_52f(this.colorTable);
var _542=[];
var _543=null;
var _544=function(msg){
var _546=msg.level;
if(typeof (_546)=="number"){
_546=MochiKit.Logging.LogLevel[_546];
}
return _546;
};
var _547=function(msg){
return msg.info.join(" ");
};
var _549=bind(function(msg){
var _54b=_544(msg);
var text=_547(msg);
var c=this.colorTable[_54b];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_54b;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_54b+": "+text));
_540.appendChild(p);
_540.appendChild(doc.createElement("br"));
if(_53f.offsetHeight>_53f.scrollHeight){
_53f.scrollTop=0;
}else{
_53f.scrollTop=_53f.scrollHeight;
}
},this);
var _54f=function(msg){
_542[_542.length]=msg;
_549(msg);
};
var _551=function(){
var _552,_553;
try{
_552=new RegExp(_539.value);
_553=new RegExp(_53a.value);
}
catch(e){
MochiKit.Logging.logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_552.test(_544(msg))&&_553.test(_547(msg)));
};
};
var _555=function(){
while(_540.firstChild){
_540.removeChild(_540.firstChild);
}
};
var _556=function(){
_542=[];
_555();
};
var _557=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_541);
try{
try{
_536.loggingPane=null;
}
catch(e){
MochiKit.Logging.logFatal("Bookmarklet was closed incorrectly.");
}
if(_52a){
_536.parentNode.removeChild(_536);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _558=function(){
_555();
for(var i=0;i<_542.length;i++){
var msg=_542[i];
if(_543===null||_543(msg)){
_549(msg);
}
}
};
this.buildAndApplyFilter=function(){
_543=_551();
_558();
this.logger.removeListener(_541);
this.logger.addListener(_541,_543,_54f);
};
var _55b=bind(function(){
_542=this.logger.getMessages();
_558();
},this);
var _55c=bind(function(_55d){
_55d=_55d||window.event;
var key=_55d.which||_55d.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _55f="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_52a){
_55f+="; height: 10em; border-top: 2px solid black";
}else{
_55f+="; height: 100%;";
}
_536.style.cssText=_55f;
if(!_537){
doc.body.appendChild(_536);
}
_55f={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_52d(_539,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_55c,"style":_55f});
_536.appendChild(_539);
_52d(_53a,{"value":".*","onkeypress":_55c,"style":_55f});
_536.appendChild(_53a);
_55f="width: 8%; display:inline; font: "+this.logFont;
_53b.appendChild(doc.createTextNode("Filter"));
_53b.onclick=bind("buildAndApplyFilter",this);
_53b.style.cssText=_55f;
_536.appendChild(_53b);
_53c.appendChild(doc.createTextNode("Load"));
_53c.onclick=_55b;
_53c.style.cssText=_55f;
_536.appendChild(_53c);
_53d.appendChild(doc.createTextNode("Clear"));
_53d.onclick=_556;
_53d.style.cssText=_55f;
_536.appendChild(_53d);
_53e.appendChild(doc.createTextNode("Close"));
_53e.onclick=_557;
_53e.style.cssText=_55f;
_536.appendChild(_53e);
_53f.style.cssText="overflow: auto; width: 100%";
_540.style.cssText="width: 100%; height: "+(_52a?"8em":"100%");
_53f.appendChild(_540);
_536.appendChild(_53f);
this.buildAndApplyFilter();
_55b();
if(_52a){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_52a;
this.closePane=_557;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Color");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_561,blue,_563){
if(typeof (_563)=="undefined"||_563===null){
_563=1;
}
this.rgb={r:red,g:_561,b:blue,a:_563};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_564){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_564);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_56a){
var hsl=this.asHSL();
hsl.s=_56a;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_56d){
var hsl=this.asHSL();
hsl.l=_56d;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_570){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_570,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_573){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_573,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_576,_577){
if(typeof (_577)=="undefined"||_577===null){
_577=0.5;
}
var sf=1-_577;
var s=this.rgb;
var d=_576.rgb;
var df=_577;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_57c){
var a=this.asRGB();
var b=_57c.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().l>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_593,blue,_595){
var _596=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_593=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_595=undefined;
}else{
_595=rgb.a;
}
}
return new _596(red,_593,blue,_595);
},fromHSL:function(hue,_599,_59a,_59b){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_59e,_59f,_5a0){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _5a3=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _5a4=_5a3._namedColors[name.toLowerCase()];
if(typeof (_5a4)=="string"){
return _5a3.fromHexString(_5a4);
}else{
if(name=="transparent"){
return _5a3.transparentColor();
}
}
return null;
},fromString:function(_5a5){
var self=MochiKit.Color.Color;
var _5a7=_5a5.substr(0,3);
if(_5a7=="rgb"){
return self.fromRGBString(_5a5);
}else{
if(_5a7=="hsl"){
return self.fromHSLString(_5a5);
}else{
if(_5a5.charAt(0)=="#"){
return self.fromHexString(_5a5);
}
}
}
return self.fromName(_5a5);
},fromHexString:function(_5a8){
if(_5a8.charAt(0)=="#"){
_5a8=_5a8.substring(1);
}
var _5a9=[];
var i,hex;
if(_5a8.length==3){
for(i=0;i<3;i++){
hex=_5a8.substr(i,1);
_5a9.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_5a8.substr(i,2);
_5a9.push(parseInt(hex,16)/255);
}
}
var _5ac=MochiKit.Color.Color;
return _5ac.fromRGB.apply(_5ac,_5a9);
},_fromColorString:function(pre,_5ae,_5af,_5b0){
if(_5b0.indexOf(pre)===0){
_5b0=_5b0.substring(_5b0.indexOf("(",3)+1,_5b0.length-1);
}
var _5b1=_5b0.split(/\s*,\s*/);
var _5b2=[];
for(var i=0;i<_5b1.length;i++){
var c=_5b1[i];
var val;
var _5b6=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_5b6=="deg"){
val=parseFloat(c)/360;
}else{
if(_5b6=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_5af[i]*parseFloat(c);
}
}
}
_5b2.push(val);
}
return this[_5ae].apply(this,_5b2);
},fromComputedStyle:function(elem,_5b8){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _5bb=MochiKit.Style.getStyle.apply(d,arguments);
if(!_5bb){
continue;
}
var _5bc=cls.fromString(_5bb);
if(!_5bc){
break;
}
if(_5bc.asRGB().a>0){
return _5bc;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_5c2){
v*=_5c2;
if(v<0){
return 0;
}else{
if(v>_5c2){
return _5c2;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_5c8,_5c9,_5ca){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_5c8=hsv.s;
_5c9=hsv.v;
_5ca=hsv.a;
}
var red;
var _5cd;
var blue;
if(_5c8===0){
red=_5c9;
_5cd=_5c9;
blue=_5c9;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_5c9*(1-_5c8);
var q=_5c9*(1-(_5c8*f));
var t=_5c9*(1-(_5c8*(1-f)));
switch(i){
case 1:
red=q;
_5cd=_5c9;
blue=p;
break;
case 2:
red=p;
_5cd=_5c9;
blue=t;
break;
case 3:
red=p;
_5cd=q;
blue=_5c9;
break;
case 4:
red=t;
_5cd=p;
blue=_5c9;
break;
case 5:
red=_5c9;
_5cd=p;
blue=q;
break;
case 6:
case 0:
red=_5c9;
_5cd=t;
blue=p;
break;
}
}
return {r:red,g:_5cd,b:blue,a:_5ca};
},hslToRGB:function(hue,_5d5,_5d6,_5d7){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_5d5=hsl.s;
_5d6=hsl.l;
_5d7=hsl.a;
}
var red;
var _5da;
var blue;
if(_5d5===0){
red=_5d6;
_5da=_5d6;
blue=_5d6;
}else{
var m2;
if(_5d6<=0.5){
m2=_5d6*(1+_5d5);
}else{
m2=_5d6+_5d5-(_5d6*_5d5);
}
var m1=(2*_5d6)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_5da=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_5da,b:blue,a:_5d7};
},rgbToHSV:function(red,_5e1,blue,_5e3){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5e1=rgb.g;
blue=rgb.b;
_5e3=rgb.a;
}
var max=Math.max(Math.max(red,_5e1),blue);
var min=Math.min(Math.min(red,_5e1),blue);
var hue;
var _5e8;
var _5e9=max;
if(min==max){
hue=0;
_5e8=0;
}else{
var _5ea=(max-min);
_5e8=_5ea/max;
if(red==max){
hue=(_5e1-blue)/_5ea;
}else{
if(_5e1==max){
hue=2+((blue-red)/_5ea);
}else{
hue=4+((red-_5e1)/_5ea);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_5e8,v:_5e9,a:_5e3};
},rgbToHSL:function(red,_5ec,blue,_5ee){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5ec=rgb.g;
blue=rgb.b;
_5ee=rgb.a;
}
var max=Math.max(red,Math.max(_5ec,blue));
var min=Math.min(red,Math.min(_5ec,blue));
var hue;
var _5f3;
var _5f4=(max+min)/2;
var _5f5=max-min;
if(_5f5===0){
hue=0;
_5f3=0;
}else{
if(_5f4<=0.5){
_5f3=_5f5/(max+min);
}else{
_5f3=_5f5/(2-max-min);
}
if(red==max){
hue=(_5ec-blue)/_5f5;
}else{
if(_5ec==max){
hue=2+((blue-red)/_5f5);
}else{
hue=4+((red-_5ec)/_5f5);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_5f3,l:_5f4,a:_5ee};
},toColorPart:function(num){
num=Math.round(num);
var _5f7=num.toString(16);
if(num<16){
return "0"+_5f7;
}
return _5f7;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _5f9=1/3;
var _5fa={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_5f9,_5f9,_5f9],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_5f9,2*_5f9,2*_5f9],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
for(var k in _5fa){
var name=k+"Color";
var _5fd=this.Color.fromRGB.apply(this.Color,_5fa[k]);
this.Color[name]=m.partial(m.operator.identity,_5fd);
}
var _5fe=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _600=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_5fe,_600);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Signal");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Signal","1.5",["Base","DOM"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Signal.Event.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
};
MochiKit.Signal.Event.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Signal.Event.prototype.src=function(){
return this._src;
};
MochiKit.Signal.Event.prototype.event=function(){
return this._event;
};
MochiKit.Signal.Event.prototype.type=function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
};
MochiKit.Signal.Event.prototype.target=function(){
return this._event.target||this._event.srcElement;
};
MochiKit.Signal.Event.prototype._relatedTarget=null;
MochiKit.Signal.Event.prototype.relatedTarget=function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
};
MochiKit.Signal.Event.prototype._modifier=null;
MochiKit.Signal.Event.prototype.modifier=function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
};
MochiKit.Signal.Event.prototype._key=null;
MochiKit.Signal.Event.prototype.key=function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
};
MochiKit.Signal.Event.prototype._mouse=null;
MochiKit.Signal.Event.prototype.mouse=function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("drag")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client={x:0,y:0};
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page={x:0,y:0};
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel={x:0,y:0};
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
};
MochiKit.Signal.Event.prototype.stop=function(){
this.stopPropagation();
this.preventDefault();
};
MochiKit.Signal.Event.prototype.stopPropagation=function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
};
MochiKit.Signal.Event.prototype.preventDefault=function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
};
MochiKit.Signal.Event.prototype._confirmUnload=null;
MochiKit.Signal.Event.prototype.confirmUnload=function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
};
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _60f=MochiKit.Signal._specialMacKeys;
for(var i=63236;i<=63242;i++){
_60f[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _611=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_611[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_611[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_611[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_611[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_613){
this.source=_613.source;
this.signal=_613.signal;
this.listener=_613.listener;
this.isDOM=_613.isDOM;
this.objOrFunc=_613.objOrFunc;
this.funcOrStr=_613.funcOrStr;
this.connected=_613.connected;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Signal.Ident.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "src:"+repr(this.source)+", sig: "+repr(this.signal)+", isDOM: "+repr(this.isDOM)+", connected: "+repr(this.connected);
};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _616=self._observers;
for(var i=0;i<_616.length;i++){
if(_616[i].signal!=="onload"&&_616[i].signal!=="onunload"){
self._disconnect(_616[i]);
}
}
},_listener:function(src,sig,func,obj,_61c){
var self=MochiKit.Signal;
var E=self.Event;
if(!_61c){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_61f){
obj[func].apply(obj,[new E(src,_61f)]);
var _620=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_620);
};
}else{
return function(_621){
obj[func].apply(obj,[new E(src,_621)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_622){
func.apply(obj,[new E(src,_622)]);
var _623=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_623);
};
}else{
return function(_624){
func.apply(obj,[new E(src,_624)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_62a){
var e=new E(src,_62a);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_62c,_62d){
var obj=null;
var func=null;
if(typeof (_62d)!="undefined"){
obj=_62c;
func=_62d;
if(typeof (_62d)=="string"){
if(typeof (_62c[_62d])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_62d)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_62c)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_62c;
}
}
return [obj,func];
},connect:function(src,sig,_632,_633){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _635=self._getDestPair(_632,_633);
var obj=_635[0];
var func=_635[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _638=!!(src.addEventListener||src.attachEvent);
if(_638&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _639=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_638&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _639=self._listener(src,sig,func,obj,_638);
sig="onDOMMouseScroll";
}else{
var _639=self._listener(src,sig,func,obj,_638);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_639,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_639);
}
}
var _63a=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_639,isDOM:_638,objOrFunc:_632,funcOrStr:_633,connected:true});
self._observers.push(_63a);
if(!_638&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_63a],arguments,1);
src.__connect__.apply(src,args);
}
return _63a;
},connectOnce:function(src,sig,_63e,_63f){
var self=MochiKit.Signal;
var _641=self.connect(src,sig,_63e,_63f);
var _642;
_642=self.connect(src,sig,function(){
self.disconnect(_641);
self.disconnect(_642);
});
return _641;
},_disconnect:function(_643){
if(!_643.connected){
return;
}
_643.connected=false;
var src=_643.source;
var sig=_643.signal;
var _646=_643.listener;
if(!_643.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_643,sig,_643.objOrFunc,_643.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_646,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_646);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_647){
var self=MochiKit.Signal;
var _649=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_649.length-1;i>=0;i--){
var o=_649[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(self._lock===0){
_649.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_649,_647);
if(idx>=0){
self._disconnect(_647);
if(self._lock===0){
_649.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_652,_653){
var self=MochiKit.Signal;
var _655=self._observers;
var _656=self._disconnect;
var lock=self._lock;
var _658=self._dirty;
if(typeof (_653)==="undefined"){
_653=null;
}
for(var i=_655.length-1;i>=0;i--){
var _65a=_655[i];
if(_65a.objOrFunc===_652&&(_653===null||_65a.funcOrStr===_653)){
_656(_65a);
if(lock===0){
_655.splice(i,1);
}else{
_658=true;
}
}
}
self._dirty=_658;
},disconnectAll:function(src,sig){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _65e=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _660=self._disconnect;
var _661=self._observers;
var i,_663;
var lock=self._lock;
var _665=self._dirty;
if(_65e.length===0){
for(i=_661.length-1;i>=0;i--){
_663=_661[i];
if(_663.source===src){
_660(_663);
if(lock===0){
_661.splice(i,1);
}else{
_665=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_65e.length;i++){
sigs[_65e[i]]=true;
}
for(i=_661.length-1;i>=0;i--){
_663=_661[i];
if(_663.source===src&&_663.signal in sigs){
_660(_663);
if(lock===0){
_661.splice(i,1);
}else{
_665=true;
}
}
}
}
self._dirty=_665;
},signal:function(src,sig,_669){
var self=MochiKit.Signal;
var _66b=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _66d=[];
self._lock++;
for(var i=0;i<_66b.length;i++){
var _66f=_66b[i];
if(_66f.source===src&&_66f.signal===sig&&_66f.connected){
try{
if(_66f.isDOM&&_66f.funcOrStr!=null){
var obj=_66f.objOrFunc;
obj[_66f.funcOrStr].apply(obj,args);
}else{
if(_66f.isDOM){
_66f.objOrFunc.apply(src,args);
}else{
_66f.listener.apply(src,args);
}
}
}
catch(e){
_66d.push(e);
}
}
}
self._lock--;
self._gc();
if(_66d.length==1){
throw _66d[0];
}else{
if(_66d.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_66d;
throw e;
}
}
},_gc:function(){
var self=MochiKit.Signal;
var _673=self._observers;
if(self._lock===0&&self._dirty){
for(var i=_673.length-1;i>=0;i--){
if(!_673[i].connected){
_673.splice(i,1);
}
}
self._dirty=false;
return true;
}
return false;
}});
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=0;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Position");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _677=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _678=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_677,_678);
},cumulativeOffset:function(_679){
var _67a=0;
var _67b=0;
do{
_67a+=_679.offsetTop||0;
_67b+=_679.offsetLeft||0;
_679=_679.offsetParent;
}while(_679);
return new MochiKit.Style.Coordinates(_67b,_67a);
},realOffset:function(_67c){
var _67d=0;
var _67e=0;
do{
_67d+=_67c.scrollTop||0;
_67e+=_67c.scrollLeft||0;
_67c=_67c.parentNode;
}while(_67c);
return new MochiKit.Style.Coordinates(_67e,_67d);
},within:function(_67f,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_67f,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_67f);
if(_67f.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_67f.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_67f.offsetWidth);
},withinIncludingScrolloffsets:function(_682,x,y){
var _685=this.realOffset(_682);
this.xcomp=x+_685.x-this.windowOffset.x;
this.ycomp=y+_685.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_682);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_682.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_682.offsetWidth);
},overlap:function(mode,_687){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_687.offsetHeight)-this.ycomp)/_687.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_687.offsetWidth)-this.xcomp)/_687.offsetWidth;
}
},absolutize:function(_688){
_688=MochiKit.DOM.getElement(_688);
if(_688.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _689=MochiKit.Position.positionedOffset(_688);
var _68a=_688.clientWidth;
var _68b=_688.clientHeight;
var _68c={"position":_688.style.position,"left":_689.x-parseFloat(_688.style.left||0),"top":_689.y-parseFloat(_688.style.top||0),"width":_688.style.width,"height":_688.style.height};
_688.style.position="absolute";
_688.style.top=_689.y+"px";
_688.style.left=_689.x+"px";
_688.style.width=_68a+"px";
_688.style.height=_68b+"px";
return _68c;
},positionedOffset:function(_68d){
var _68e=0,_68f=0;
do{
_68e+=_68d.offsetTop||0;
_68f+=_68d.offsetLeft||0;
_68d=_68d.offsetParent;
if(_68d){
var p=MochiKit.Style.getStyle(_68d,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_68d);
return new MochiKit.Style.Coordinates(_68f,_68e);
},relativize:function(_691,_692){
_691=MochiKit.DOM.getElement(_691);
if(_691.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_691.style.top||0)-(_692["top"]||0);
var left=parseFloat(_691.style.left||0)-(_692["left"]||0);
_691.style.position=_692["position"];
_691.style.top=top+"px";
_691.style.left=left+"px";
_691.style.width=_692["width"];
_691.style.height=_692["height"];
},clone:function(_695,_696){
_695=MochiKit.DOM.getElement(_695);
_696=MochiKit.DOM.getElement(_696);
_696.style.position="absolute";
var _697=this.cumulativeOffset(_695);
_696.style.top=_697.y+"px";
_696.style.left=_697.x+"px";
_696.style.width=_695.offsetWidth+"px";
_696.style.height=_695.offsetHeight+"px";
},page:function(_698){
var _699=0;
var _69a=0;
var _69b=_698;
do{
_699+=_69b.offsetTop||0;
_69a+=_69b.offsetLeft||0;
if(_69b.offsetParent==document.body&&MochiKit.Style.getStyle(_69b,"position")=="absolute"){
break;
}
}while(_69b=_69b.offsetParent);
_69b=_698;
do{
_699-=_69b.scrollTop||0;
_69a-=_69b.scrollLeft||0;
}while(_69b=_69b.parentNode);
return new MochiKit.Style.Coordinates(_69a,_699);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Visual");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
goog.require("MochiKit.Color");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_69e){
e=MochiKit.DOM.getElement(e);
this._setOptions(_69e);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _69f=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_69f=C.fromBackground(e);
}else{
if(!(_69f instanceof C)){
_69f=C.fromString(_69f);
}
}
this.isTransparent=(_69f.asRGB().a<=0);
var _6a1=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_6a1=C.fromBackground(e.offsetParent);
}else{
if(!(_6a1 instanceof C)){
_6a1=C.fromString(_6a1);
}
}
this._roundCornersImpl(e,_69f,_6a1);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _6a3=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _6a5=doc.defaultView.getComputedStyle(e,null);
if(typeof (_6a5)==="undefined"||_6a5===null){
return e;
}
var _6a6=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_6a5.getPropertyValue("padding-top"),marginRight:_6a5.getPropertyValue("padding-right"),marginBottom:_6a5.getPropertyValue("padding-bottom"),marginLeft:_6a5.getPropertyValue("padding-left"),padding:"0px"}});
_6a6.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_6a6);
return e;
},_roundCornersImpl:function(e,_6a8,_6a9){
if(this.options.border){
this._renderBorder(e,_6a9);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_6a8,_6a9);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_6a8,_6a9);
}
},_renderBorder:function(el,_6ab){
var _6ac="1px solid "+this._borderColor(_6ab);
var _6ad="border-left: "+_6ac;
var _6ae="border-right: "+_6ac;
var _6af="style='"+_6ad+";"+_6ae+"'";
el.innerHTML="<div "+_6af+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_6b1,_6b2){
var _6b3=this._createCorner(_6b2);
for(var i=0;i<this.options.numSlices;i++){
_6b3.appendChild(this._createCornerSlice(_6b1,_6b2,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_6b3,el.firstChild);
},_roundBottomCorners:function(el,_6b6,_6b7){
var _6b8=this._createCorner(_6b7);
for(var i=(this.options.numSlices-1);i>=0;i--){
_6b8.appendChild(this._createCornerSlice(_6b6,_6b7,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_6b8);
},_createCorner:function(_6ba){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_6ba.toString()}});
},_createCornerSlice:function(_6bc,_6bd,n,_6bf){
var _6c0=MochiKit.DOM.SPAN();
var _6c1=_6c0.style;
_6c1.backgroundColor=_6bc.toString();
_6c1.display="block";
_6c1.height="1px";
_6c1.overflow="hidden";
_6c1.fontSize="1px";
var _6c2=this._borderColor(_6bc,_6bd);
if(this.options.border&&n===0){
_6c1.borderTopStyle="solid";
_6c1.borderTopWidth="1px";
_6c1.borderLeftWidth="0px";
_6c1.borderRightWidth="0px";
_6c1.borderBottomWidth="0px";
_6c1.height="0px";
_6c1.borderColor=_6c2.toString();
}else{
if(_6c2){
_6c1.borderColor=_6c2.toString();
_6c1.borderStyle="solid";
_6c1.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_6c1.height="2px";
}
this._setMargin(_6c0,n,_6bf);
this._setBorder(_6c0,n,_6bf);
return _6c0;
},_setOptions:function(_6c3){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_6c3);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _6c4=this.options.corners;
if(this._hasString(_6c4,"all","top")){
return "";
}
var _6c5=(_6c4.indexOf("tl")!=-1);
var _6c6=(_6c4.indexOf("tr")!=-1);
if(_6c5&&_6c6){
return "";
}
if(_6c5){
return "left";
}
if(_6c6){
return "right";
}
return "";
},_whichSideBottom:function(){
var _6c7=this.options.corners;
if(this._hasString(_6c7,"all","bottom")){
return "";
}
var _6c8=(_6c7.indexOf("bl")!=-1);
var _6c9=(_6c7.indexOf("br")!=-1);
if(_6c8&&_6c9){
return "";
}
if(_6c8){
return "left";
}
if(_6c9){
return "right";
}
return "";
},_borderColor:function(_6ca,_6cb){
if(_6ca=="transparent"){
return _6cb;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _6cb.blendedColor(_6ca);
}
}
}
return "";
},_setMargin:function(el,n,_6ce){
var _6cf=this._marginSize(n)+"px";
var _6d0=(_6ce=="top"?this._whichSideTop():this._whichSideBottom());
var _6d1=el.style;
if(_6d0=="left"){
_6d1.marginLeft=_6cf;
_6d1.marginRight="0px";
}else{
if(_6d0=="right"){
_6d1.marginRight=_6cf;
_6d1.marginLeft="0px";
}else{
_6d1.marginLeft=_6cf;
_6d1.marginRight=_6cf;
}
}
},_setBorder:function(el,n,_6d4){
var _6d5=this._borderSize(n)+"px";
var _6d6=(_6d4=="top"?this._whichSideTop():this._whichSideBottom());
var _6d7=el.style;
if(_6d6=="left"){
_6d7.borderLeftWidth=_6d5;
_6d7.borderRightWidth="0px";
}else{
if(_6d6=="right"){
_6d7.borderRightWidth=_6d5;
_6d7.borderLeftWidth="0px";
}else{
_6d7.borderLeftWidth=_6d5;
_6d7.borderRightWidth=_6d5;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _6da=[1,0];
return _6da[n];
}else{
if(o.compact){
var _6db=[2,1];
return _6db[n];
}else{
if(o.blend){
var _6dc=[3,2,1,0];
return _6dc[n];
}else{
var _6dd=[5,3,2,1];
return _6dd[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _6e0;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_6e0=[1,0];
}else{
if(o.blend){
_6e0=[2,1,1,1];
}else{
if(o.border){
_6e0=[0,2,0,0];
}else{
if(this.isTransparent){
_6e0=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _6e0[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_6e5){
new MochiKit.Visual._RoundCorners(e,_6e5);
};
MochiKit.Visual.roundClass=function(_6e6,_6e7,_6e8){
var _6e9=MochiKit.DOM.getElementsByTagAndClassName(_6e6,_6e7);
for(var i=0;i<_6e9.length;i++){
MochiKit.Visual.roundElement(_6e9[i],_6e8);
}
};
MochiKit.Visual.tagifyText=function(_6eb,_6ec){
_6ec=_6ec||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_6ec+=";zoom:1";
}
_6eb=MochiKit.DOM.getElement(_6eb);
var ma=MochiKit.Base.map;
ma(function(_6ee){
if(_6ee.nodeType==3){
ma(function(_6ef){
_6eb.insertBefore(MochiKit.DOM.SPAN({style:_6ec},_6ef==" "?String.fromCharCode(160):_6ef),_6ee);
},_6ee.nodeValue.split(""));
MochiKit.DOM.removeElement(_6ee);
}
},_6eb.childNodes);
};
MochiKit.Visual._forceRerendering=function(_6f0){
try{
_6f0=MochiKit.DOM.getElement(_6f0);
var n=document.createTextNode(" ");
_6f0.appendChild(n);
_6f0.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_6f2,_6f3,_6f4){
_6f4=MochiKit.Base.update({speed:0.1,delay:0},_6f4);
var _6f5=_6f4.delay;
var _6f6=0;
MochiKit.Base.map(function(_6f7){
_6f4.delay=_6f6*_6f4.speed+_6f5;
new _6f3(_6f7,_6f4);
_6f6+=1;
},_6f2);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_6f8,_6f9,_6fa){
_6f8=MochiKit.DOM.getElement(_6f8);
_6f9=(_6f9||"appear").toLowerCase();
_6fa=MochiKit.Base.update({queue:{position:"end",scope:(_6f8.id||"global"),limit:1}},_6fa);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_6f8,"display")!="none"?v.PAIRS[_6f9][1]:v.PAIRS[_6f9][0]](_6f8,_6fa);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_702){
if(_702){
pos*=2*_702;
}else{
pos*=10;
}
var _703=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_703:1-_703;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.spring=function(pos){
return 1-(Math.cos(pos*2.5*Math.PI)*Math.exp(-pos*6));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_709){
var _70a=new Date().getTime();
var _70b=(typeof (_709.options.queue)=="string")?_709.options.queue:_709.options.queue.position;
var ma=MochiKit.Base.map;
switch(_70b){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_709.finishOn;
e.finishOn+=_709.finishOn;
}
},this.effects);
break;
case "end":
var _70e;
ma(function(e){
var i=e.finishOn;
if(i>=(_70e||i)){
_70e=i;
}
},this.effects);
_70a=_70e||_70a;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
case "replace":
ma(function(e){
e.cancel();
},this.effects);
break;
}
_709.startOn+=_70a;
_709.finishOn+=_70a;
if(!_709.options.queue.limit||this.effects.length<_709.options.queue.limit){
this.effects.push(_709);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_714){
return setInterval(func,_714);
},remove:function(_715){
this.effects=MochiKit.Base.filter(function(e){
return e!=_715;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_717){
clearInterval(_717);
},loop:function(){
var _718=new Date().getTime();
MochiKit.Base.map(function(_719){
_719.loop(_718);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_71a){
if(typeof (_71a)!="string"){
return _71a;
}
if(!this.instances[_71a]){
this.instances[_71a]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_71a];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_71b){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_71b,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_71d){
if(_71d>=this.startOn){
if(_71d>=this.finishOn){
return this.finalize();
}
var pos=(_71d-this.startOn)/(this.finishOn-this.startOn);
var _71f=Math.round(pos*this.options.fps*this.options.duration);
if(_71f>this.currentFrame){
this.render(pos);
this.currentFrame=_71f;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
var _721=this.options.transition;
if(typeof (_721)=="string"){
_721=MochiKit.Visual.Transitions[_721];
}
if(typeof (_721)=="function"){
pos=_721(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_722){
},event:function(_723){
if(this.options[_723+"Internal"]){
this.options[_723+"Internal"](this);
}
if(this.options[_723]){
this.options[_723](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_724,_725){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_724,_725);
}
this.__init__(_724,_725);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_727,_728){
this.effects=_727||[];
this.start(_728);
},update:function(_729){
MochiKit.Base.map(function(_72a){
_72a.render(_729);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_72b){
_72b.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_72c,_72d){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_72c,_72d);
}
this.__init__(_72c,_72d);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_72f,_730){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_72f||[];
MochiKit.Base.map(function(_732){
defs.duration+=_732.options.duration;
},this.effects);
MochiKit.Base.setdefault(_730,defs);
this.start(_730);
},update:function(_733){
var time=_733*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _736=this.effects[i];
if(time<=_736.options.duration){
_736.render(time/_736.options.duration);
break;
}else{
time-=_736.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_737){
_737.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_738,_739){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_738,_739);
}
this.__init__(_738,_739);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_73b,_73c){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_73b);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_73c=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_73c);
this.start(_73c);
},update:function(_73f){
MochiKit.Style.setStyle(this.element,{"opacity":_73f});
}});
MochiKit.Visual.Move=function(_740,_741){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_740,_741);
}
this.__init__(_740,_741);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_743,_744){
this.element=MochiKit.DOM.getElement(_743);
_744=MochiKit.Base.update({x:0,y:0,mode:"relative"},_744);
this.start(_744);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _746=s.visibility;
var _747=s.display;
if(_747=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_747=="none"){
s.visibility=_746;
s.display=_747;
}
},update:function(_748){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_748+this.originalLeft)+"px",top:Math.round(this.options.y*_748+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_749,_74a,_74b){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_749,_74a,_74b);
}
this.__init__(_749,_74a,_74b);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_74d,_74e,_74f){
this.element=MochiKit.DOM.getElement(_74d);
_74f=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_74e},_74f);
this.start(_74f);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _753=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_754){
if(_753.indexOf(_754)>0){
this.fontSize=parseFloat(_753);
this.fontSizeType=_754;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_755){
var _756=(this.options.scaleFrom/100)+(this.factor*_755);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_756+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_756,this.dims[1]*_756);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_757,_758){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_758)+"px";
}
if(this.options.scaleY){
d.height=r(_757)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_757-this.dims[0])/2;
var _75c=(_758-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_75c+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_75c+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_75d,_75e){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_75d,_75e);
}
this.__init__(_75d,_75e);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_760,_761){
this.element=MochiKit.DOM.getElement(_760);
_761=MochiKit.Base.update({startcolor:"#ffff99"},_761);
this.start(_761);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_766){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_766));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_769,_76a){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_769,_76a);
}
this.__init__(_769,_76a);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_76c,_76d){
this.element=MochiKit.DOM.getElement(_76c);
this.start(_76d);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _76f=p.cumulativeOffset(this.element);
if(this.options.offset){
_76f.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_76f.y>max?max:_76f.y)-this.scrollStart;
},update:function(_771){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_771*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_773,_774){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_773,_774);
}
this.__init__(_773,_774);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_776,_777){
this.element=MochiKit.DOM.getElement(_776);
this.start(_777);
},setup:function(){
var b=MochiKit.Base;
var _779=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _77a,unit;
for(var s in _779){
_77a=_779[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_77a)){
var _77d=_77a.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_77a=parseFloat(_77d[1]);
unit=(_77d.length==3)?_77d[2]:null;
this.styleEnd[s]=_77a;
this.units[s]=unit;
_77a=MochiKit.Style.getStyle(this.element,s);
_77d=_77a.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_77a=parseFloat(_77d[1]);
this.styleStart[s]=_77a;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_77a=c.fromString(_77a);
if(_77a){
this.units[s]="color";
this.styleEnd[s]=_77a.toHexString();
_77a=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_77a).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_77a;
}
}
}
},update:function(_781){
var _782;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _785=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_785[i]+(end[i]-_785[i])*_781));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_782=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_781*1000)/1000+this.units[s];
this.element.style[s]=_782;
}
}
}});
MochiKit.Visual.fade=function(_788,_789){
var s=MochiKit.Style;
var _78b=s.getStyle(_788,"opacity");
_789=MochiKit.Base.update({from:s.getStyle(_788,"opacity")||1,to:0,afterFinishInternal:function(_78c){
if(_78c.options.to!==0){
return;
}
s.hideElement(_78c.element);
s.setStyle(_78c.element,{"opacity":_78b});
}},_789);
return new MochiKit.Visual.Opacity(_788,_789);
};
MochiKit.Visual.appear=function(_78d,_78e){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_78e=MochiKit.Base.update({from:(s.getStyle(_78d,"display")=="none"?0:s.getStyle(_78d,"opacity")||0),to:1,afterFinishInternal:function(_791){
v._forceRerendering(_791.element);
},beforeSetupInternal:function(_792){
s.setStyle(_792.element,{"opacity":_792.options.from});
s.showElement(_792.element);
}},_78e);
return new v.Opacity(_78d,_78e);
};
MochiKit.Visual.puff=function(_793,_794){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_793=MochiKit.DOM.getElement(_793);
var _797=MochiKit.Style.getElementDimensions(_793,true);
var _798={position:s.getStyle(_793,"position"),top:_793.style.top,left:_793.style.left,width:_793.style.width,height:_793.style.height,opacity:s.getStyle(_793,"opacity")};
_794=MochiKit.Base.update({beforeSetupInternal:function(_799){
MochiKit.Position.absolutize(_799.effects[0].element);
},afterFinishInternal:function(_79a){
s.hideElement(_79a.effects[0].element);
s.setStyle(_79a.effects[0].element,_798);
},scaleContent:true,scaleFromCenter:true},_794);
return new v.Parallel([new v.Scale(_793,200,{sync:true,scaleFromCenter:_794.scaleFromCenter,scaleMode:{originalHeight:_797.h,originalWidth:_797.w},scaleContent:_794.scaleContent,restoreAfterFinish:true}),new v.Opacity(_793,{sync:true,to:0})],_794);
};
MochiKit.Visual.blindUp=function(_79b,_79c){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_79b=d.getElement(_79b);
var _79f=s.getElementDimensions(_79b,true);
var _7a0=s.makeClipping(_79b);
_79c=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_79f.h,originalWidth:_79f.w},restoreAfterFinish:true,afterFinishInternal:function(_7a1){
s.hideElement(_7a1.element);
s.undoClipping(_7a1.element,_7a0);
}},_79c);
return new MochiKit.Visual.Scale(_79b,0,_79c);
};
MochiKit.Visual.blindDown=function(_7a2,_7a3){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7a2=d.getElement(_7a2);
var _7a6=s.getElementDimensions(_7a2,true);
var _7a7;
_7a3=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7a6.h,originalWidth:_7a6.w},restoreAfterFinish:true,afterSetupInternal:function(_7a8){
_7a7=s.makeClipping(_7a8.element);
s.setStyle(_7a8.element,{height:"0px"});
s.showElement(_7a8.element);
},afterFinishInternal:function(_7a9){
s.undoClipping(_7a9.element,_7a7);
}},_7a3);
return new MochiKit.Visual.Scale(_7a2,100,_7a3);
};
MochiKit.Visual.switchOff=function(_7aa,_7ab){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7aa=d.getElement(_7aa);
var _7ae=s.getElementDimensions(_7aa,true);
var _7af=s.getStyle(_7aa,"opacity");
var _7b0;
_7ab=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_7b1){
s.makePositioned(_7aa);
_7b0=s.makeClipping(_7aa);
},afterFinishInternal:function(_7b2){
s.hideElement(_7aa);
s.undoClipping(_7aa,_7b0);
s.undoPositioned(_7aa);
s.setStyle(_7aa,{"opacity":_7af});
}},_7ab);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_7aa,{sync:true,duration:0.57*_7ab.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_7aa,1,{sync:true,duration:0.43*_7ab.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_7ae.h,originalWidth:_7ae.w},scaleContent:false,restoreAfterFinish:true})],_7ab);
};
MochiKit.Visual.dropOut=function(_7b4,_7b5){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7b4=d.getElement(_7b4);
var _7b8={top:s.getStyle(_7b4,"top"),left:s.getStyle(_7b4,"left"),opacity:s.getStyle(_7b4,"opacity")};
_7b5=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_7b9){
s.makePositioned(_7b9.effects[0].element);
},afterFinishInternal:function(_7ba){
s.hideElement(_7ba.effects[0].element);
s.undoPositioned(_7ba.effects[0].element);
s.setStyle(_7ba.effects[0].element,_7b8);
}},_7b5);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_7b4,{x:0,y:_7b5.distance,sync:true}),new v.Opacity(_7b4,{sync:true,to:0})],_7b5);
};
MochiKit.Visual.shake=function(_7bc,_7bd){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7bc=d.getElement(_7bc);
var _7c1={top:s.getStyle(_7bc,"top"),left:s.getStyle(_7bc,"left")};
_7bd=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_7c2){
s.undoPositioned(_7bc);
s.setStyle(_7bc,_7c1);
}},_7bd);
return new v.Sequence([new v.Move(_7bc,{sync:true,duration:0.1*_7bd.duration,x:20,y:0}),new v.Move(_7bc,{sync:true,duration:0.2*_7bd.duration,x:-40,y:0}),new v.Move(_7bc,{sync:true,duration:0.2*_7bd.duration,x:40,y:0}),new v.Move(_7bc,{sync:true,duration:0.2*_7bd.duration,x:-40,y:0}),new v.Move(_7bc,{sync:true,duration:0.2*_7bd.duration,x:40,y:0}),new v.Move(_7bc,{sync:true,duration:0.1*_7bd.duration,x:-20,y:0})],_7bd);
};
MochiKit.Visual.slideDown=function(_7c3,_7c4){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7c3=d.getElement(_7c3);
if(!_7c3.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_7c3);
var _7c8=s.getStyle(_7c3.firstChild,"bottom")||0;
var _7c9=s.getElementDimensions(_7c3,true);
var _7ca;
_7c4=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7c9.h,originalWidth:_7c9.w},restoreAfterFinish:true,afterSetupInternal:function(_7cb){
s.makePositioned(_7cb.element);
s.makePositioned(_7cb.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7cb.element,{top:""});
}
_7ca=s.makeClipping(_7cb.element);
s.setStyle(_7cb.element,{height:"0px"});
s.showElement(_7cb.element);
},afterUpdateInternal:function(_7cc){
var _7cd=s.getElementDimensions(_7cc.element,true);
s.setStyle(_7cc.element.firstChild,{bottom:(_7cc.dims[0]-_7cd.h)+"px"});
},afterFinishInternal:function(_7ce){
s.undoClipping(_7ce.element,_7ca);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_7ce.element);
s.undoPositioned(_7ce.element.firstChild);
}else{
s.undoPositioned(_7ce.element.firstChild);
s.undoPositioned(_7ce.element);
}
s.setStyle(_7ce.element.firstChild,{bottom:_7c8});
}},_7c4);
return new MochiKit.Visual.Scale(_7c3,100,_7c4);
};
MochiKit.Visual.slideUp=function(_7cf,_7d0){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7cf=d.getElement(_7cf);
if(!_7cf.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_7cf);
var _7d4=s.getStyle(_7cf.firstChild,"bottom");
var _7d5=s.getElementDimensions(_7cf,true);
var _7d6;
_7d0=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7d5.h,originalWidth:_7d5.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_7d7){
s.makePositioned(_7d7.element);
s.makePositioned(_7d7.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7d7.element,{top:""});
}
_7d6=s.makeClipping(_7d7.element);
s.showElement(_7d7.element);
},afterUpdateInternal:function(_7d8){
var _7d9=s.getElementDimensions(_7d8.element,true);
s.setStyle(_7d8.element.firstChild,{bottom:(_7d8.dims[0]-_7d9.h)+"px"});
},afterFinishInternal:function(_7da){
s.hideElement(_7da.element);
s.undoClipping(_7da.element,_7d6);
s.undoPositioned(_7da.element.firstChild);
s.undoPositioned(_7da.element);
s.setStyle(_7da.element.firstChild,{bottom:_7d4});
}},_7d0);
return new MochiKit.Visual.Scale(_7cf,0,_7d0);
};
MochiKit.Visual.squish=function(_7db,_7dc){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _7e0=s.getElementDimensions(_7db,true);
var _7e1;
_7dc=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_7e0.w,originalWidth:_7e0.h},beforeSetupInternal:function(_7e2){
_7e1=s.makeClipping(_7e2.element);
},afterFinishInternal:function(_7e3){
s.hideElement(_7e3.element);
s.undoClipping(_7e3.element,_7e1);
}},_7dc);
return new MochiKit.Visual.Scale(_7db,/Opera/.test(navigator.userAgent)?1:0,_7dc);
};
MochiKit.Visual.grow=function(_7e4,_7e5){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7e4=d.getElement(_7e4);
_7e5=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_7e5);
var _7e9={top:_7e4.style.top,left:_7e4.style.left,height:_7e4.style.height,width:_7e4.style.width,opacity:s.getStyle(_7e4,"opacity")};
var dims=s.getElementDimensions(_7e4,true);
var _7eb,_7ec;
var _7ed,_7ee;
switch(_7e5.direction){
case "top-left":
_7eb=_7ec=_7ed=_7ee=0;
break;
case "top-right":
_7eb=dims.w;
_7ec=_7ee=0;
_7ed=-dims.w;
break;
case "bottom-left":
_7eb=_7ed=0;
_7ec=dims.h;
_7ee=-dims.h;
break;
case "bottom-right":
_7eb=dims.w;
_7ec=dims.h;
_7ed=-dims.w;
_7ee=-dims.h;
break;
case "center":
_7eb=dims.w/2;
_7ec=dims.h/2;
_7ed=-dims.w/2;
_7ee=-dims.h/2;
break;
}
var _7ef=MochiKit.Base.update({beforeSetupInternal:function(_7f0){
s.setStyle(_7f0.effects[0].element,{height:"0px"});
s.showElement(_7f0.effects[0].element);
},afterFinishInternal:function(_7f1){
s.undoClipping(_7f1.effects[0].element);
s.undoPositioned(_7f1.effects[0].element);
s.setStyle(_7f1.effects[0].element,_7e9);
}},_7e5);
return new v.Move(_7e4,{x:_7eb,y:_7ec,duration:0.01,beforeSetupInternal:function(_7f2){
s.hideElement(_7f2.element);
s.makeClipping(_7f2.element);
s.makePositioned(_7f2.element);
},afterFinishInternal:function(_7f3){
new v.Parallel([new v.Opacity(_7f3.element,{sync:true,to:1,from:0,transition:_7e5.opacityTransition}),new v.Move(_7f3.element,{x:_7ed,y:_7ee,sync:true,transition:_7e5.moveTransition}),new v.Scale(_7f3.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_7e5.scaleTransition,scaleContent:_7e5.scaleContent,scaleFromCenter:_7e5.scaleFromCenter,restoreAfterFinish:true})],_7ef);
}});
};
MochiKit.Visual.shrink=function(_7f4,_7f5){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7f4=d.getElement(_7f4);
_7f5=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_7f5);
var _7f9={top:_7f4.style.top,left:_7f4.style.left,height:_7f4.style.height,width:_7f4.style.width,opacity:s.getStyle(_7f4,"opacity")};
var dims=s.getElementDimensions(_7f4,true);
var _7fb,_7fc;
switch(_7f5.direction){
case "top-left":
_7fb=_7fc=0;
break;
case "top-right":
_7fb=dims.w;
_7fc=0;
break;
case "bottom-left":
_7fb=0;
_7fc=dims.h;
break;
case "bottom-right":
_7fb=dims.w;
_7fc=dims.h;
break;
case "center":
_7fb=dims.w/2;
_7fc=dims.h/2;
break;
}
var _7fd;
var _7fe=MochiKit.Base.update({beforeStartInternal:function(_7ff){
s.makePositioned(_7ff.effects[0].element);
_7fd=s.makeClipping(_7ff.effects[0].element);
},afterFinishInternal:function(_800){
s.hideElement(_800.effects[0].element);
s.undoClipping(_800.effects[0].element,_7fd);
s.undoPositioned(_800.effects[0].element);
s.setStyle(_800.effects[0].element,_7f9);
}},_7f5);
return new v.Parallel([new v.Opacity(_7f4,{sync:true,to:0,from:1,transition:_7f5.opacityTransition}),new v.Scale(_7f4,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_7f5.scaleTransition,scaleContent:_7f5.scaleContent,scaleFromCenter:_7f5.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_7f4,{x:_7fb,y:_7fc,sync:true,transition:_7f5.moveTransition})],_7fe);
};
MochiKit.Visual.pulsate=function(_801,_802){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _806=MochiKit.Style.getStyle(_801,"opacity");
_802=b.update({duration:3,from:0,afterFinishInternal:function(_807){
MochiKit.Style.setStyle(_807.element,{"opacity":_806});
}},_802);
var _808=_802.transition||v.Transitions.sinoidal;
_802.transition=function(pos){
return _808(1-v.Transitions.pulse(pos,_802.pulses));
};
return new v.Opacity(_801,_802);
};
MochiKit.Visual.fold=function(_80a,_80b){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_80a=d.getElement(_80a);
var _80f=s.getElementDimensions(_80a,true);
var _810={top:_80a.style.top,left:_80a.style.left,width:_80a.style.width,height:_80a.style.height};
var _811=s.makeClipping(_80a);
_80b=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_80f.h,originalWidth:_80f.w},afterFinishInternal:function(_812){
new v.Scale(_80a,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_80f.h,originalWidth:_80f.w},afterFinishInternal:function(_813){
s.hideElement(_813.element);
s.undoClipping(_813.element,_811);
s.setStyle(_813.element,_810);
}});
}},_80b);
return new v.Scale(_80a,5,_80b);
};
MochiKit.Base.nameFunctions(MochiKit.Visual);
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DragAndDrop");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Signal");
goog.require("MochiKit.Visual");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_814){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_814);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_819){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_819)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_819);
}
},this.drops);
},findDeepestChild:function(_81b){
var _81c=_81b[0];
for(var i=1;i<_81b.length;++i){
if(MochiKit.DOM.isChildNode(_81b[i].element,_81c.element)){
_81c=_81b[i];
}
}
return _81c;
},show:function(_81e,_81f){
if(!this.drops.length){
return;
}
var _820=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_81e,_81f)){
_820.push(drop);
}
});
if(_820.length>0){
var drop=this.findDeepestChild(_820);
MochiKit.Position.within(drop.element,_81e.page.x,_81e.page.y);
drop.options.onhover(_81f,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_823,_824){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_823.mouse(),_824)){
this.last_active.options.ondrop(_824,this.last_active.element,_823);
}
},reset:function(_825){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_825);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_827,_828){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_827,_828);
}
this.__init__(_827,_828);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_82a,_82b){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_82a);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_82b);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_82f){
if(this.options._containers.length){
var _830;
if(this.options.tree){
_830=_82f.treeNode;
}else{
_830=_82f.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _830==c;
});
}else{
return true;
}
},isAccepted:function(_832){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_832,c);
}));
},isAffected:function(_834,_835){
return ((this.element!=_835)&&this.isContained(_835)&&this.isAccepted(_835)&&MochiKit.Position.within(this.element,_834.page.x,_834.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_836){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_836);
},unregister:function(_838){
this.drags=MochiKit.Base.filter(function(d){
return d!=_838;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_83b){
window.focus();
this.activeDraggable=_83b;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_83c){
if(!this.activeDraggable){
return;
}
var _83d=_83c.mouse();
if(this._lastPointer&&this._lastPointer.page.x==_83d.page.x&&this._lastPointer.page.y==_83d.page.y){
return;
}
this._lastPointer=_83d;
this.activeDraggable.updateDrag(_83c,_83d);
},endDrag:function(_83e){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_83e);
this.activeDraggable=null;
},keyPress:function(_83f){
if(this.activeDraggable){
this.activeDraggable.keyPress(_83f);
}
},notify:function(_840,_841,_842){
MochiKit.Signal.signal(this,_840,_841,_842);
}};
MochiKit.DragAndDrop.Draggable=function(_843,_844){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_843,_844);
}
this.__init__(_843,_844);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_846,_847){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_847=b.update({handle:false,starteffect:function(_84a){
this._savedOpacity=MochiKit.Style.getStyle(_84a,"opacity")||1;
new v.Opacity(_84a,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_84b,_84c,_84d){
var dur=Math.sqrt(Math.abs(_84c^2)+Math.abs(_84d^2))*0.02;
return new v.Move(_84b,{x:-_84d,y:-_84c,duration:dur});
},endeffect:function(_84f){
new v.Opacity(_84f,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_847);
var d=MochiKit.DOM;
this.element=d.getElement(_846);
if(_847.handle&&(typeof (_847.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_847.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_847.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_847.scroll&&!_847.scroll.scrollTo&&!_847.scroll.outerHTML){
_847.scroll=d.getElement(_847.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_847.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_847;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0",10),parseInt(s(this.element,"top")||"0",10)];
},initDrag:function(_852){
if(!_852.mouse().button.left){
return;
}
var src=_852.target();
var _854=(src.tagName||"").toUpperCase();
if(_854==="INPUT"||_854==="SELECT"||_854==="OPTION"||_854==="BUTTON"||_854==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _855=_852.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_855.page.x-pos.x,_855.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_852.stop();
},startDrag:function(_857){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=MochiKit.Style.getStyle(this.element,"z-index");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _858=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_858.left;
this.originalScrollTop=_858.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_857);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_859,_85a){
if(!this.dragging){
this.startDrag(_859);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_85a,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_859);
this.draw(_85a);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _85e=[0,0];
if(_85a.page.x>(q.x-this.options.scrollSensitivity)){
_85e[0]=_85a.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_85a.page.x<(p.x+this.options.scrollSensitivity)){
_85e[0]=_85a.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_85a.page.y>(q.y-this.options.scrollSensitivity)){
_85e[1]=_85a.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_85a.page.y<(p.y+this.options.scrollSensitivity)){
_85e[1]=_85a.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_85e);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_859.stop();
},finishDrag:function(_85f,_860){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_860){
dr.Droppables.fire(_85f,this.element);
}
dr.Draggables.notify("end",this,_85f);
var _862=this.options.revert;
if(_862&&typeof (_862)=="function"){
_862=_862(this.element);
}
var d=this.currentDelta();
if(_862&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_864){
if(_864.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_864,false);
_864.stop();
},endDrag:function(_865){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_865,true);
_865.stop();
},draw:function(_866){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_866.page.x-pos.x-this.offset[0],_866.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _86d=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_86d.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_86d.top=p[1]+"px";
}
if(_86d.visibility=="hidden"){
_86d.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_86e){
if(!_86e[0]&&!_86e[1]){
return;
}
this.scrollSpeed=[_86e[0]*this.options.scrollSpeed,_86e[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _86f=new Date();
var _870=_86f-this.lastScrolled;
this.lastScrolled=_86f;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_870/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_870/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_870/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_870/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_870/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Sortable");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Position");
goog.require("MochiKit.DragAndDrop");
}
MochiKit.Base.module(MochiKit,"Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_878){
while(_878.tagName.toUpperCase()!="BODY"){
if(_878.id&&MochiKit.Sortable.sortables[_878.id]){
return _878;
}
_878=_878.parentNode;
}
},_createElementId:function(_879){
if(_879.id==null||_879.id==""){
var d=MochiKit.DOM;
var id;
var _87c=1;
while(d.getElement(id="sortable"+_87c)!=null){
_87c+=1;
}
d.setNodeAttribute(_879,"id",id);
}
},options:function(_87d){
_87d=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_87d));
if(!_87d){
return;
}
return MochiKit.Sortable.sortables[_87d.id];
},destroy:function(_87e){
var s=MochiKit.Sortable.options(_87e);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_884,_885){
_884=MochiKit.DOM.getElement(_884);
var self=MochiKit.Sortable;
self._createElementId(_884);
_885=MochiKit.Base.update({element:_884,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_884],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_885);
self.destroy(_884);
var _887={revert:true,ghosting:_885.ghosting,scroll:_885.scroll,scrollSensitivity:_885.scrollSensitivity,scrollSpeed:_885.scrollSpeed,constraint:_885.constraint,handle:_885.handle};
if(_885.starteffect){
_887.starteffect=_885.starteffect;
}
if(_885.reverteffect){
_887.reverteffect=_885.reverteffect;
}else{
if(_885.ghosting){
_887.reverteffect=function(_888){
_888.style.top=0;
_888.style.left=0;
};
}
}
if(_885.endeffect){
_887.endeffect=_885.endeffect;
}
if(_885.zindex){
_887.zindex=_885.zindex;
}
var _889={overlap:_885.overlap,containment:_885.containment,hoverclass:_885.hoverclass,onhover:self.onHover,tree:_885.tree,accept:_885.accept};
var _88a={onhover:self.onEmptyHover,overlap:_885.overlap,containment:_885.containment,hoverclass:_885.hoverclass,accept:_885.accept};
MochiKit.DOM.removeEmptyTextNodes(_884);
_885.draggables=[];
_885.droppables=[];
if(_885.dropOnEmpty||_885.tree){
new MochiKit.DragAndDrop.Droppable(_884,_88a);
_885.droppables.push(_884);
}
MochiKit.Base.map(function(e){
var _88c=_885.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_885.handle,e):e;
_885.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_887,{handle:_88c})));
new MochiKit.DragAndDrop.Droppable(e,_889);
if(_885.tree){
e.treeNode=_884;
}
_885.droppables.push(e);
},(self.findElements(_884,_885)||[]));
if(_885.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_88a);
e.treeNode=_884;
_885.droppables.push(e);
},(self.findTreeElements(_884,_885)||[]));
}
self.sortables[_884.id]=_885;
_885.lastValue=self.serialize(_884);
_885.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_884));
_885.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_884));
},onStart:function(_88e,_88f){
var self=MochiKit.Sortable;
var _891=self.options(_88e);
_891.lastValue=self.serialize(_891.element);
},onEnd:function(_892,_893){
var self=MochiKit.Sortable;
self.unmark();
var _895=self.options(_892);
if(_895.lastValue!=self.serialize(_895.element)){
_895.onUpdate(_895.element);
}
},findElements:function(_896,_897){
return MochiKit.Sortable.findChildren(_896,_897.only,_897.tree,_897.tag);
},findTreeElements:function(_898,_899){
return MochiKit.Sortable.findChildren(_898,_899.only,_899.tree?true:false,_899.treeTag);
},findChildren:function(_89a,only,_89c,_89d){
if(!_89a.hasChildNodes()){
return null;
}
_89d=_89d.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _89e=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_89d&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_89e.push(e);
}
if(_89c){
var _8a1=MochiKit.Sortable.findChildren(e,only,_89c,_89d);
if(_8a1&&_8a1.length>0){
_89e=_89e.concat(_8a1);
}
}
},_89a.childNodes);
return _89e;
},onHover:function(_8a2,_8a3,_8a4){
if(MochiKit.DOM.isChildNode(_8a3,_8a2)){
return;
}
var self=MochiKit.Sortable;
if(_8a4>0.33&&_8a4<0.66&&self.options(_8a3).tree){
return;
}else{
if(_8a4>0.5){
self.mark(_8a3,"before");
if(_8a3.previousSibling!=_8a2){
var _8a6=_8a2.parentNode;
_8a2.style.visibility="hidden";
_8a3.parentNode.insertBefore(_8a2,_8a3);
if(_8a3.parentNode!=_8a6){
self.options(_8a6).onChange(_8a2);
}
self.options(_8a3.parentNode).onChange(_8a2);
}
}else{
self.mark(_8a3,"after");
var _8a7=_8a3.nextSibling||null;
if(_8a7!=_8a2){
var _8a6=_8a2.parentNode;
_8a2.style.visibility="hidden";
_8a3.parentNode.insertBefore(_8a2,_8a7);
if(_8a3.parentNode!=_8a6){
self.options(_8a6).onChange(_8a2);
}
self.options(_8a3.parentNode).onChange(_8a2);
}
}
}
},_offsetSize:function(_8a8,type){
if(type=="vertical"||type=="height"){
return _8a8.offsetHeight;
}else{
return _8a8.offsetWidth;
}
},onEmptyHover:function(_8aa,_8ab,_8ac){
var _8ad=_8aa.parentNode;
var self=MochiKit.Sortable;
var _8af=self.options(_8ab);
if(!MochiKit.DOM.isChildNode(_8ab,_8aa)){
var _8b0;
var _8b1=self.findElements(_8ab,{tag:_8af.tag,only:_8af.only});
var _8b2=null;
if(_8b1){
var _8b3=self._offsetSize(_8ab,_8af.overlap)*(1-_8ac);
for(_8b0=0;_8b0<_8b1.length;_8b0+=1){
if(_8b3-self._offsetSize(_8b1[_8b0],_8af.overlap)>=0){
_8b3-=self._offsetSize(_8b1[_8b0],_8af.overlap);
}else{
if(_8b3-(self._offsetSize(_8b1[_8b0],_8af.overlap)/2)>=0){
_8b2=_8b0+1<_8b1.length?_8b1[_8b0+1]:null;
break;
}else{
_8b2=_8b1[_8b0];
break;
}
}
}
}
_8ab.insertBefore(_8aa,_8b2);
self.options(_8ad).onChange(_8aa);
_8af.onChange(_8aa);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_8b5,_8b6){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _8b9=self.options(_8b5.parentNode);
if(_8b9&&!_8b9.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _8ba=MochiKit.Position.cumulativeOffset(_8b5);
self._marker.style.left=_8ba.x+"px";
self._marker.style.top=_8ba.y+"px";
if(_8b6=="after"){
if(_8b9.overlap=="horizontal"){
self._marker.style.left=(_8ba.x+_8b5.clientWidth)+"px";
}else{
self._marker.style.top=(_8ba.y+_8b5.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_8bb,_8bc,_8bd){
var self=MochiKit.Sortable;
var _8bf=self.findElements(_8bb,_8bc)||[];
for(var i=0;i<_8bf.length;++i){
var _8c1=_8bf[i].id.match(_8bc.format);
if(!_8c1){
continue;
}
var _8c2={id:encodeURIComponent(_8c1?_8c1[1]:null),element:_8bb,parent:_8bd,children:[],position:_8bd.children.length,container:self._findChildrenElement(_8bf[i],_8bc.treeTag.toUpperCase())};
if(_8c2.container){
self._tree(_8c2.container,_8bc,_8c2);
}
_8bd.children.push(_8c2);
}
return _8bd;
},_findChildrenElement:function(_8c3,_8c4){
if(_8c3&&_8c3.hasChildNodes){
_8c4=_8c4.toUpperCase();
for(var i=0;i<_8c3.childNodes.length;++i){
if(_8c3.childNodes[i].tagName.toUpperCase()==_8c4){
return _8c3.childNodes[i];
}
}
}
return null;
},tree:function(_8c6,_8c7){
_8c6=MochiKit.DOM.getElement(_8c6);
var _8c8=MochiKit.Sortable.options(_8c6);
_8c7=MochiKit.Base.update({tag:_8c8.tag,treeTag:_8c8.treeTag,only:_8c8.only,name:_8c6.id,format:_8c8.format},_8c7||{});
var root={id:null,parent:null,children:new Array,container:_8c6,position:0};
return MochiKit.Sortable._tree(_8c6,_8c7,root);
},setSequence:function(_8ca,_8cb,_8cc){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_8ca=MochiKit.DOM.getElement(_8ca);
_8cc=b.update(self.options(_8ca),_8cc||{});
var _8cf={};
b.map(function(n){
var m=n.id.match(_8cc.format);
if(m){
_8cf[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_8ca,_8cc));
b.map(function(_8d2){
var n=_8cf[_8d2];
if(n){
n[1].appendChild(n[0]);
delete _8cf[_8d2];
}
},_8cb);
},_constructIndex:function(node){
var _8d5="";
do{
if(node.id){
_8d5="["+node.position+"]"+_8d5;
}
}while((node=node.parent)!=null);
return _8d5;
},sequence:function(_8d6,_8d7){
_8d6=MochiKit.DOM.getElement(_8d6);
var self=MochiKit.Sortable;
var _8d7=MochiKit.Base.update(self.options(_8d6),_8d7||{});
return MochiKit.Base.map(function(item){
return item.id.match(_8d7.format)?item.id.match(_8d7.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_8d6,_8d7)||[]));
},serialize:function(_8da,_8db){
_8da=MochiKit.DOM.getElement(_8da);
var self=MochiKit.Sortable;
_8db=MochiKit.Base.update(self.options(_8da),_8db||{});
var name=encodeURIComponent(_8db.name||_8da.id);
if(_8db.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_8da,_8db).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_8da,_8db)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base_ext");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Base_ext","1.5",["Base"]);
MochiKit.Base._arg_placeholder=function(_8e0){
this.index=_8e0;
};
var _1=new MochiKit.Base._arg_placeholder(0);
var _2=new MochiKit.Base._arg_placeholder(1);
var _3=new MochiKit.Base._arg_placeholder(2);
var _4=new MochiKit.Base._arg_placeholder(3);
var _5=new MochiKit.Base._arg_placeholder(4);
var _6=new MochiKit.Base._arg_placeholder(5);
var _7=new MochiKit.Base._arg_placeholder(6);
var _8=new MochiKit.Base._arg_placeholder(7);
var _9=new MochiKit.Base._arg_placeholder(8);
var _10=new MochiKit.Base._arg_placeholder(9);
MochiKit.Base._rebind_preargs=function(_8e1,args,_8e3){
_8e3=_8e3||{};
for(var i=0;i<_8e1.length;++i){
var pa=_8e1[i];
if(pa instanceof MochiKit.Base._arg_placeholder){
if(pa.index<args.length){
_8e1[i]=args[pa.index];
_8e3[pa.index]=pa.index;
}
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
MochiKit.Base._rebind_preargs(pa.im_preargs,args,_8e3);
}
}
}
return _8e3;
};
MochiKit.Base.bind2=function(func,self,_8e8){
if(typeof (func)=="string"){
func=self[func];
}
var _8e9=func.im_func;
var _8ea=func.im_preargs;
var _8eb=func.im_self;
var m=MochiKit.Base;
if(typeof (func)=="function"&&typeof (func.apply)=="undefined"){
func=m._wrapDumbFunction(func);
}
if(typeof (_8e9)!="function"){
_8e9=func;
}
if(typeof (self)!="undefined"){
_8eb=self;
}
if(typeof (_8ea)=="undefined"){
_8ea=[];
}else{
_8ea=_8ea.slice();
}
var args=Array.prototype.slice.call(arguments,self instanceof m._arg_placeholder?1:2);
var _8ee=MochiKit.Base._rebind_preargs(_8ea,args);
for(var _8ef in _8ee){
args.splice(_8ee[_8ef],1);
}
m.extend(_8ea,args);
var _8f0=function(){
var me=arguments.callee;
var self=me.im_self;
if(!self){
self=this;
}
var args=[];
if(me.im_preargs.length>0){
var imax=0;
for(var i=0;i<me.im_preargs.length;++i){
var pa=me.im_preargs[i];
if(pa instanceof m._arg_placeholder){
imax=Math.max(imax,pa.index+1);
pa=arguments[pa.index];
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
pa=pa.apply(self,arguments);
}
}
args.push(pa);
}
for(var j=imax;j<arguments.length;++j){
args.push(arguments[j]);
}
}else{
args=arguments;
}
if(self instanceof m._arg_placeholder){
self=arguments[self.index];
}
return me.im_func.apply(self,args);
};
_8f0.im_self=_8eb;
_8f0.im_func=_8e9;
_8f0.im_preargs=_8ea;
if(typeof (_8e9.NAME)=="string"){
_8f0.NAME="bind2("+_8e9.NAME+",...)";
}
return _8f0;
};
MochiKit.Base.partial2=function(func,_8f9){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,undefined],arguments,1));
};
MochiKit.Base.method2=function(self,func,_8fd){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,self],arguments,2));
};
MochiKit.Base.bindLate2=function(func,self,_901){
var m=MochiKit.Base;
var args=arguments;
if(typeof (func)==="string"){
args=m.extend([m.forwardCall(func)],arguments,1);
return m.bind2.apply(this,args);
}
return m.bind2.apply(this,args);
};
MochiKit.Base.isBoundFunction=function(fn){
return typeof fn=="function"&&typeof fn.im_func=="function";
};
MochiKit.Base.protect=function(_905){
return function(){
return _905.apply(this,arguments);
};
};
MochiKit.Base.apply=function(fn,_907){
var args=MochiKit.Base.extend([],arguments,1);
return fn.apply(this,args);
};
MochiKit.Base.partition=function(_909,cmp,left,_90c,_90d){
cmp=cmp||MochiKit.Base.operator.cle;
left=left||0;
_90c=_90c||_909.length-1;
_90d=_90d||(left+Math.floor((_90c-left)/2));
function swap(i,j){
var tmp=_909[i];
_909[i]=_909[j];
_909[j]=tmp;
}
var _911=_909[_90d];
swap(_90d,_90c);
var _912=left;
for(var i=left;i<=_90c;++i){
if(cmp(_909[i],_911)){
swap(i,_912);
++_912;
}
}
swap(_912,_90c);
return _912;
};
MochiKit.Base.countValue=function(_914,elem,cmp){
cmp=cmp||MochiKit.Base.operator.ceq;
var n=0;
MochiKit.Iter.forEach(_914,function(e){
if(cmp(e,elem)){
++n;
}
});
return n;
};
MochiKit.Base.negateComparator=function(cmp){
return function(){
return -1*cmp.apply(this,arguments);
};
};
MochiKit.Base_ext.__new__=function(){
};
MochiKit.Base_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Iter_ext","1.5",["Base","Iter"]);
MochiKit.Iter.treePreOrder=function(_91a,_91b){
var _91c=[_91a];
return {repr:function(){
return "treePreOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_91c.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_91c.pop();
MochiKit.Iter.iextend(_91c,_91b(node));
return node;
}};
};
MochiKit.Iter.treeLevelOrder=function(_91e,_91f){
var _920=[_91e];
return {repr:function(){
return "treeLevelOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_920.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_920.shift();
MochiKit.Iter.iextend(_920,_91f(node));
return node;
}};
};
MochiKit.Iter.treePostOrder=function(_922,_923){
var _924=[[_922,false]];
return {repr:function(){
return "treePostOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_924.length==0){
throw MochiKit.Iter.StopIteration;
}
var n=_924.pop();
if(n[1]){
return n[0];
}
n[1]=true;
_924.push(n);
MochiKit.Iter.iextend(_924,MochiKit.Iter.imap(function(node){
return [node,false];
},_923(n[0])));
}
}};
};
MochiKit.Iter.pairView=function(_927,_928){
_928=_928||false;
var it=MochiKit.Iter.iter(_927);
try{
var _92a=it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return MochiKit.Iter.EmptyIter;
}
if(_928){
it=MochiKit.Iter.chain(it,[_92a]);
}
return {repr:function(){
return "pairView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _92b=it.next();
var pair=[_92a,_92b];
_92a=_92b;
return pair;
}};
};
MochiKit.Iter.windowView=function(_92d,_92e,_92f){
_92e=_92e||2;
_92f=_92f||1;
var it=MochiKit.Iter.iter(_92d);
var win=[];
return {repr:function(){
return "windowView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(win.length<_92e){
while(win.length<_92e){
win.push(it.next());
}
}else{
for(var i=0;i<_92f;++i){
win.shift();
win.push(it.next());
}
}
return win.slice();
}};
};
MochiKit.Iter.filterMap=function(_933,_934,_935){
_935=_935||function(item){
return typeof item!=="undefined"&&item!==null;
};
return MochiKit.Iter.ifilter(_935,MochiKit.Iter.imap(_933,_934));
};
MochiKit.Iter.iflattenArray=function(root){
var _938=[root];
return {repr:function(){
return "iflattenArray(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_938.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_938.shift();
if(node instanceof Array){
Array.prototype.splice.apply(_938,[0,0].concat(node));
}else{
return node;
}
}
}};
};
MochiKit.Iter.chainFromIter=function(seq,_93b){
_93b=_93b||MochiKit.Iter.iter;
var it=MochiKit.Iter.iter(seq);
var jt=null;
return {repr:function(){
return "chainFromIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(jt==null){
jt=MochiKit.Iter.iter(_93b(it.next()));
}
while(true){
try{
var val=jt.next();
return val;
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=MochiKit.Iter.iter(_93b(it.next()));
}
}
}};
};
MochiKit.Iter.uniqueView=function(_93f,pred){
pred=pred||MochiKit.Base.operator.ceq;
var it=MochiKit.Iter.iter(_93f);
var _942=true;
var prev;
return {repr:function(){
return "uniqueView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_942){
_942=false;
prev=it.next();
return prev;
}
var val=it.next();
while(pred(prev,val)){
val=it.next();
}
prev=val;
return val;
}};
};
MochiKit.Iter.iproduct=function(_945,_946){
var sa=arguments[0],sb=arguments[1];
var it=MochiKit.Iter.iter(sa);
var jt=null;
var a,b;
return {repr:function(){
return "iproduct(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(jt==null){
a=it.next();
jt=MochiKit.Iter.iter(sb);
}
try{
b=jt.next();
return [a,b];
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=null;
}
}
}};
};
MochiKit.Iter.enumerate=function(_94d,_94e){
return MochiKit.Iter.izip(MochiKit.Iter.count(_94e),_94d);
};
MochiKit.Iter.breakIt=function(){
throw MochiKit.Iter.StopIteration;
};
MochiKit.Iter.EmptyIter={repr:function(){
return "EmptyIter";
},toString:MochiKit.Base.forwardCall("repr"),next:MochiKit.Iter.breakIt};
MochiKit.Iter.generateN=function(_94f,n){
return MochiKit.Iter.imap(function(){
return _94f();
},MochiKit.Iter.range(n));
};
MochiKit.Iter.izipLongest=function(_951,_952){
_952=_952||null;
_951=MochiKit.Base.map(MochiKit.Iter.iter,_951);
var _953=_951.length;
return {repr:function(){
return "izipLongest(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _954=new Array(_951.length);
for(var i=0;i<_951.length;++i){
try{
_954[i]=_951[i].next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
_951[i]=MochiKit.Iter.repeat(_952);
_954[i]=_952;
--_953;
}
}
if(_953==0){
throw MochiKit.Iter.StopIteration;
}
return _954;
}};
};
MochiKit.Iter.any=function(){
return MochiKit.Iter.some.apply(this,arguments);
};
MochiKit.Iter.all=function(){
return MochiKit.Iter.every.apply(this,arguments);
};
MochiKit.Iter.starmap=function(){
return MochiKit.Iter.applymap.apply(this,arguments);
};
MochiKit.Iter.advance=function(iter,n){
while(n-->0){
iter.next();
}
return iter;
};
MochiKit.Iter.isSorted=function(_958,cmp){
return MochiKit.Iter.every(MochiKit.Iter.windowView(_958),cmp||MochiKit.Base.operator.cle);
};
MochiKit.Iter.interleave=function(_95a,_95b){
return MochiKit.Iter.chainFromIter(MochiKit.Iter.izip.apply(this,arguments));
};
MochiKit.Iter.remapView=function(_95c,lst){
return MochiKit.Iter.imap(MochiKit.Base.partial(MochiKit.Base.operator.getitem,lst),_95c);
};
MochiKit.Iter.compressIter=function(data,_95f){
return MochiKit.Iter.imap(function(d_s){
return d_s[0];
},MochiKit.Iter.ifilter(function(d_s){
return d_s[1]?true:false;
},MochiKit.Iter.izip(data,_95f)));
};
MochiKit.Iter.combinations=function(_962,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_962);
var n=pool.length;
if(r>n){
return MochiKit.Iter.EmptyIter;
}
var _968=mi.list(mi.range(r));
var _969=true;
return {repr:function(){
return "combinations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_969){
_969=false;
return mi.list(mi.remapView(_968,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_968[i]!=(i+n-r)){
done=false;
break;
}
}
if(done){
throw MochiKit.Iter.StopIteration;
}
_968[i]+=1;
for(var j=i+1;j<r;++j){
_968[j]=_968[j-1]+1;
}
return mi.list(mi.remapView(_968,pool));
}
}};
};
MochiKit.Iter.combinationsWithReplacement=function(_96d,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_96d);
var n=pool.length;
if(n==0||r==0){
return mi.EmptyIter;
}
var _973=mi.list(mi.repeat(0,r));
var _974=true;
return {repr:function(){
return "combinationsWithReplacement(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_974){
_974=false;
return mi.list(mi.remapView(_973,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_973[i]!=n-1){
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
_973=_973.slice(0,i).concat(mi.list(mi.repeat(_973[i]+1,r-i)));
return mi.list(mi.remapView(_973,pool));
}
}};
};
MochiKit.Iter.repeatSeq=function(_977,n){
if(n==0){
return MochiKit.Iter.EmptyIter;
}
var it=MochiKit.Iter.iter(_977);
return {next:function(){
try{
return it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration||--n<=0){
throw e;
}
it=MochiKit.Iter.iter(_977);
return it.next();
}
}};
};
MochiKit.Iter.permutations=function(_97a,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_97a);
var n=pool.length;
r=r||n;
if(r>n){
return mi.EmptyIter;
}
var _980=mi.list(mi.range(n));
var _981=mi.list(mi.range(n,n-r,-1));
var _982=true;
return {repr:function(){
return "permutations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_982){
_982=false;
return mi.list(mi.remapView(mi.islice(_980,0,r),pool));
}
if(n==0){
throw mi.StopIteration;
}
var done=true;
for(var i=r-1;i>=0;--i){
_981[i]-=1;
if(_981[i]==0){
_980=_980.slice(0,i).concat(_980.slice(i+1),_980[i]);
_981[i]=n-i;
}else{
var j=_981[i];
var jdx=_980.length-j;
var tmp=_980[i];
_980[i]=_980[jdx];
_980[jdx]=tmp;
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
return mi.list(mi.remapView(mi.islice(_980,0,r),pool));
}};
};
MochiKit.Iter._Range=function(_988,stop,step){
this.start=_988;
this.stop=stop;
this.step=step;
};
MochiKit.Iter._Range.prototype.__iterator__=function(){
return new MochiKit.Iter.range(this.start,this.stop,this.step);
};
MochiKit.Iter.xrange=function(){
var _98b=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_98b=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_98b=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("xrange() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("xrange() step must not be 0");
}
return new MochiKit.Iter._Range(_98b,stop,step);
};
MochiKit.Iter.isJavaLikeIterator=function(_98e){
return _98e&&typeof _98e.hasNext=="function"&&typeof _98e.next=="function";
};
MochiKit.Iter.javaLikeIterator=function(_98f){
return {repr:function(){
return "javaLikeIterator";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(!_98f.hasNext()){
throw MochiKit.Iter.StopIteration;
}
return _98f.next();
}};
};
MochiKit.Iter.registerJavaLikeIteratorSupport=function(){
MochiKit,Iter.registerIteratorFactory("javaStyleIterator",MochiKit.Iter.isJavaLikeIterator,MochiKit.Iter.javaLikeIterator);
};
MochiKit.Iter_ext.__new__=function(){
};
MochiKit.Iter_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Text");
}
MochiKit.Base.module(MochiKit,"Text_ext","1.5",["Base","Text"]);
MochiKit.Text.levenshteinDistance=function(s,t,_992){
_992=_992||false;
var n=s.length,m=t.length;
if(n==0){
return m;
}
if(m==0){
return n;
}
var d=new Array(n+1);
for(var r=0;r<n+1;++r){
d[r]=new Array(m+1);
}
for(var i=0;i<=n;++i){
d[i][0]=i;
}
for(var j=0;j<=m;++j){
d[0][j]=j;
}
for(var i=1;i<=n;++i){
for(var j=1;j<=m;++j){
var cost=(t[j-1]==s[i-1]?0:1);
var cell=Math.min(Math.min(d[i-1][j]+1,d[i][j-1]+1),d[i-1][j-1]+cost);
if(_992&&(i>2&&j>2)){
var _99b=d[i-2][j-2]+1;
if(s[i-2]!=t[j-1]){
++_99b;
}
if(s[i-1]!=t[j-2]){
++_99b;
}
if(cell>_99b){
cell=_99b;
}
}
d[i][j]=cell;
}
}
return d[n][m];
};
MochiKit.Text.humanStringCompare=function(a,b){
if(a==b){
return 0;
}
var _99e=/^(\+|\-)?\d+/;
var _99f=/^\D+/;
while(a.length>0&&b.length>0){
var a0=null,ainc=-1;
var b0=null,binc=-1;
var ma=a.match(_99f);
var mb=b.match(_99f);
if(ma!=null&&mb!=null){
a0=ma[0].toLowerCase();
ainc=a0.length;
b0=mb[0].toLowerCase();
binc=b0.length;
}else{
if(ma==null){
ma=a.match(_99e);
a0=parseInt(ma[0],10)+2<<15;
ainc=ma[0].length;
}else{
a0=a.charAt(0).toLowerCase().charCodeAt(0);
ainc=1;
}
if(mb==null){
mb=b.match(_99e);
b0=parseInt(mb[0],10)+2<<15;
binc=mb[0].length;
}else{
b0=b.charAt(0).toLowerCase().charCodeAt(0);
binc=1;
}
}
if(a0<b0){
return -1;
}
if(a0>b0){
return +1;
}
a=a.substring(ainc);
b=b.substring(binc);
}
if(a.length>0){
return +1;
}
if(b.length>0){
return -1;
}
return 0;
};
MochiKit.Text_ext.__new__=function(){
};
MochiKit.Text_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.HeapQ");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"HeapQ","1.5",["Base","Iter"]);
MochiKit.HeapQ.heapify=function(x,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var n=x.length;
for(var i=Math.floor(n/2)-1;i>=0;--i){
MochiKit.HeapQ._siftup(x,i,cmp);
}
return x;
};
MochiKit.HeapQ._siftdown=function(heap,_9ab,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9ae=heap[pos];
while(pos>_9ab){
var _9af=(pos-1)>>1;
var _9b0=heap[_9af];
if(cmp(_9ae,_9b0)){
heap[pos]=_9b0;
pos=_9af;
continue;
}
break;
}
heap[pos]=_9ae;
};
MochiKit.HeapQ._siftup=function(heap,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9b4=heap.length;
var _9b5=pos;
var _9b6=heap[pos];
var _9b7=2*pos+1;
while(_9b7<_9b4){
var _9b8=_9b7+1;
if(_9b8<_9b4&&!(cmp(heap[_9b7],heap[_9b8]))){
_9b7=_9b8;
}
heap[pos]=heap[_9b7];
pos=_9b7;
_9b7=2*pos+1;
}
heap[pos]=_9b6;
MochiKit.HeapQ._siftdown(heap,_9b5,pos,cmp);
};
MochiKit.HeapQ.heapPush=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
heap.push(item);
MochiKit.HeapQ._siftdown(heap,0,heap.length-1,cmp);
};
MochiKit.HeapQ.heapPop=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9be=heap.pop();
var _9bf;
if(heap.length>0){
_9bf=heap[0];
heap[0]=_9be;
MochiKit.HeapQ._siftup(heap,0,cmp);
}else{
_9bf=_9be;
}
return _9bf;
};
MochiKit.HeapQ.heapReplace=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9c3=heap[0];
heap[0]=item;
MochiKit.HeapQ._siftup(heap,0,cmp);
return _9c3;
};
MochiKit.HeapQ.heapPushPop=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
if(heap.length>0&&cmp(heap[0],item)){
var tmp=heap[0];
heap[0]=item;
item=tmp;
MochiKit.HeapQ._siftup(heap,0,cmp);
}
return item;
};
MochiKit.HeapQ.imergeSorted=function(_9c8,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var _cmp=function(a,b){
var c=cmp(a[0],b[0]);
return c;
};
var h=[];
mi.forEach(mi.izip(mi.count(),mi.imap(mi.iter,_9c8)),function(pair){
var _9d2=pair[0],it=pair[1];
try{
var next=it.next;
h.push([next(),_9d2,next]);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
}
});
m.HeapQ.heapify(h,_cmp);
return {repr:function(){
return "imergeSorted(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(h.length==0){
throw mi.StopIteration;
}
var s=h[0];
var v=s[0];
var next=s[2];
try{
s[0]=next();
m.HeapQ.heapReplace(h,s,_cmp);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
m.HeapQ.heapPop(h,_cmp);
}
return v;
}
}};
};
MochiKit.HeapQ.heapIter=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
return {next:function(){
if(heap.length==0){
throw MochiKit.Iter.StopIteration;
}
return MochiKit.HeapQ.heapPop(heap,cmp);
}};
};
MochiKit.HeapQ.nLargest=function(n,_9db,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var it=mi.iter(_9db);
var _9e0=mi.list(mi.islice(it,n));
if(_9e0.length==0){
return _9e0;
}
m.HeapQ.heapify(_9e0,cmp);
mi.forEach(it,function(elem){
m.HeapQ.heapPushPop(_9e0,elem,cmp);
});
_9e0.sort(function(a,b){
return -1*m.Base.compare(a,b);
});
return _9e0;
};
MochiKit.HeapQ.nSmallest=function(n,_9e5,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var h=mi.list(_9e5);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),mi.range(Math.min(n,h.length)));
};
MochiKit.HeapQ.isHeap=function(lst,cmp){
cmp=cmp||MochiKit.Base.operator.cle;
for(var pos=1;pos<lst.length;++pos){
var _9ed=(pos-1)>>1;
if(!cmp(lst[_9ed],lst[pos])){
return false;
}
}
return true;
};
MochiKit.HeapQ.heapSort=function(_9ee,cmp){
var m=MochiKit;
var h=m.Iter.list(_9ee);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),m.Iter.range(h.length));
};
MochiKit.HeapQ.__new__=function(){
};
MochiKit.HeapQ.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.HeapQ);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit._MersenneTwister19937");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"_MersenneTwister19937","1.5",["Base"]);
MochiKit._MersenneTwister19937=function(){
var N=624;
var M=397;
var _9f4=2567483615;
var _9f5=2147483648;
var _9f6=2147483647;
var mt=new Array(N);
var mti=N+1;
function unsigned32(n1){
return n1<0?(n1^_9f5)+_9f5:n1;
}
function subtraction32(n1,n2){
return n1<n2?unsigned32((4294967296-(n2-n1))&4294967295):n1-n2;
}
function addition32(n1,n2){
return unsigned32((n1+n2)&4294967295);
}
function multiplication32(n1,n2){
var sum=0;
for(var i=0;i<32;++i){
if((n1>>>i)&1){
sum=addition32(sum,unsigned32(n2<<i));
}
}
return sum;
}
this.init_genrand=function(s){
mt[0]=unsigned32(s&4294967295);
for(mti=1;mti<N;mti++){
mt[mti]=addition32(multiplication32(1812433253,unsigned32(mt[mti-1]^(mt[mti-1]>>>30))),mti);
mt[mti]=unsigned32(mt[mti]&4294967295);
}
};
this.init_by_array=function(_a03,_a04){
var i,j,k;
this.init_genrand(19650218);
i=1;
j=0;
k=(N>_a04?N:_a04);
for(;k;k--){
mt[i]=addition32(addition32(unsigned32(mt[i]^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1664525)),_a03[j]),j);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=_a04){
j=0;
}
}
for(k=N-1;k;k--){
mt[i]=subtraction32(unsigned32((mt[i])^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1566083941)),i);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
}
mt[0]=2147483648;
};
this.genrand_int32=function(){
var y;
var _a09=new Array(0,_9f4);
if(mti>=N){
var kk;
if(mti==N+1){
this.init_genrand(5489);
}
for(kk=0;kk<N-M;kk++){
y=unsigned32((mt[kk]&_9f5)|(mt[kk+1]&_9f6));
mt[kk]=unsigned32(mt[kk+M]^(y>>>1)^_a09[y&1]);
}
for(;kk<N-1;kk++){
y=unsigned32((mt[kk]&_9f5)|(mt[kk+1]&_9f6));
mt[kk]=unsigned32(mt[kk+(M-N)]^(y>>>1)^_a09[y&1]);
}
y=unsigned32((mt[N-1]&_9f5)|(mt[0]&_9f6));
mt[N-1]=unsigned32(mt[M-1]^(y>>>1)^_a09[y&1]);
mti=0;
}
y=mt[mti++];
y=unsigned32(y^(y>>>11));
y=unsigned32(y^((y<<7)&2636928640));
y=unsigned32(y^((y<<15)&4022730752));
y=unsigned32(y^(y>>>18));
return y;
};
this.genrand_int31=function(){
return (this.genrand_int32()>>>1);
};
this.genrand_real1=function(){
return this.genrand_int32()*(1/4294967295);
};
this.genrand_real2=function(){
return this.genrand_int32()*(1/4294967296);
};
this.genrand_real3=function(){
return ((this.genrand_int32())+0.5)*(1/4294967296);
};
this.genrand_res53=function(){
var a=this.genrand_int32()>>>5,b=this.genrand_int32()>>>6;
return (a*67108864+b)*(1/9007199254740992);
};
this._getState=function(){
return {mt:mt.slice(),mti:mti};
};
this._setState=function(_a0d){
mt=_a0d.mt;
mti=_a0d.mti;
};
};
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Random");
goog.require("MochiKit.Base");
goog.require("MochiKit._MersenneTwister19937");
}
MochiKit.Base.module(MochiKit,"Random","1.5",["Base","_MersenneTwister19937"]);
MochiKit.Random.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
MochiKit.Random._generator.seed(x);
};
MochiKit.Random.getState=function(){
return MochiKit.Random._generator.getState();
};
MochiKit.Random.setState=function(_a0f){
MochiKit.Random._generator.setState(_a0f);
};
MochiKit.Random.random=function(){
return MochiKit.Random._generator.random();
};
MochiKit.Random.randRange=function(_a10,_a11,step){
var self=MochiKit.Random;
if(arguments.length==1){
_a11=_a10;
_a10=0;
}
step=step||1;
var _a14=_a11-_a10;
if(step==1&&_a14>0){
return Math.floor(_a10+Math.floor(self.random()*_a14));
}
if(step>0){
var n=Math.floor((_a14+step-1)/step);
}else{
if(step<0){
var n=Math.floor((_a14+step+1)/step);
}
}
return _a10+step*Math.floor(self.random()*n);
};
MochiKit.Random.uniform=function(a,b){
return a+(b-a)*MochiKit.Random.random();
};
MochiKit.Random.shuffle=function(_a18){
for(var i=_a18.length-1;i>0;--i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
var tmp=_a18[i];
_a18[i]=_a18[j];
_a18[j]=tmp;
}
return _a18;
};
MochiKit.Random.deal=function(_a1c,func){
func=func||MochiKit.Base.operator.identity;
var deck=new Array(_a1c);
for(var i=0;i<_a1c;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
deck[i]=deck[j];
deck[j]=func(i);
}
return deck;
};
MochiKit.Random.choice=function(seq){
return seq[Math.floor(MochiKit.Random.random()*seq.length)];
};
MochiKit.Random.shuffled=function(_a22){
var n=_a22.length;
var a=new Array(n);
a[0]=_a22[0];
for(var i=1;i<n-1;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
a[i]=a[j];
a[j]=_a22[i];
}
return a;
};
MochiKit.Random.sample=function(_a27,k){
var n=_a27.length;
var _a2a=new Array(k);
var _a2b={};
for(var i=0;i<k;++i){
var j=MochiKit.Random.randRange(n);
while(j in _a2b){
j=MochiKit.Random.randRange(n);
}
_a2b[j]=true;
_a2a[i]=_a27[j];
}
return _a2a;
};
MochiKit.Random._IRndGenerator=function(){
};
MochiKit.Random._IRndGenerator.prototype.seed=function(x){
};
MochiKit.Random._IRndGenerator.prototype.getState=function(){
};
MochiKit.Random._IRndGenerator.prototype.setState=function(_a2f){
};
MochiKit.Random._IRndGenerator.prototype.random=function(){
};
MochiKit.Random.MersenneTwister=function(x){
this._mt=new MochiKit._MersenneTwister19937();
this.seed(x);
};
MochiKit.Random.MersenneTwister.prototype.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
this._mt.init_genrand(x);
};
MochiKit.Random.MersenneTwister.prototype.getState=function(){
return this._mt._getState();
};
MochiKit.Random.MersenneTwister.prototype.setState=function(_a32){
this._mt._setState(_a32);
};
MochiKit.Random.MersenneTwister.prototype.random=function(){
return this._mt.genrand_real2();
};
MochiKit.Random.SystemRandom=function(){
};
MochiKit.Random.SystemRandom.prototype.seed=function(x){
};
MochiKit.Random.SystemRandom.prototype.getState=function(){
};
MochiKit.Random.SystemRandom.prototype.setState=function(_a34){
};
MochiKit.Random.SystemRandom.prototype.random=function(){
return Math.random();
};
MochiKit.Random._generator=null;
MochiKit.Random._setGenerator=function(_a35){
MochiKit.Random._generator=_a35;
};
MochiKit.Random.__new__=function(){
MochiKit.Random._setGenerator(new MochiKit.Random.MersenneTwister());
};
MochiKit.Random.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Random);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Bisect");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Bisect","1.5",["Base"]);
MochiKit.Bisect.bisectRight=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(x,a[mid])<0){
hi=mid;
}else{
lo=mid+1;
}
}
return lo;
};
MochiKit.Bisect.insortRight=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectRight(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisectLeft=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(a[mid],x)<0){
lo=mid+1;
}else{
hi=mid;
}
}
return lo;
};
MochiKit.Bisect.insortLeft=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectLeft(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisect=MochiKit.Bisect.bisectRight;
MochiKit.Bisect.insort=MochiKit.Bisect.insortRight;
MochiKit.Bisect.__new__=function(){
};
MochiKit.Bisect.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Bisect);


