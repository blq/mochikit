/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base");
}
if(typeof MochiKit=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
MochiKit.NAME="MochiKit";
MochiKit.VERSION="1.5";
MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.Base=MochiKit.Base||{};
MochiKit.Base.module=function(_1,_2,_3,_4){
var _5=_1[_2]=_1[_2]||{};
var _6=(_1.NAME?_1.NAME+".":"");
_5.NAME=_6+_2;
_5.VERSION=_3;
_5.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_5.toString=function(){
return this.__repr__();
};
for(var i=0;_4!=null&&i<_4.length;i++){
if(!(_4[i] in _1)){
throw _5.NAME+" depends on "+_6+_4[i]+"!";
}
}
return _5;
};
MochiKit.Base.module(MochiKit,"Base","1.5",[]);
MochiKit.Base.update=function(_8,_9,_a){
if(_8===null||_8===undefined){
_8={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_8[k]=o[k];
}
}
}
return _8;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_e){
var _f=_e.split("-");
var cc=_f[0];
for(var i=1;i<_f.length;i++){
cc+=_f[i].charAt(0).toUpperCase()+_f[i].substring(1);
}
return cc;
},counter:function(n,_13){
if(arguments.length===0){
n=1;
}
if(arguments.length<2){
_13=1;
}
return function(){
var c=n;
n+=_13;
return c;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst,_1d){
var res=[];
var m=MochiKit.Base;
var _20=m.extend(null,arguments);
while(_20.length){
var o=_20.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_20.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_23,obj,_25){
if(!_25){
_25=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_23){
_23=[];
}
for(var i=_25;i<l;i++){
_23.push(obj[i]);
}
}
return _23;
},updatetree:function(_28,obj){
if(_28===null||_28===undefined){
_28={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_28[k])=="object"&&typeof (v)=="object"&&!MochiKit.Base.isDateLike(v)&&!(v instanceof Array)){
arguments.callee(_28[k],v);
}else{
_28[k]=v;
}
}
}
}
return _28;
},setdefault:function(_2e,obj,_30){
if(_2e===null||_2e===undefined){
_2e={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _2e)){
_2e[k]=o[k];
}
}
}
return _2e;
},keys:function(obj){
var _35=[];
for(var _36 in obj){
_35.push(_36);
}
return _35;
},values:function(obj){
var _38=[];
for(var _39 in obj){
_38.push(obj[_39]);
}
return _38;
},items:function(obj){
var _3b=[];
for(var _3c in obj){
var v;
try{
v=obj[_3c];
}
catch(e){
continue;
}
_3b.push([_3c,v]);
}
return _3b;
},_newNamedError:function(_3e,_3f,_40){
_40.prototype=new MochiKit.Base.NamedError(_3e.NAME+"."+_3f);
_40.prototype.constructor=_40;
_3e[_3f]=_40;
},operator:{NAME:"operator",truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},floordiv:function(a,b){
return Math.floor(a/b);
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},pow:function(a,b){
return Math.pow(a,b);
},divmod:function(a,b){
return [a/b,a%b];
},max:function(a,b){
return Math.max(a,b);
},min:function(a,b){
return Math.min(a,b);
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},getitem:function(a,b){
return a[b];
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
},concat:function(a,b){
return MochiKit.Base.concat(a,b);
},iconcat:function(a,b){
return a.concat(b);
},setitem:function(a,b,c){
return a[b]=c;
},delitem:function(a,b){
delete a[b];
},call:function(fn,_94){
return fn.apply(this,MochiKit.Base.extend([],arguments,1));
}},forwardCall:function(_95){
return function(){
return this[_95].apply(this,arguments);
};
},itemgetter:function(_96){
return function(arg){
return arg[_96];
};
},bool:function(_98){
if(typeof (_98)==="boolean"||_98 instanceof Boolean){
return _98.valueOf();
}else{
if(typeof (_98)==="string"||_98 instanceof String){
return _98.length>0&&_98!="false"&&_98!="null"&&_98!="undefined"&&_98!="0";
}else{
if(typeof (_98)==="number"||_98 instanceof Number){
return !isNaN(_98)&&_98!=0;
}else{
if(_98!=null&&typeof (_98.length)==="number"){
return _98.length!==0;
}else{
return _98!=null;
}
}
}
}
},typeMatcher:function(){
var _99={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_99[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _99)){
return false;
}
}
return true;
};
},isNull:function(obj,_9e){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(obj,_a1){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj,_a5){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj,_a7){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(arr,_ab){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(_af,_b0){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn,obj,_b5){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _b6=[];
for(var i=1;i<arguments.length;i++){
_b6.push(fn(arguments[i]));
}
return _b6;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _bc=m.isArrayLike;
if(arguments.length<=2){
if(!_bc(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _bd=[];
for(var i=0;i<lst.length;i++){
_bd.push(fn(lst[i]));
}
return _bd;
}else{
if(fn===null){
fn=Array;
}
var _bf=null;
for(var i=1;i<arguments.length;i++){
if(!_bc(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_bf===null||_bf>l){
_bf=l;
}
}
_bd=[];
for(var i=0;i<_bf;i++){
var _c1=[];
for(var j=1;j<arguments.length;j++){
_c1.push(arguments[j][i]);
}
_bd.push(fn.apply(this,_c1));
}
return _bd;
}
},xfilter:function(fn,obj,_c5){
var _c6=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_c6.push(o);
}
}
return _c6;
},filter:function(fn,lst,_cb){
var _cc=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_cb);
}else{
if(typeof (_cb)=="undefined"||_cb===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_cc.push(o);
}
}
}else{
for(var i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_cb,o)){
_cc.push(o);
}
}
}
}
return _cc;
},_wrapDumbFunction:function(_d0){
return function(){
switch(arguments.length){
case 0:
return _d0();
case 1:
return _d0(arguments[0]);
case 2:
return _d0(arguments[0],arguments[1]);
case 3:
return _d0(arguments[0],arguments[1],arguments[2]);
}
var _d1=[];
for(var i=0;i<arguments.length;i++){
_d1.push("arguments["+i+"]");
}
return eval("(func("+_d1.join(",")+"))");
};
},methodcaller:function(_d3,_d4){
var _d5=MochiKit.Base.extend(null,arguments,1);
if(typeof (_d3)=="function"){
return function(obj){
return _d3.apply(obj,_d5);
};
}else{
return function(obj){
return obj[_d3].apply(obj,_d5);
};
}
},method:function(_d8,_d9){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_d9,_d8],arguments,2));
},compose:function(f1,f2,_dd){
var _de=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_de.push(fn);
}
return function(){
var _e2=arguments;
for(var i=_de.length-1;i>=0;i--){
_e2=[_de[i].apply(this,_e2)];
}
return _e2[0];
};
},bind:function(_e4,_e5,_e6){
if(typeof (_e4)=="string"){
_e4=_e5[_e4];
}
var _e7=_e4.im_func;
var _e8=_e4.im_preargs;
var _e9=_e4.im_self;
var m=MochiKit.Base;
if(typeof (_e4)=="function"&&typeof (_e4.apply)=="undefined"){
_e4=m._wrapDumbFunction(_e4);
}
if(typeof (_e7)!="function"){
_e7=_e4;
}
if(typeof (_e5)!="undefined"){
_e9=_e5;
}
if(typeof (_e8)=="undefined"){
_e8=[];
}else{
_e8=_e8.slice();
}
m.extend(_e8,arguments,2);
var _eb=function(){
var _ec=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_ec=m.concat(me.im_preargs,_ec);
}
var _ee=me.im_self;
if(!_ee){
_ee=this;
}
return me.im_func.apply(_ee,_ec);
};
_eb.im_self=_e9;
_eb.im_func=_e7;
_eb.im_preargs=_e8;
if(typeof (_e7.NAME)=="string"){
_eb.NAME="bind("+_e7.NAME+",...)";
}
return _eb;
},bindLate:function(_ef,_f0){
var m=MochiKit.Base;
var _f2=arguments;
if(typeof (_ef)==="string"){
_f2=m.extend([m.forwardCall(_ef)],arguments,1);
return m.bind.apply(this,_f2);
}
return m.bind.apply(this,_f2);
},bindMethods:function(_f3){
var _f4=MochiKit.Base.bind;
for(var k in _f3){
var _f6=_f3[k];
if(typeof (_f6)=="function"){
_f3[k]=_f4(_f6,_f3);
}
}
return _f3;
},registerComparator:function(_f7,_f8,_f9,_fa){
MochiKit.Base.comparatorRegistry.register(_f7,_f8,_f9,_fa);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _fd=(typeof (a)=="undefined"||a===null);
var _fe=(typeof (b)=="undefined"||b===null);
if(_fd&&_fe){
return 0;
}else{
if(_fd){
return -1;
}else{
if(_fe){
return 1;
}
}
}
var m=MochiKit.Base;
var prim=m._primitives;
if(!(typeof (a) in prim&&typeof (b) in prim)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var repr=m.repr;
throw new TypeError(repr(a)+" and "+repr(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _106=MochiKit.Base.compare;
var _107=a.length;
var rval=0;
if(_107>b.length){
rval=1;
_107=b.length;
}else{
if(_107<b.length){
rval=-1;
}
}
for(var i=0;i<_107;i++){
var cmp=_106(a[i],b[i]);
if(cmp){
return cmp;
}
}
return rval;
},registerRepr:function(name,_10c,wrap,_10e){
MochiKit.Base.reprRegistry.register(name,_10c,wrap,_10e);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
try{
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
catch(ignore){
}
}
try{
var _110=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_110=_110.replace(/^\s+/,"").replace(/\s+/g," ");
_110=_110.replace(/,(\S)/,", $1");
var idx=_110.indexOf("{");
if(idx!=-1){
_110=_110.substr(0,idx)+"{...}";
}
}
return _110;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(name,_117,wrap,_119){
MochiKit.Base.jsonRegistry.register(name,_117,wrap,_119);
},evalJSON:function(_11a){
return eval("("+MochiKit.Base._filterJSON(_11a)+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
return (m)?m[1]:s;
},serializeJSON:function(o){
var _11e=typeof (o);
if(_11e=="number"||_11e=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_11e=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _124;
if(typeof (o.toJSON)=="function"){
_124=o.toJSON();
if(o!==_124){
return me(_124);
}
}
if(typeof (o.__json__)=="function"){
_124=o.__json__();
if(o!==_124){
return me(_124);
}
}
if(typeof (o.json)=="function"){
_124=o.json();
if(o!==_124){
return me(_124);
}
}
if(_11e!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_124=m.jsonRegistry.match(o);
if(o!==_124){
return me(_124);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_11e=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_11e=="function"){
return null;
}
res=[];
for(var k in o){
if(o.hasOwnProperty(k)){
var _128;
if(typeof (k)=="number"){
_128="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_128=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_128+":"+val);
}
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(self,arr){
if(self.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(self,arr)===0);
},concat:function(lst,_12e){
var rval=[];
var _130=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_130(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _134=m.compare;
if(arguments.length==1){
return function(a,b){
return _134(a[key],b[key]);
};
}
var _137=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_137.length);i++){
var key=_137[i];
rval=_134(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _13e=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _13e(b,a);
};
},partial:function(func,_142){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_144,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _147=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_147(o,cur)==_144){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_14b,_14c,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_14c)=="undefined"||_14c===null){
_14c=0;
}
for(var i=_14c;i<end;i++){
if(lst[i]===_14b){
return i;
}
}
return -1;
},mean:function(val,_150){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _154=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_154+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_154<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_154;
},median:function(val,_158){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(MochiKit.Base.compare);
if(data.length%2==0){
var _15a=data.length/2;
return (data[_15a]+data[_15a-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_15c,_15d,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_15d)=="undefined"||_15d===null){
_15d=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_15d;i<end;i++){
if(cmp(lst[i],_15c)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_162){
var _163=[node];
var _164=MochiKit.Base.extend;
while(_163.length){
var res=_162(_163.shift());
if(res){
_164(_163,res);
}
}
},nameFunctions:function(_166){
var base=_166.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _166){
var o=_166[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_16a,_16b){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_16a)=="string"||(typeof (_16a.nodeType)!="undefined"&&_16a.nodeType>0))){
var kv=MochiKit.DOM.formContents(_16a);
_16a=kv[0];
_16b=kv[1];
}else{
if(arguments.length==1){
if(typeof (_16a.length)=="number"&&_16a.length==2){
return arguments.callee(_16a[0],_16a[1]);
}
var o=_16a;
_16a=[];
_16b=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_16a.push(k);
_16b.push(v[i]);
}
}else{
_16a.push(k);
_16b.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_16a.length,_16b.length);
var _173=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_16b[i];
if(typeof (v)!="undefined"&&v!==null){
if(MochiKit.Base.isDateLike(v)){
v=MochiKit.DateTime.toISOTimestamp(v,true);
}
rval.push(_173(_16a[i])+"="+_173(v));
}
}
return rval.join("&");
},parseQueryString:function(_174,_175){
var qstr=(_174.charAt(0)=="?")?_174.substring(1):_174;
var _177=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _179;
if(typeof (decodeURIComponent)!="undefined"){
_179=decodeURIComponent;
}else{
_179=unescape;
}
if(_175){
for(var i=0;i<_177.length;i++){
var pair=_177[i].split("=");
var name=_179(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_179(pair.join("=")));
}
}else{
for(var i=0;i<_177.length;i++){
pair=_177[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_179(name)]=_179(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_17f,wrap,_181){
if(_181){
this.pairs.unshift([name,_17f,wrap]);
}else{
this.pairs.push([name,_17f,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.moduleExport=function(_187,_188){
var SKIP={toString:true,NAME:true,VERSION:true};
var mods=MochiKit.Base.extend([],arguments,1);
while((_188=mods.shift())!=null){
for(var k in _188){
var v=_188[k];
if(v!=null){
var _18d=(typeof (v.__export__)=="boolean");
var _18e=(k[0]!=="_"&&!SKIP[k]);
if(_18d?v.__export__:_18e){
if(typeof (v)=="object"&&v.NAME&&v.VERSION){
mods.push(v);
}else{
_187[k]=_188[k];
}
}
}
}
}
return _187;
};
MochiKit.Base._exportSymbols=function(_18f,_190){
if(MochiKit.__export__!==false&&_190.__export__!==false){
MochiKit.Base.moduleExport(_18f,_190);
}
};
MochiKit.Base._deprecated=function(_191,name,_193,_194,_195){
if(typeof (_191)==="string"){
if(_191.indexOf("MochiKit.")===0){
_191=_191.substring(9);
}
_191=MochiKit[_191];
}
var _196=_193.split(".")[1];
var _197=_193.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_191.NAME+"."+name+" is deprecated since version "+_194+". Use "+_193+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_196]){
throw new Error(msg);
}
return MochiKit[_196][_197].apply(this,arguments);
};
func.__export__=(_195===true);
_191[name]=func;
};
MochiKit.Base._getBaseFn=function(fn){
if(typeof fn.im_func=="function"){
return MochiKit.Base._getBaseFn(fn.im_func);
}
return fn;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=function(){
};
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3");
m._deprecated(m,"find","MochiKit.Base.findValue","1.3");
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_19d){
return encodeURIComponent(_19d).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_19e){
return escape(_19e).replace(/\+/g,"%2B").replace(/\"/g,"%22").replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.NamedError.prototype.constructor=m.NamedError;
m.NamedError.prototype.repr=function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
};
m.NamedError.prototype.toString=m.forwardCall("repr");
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.isValue=m.typeMatcher("boolean","number","string");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
m.nameFunctions(this.operator);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
window.compare=MochiKit.Base.compare;
window.compose=MochiKit.Base.compose;
window.serializeJSON=MochiKit.Base.serializeJSON;
window.mean=MochiKit.Base.mean;
window.median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Iter","1.5",["Base"]);
MochiKit.Iter.registerIteratorFactory=function(name,_1a1,_1a2,_1a3){
MochiKit.Iter.iteratorRegistry.register(name,_1a1,_1a2,_1a3);
};
MochiKit.Iter.isIterable=function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
};
MochiKit.Iter.iter=function(_1a5,_1a6){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_1a6;
},_1a5);
}
if(typeof (_1a5.next)=="function"){
return _1a5;
}else{
if(typeof (_1a5.iter)=="function"){
return _1a5.iter();
}else{
if(typeof (_1a5.__iterator__)=="function"){
return _1a5.__iterator__(false);
}
}
}
try{
return self.iteratorRegistry.match(_1a5);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_1a5)+": "+m.repr(_1a5)+" is not iterable");
}
throw e;
}
};
MochiKit.Iter.count=function(n,step){
if(!n){
n=0;
}
if(arguments.length<2){
step=1;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n,step)};
};
MochiKit.Iter.cycle=function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _1b1=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_1b1.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
};
MochiKit.Iter.repeat=function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
};
MochiKit.Iter.next=function(_1b7,_1b8){
if(arguments.length==2){
try{
return _1b7.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return _1b8;
}
}
return _1b7.next();
};
MochiKit.Iter.izip=function(p,_1ba){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _1be=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_1be);
}};
};
MochiKit.Iter.ifilter=function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
};
MochiKit.Iter.ifilterfalse=function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
};
MochiKit.Iter.islice=function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _1ca=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_1ca=arguments[1];
stop=arguments[2];
}else{
_1ca=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_1ca,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
if(_1ca>=stop){
throw self.StopIteration;
}
var rval;
while(i<_1ca){
rval=seq.next();
i++;
}
_1ca+=step;
return rval;
}};
};
MochiKit.Iter.imap=function(fun,p,_1d1){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _1d4=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_1d4));
}};
};
MochiKit.Iter.applymap=function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
};
MochiKit.Iter.chain=function(p,_1dc){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1df=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1df.length>1){
try{
return _1df[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1df.shift();
}
}
if(_1df.length==1){
var arg=_1df.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
};
MochiKit.Iter.takewhile=function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
};
MochiKit.Iter.dropwhile=function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
};
MochiKit.Iter._tee=function(_1ea,sync,_1ec){
sync.pos[_1ea]=-1;
var m=MochiKit.Base;
var _1ee=m.listMin;
return {repr:function(){
return "tee("+_1ea+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1ea];
if(i==sync.max){
rval=_1ec.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1ea]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1ea]+=1;
if(i==sync.min&&_1ee(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
};
MochiKit.Iter.tee=function(_1f1,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1f1=self.iter(_1f1);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1f1));
}
return rval;
};
MochiKit.Iter.list=function(_1f8){
var rval;
if(_1f8 instanceof Array){
return _1f8.slice();
}
if(typeof (_1f8)=="function"&&!(_1f8 instanceof Function)&&typeof (_1f8.length)=="number"){
rval=[];
for(var i=0;i<_1f8.length;i++){
rval.push(_1f8[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1f8=self.iter(_1f8);
rval=[];
var _1fc;
try{
while(true){
_1fc=_1f8.next();
rval.push(_1fc);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
};
MochiKit.Iter.reduce=function(fn,_1fe,_1ff){
var x=_1ff;
var self=MochiKit.Iter;
_1fe=self.iter(_1fe);
if(arguments.length<3){
try{
x=_1fe.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
}
try{
while(true){
x=fn(x,_1fe.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
};
MochiKit.Iter.range=function(){
var _202=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_202=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_202=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_202>=stop)||(step<0&&_202<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_202;
_202+=step;
return rval;
},repr:function(){
return "range("+[_202,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
};
MochiKit.Iter.sum=function(_206,_207){
if(typeof (_207)=="undefined"||_207===null){
_207=0;
}
var x=_207;
var self=MochiKit.Iter;
_206=self.iter(_206);
try{
while(true){
x+=_206.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
};
MochiKit.Iter.exhaust=function(_20a){
var self=MochiKit.Iter;
_20a=self.iter(_20a);
try{
while(true){
_20a.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
};
MochiKit.Iter.forEach=function(_20c,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_20c)&&!self.isIterable(_20c)){
try{
for(var i=0;i<_20c.length;i++){
func(_20c[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_20c));
}
return func;
};
MochiKit.Iter.every=function(_212,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_212).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
};
MochiKit.Iter.sorted=function(_215,cmp){
var rval=MochiKit.Iter.list(_215);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
};
MochiKit.Iter.reversed=function(_218){
var rval=MochiKit.Iter.list(_218);
rval.reverse();
return rval;
};
MochiKit.Iter.some=function(_21a,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_21a).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
};
MochiKit.Iter.iextend=function(lst,_21e,skip){
skip=skip||0;
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_21e)&&!self.isIterable(_21e)){
for(var i=skip;i<_21e.length;i++){
lst.push(_21e[i]);
}
}else{
_21e=self.iter(_21e);
try{
while(skip-->0){
_21e.next();
}
while(true){
lst.push(_21e.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
};
MochiKit.Iter.groupby=function(_223,_224){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_224=m.operator.identity;
}
_223=self.iter(_223);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_223.next();
k=_224(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _22b=true;
var _22c=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_22c(k,pk)===0){
fetch();
if(_22b){
_22b=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_22c(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
};
MochiKit.Iter.groupby_as_array=function(_22d,_22e){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_22e=m.operator.identity;
}
_22d=self.iter(_22d);
var _231=[];
var _232=true;
var _233;
var _234=m.compare;
while(true){
try{
var _235=_22d.next();
var key=_22e(_235);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_232||_234(key,_233)!==0){
var _237=[];
_231.push([key,_237]);
}
_237.push(_235);
_232=false;
_233=key;
}
return _231;
};
MochiKit.Iter.arrayLikeIter=function(_238){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_238.length){
throw MochiKit.Iter.StopIteration;
}
return _238[i++];
}};
};
MochiKit.Iter.hasIterateNext=function(_23a){
return (_23a&&typeof (_23a.iterateNext)=="function");
};
MochiKit.Iter.iterateNextIter=function(_23b){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_23b.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
};
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
MochiKit.Iter.StopIteration=StopIteration;
}else{
MochiKit.Iter.StopIteration=new m.NamedError("StopIteration");
}
MochiKit.Iter.iteratorRegistry=new m.AdapterRegistry();
MochiKit.Iter.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
MochiKit.Iter.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
window.reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Logging");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_23f,info){
this.num=num;
this.level=_23f;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_242){
var self=MochiKit.Logging;
if(typeof (_242)=="string"){
_242=self.LogLevel[_242];
}
return function(msg){
var _245=msg.level;
if(typeof (_245)=="string"){
_245=self.LogLevel[_245];
}
return _245>=_242;
};
},isLogMessage:function(_246){
var _247=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _247)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_24c){
this.counter=0;
if(typeof (_24c)=="undefined"||_24c===null){
_24c=-1;
}
this.maxSize=_24c;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(_24d,msg){
msg=_24d+": "+msg;
if(typeof (window)!="undefined"&&window.console&&window.console.log){
var _24f=null;
switch(_24d){
case "INFO":
_24f=typeof window.console.info=="function"?"info":null;
break;
case "DEBUG":
_24f=typeof window.console.debug=="function"?"debug":null;
break;
case "WARNING":
_24f=typeof window.console.warn=="function"?"warn":null;
break;
case "ERROR":
_24f=typeof window.console.error=="function"?"error":null;
break;
case "FATAL":
_24f=typeof window.console.error=="function"?"error":null;
break;
}
_24f=_24f||"log";
window.console[_24f](msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_253,_254,_255){
if(typeof (_254)=="string"){
_254=MochiKit.Logging.logLevelAtLeast(_254);
}
var _256=[_254,_255];
_256.ident=_253;
this.listeners[_253]=_256;
},removeListener:function(_257){
delete this.listeners[_257];
},baseLog:function(_258,_259,_25a){
if(typeof (_258)=="number"){
if(_258>=MochiKit.Logging.LogLevel.FATAL){
_258="FATAL";
}else{
if(_258>=MochiKit.Logging.LogLevel.ERROR){
_258="ERROR";
}else{
if(_258>=MochiKit.Logging.LogLevel.WARNING){
_258="WARNING";
}else{
if(_258>=MochiKit.Logging.LogLevel.INFO){
_258="INFO";
}else{
_258="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_258,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level,msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_25c){
var _25d=0;
if(!(typeof (_25c)=="undefined"||_25c===null)){
_25d=Math.max(0,this._messages.length-_25c);
}
return this._messages.slice(_25d);
},getMessageText:function(_25e){
if(typeof (_25e)=="undefined"||_25e===null){
_25e=30;
}
var _25f=this.getMessages(_25e);
if(_25f.length){
var lst=MochiKit.Base.map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_25f);
lst.unshift("LAST "+_25f.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_262){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_262||false);
}
}};
MochiKit.Logging.__new__=function(){
MochiKit.Logging.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _264=m.partial;
var _265=this.Logger;
var _266=_265.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_264(_266,"DEBUG"),log:_264(_266,"INFO"),error:_264(_266,"ERROR"),fatal:_264(_266,"FATAL"),warning:_264(_266,"WARNING")});
var self=this;
var _268=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
MochiKit.Logging.log=_268("log");
MochiKit.Logging.logError=_268("error");
MochiKit.Logging.logDebug=_268("debug");
MochiKit.Logging.logFatal=_268("fatal");
MochiKit.Logging.logWarning=_268("warning");
this.logger=new _265();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DateTime");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var y=parseInt(iso[0],10),m=parseInt(iso[1],10)-1,d=parseInt(iso[2],10);
var date=new Date(y,m,d);
date.setFullYear(y);
date.setMonth(m);
date.setDate(d);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_273,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_273=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_273,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_273,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_273,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_27b){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _27c=MochiKit.DateTime._padTwo;
if(_27b){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
var lst=[(_27b?_27c(date.getHours()):""+date.getHours()),_27c(date.getMinutes()),_27c(date.getSeconds())];
return lst.join(":")+(_27b?"Z":"");
};
MochiKit.DateTime.toISOTimestamp=function(date,_27f){
if(typeof (date)=="undefined"||date===null){
return null;
}
var time=MochiKit.DateTime.toISOTime(date,_27f);
var sep=_27f?"T":" ";
if(_27f){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+time;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _283=MochiKit.DateTime._padTwo;
var _284=MochiKit.DateTime._padFour;
return [_284(date.getFullYear()),_283(date.getMonth()+1),_283(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?""+n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return ""+n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _28a=MochiKit.DateTime._padTwo;
return [_28a(d.getMonth()+1),_28a(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Format");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_28c,_28d,_28e,_28f,_290,_291,_292,_293,_294){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _28c;
}
var _296=_28d;
var _297=_28e;
if(num<0){
num=-num;
}else{
_296=_296.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_28f);
if(_290){
num=num*100;
_297=fmt.percent+_297;
}
num=MochiKit.Format.roundToFixed(num,_291);
var _29a=num.split(/\./);
var _29b=_29a[0];
var frac=(_29a.length==1)?"":_29a[1];
var res="";
while(_29b.length<_292){
_29b="0"+_29b;
}
if(_293){
while(_29b.length>_293){
var i=_29b.length-_293;
res=fmt.separator+_29b.substring(i,_29b.length)+res;
_29b=_29b.substring(0,i);
}
}
res=_29b+res;
if(_291>0){
while(frac.length<_294){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _296+res+_297;
};
};
MochiKit.Format.numberFormatter=function(_29f,_2a0,_2a1){
if(typeof (_2a0)=="undefined"){
_2a0="";
}
var _2a2=_29f.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_2a2){
throw TypeError("Invalid pattern");
}
var _2a3=_29f.substr(0,_2a2.index);
var _2a4=_29f.substr(_2a2.index+_2a2[0].length);
if(_2a3.search(/-/)==-1){
_2a3=_2a3+"-";
}
var _2a5=_2a2[1];
var frac=(typeof (_2a2[2])=="string"&&_2a2[2]!="")?_2a2[2]:"";
var _2a7=(typeof (_2a2[3])=="string"&&_2a2[3]!="");
var tmp=_2a5.split(/,/);
var _2a9;
if(typeof (_2a1)=="undefined"){
_2a1="default";
}
if(tmp.length==1){
_2a9=null;
}else{
_2a9=tmp[1].length;
}
var _2aa=_2a5.length-_2a5.replace(/0/g,"").length;
var _2ab=frac.length-frac.replace(/0/g,"").length;
var _2ac=frac.length;
var rval=MochiKit.Format._numberFormatter(_2a0,_2a3,_2a4,_2a1,_2a7,_2ac,_2aa,_2a9,_2ab);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",m.map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_2b1){
if(typeof (_2b1)=="undefined"||_2b1===null){
_2b1="default";
}
if(typeof (_2b1)=="string"){
var rval=MochiKit.Format.LOCALE[_2b1];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_2b1]=rval;
}
return rval;
}else{
return _2b1;
}
};
MochiKit.Format.twoDigitAverage=function(_2b3,_2b4){
if(_2b4){
var res=_2b3/_2b4;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_2b6){
var res=MochiKit.Format.roundToFixed(_2b6,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_2b9){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2b9){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_2b9+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_2bb){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2bb){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_2bb+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_2bd){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_2bd),_2bd);
};
MochiKit.Format.truncToFixed=function(_2bf,_2c0){
var _2c1=MochiKit.Format._numberToFixed(_2bf,_2c0);
var _2c2=_2c1.indexOf(".");
if(_2c2>0&&_2c2+_2c0+1<_2c1.length){
_2c1=_2c1.substring(0,_2c2+_2c0+1);
_2c1=MochiKit.Format._shiftNumber(_2c1,0);
}
return _2c1;
};
MochiKit.Format.roundToFixed=function(_2c3,_2c4){
var _2c5=MochiKit.Format._numberToFixed(_2c3,_2c4);
var _2c6=_2c5.indexOf(".");
if(_2c6>0&&_2c6+_2c4+1<_2c5.length){
var str=MochiKit.Format._shiftNumber(_2c5,_2c4);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_2c5=MochiKit.Format._shiftNumber(str,-_2c4);
}
return _2c5;
};
MochiKit.Format._numberToFixed=function(_2c8,_2c9){
var str=_2c8.toString();
var _2cb=str.split(/[eE]/);
var exp=(_2cb.length===1)?0:parseInt(_2cb[1],10)||0;
var _2cd=MochiKit.Format._shiftNumber(_2cb[0],exp);
_2cb=_2cd.split(/\./);
var _2ce=_2cb[0];
var frac=(_2cb.length===1)?"":_2cb[1];
while(frac.length<_2c9){
frac+="0";
}
if(frac.length>0){
return _2ce+"."+frac;
}else{
return _2ce;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_2d3){
return MochiKit.Format.twoDigitFloat(100*_2d3)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text");
goog.require("MochiKit.Base");
goog.require("MochiKit.Format");
}
MochiKit.Base.module(MochiKit,"Text","1.5",["Base","Format"]);
MochiKit.Text.startsWith=function(_2d8,str){
return str!=null&&_2d8!=null&&str.indexOf(_2d8)==0;
};
MochiKit.Text.endsWith=function(_2da,str){
return str!=null&&_2da!=null&&str.lastIndexOf(_2da)==Math.max(str.length-_2da.length,0);
};
MochiKit.Text.contains=function(_2dc,str){
return str!=null&&_2dc!=null&&str.indexOf(_2dc)>=0;
};
MochiKit.Text.padLeft=function(str,_2df,_2e0){
str=str||"";
_2e0=_2e0||" ";
while(str.length<_2df){
str=_2e0+str;
}
return str;
};
MochiKit.Text.padRight=function(str,_2e2,_2e3){
str=str||"";
_2e3=_2e3||" ";
while(str.length<_2e2){
str+=_2e3;
}
return str;
};
MochiKit.Text.truncate=function(str,_2e5,tail){
if(str==null||str.length<=_2e5||_2e5<0){
return str;
}else{
if(tail!=null){
str=str.slice(0,Math.max(0,_2e5-tail.length));
if(typeof (str)=="string"){
return str+tail;
}else{
return MochiKit.Base.extend(str,tail);
}
}else{
return str.slice(0,_2e5);
}
}
};
MochiKit.Text.split=function(str,_2e8,max){
if(str==null){
return str;
}
_2e8=_2e8||"\n";
var bits=str.split(_2e8);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(max,bits.length,bits.slice(max,bits.length).join(_2e8));
return bits;
};
MochiKit.Text.rsplit=function(str,_2ec,max){
if(str==null){
return str;
}
_2ec=_2ec||"\n";
var bits=str.split(_2ec);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(0,bits.length-max,bits.slice(0,bits.length-max).join(_2ec));
return bits;
};
MochiKit.Text.formatter=function(_2ef,_2f0){
if(_2f0==null){
_2f0=MochiKit.Format.formatLocale();
}else{
if(typeof (_2f0)=="string"){
_2f0=MochiKit.Format.formatLocale(_2f0);
}
}
var _2f1=MochiKit.Text._parsePattern(_2ef);
return function(){
var _2f2=MochiKit.Base.extend([],arguments);
var res=[];
for(var i=0;i<_2f1.length;i++){
if(typeof (_2f1[i])=="string"){
res.push(_2f1[i]);
}else{
res.push(MochiKit.Text.formatValue(_2f1[i],_2f2,_2f0));
}
}
return res.join("");
};
};
MochiKit.Text.format=function(_2f5,_2f6){
var func=MochiKit.Text.formatter(_2f5);
return func.apply(this,MochiKit.Base.extend([],arguments,1));
};
MochiKit.Text.formatValue=function(spec,_2f9,_2fa){
var self=MochiKit.Text;
if(typeof (spec)==="string"){
spec=self._parseFormatFlags(spec,0,spec.length);
}
for(var i=0;spec.path!=null&&i<spec.path.length;i++){
if(_2f9!=null){
_2f9=_2f9[spec.path[i]];
}
}
if(_2fa==null){
_2fa=MochiKit.Format.formatLocale();
}else{
if(typeof (_2fa)=="string"){
_2fa=MochiKit.Format.formatLocale(_2fa);
}
}
var str="";
if(spec.type=="number"){
if(_2f9 instanceof Number){
_2f9=_2f9.valueOf();
}
if(typeof (_2f9)!="number"||isNaN(_2f9)){
str="";
}else{
if(_2f9===Number.POSITIVE_INFINITY){
str="\u221e";
}else{
if(_2f9===Number.NEGATIVE_INFINITY){
str="-\u221e";
}else{
var sign=(_2f9<0)?"-":spec.sign;
_2f9=Math.abs(_2f9);
if(spec.format==="%"){
str=self._truncToPercent(_2f9,spec.precision);
}else{
if(spec.format==="d"){
str=MochiKit.Format.roundToFixed(_2f9,0);
}else{
if(spec.radix!=10){
str=Math.floor(_2f9).toString(spec.radix);
if(spec.format==="x"){
str=str.toLowerCase();
}else{
if(spec.format==="X"){
str=str.toUpperCase();
}
}
}else{
if(spec.precision>=0){
str=MochiKit.Format.roundToFixed(_2f9,spec.precision);
}else{
str=_2f9.toString();
}
}
}
}
if(spec.padding==="0"&&spec.format==="%"){
str=self.padLeft(str,spec.width-sign.length-1,"0");
}else{
if(spec.padding=="0"){
str=self.padLeft(str,spec.width-sign.length,"0");
}
}
str=self._localizeNumber(str,_2fa,spec.group);
str=sign+str;
}
}
}
if(str!==""&&spec.format==="%"){
str=str+_2fa.percent;
}
}else{
if(spec.format=="r"){
str=MochiKit.Base.repr(_2f9);
}else{
str=(_2f9==null)?"":_2f9.toString();
}
str=self.truncate(str,spec.precision);
}
if(spec.align=="<"){
str=self.padRight(str,spec.width);
}else{
str=self.padLeft(str,spec.width);
}
return str;
};
MochiKit.Text._localizeNumber=function(num,_300,_301){
var _302=num.split(/\./);
var _303=_302[0];
var frac=(_302.length==1)?"":_302[1];
var res=(frac.length>0)?_300.decimal:"";
while(_301&&frac.length>3){
res=res+frac.substring(0,3)+_300.separator;
frac=frac.substring(3);
if(_303.charAt(0)=="0"){
_303=_303.substring(1);
}
}
if(frac.length>0){
res=res+frac;
}
while(_301&&_303.length>3){
var pos=_303.length-3;
res=_300.separator+_303.substring(pos)+res;
_303=_303.substring((_303.charAt(0)=="0")?1:0,pos);
}
return _303+res;
};
MochiKit.Text._parsePattern=function(_307){
var self=MochiKit.Text;
var _309=[];
var re=/{[^{}]*}|{{?|}}?/g;
var _30b=re.lastIndex=0;
var m;
while((m=re.exec(_307))!=null){
if(_30b<m.index){
_309.push(_307.substring(_30b,m.index));
}
var str=m[0];
_30b=m.index+str.length;
if(self.startsWith("{",str)&&self.endsWith("}",str)){
_309.push(self._parseFormat(_307,m.index+1,_30b-1));
}else{
if(self.startsWith("{{",str)||self.startsWith("}}",str)){
_309.push(str.substring(1));
}else{
if(self.startsWith("{",str)){
var msg="unescaped { char, should be escaped as {{";
throw new self.FormatPatternError(_307,m.index,msg);
}else{
if(self.startsWith("}",str)){
var msg="unescaped } char, should be escaped as }}";
throw new self.FormatPatternError(_307,m.index,msg);
}
}
}
}
}
if(_30b<_307.length){
_309.push(_307.substring(_30b));
}
return _309;
};
MochiKit.Text._parseFormat=function(_30f,_310,_311){
var self=MochiKit.Text;
var text=_30f.substring(_310,_311);
var _314=self.split(text,":",1);
var path=_314[0];
var _316=_310+path.length+((_314.length==1)?0:1);
var info=self._parseFormatFlags(_30f,_316,_311);
info.path=(path=="")?[]:path.split(".");
for(var i=0;i<info.path.length;i++){
var v=info.path[i];
v=v.replace(/^\s+/,"").replace(/\s+$/,"");
if(v==""&&info.path.length==1){
v=0;
}else{
if(v==""){
var msg="format value path contains blanks";
throw new self.FormatPatternError(_30f,_310,msg);
}else{
if(/^\d+$/.test(v)){
v=parseInt(v,10);
}
}
}
info.path[i]=v;
}
if(info.path.length<=0||typeof (info.path[0])!="number"){
info.path.unshift(0);
}
return info;
};
MochiKit.Text._parseFormatFlags=function(_31b,_31c,_31d){
var _31e=MochiKit.Base.update;
var info={type:"string",format:"s",width:0,precision:-1,align:">",sign:"",padding:" ",group:false};
var text=_31b.substring(_31c,_31d).replace(/\s+$/,"");
var m=/^([<>+ 0,-]+)?(\d+)?(\.\d*)?([srbdoxXf%])?(.*)$/.exec(text);
var _322=m[1];
var _323=m[2];
var _324=m[3];
var type=m[4];
var _326=m[5];
for(var i=0;_322&&i<_322.length;i++){
var chr=_322.charAt(i);
if(chr=="<"||chr==">"){
info.align=chr;
}else{
if(chr=="+"||chr=="-"||chr==" "){
info.sign=(chr=="-")?"":chr;
}else{
if(chr=="0"){
info.padding=chr;
}else{
if(chr==","){
info.group=true;
}
}
}
}
}
if(_323){
info.width=parseInt(_323,10);
}
if(_324&&_324.length>1){
info.precision=parseInt(_324.substring(1),10);
}
if(type=="s"||type=="r"){
info.format=type;
}else{
if(type=="b"){
_31e(info,{type:"number",format:type,radix:2});
}else{
if(type=="o"){
_31e(info,{type:"number",format:type,radix:8});
}else{
if(type=="x"||type=="X"){
_31e(info,{type:"number",format:type,radix:16});
}else{
if(type=="d"||type=="f"||type=="%"){
_31e(info,{type:"number",format:type,radix:10});
}
}
}
}
}
if(_326){
var msg="unsupported format flag: "+_326.charAt(0);
throw new MochiKit.Text.FormatPatternError(_31b,_31c,msg);
}
return info;
};
MochiKit.Text._truncToPercent=function(_32a,_32b){
var str;
if(_32b>=0){
str=MochiKit.Format.roundToFixed(_32a,_32b+2);
}else{
str=(_32a==null)?"0":_32a.toString();
}
var arr=MochiKit.Text.split(str,".",2);
var frac=MochiKit.Text.padRight(arr[1],2,"0");
var _32f=arr[0]+frac.substring(0,2);
frac=frac.substring(2);
while(/^0[0-9]/.test(_32f)){
_32f=_32f.substring(1);
}
return (frac.length<=0)?_32f:_32f+"."+frac;
};
MochiKit.Text.FormatPatternError=function(_330,pos,_332){
this.pattern=_330;
this.pos=pos;
this.message=_332;
};
MochiKit.Text.FormatPatternError.prototype=new MochiKit.Base.NamedError("MochiKit.Text.FormatPatternError");
MochiKit.Text.FormatPatternError.constructor=MochiKit.Text.FormatPatternError;
if(MochiKit.__export__){
window.formatter=MochiKit.Text.formatter;
window.format=MochiKit.Text.format;
window.formatValue=MochiKit.Text.formatValue;
}
MochiKit.Base.nameFunctions(MochiKit.Text);
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Async");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_333){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_333;
this.silentlyCancelled=false;
this.chained=false;
this.finalized=false;
};
MochiKit.Async.Deferred.prototype.repr=function(){
return "Deferred("+this.id+", "+this.state()+")";
};
MochiKit.Async.Deferred.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.Deferred.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.Deferred.prototype.state=function(){
if(this.fired==-1){
return "unfired";
}else{
if(this.fired===0){
return "success";
}else{
return "error";
}
}
};
MochiKit.Async.Deferred.prototype.cancel=function(e){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(typeof (e)==="string"){
e=new self.GenericError(e);
}else{
if(!(e instanceof Error)){
e=new self.CancelledError(this);
}
}
this.errback(e);
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel(e);
}
}
};
MochiKit.Async.Deferred.prototype._resback=function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
if(this.paused===0){
this._fire();
}
};
MochiKit.Async.Deferred.prototype._check=function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
}
};
MochiKit.Async.Deferred.prototype.callback=function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.errback=function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.addBoth=function(fn,_33b){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
};
MochiKit.Async.Deferred.prototype.addCallback=function(fn,_33d){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
};
MochiKit.Async.Deferred.prototype.addErrback=function(fn,_33f){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
};
MochiKit.Async.Deferred.prototype.addCallbacks=function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype.setFinalizer=function(fn){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
this._finalizer=fn;
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype._fire=function(){
var _343=this.chain;
var _344=this.fired;
var res=this.results[_344];
var self=this;
var cb=null;
while(_343.length>0&&this.paused===0){
var pair=_343.shift();
var f=pair[_344];
if(f===null){
continue;
}
try{
var ret=f(res);
if(ret!==undefined){
res=ret;
}
_344=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self.paused--;
self._resback(res);
};
this.paused++;
}
}
catch(err){
_344=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_344;
this.results[_344]=res;
if(this.chain.length==0&&this.paused===0&&this._finalizer){
this.finalized=true;
this._finalizer(res);
}
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
};
MochiKit.Async.evalJSONRequest=function(req){
return MochiKit.Base.evalJSON(req.responseText);
};
MochiKit.Async.succeed=function(_34d){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
};
MochiKit.Async.fail=function(_34f){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
};
MochiKit.Async.getXMLHttpRequest=function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _352=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_352.length;i++){
var func=_352[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
};
MochiKit.Async._xhr_onreadystatechange=function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e2){
}
}
var _357=null;
try{
_357=this.status;
if(!_357&&(this.response||m.isNotEmpty(this.responseText))){
_357=304;
}
}
catch(e){
}
if(_357==200||_357==201||_357==204||_357==304||_357==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
};
MochiKit.Async._xhr_canceller=function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e2){
}
}
req.abort();
};
MochiKit.Async.sendXMLHttpRequest=function(req,_35b){
if(typeof (_35b)=="undefined"||_35b===null){
_35b="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_35b);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
};
MochiKit.Async.doXHR=function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:"",async:true},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,opts.async,opts.username,opts.password);
}else{
req.open(opts.method,url,opts.async);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _365=opts.headers;
if(!m.isArrayLike(_365)){
_365=m.items(_365);
}
for(var i=0;i<_365.length;i++){
var _367=_365[i];
var name=_367[0];
var _369=_367[1];
req.setRequestHeader(name,_369);
}
}
if("responseType" in opts&&"responseType" in req){
req.responseType=opts.responseType;
}
if(opts.withCredentials){
req.withCredentials="true";
}
return self.sendXMLHttpRequest(req,opts.sendContent);
};
MochiKit.Async._buildURL=function(url,_36b){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
};
MochiKit.Async.doSimpleXMLHttpRequest=function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
};
MochiKit.Async.loadJSONDoc=function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
};
MochiKit.Async.loadScript=function(url){
var d=new MochiKit.Async.Deferred();
var _375=document.createElement("script");
_375.type="text/javascript";
_375.onload=function(){
_375.onload=null;
_375.onerror=null;
_375.onreadystatechange=null;
_375=null;
d.callback();
};
_375.onerror=function(msg){
_375.onload=null;
_375.onerror=null;
_375.onreadystatechange=null;
_375=null;
msg="Failed to load script at "+url+": "+msg;
d.errback(new URIError(msg,url));
};
_375.onreadystatechange=function(){
if(_375.readyState=="loaded"||_375.readyState=="complete"){
_375.onload();
}else{
MochiKit.Async.callLater(10,_375.onerror,"Script loading timed out");
}
};
document.getElementsByTagName("head")[0].appendChild(_375);
_375.src=url;
return d;
};
MochiKit.Async.wait=function(_377,_378){
var d=new MochiKit.Async.Deferred();
var cb=MochiKit.Base.bind("callback",d,_378);
var _37b=setTimeout(cb,Math.floor(_377*1000));
d.canceller=function(){
try{
clearTimeout(_37b);
}
catch(e){
}
};
return d;
};
MochiKit.Async.callLater=function(_37c,func,_37e){
var m=MochiKit.Base;
var _380=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_37c).addCallback(function(res){
return _380();
});
};
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype.__class__=MochiKit.Async.DeferredLock;
MochiKit.Async.DeferredLock.prototype.acquire=function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
};
MochiKit.Async.DeferredLock.prototype.release=function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
};
MochiKit.Async.DeferredLock.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.DeferredLock.prototype.repr=function(){
var _383;
if(this.locked){
_383="locked, "+this.waiting.length+" waiting";
}else{
_383="unlocked";
}
return "DeferredLock("+this.id+", "+_383+")";
};
MochiKit.Async.DeferredLock.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.DeferredList=function(list,_385,_386,_387,_388){
MochiKit.Async.Deferred.apply(this,[_388]);
this.list=list;
var _389=[];
this.resultList=_389;
this.finishedCount=0;
this.fireOnOneCallback=_385;
this.fireOnOneErrback=_386;
this.consumeErrors=_387;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_389.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_385){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype.constructor=MochiKit.Async.DeferredList;
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_38d,_38e,_38f){
this.resultList[_38d]=[_38e,_38f];
this.finishedCount+=1;
if(this.fired==-1){
if(_38e&&this.fireOnOneCallback){
this.callback([_38d,_38f]);
}else{
if(!_38e&&this.fireOnOneErrback){
this.errback(_38f);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_38e&&this.consumeErrors){
_38f=null;
}
return _38f;
};
MochiKit.Async.gatherResults=function(_390,_391){
var _392=MochiKit.Base.flattenArguments(arguments);
var d=new MochiKit.Async.DeferredList(_392,false,true,false);
d.addCallback(function(_394){
var ret=[];
for(var i=0;i<_394.length;i++){
ret.push(_394[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _399;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_399=r;
}else{
if(r instanceof Error){
_399=self.fail(r);
}else{
_399=self.succeed(r);
}
}
}
catch(e){
_399=self.fail(e);
}
return _399;
};
MochiKit.Async.when=function(_39b){
if(typeof _39b!="undefined"&&typeof _39b.addCallback=="function"){
return _39b;
}
return MochiKit.Async.succeed(_39b);
};
MochiKit.Async.timeout=function(d,ms){
var dt=new MochiKit.Async.Deferred();
var h=setTimeout(function(){
dt.cancel();
},ms);
d.addBoth(function(){
clearTimeout(h);
}).addCallbacks(MochiKit.Base.bind(dt.callback,dt),MochiKit.Base.bind(dt.errback,dt));
return dt;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_3a2){
this.deferred=_3a2;
});
ne("CancelledError",function(_3a3){
this.deferred=_3a3;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DOM");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _3ab=self._document;
var _3ac=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_3ac;
self._document=_3ab;
throw e;
}
self._window=_3ac;
self._document=_3ab;
return rval;
},formContents:function(elem){
var _3af=[];
var _3b0=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _3b5=elem.tagName.toUpperCase();
if(_3b5==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_3b5==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_3af.push(name);
_3b0.push(v);
return null;
}
_3af.push(name);
_3b0.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_3af.push(name);
_3b0.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_3af.push(name);
_3b0.push(v);
}
return null;
}
}
if(_3b5==="FORM"||_3b5==="P"||_3b5==="SPAN"||_3b5==="DIV"){
return elem.childNodes;
}
_3af.push(name);
_3b0.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_3af,_3b0];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _3be=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_3be;
throw e;
}
self._document=_3be;
return rval;
},registerDOMConverter:function(name,_3c1,wrap,_3c3){
MochiKit.DOM.domConverters.register(name,_3c1,wrap,_3c3);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _3ca=im.repeat;
}
var map=m.map;
var _3cc=self.domConverters;
var _3cd=arguments.callee;
var _3ce=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _3cf=null;
try{
_3cf=iter(node);
}
catch(e){
}
if(_3cf){
return map(_3cd,_3cf,_3ca(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _3cd(n,ctx);
};
return map(func,node);
}
}
try{
node=_3cc.match(node,ctx);
continue;
}
catch(e){
if(e!=_3ce){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_3d3){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_3d3)=="string"){
_3d3=self.getElement(_3d3);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_3d3){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_3d7){
var o={};
o[attr]=_3d7;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3dc=self.attributeArray.renames[attr];
var _3dd=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_3dc){
return node[_3dc];
}
var _3de=node.getAttribute(attr);
if(_3de!=_3dd){
return _3de;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3e2=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_3e2){
return node[_3e2];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_3e4){
var elem=node;
var self=MochiKit.DOM;
var base=MochiKit.Base;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_3e4){
if(self.attributeArray.compliant){
for(var k in _3e4){
var v=_3e4[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _3ea=self.attributeArray.renames;
for(var k in _3e4){
v=_3e4[k];
var _3eb=_3ea[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_3eb)=="string"){
elem[_3eb]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node,_3ed,_3ee){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3f1=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3f2=MochiKit.Base.concat;
while(_3f1.length){
var n=_3f1.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_3f1=_3f2(n,_3f1);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node,_3f5,_3f6){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3f9=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3fa=elem.parentNode;
var _3fb=MochiKit.Base.concat;
while(_3f9.length){
var n=_3f9.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_3fa.insertBefore(n,elem);
}else{
_3f9=_3fb(n,_3f9);
}
}
}
return _3fa;
},insertSiblingNodesAfter:function(node,_3fe,_3ff){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _402=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_402);
}else{
return self.appendChildNodes(elem.parentNode,_402);
}
},replaceChildNodes:function(node,_404){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _407;
while((_407=elem.firstChild)){
elem.removeChild(_407);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_409){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_409)=="string"||typeof (_409)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _40e=self._xhtml;
if(_409&&!self.attributeArray.compliant){
var _40f="";
if("name" in _409){
_40f+=" name=\""+self.escapeHTML(_409.name)+"\"";
}
if(name=="input"&&"type" in _409){
_40f+=" type=\""+self.escapeHTML(_409.type)+"\"";
}
if(_40f){
name="<"+name+_40f+">";
_40e=false;
}
}
var d=self._document;
if(_40e&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_409){
self.updateNodeAttributes(elem,_409);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
if(e&&e.parentNode){
e.parentNode.removeChild(e);
}
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _418=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_418);
_418.replaceChild(src,dest);
}else{
_418.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByClassName:function(_41b,_41c){
var self=MochiKit.DOM;
if(self._document.getElementsByClassName){
self.getElementsByClassName=function(_41e,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _420=elm.getElementsByClassName(_41e);
return MochiKit.Base.extend([],_420);
};
}else{
if(self._document.evaluate){
self.getElementsByClassName=function(_421,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _423=_421.split(" ");
var _424="";
for(var k=0,kl=_423.length;k<kl;++k){
_424+="[contains(concat(' ', @class, ' '), ' "+_423[k]+" ')]";
}
var tag="*";
var _428=[];
try{
var _429="http://www.w3.org/1999/xhtml";
var _42a=(self._document.documentElement.namespaceURI===_429)?_429:null;
_428=self._document.evaluate(".//"+tag+_424,elm,_42a,0,null);
}
catch(e){
_428=self._document.evaluate(".//"+tag+_424,elm,null,0,null);
}
return MochiKit.Iter.list(_428);
};
}else{
self.getElementsByClassName=function(_42b,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _42d=_42b.split(" ");
var _42e=[];
for(var k=0,kl=_42d.length;k<kl;++k){
_42e.push(new RegExp("(^|\\s)"+_42d[k]+"(\\s|$)"));
}
var _431=elm.all?elm.all:elm.getElementsByTagName("*");
var _432=[];
for(var l=0,ll=_431.length;l<ll;++l){
var _435=_431[l];
var _436=false;
for(var m=0,ml=_42e.length;m<ml;++m){
_436=_42e[m].test(_435.className);
if(!_436){
break;
}
}
if(_436){
_432.push(_435);
}
}
return _432;
};
}
}
return self.getElementsByClassName(_41b,_41c);
},getElementsByTagAndClassName:function(_439,_43a,_43b){
var self=MochiKit.DOM;
if(typeof (_439)=="undefined"||_439===null){
_439="*";
}
if(typeof (_43b)=="undefined"||_43b===null){
_43b=self._document;
}
_43b=self.getElement(_43b);
if(_43b==null){
return [];
}
if(_439=="*"){
return self.getElementsByClassName(_43a,_43b);
}
var _43d=(_43b.getElementsByTagName(_439)||self._document.all);
if(typeof (_43a)=="undefined"||_43a===null){
return MochiKit.Base.extend(null,_43d);
}
var _43e=[];
for(var i=0;i<_43d.length;i++){
var _440=_43d[i];
var cls=_440.className;
if(typeof (cls)!="string"){
cls=_440.getAttribute("class");
}
if(typeof (cls)=="string"){
var _442=cls.split(" ");
for(var j=0;j<_442.length;j++){
if(_442[j]==_43a){
_43e.push(_440);
break;
}
}
}
}
return _43e;
},_newCallStack:function(path,once){
var rval=function(){
var _447=arguments.callee.callStack;
for(var i=0;i<_447.length;i++){
if(_447[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_449,path,func,once){
var self=MochiKit.DOM;
var _44e=_449[path];
var _44f=_44e;
if(!(typeof (_44e)=="function"&&typeof (_44e.callStack)=="object"&&_44e.callStack!==null)){
_44f=self._newCallStack(path,once);
if(typeof (_44e)=="function"){
_44f.callStack.push(_44e);
}
_449[path]=_44f;
}
_44f.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_452){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_452=self.getElement(_452);
if(_452){
_452.focus();
}
});
},setElementClass:function(_454,_455){
var self=MochiKit.DOM;
var obj=self.getElement(_454);
if(self.attributeArray.compliant){
obj.setAttribute("class",_455);
}else{
obj.setAttribute("className",_455);
}
},toggleElementClass:function(_458,_459,_45a){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_458)){
self.removeElementClass(obj,_458);
}
}
},addElementClass:function(_45e,_45f){
var self=MochiKit.DOM;
var obj=self.getElement(_45e);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_45f);
return true;
}
if(cls==_45f){
return false;
}
var _463=cls.split(" ");
for(var i=0;i<_463.length;i++){
if(_463[i]==_45f){
return false;
}
}
self.setElementClass(obj,cls+" "+_45f);
return true;
},removeElementClass:function(_465,_466){
var self=MochiKit.DOM;
var obj=self.getElement(_465);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_466){
self.setElementClass(obj,"");
return true;
}
var _46a=cls.split(" ");
for(var i=0;i<_46a.length;i++){
if(_46a[i]==_466){
_46a.splice(i,1);
self.setElementClass(obj,_46a.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_46c,_46d,_46e){
var obj=MochiKit.DOM.getElement(_46c);
var res=MochiKit.DOM.removeElementClass(obj,_46d);
if(res){
MochiKit.DOM.addElementClass(obj,_46e);
}
return res;
},hasElementClass:function(_471,_472,_473){
var obj=MochiKit.DOM.getElement(_471);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _476=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_476.length;j++){
if(_476[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _47e=[dom];
var self=MochiKit.DOM;
var _480=self.escapeHTML;
var _481=self.attributeArray;
while(_47e.length){
dom=_47e.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _482=[];
var _483=_481(dom);
for(var i=0;i<_483.length;i++){
var a=_483[i];
_482.push([" ",a.name,"=\"",_480(a.value),"\""]);
}
_482.sort();
for(i=0;i<_482.length;i++){
var _486=_482[i];
for(var j=0;j<_486.length;j++){
lst.push(_486[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_47e.push("</"+dom.tagName.toLowerCase()+">");
var _488=dom.childNodes;
for(i=_488.length-1;i>=0;i--){
_47e.push(_488[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_480(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_48a){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _48f=node.nodeValue;
if(typeof (_48f)=="string"){
rval.push(_48f);
}
})(MochiKit.DOM.getElement(node));
if(_48a){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_490){
_490=MochiKit.DOM.getElement(_490);
for(var i=0;i<_490.childNodes.length;i++){
var node=_490.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_493,_494,_495){
var self=MochiKit.DOM;
if(typeof (_493)=="undefined"||_493===null){
_493="*";
}
if(typeof (_495)=="undefined"||_495===null){
_495=self._document;
}
_495=self.getElement(_495);
if(_495==null){
return null;
}
var _497=(_495.getElementsByTagName(_493)||self._document.all);
if(_497.length<=0){
return null;
}else{
if(typeof (_494)=="undefined"||_494===null){
return _497[0];
}
}
for(var i=0;i<_497.length;i++){
var _499=_497[i];
var cls=_499.className;
if(typeof (cls)!="string"){
cls=_499.getAttribute("class");
}
if(typeof (cls)=="string"){
var _49b=cls.split(" ");
for(var j=0;j<_49b.length;j++){
if(_49b[j]==_494){
return _499;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_49e,_49f){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_49e)=="undefined"||_49e===null){
_49e="*";
}else{
_49e=_49e.toUpperCase();
}
if(typeof (_49f)=="undefined"||_49f===null){
_49f=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _4a1=elem.tagName.toUpperCase();
if((_49e==="*"||_49e==_4a1)&&(_49f===null||self.hasElementClass(elem,_49f))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _4a4="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
MochiKit.DOM._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_4a4);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
MochiKit.DOM.domConverters=new m.AdapterRegistry();
var _4a5=this._document.createElement("span");
var _4a6;
if(_4a5&&_4a5.attributes&&_4a5.attributes.length>0){
var _4a7=m.filter;
_4a6=function(node){
return _4a7(_4a6.ignoreAttrFilter,node.attributes);
};
_4a6.ignoreAttr={};
var _4a9=_4a5.attributes;
var _4aa=_4a6.ignoreAttr;
for(var i=0;i<_4a9.length;i++){
var a=_4a9[i];
_4aa[a.name]=a.value;
}
_4a6.ignoreAttrFilter=function(a){
return (_4a6.ignoreAttr[a.name]!=a.value);
};
_4a6.compliant=false;
_4a6.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","rowspan":"rowSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_4a6=function(node){
return node.attributes;
};
_4a6.compliant=true;
_4a6.ignoreAttr={};
_4a6.renames={};
}
_4a6.__export__=false;
MochiKit.DOM.attributeArray=_4a6;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _4af=this.createDOMFunc;
MochiKit.DOM.A=_4af("a");
MochiKit.DOM.ARTICLE=_4af("article");
MochiKit.DOM.ASIDE=_4af("aside");
MochiKit.DOM.AUDIO=_4af("audio");
MochiKit.DOM.BR=_4af("br");
MochiKit.DOM.BUTTON=_4af("button");
MochiKit.DOM.CANVAS=_4af("canvas");
MochiKit.DOM.CAPTION=_4af("caption");
MochiKit.DOM.CITE=_4af("cite");
MochiKit.DOM.CODE=_4af("code");
MochiKit.DOM.DD=_4af("dd");
MochiKit.DOM.DEL=_4af("del");
MochiKit.DOM.DFN=_4af("dfn");
MochiKit.DOM.DIV=_4af("div");
MochiKit.DOM.DL=_4af("dl");
MochiKit.DOM.DT=_4af("dt");
MochiKit.DOM.EM=_4af("em");
MochiKit.DOM.EMBED=_4af("embed");
MochiKit.DOM.FIELDSET=_4af("fieldset");
MochiKit.DOM.FIGURE=_4af("figure");
MochiKit.DOM.FIGCAPTION=_4af("figcaption");
MochiKit.DOM.FOOTER=_4af("footer");
MochiKit.DOM.FORM=_4af("form");
MochiKit.DOM.H1=_4af("h1");
MochiKit.DOM.H2=_4af("h2");
MochiKit.DOM.H3=_4af("h3");
MochiKit.DOM.H4=_4af("h4");
MochiKit.DOM.H5=_4af("h5");
MochiKit.DOM.H6=_4af("h6");
MochiKit.DOM.HEADER=_4af("header");
MochiKit.DOM.HGROUP=_4af("hgroup");
MochiKit.DOM.HR=_4af("hr");
MochiKit.DOM.IFRAME=_4af("iframe");
MochiKit.DOM.IMG=_4af("img");
MochiKit.DOM.INPUT=_4af("input");
MochiKit.DOM.KBD=_4af("kbd");
MochiKit.DOM.LABEL=_4af("label");
MochiKit.DOM.LEGEND=_4af("legend");
MochiKit.DOM.LI=_4af("li");
MochiKit.DOM.LINK=_4af("link");
MochiKit.DOM.MARK=_4af("mark");
MochiKit.DOM.METER=_4af("meter");
MochiKit.DOM.NAV=_4af("nav");
MochiKit.DOM.OL=_4af("ol");
MochiKit.DOM.OPTGROUP=_4af("optgroup");
MochiKit.DOM.OPTION=_4af("option");
MochiKit.DOM.P=_4af("p");
MochiKit.DOM.PRE=_4af("pre");
MochiKit.DOM.PROGRESS=_4af("progress");
MochiKit.DOM.SAMP=_4af("samp");
MochiKit.DOM.SCRIPT=_4af("script");
MochiKit.DOM.SECTION=_4af("section");
MochiKit.DOM.SELECT=_4af("select");
MochiKit.DOM.SOURCE=_4af("source");
MochiKit.DOM.SPAN=_4af("span");
MochiKit.DOM.STRONG=_4af("strong");
MochiKit.DOM.STYLE=_4af("style");
MochiKit.DOM.SUB=_4af("sub");
MochiKit.DOM.SUP=_4af("sup");
MochiKit.DOM.TABLE=_4af("table");
MochiKit.DOM.TBODY=_4af("tbody");
MochiKit.DOM.TD=_4af("td");
MochiKit.DOM.TEXTAREA=_4af("textarea");
MochiKit.DOM.TFOOT=_4af("tfoot");
MochiKit.DOM.TH=_4af("th");
MochiKit.DOM.THEAD=_4af("thead");
MochiKit.DOM.TIME=_4af("time");
MochiKit.DOM.TR=_4af("tr");
MochiKit.DOM.TT=_4af("tt");
MochiKit.DOM.UL=_4af("ul");
MochiKit.DOM.VAR=_4af("var");
MochiKit.DOM.VIDEO=_4af("video");
MochiKit.DOM.NBSP="\xa0";
MochiKit.DOM.$=this.getElement;
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
window.withWindow=MochiKit.DOM.withWindow;
window.withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Selector");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_4b0){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_4b0.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_4b1){
throw "Parse error in selector: "+_4b1;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _4b3=this.params;
var expr=this.expression;
var _4b5,_4b6,_4b7,rest;
while(_4b5=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_4b3.attributes=_4b3.attributes||[];
_4b3.attributes.push({name:_4b5[2],operator:_4b5[3],value:_4b5[4]||_4b5[5]||""});
expr=_4b5[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_4b5=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_4b6=_4b5[1];
_4b7=_4b5[2];
rest=_4b5[3];
switch(_4b6){
case "#":
_4b3.id=_4b7;
break;
case ".":
_4b3.classNames.push(_4b7);
break;
case ":":
_4b3.pseudoClassNames.push(_4b7);
break;
case "":
case undefined:
_4b3.tagName=_4b7.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _4ba=this.params;
var _4bb=[];
var _4bc,i;
function childElements(_4be){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_4be+".childNodes)";
}
if(_4ba.wildcard){
_4bb.push("true");
}
if(_4bc=_4ba.id){
_4bb.push("element.id == "+repr(_4bc));
}
if(_4bc=_4ba.tagName){
_4bb.push("element.tagName.toUpperCase() == "+repr(_4bc));
}
if((_4bc=_4ba.classNames).length>0){
for(i=0;i<_4bc.length;i++){
_4bb.push("MochiKit.DOM.hasElementClass(element, "+repr(_4bc[i])+")");
}
}
if((_4bc=_4ba.pseudoClassNames).length>0){
for(i=0;i<_4bc.length;i++){
var _4bf=_4bc[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _4c0=_4bf[1];
var _4c1=_4bf[2];
switch(_4c0){
case "root":
_4bb.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_4bf=_4c1.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_4bf){
throw "Invalid argument to pseudo element nth-child: "+_4c1;
}
var a,b;
if(_4bf[0]=="odd"){
a=2;
b=1;
}else{
if(_4bf[0]=="even"){
a=2;
b=0;
}else{
a=_4bf[2]&&parseInt(_4bf,10)||null;
b=parseInt(_4bf[3],10);
}
}
_4bb.push("this.nthChild(element,"+a+","+b+","+!!_4c0.match("^nth-last")+","+!!_4c0.match("of-type$")+")");
break;
case "first-child":
_4bb.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_4bb.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_4bb.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_4bb.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_4bb.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_4bb.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_4bb.push("element.childNodes.length == 0");
break;
case "enabled":
_4bb.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_4bb.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_4bb.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _4c4=new MochiKit.Selector.Selector(_4c1);
_4bb.push("!( "+_4c4.buildMatchExpression()+")");
break;
}
}
}
if(_4bc=_4ba.attributes){
MochiKit.Base.map(function(_4c5){
var _4c6="MochiKit.DOM.getNodeAttribute(element, "+repr(_4c5.name)+")";
var _4c7=function(_4c8){
return _4c6+".split("+repr(_4c8)+")";
};
_4bb.push(_4c6+" != null");
switch(_4c5.operator){
case "=":
_4bb.push(_4c6+" == "+repr(_4c5.value));
break;
case "~=":
_4bb.push("MochiKit.Base.findValue("+_4c7(" ")+", "+repr(_4c5.value)+") > -1");
break;
case "^=":
_4bb.push(_4c6+".substring(0, "+_4c5.value.length+") == "+repr(_4c5.value));
break;
case "$=":
_4bb.push(_4c6+".substring("+_4c6+".length - "+_4c5.value.length+") == "+repr(_4c5.value));
break;
case "*=":
_4bb.push(_4c6+".match("+repr(_4c5.value)+")");
break;
case "|=":
_4bb.push(_4c7("-")+"[0].toUpperCase() == "+repr(_4c5.value.toUpperCase()));
break;
case "!=":
_4bb.push(_4c6+" != "+repr(_4c5.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_4c5.operator+" in selector";
}
},_4bc);
}
return _4bb.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_4ca,a,b,_4cd,_4ce){
var _4cf=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4ca.parentNode.childNodes);
if(_4ce){
_4cf=MochiKit.Base.filter(function(node){
return node.tagName==_4ca.tagName;
},_4cf);
}
if(_4cd){
_4cf=MochiKit.Iter.reversed(_4cf);
}
if(a){
var _4d2=MochiKit.Base.findIdentical(_4cf,_4ca);
return ((_4d2+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_4cf,_4ca)+1;
}
},isUIElement:function(_4d3){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_4d3.tagName.toLowerCase())>-1;
},findElements:function(_4d4,axis){
var _4d6;
if(axis==undefined){
axis="";
}
function inScope(_4d7,_4d8){
if(axis==""){
return MochiKit.DOM.isChildNode(_4d7,_4d8);
}else{
if(axis==">"){
return _4d7.parentNode===_4d8;
}else{
if(axis=="+"){
return _4d7===nextSiblingElement(_4d8);
}else{
if(axis=="~"){
var _4d9=_4d8;
while(_4d9=nextSiblingElement(_4d9)){
if(_4d7===_4d9){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_4d6=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_4d6)){
if(!_4d4||inScope(_4d6,_4d4)){
return [_4d6];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_4d4=(_4d4||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_4d4){
throw "> combinator not allowed without preceeding expression";
}
_4d4=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4d4.childNodes);
}else{
if(axis=="+"){
if(!_4d4){
throw "+ combinator not allowed without preceeding expression";
}
_4d4=nextSiblingElement(_4d4)&&[nextSiblingElement(_4d4)];
}else{
if(axis=="~"){
if(!_4d4){
throw "~ combinator not allowed without preceeding expression";
}
var _4dc=[];
while(nextSiblingElement(_4d4)){
_4d4=nextSiblingElement(_4d4);
_4dc.push(_4d4);
}
_4d4=_4dc;
}
}
}
}
if(!_4d4){
return [];
}
var _4dd=MochiKit.Base.filter(MochiKit.Base.bind(function(_4de){
return this.match(_4de);
},this),_4d4);
return _4dd;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_4df,_4e0){
_4df=MochiKit.DOM.getElement(_4df);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_4e5){
try{
var res=_4df.querySelectorAll(_4e5);
return Array.prototype.slice.call(res,0);
}
catch(ignore){
}
var _4e7="";
var _4e8=function(_4e9,expr){
var _4eb=expr.match(/^[>+~]$/);
if(_4eb){
_4e7=_4eb[0];
return _4e9;
}else{
var _4ec=new MochiKit.Selector.Selector(expr);
var _4ed=MochiKit.Iter.reduce(function(_4ee,_4ef){
return MochiKit.Base.extend(_4ee,_4ec.findElements(_4ef||_4df,_4e7));
},_4e9,[]);
_4e7="";
return _4ed;
}
};
var _4f0=_4e5.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_4e8,_4f0,[null]));
},_4e0));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Style");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_4f8){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_4f8=MochiKit.Base.camelize(_4f8);
if(!elem||elem==d){
return undefined;
}
if(_4f8=="opacity"&&typeof (elem.filters)!="undefined"){
var _4fb=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_4fb&&_4fb[1]){
return parseFloat(_4fb[1])/100;
}
return 1;
}
if(_4f8=="float"||_4f8=="cssFloat"||_4f8=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _4fc=elem.style?elem.style[_4f8]:null;
if(!_4fc){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_4f8=_4f8.replace(/([A-Z])/g,"-$1").toLowerCase();
_4fc=css?css.getPropertyValue(_4f8):null;
}else{
if(elem.currentStyle){
_4fc=elem.currentStyle[_4f8];
if(/^\d/.test(_4fc)&&!/px$/.test(_4fc)&&_4f8!="fontWeight"){
var left=elem.style.left;
var _4ff=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_4fc||0;
_4fc=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_4ff;
}
}
}
}
if(_4f8=="opacity"){
_4fc=parseFloat(_4fc);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_4f8)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_4fc="auto";
}
}
return _4fc=="auto"?null:_4fc;
},setStyle:function(elem,_501){
elem=MochiKit.DOM.getElement(elem);
for(var name in _501){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_501[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_501[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_501[name];
}else{
elem.style.styleFloat=_501[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_501[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _506=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_506?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_508){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _50b=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(typeof (elem)=="string"){
elem=dom.getElement(elem);
}
if(elem==null||(!_50b(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _50f=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(_50b(elem)){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_50f=elem.offsetParent;
if(_50f!=elem){
while(_50f){
c.x+=parseInt(_50f.style.borderLeftWidth,10)||0;
c.y+=parseInt(_50f.style.borderTopWidth,10)||0;
c.x+=_50f.offsetLeft;
c.y+=_50f.offsetTop;
_50f=_50f.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_50f=elem.parentNode;
}else{
_50f=null;
}
while(_50f){
var _514=_50f.tagName.toUpperCase();
if(_514==="BODY"||_514==="HTML"){
break;
}
var disp=self.getStyle(_50f,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_50f.scrollLeft;
c.y-=_50f.scrollTop;
}
if(_50f.parentNode){
_50f=_50f.parentNode;
}else{
_50f=null;
}
}
}
}
}
if(_508){
_508=arguments.callee(_508);
if(_508){
c.x-=(_508.x||0);
c.y-=(_508.y||0);
}
}
return c;
},setElementPosition:function(elem,_517,_518){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_518)=="undefined"){
_518="px";
}
var _519={};
var _51a=MochiKit.Base.isUndefinedOrNull;
if(!_51a(_517.x)){
_519["left"]=_517.x+_518;
}
if(!_51a(_517.y)){
_519["top"]=_517.y+_518;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_519});
},makePositioned:function(_51b){
_51b=MochiKit.DOM.getElement(_51b);
var pos=MochiKit.Style.getStyle(_51b,"position");
if(pos=="static"||!pos){
_51b.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_51b.style.top=0;
_51b.style.left=0;
}
}
},undoPositioned:function(_51d){
_51d=MochiKit.DOM.getElement(_51d);
if(_51d.style.position=="relative"){
_51d.style.position=_51d.style.top=_51d.style.left=_51d.style.bottom=_51d.style.right="";
}
},makeClipping:function(_51e){
_51e=MochiKit.DOM.getElement(_51e);
var s=_51e.style;
var _520={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_51e,"overflow")||"visible")!="hidden"){
_51e.style.overflow="hidden";
_51e.style.overflowX="hidden";
_51e.style.overflowY="hidden";
}
return _520;
},undoClipping:function(_521,_522){
_521=MochiKit.DOM.getElement(_521);
if(typeof (_522)=="string"){
_521.style.overflow=_522;
}else{
if(_522!=null){
_521.style.overflow=_522["overflow"];
_521.style.overflowX=_522["overflow-x"];
_521.style.overflowY=_522["overflow-y"];
}
}
},getElementDimensions:function(elem,_524){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _529=s.visibility;
var _52a=s.position;
var _52b=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _52c=elem.offsetWidth;
var _52d=elem.offsetHeight;
s.display=_52b;
s.position=_52a;
s.visibility=_529;
}else{
_52c=elem.offsetWidth||0;
_52d=elem.offsetHeight||0;
}
if(_524){
var _52e="colSpan" in elem&&"rowSpan" in elem;
var _52f=(_52e&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_52f){
if(/MSIE/.test(navigator.userAgent)){
var _530=elem.previousSibling?0.5:1;
var _531=elem.nextSibling?0.5:1;
}else{
var _530=0.5;
var _531=0.5;
}
}else{
var _530=1;
var _531=1;
}
_52c-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_530*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_531*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_52e){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _532=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _532=1;
}else{
var _532=_52f?0.5:1;
}
}
}else{
var _532=1;
}
_52d-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_532*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_52c,_52d);
},setElementDimensions:function(elem,_534,_535){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_535)=="undefined"){
_535="px";
}
var _536={};
var _537=MochiKit.Base.isUndefinedOrNull;
if(!_537(_534.w)){
_536["width"]=_534.w+_535;
}
if(!_537(_534.h)){
_536["height"]=_534.h+_535;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_536});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _53b=elem.tagName.toUpperCase();
return self._defaultDisplay[_53b]||"block";
},setDisplayForElement:function(_53c,_53d,_53e){
var _53f=MochiKit.Base.extend(null,arguments,1);
var _540=MochiKit.DOM.getElement;
for(var i=0;i<_53f.length;i++){
_53d=_540(_53f[i]);
if(_53d){
_53d.style.display=_53c;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _54a=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_54a.length;i++){
this._defaultDisplay[_54a[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3",true);
MochiKit.Style.hideElement=m.partial(MochiKit.Style.setDisplayForElement,"none");
MochiKit.Style.showElement=m.partial(MochiKit.Style.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.LoggingPane");
goog.require("MochiKit.Base");
goog.require("MochiKit.Logging");
}
MochiKit.Base.module(MochiKit,"LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_54e){
var m=MochiKit.LoggingPane;
_54e=!(!_54e);
if(m._loggingPane&&m._loggingPane.inline!=_54e){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_54e,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_550,_551){
if(typeof (_551)=="undefined"||_551===null){
_551=MochiKit.Logging.logger;
}
this.logger=_551;
var _552=MochiKit.Base.update;
var _553=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _555=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_550){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _55c=doc.getElementById(uid);
var _55d=!!_55c;
if(_55c&&typeof (_55c.loggingPane)!="undefined"){
_55c.loggingPane.logger=this.logger;
_55c.loggingPane.buildAndApplyFilter();
return _55c.loggingPane;
}
if(_55d){
var _55e;
while((_55e=_55c.firstChild)){
_55c.removeChild(_55e);
}
}else{
_55c=doc.createElement("div");
_55c.id=uid;
}
_55c.loggingPane=this;
var _55f=doc.createElement("input");
var _560=doc.createElement("input");
var _561=doc.createElement("button");
var _562=doc.createElement("button");
var _563=doc.createElement("button");
var _564=doc.createElement("button");
var _565=doc.createElement("div");
var _566=doc.createElement("div");
var _567=uid+"_Listener";
this.colorTable=_555(this.colorTable);
var _568=[];
var _569=null;
var _56a=function(msg){
var _56c=msg.level;
if(typeof (_56c)=="number"){
_56c=MochiKit.Logging.LogLevel[_56c];
}
return _56c;
};
var _56d=function(msg){
return msg.info.join(" ");
};
var _56f=bind(function(msg){
var _571=_56a(msg);
var text=_56d(msg);
var c=this.colorTable[_571];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_571;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_571+": "+text));
_566.appendChild(p);
_566.appendChild(doc.createElement("br"));
if(_565.offsetHeight>_565.scrollHeight){
_565.scrollTop=0;
}else{
_565.scrollTop=_565.scrollHeight;
}
},this);
var _575=function(msg){
_568[_568.length]=msg;
_56f(msg);
};
var _577=function(){
var _578,_579;
try{
_578=new RegExp(_55f.value);
_579=new RegExp(_560.value);
}
catch(e){
MochiKit.Logging.logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_578.test(_56a(msg))&&_579.test(_56d(msg)));
};
};
var _57b=function(){
while(_566.firstChild){
_566.removeChild(_566.firstChild);
}
};
var _57c=function(){
_568=[];
_57b();
};
var _57d=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_567);
try{
try{
_55c.loggingPane=null;
}
catch(e){
MochiKit.Logging.logFatal("Bookmarklet was closed incorrectly.");
}
if(_550){
_55c.parentNode.removeChild(_55c);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _57e=function(){
_57b();
for(var i=0;i<_568.length;i++){
var msg=_568[i];
if(_569===null||_569(msg)){
_56f(msg);
}
}
};
this.buildAndApplyFilter=function(){
_569=_577();
_57e();
this.logger.removeListener(_567);
this.logger.addListener(_567,_569,_575);
};
var _581=bind(function(){
_568=this.logger.getMessages();
_57e();
},this);
var _582=bind(function(_583){
_583=_583||window.event;
var key=_583.which||_583.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _585="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_550){
_585+="; height: 10em; border-top: 2px solid black";
}else{
_585+="; height: 100%;";
}
_55c.style.cssText=_585;
if(!_55d){
doc.body.appendChild(_55c);
}
_585={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_553(_55f,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_582,"style":_585});
_55c.appendChild(_55f);
_553(_560,{"value":".*","onkeypress":_582,"style":_585});
_55c.appendChild(_560);
_585="width: 8%; display:inline; font: "+this.logFont;
_561.appendChild(doc.createTextNode("Filter"));
_561.onclick=bind("buildAndApplyFilter",this);
_561.style.cssText=_585;
_55c.appendChild(_561);
_562.appendChild(doc.createTextNode("Load"));
_562.onclick=_581;
_562.style.cssText=_585;
_55c.appendChild(_562);
_563.appendChild(doc.createTextNode("Clear"));
_563.onclick=_57c;
_563.style.cssText=_585;
_55c.appendChild(_563);
_564.appendChild(doc.createTextNode("Close"));
_564.onclick=_57d;
_564.style.cssText=_585;
_55c.appendChild(_564);
_565.style.cssText="overflow: auto; width: 100%";
_566.style.cssText="width: 100%; height: "+(_550?"8em":"100%");
_565.appendChild(_566);
_55c.appendChild(_565);
this.buildAndApplyFilter();
_581();
if(_550){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_550;
this.closePane=_57d;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Color");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_587,blue,_589){
if(typeof (_589)=="undefined"||_589===null){
_589=1;
}
this.rgb={r:red,g:_587,b:blue,a:_589};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_58a){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_58a);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_590){
var hsl=this.asHSL();
hsl.s=_590;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_593){
var hsl=this.asHSL();
hsl.l=_593;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_596){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_596,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_599){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_599,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_59c,_59d){
if(typeof (_59d)=="undefined"||_59d===null){
_59d=0.5;
}
var sf=1-_59d;
var s=this.rgb;
var d=_59c.rgb;
var df=_59d;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_5a2){
var a=this.asRGB();
var b=_5a2.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().l>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_5b9,blue,_5bb){
var _5bc=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5b9=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_5bb=undefined;
}else{
_5bb=rgb.a;
}
}
return new _5bc(red,_5b9,blue,_5bb);
},fromHSL:function(hue,_5bf,_5c0,_5c1){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_5c4,_5c5,_5c6){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _5c9=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _5ca=_5c9._namedColors[name.toLowerCase()];
if(typeof (_5ca)=="string"){
return _5c9.fromHexString(_5ca);
}else{
if(name=="transparent"){
return _5c9.transparentColor();
}
}
return null;
},fromString:function(_5cb){
var self=MochiKit.Color.Color;
var _5cd=_5cb.substr(0,3);
if(_5cd=="rgb"){
return self.fromRGBString(_5cb);
}else{
if(_5cd=="hsl"){
return self.fromHSLString(_5cb);
}else{
if(_5cb.charAt(0)=="#"){
return self.fromHexString(_5cb);
}
}
}
return self.fromName(_5cb);
},fromHexString:function(_5ce){
if(_5ce.charAt(0)=="#"){
_5ce=_5ce.substring(1);
}
var _5cf=[];
var i,hex;
if(_5ce.length==3){
for(i=0;i<3;i++){
hex=_5ce.substr(i,1);
_5cf.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_5ce.substr(i,2);
_5cf.push(parseInt(hex,16)/255);
}
}
var _5d2=MochiKit.Color.Color;
return _5d2.fromRGB.apply(_5d2,_5cf);
},_fromColorString:function(pre,_5d4,_5d5,_5d6){
if(_5d6.indexOf(pre)===0){
_5d6=_5d6.substring(_5d6.indexOf("(",3)+1,_5d6.length-1);
}
var _5d7=_5d6.split(/\s*,\s*/);
var _5d8=[];
for(var i=0;i<_5d7.length;i++){
var c=_5d7[i];
var val;
var _5dc=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_5dc=="deg"){
val=parseFloat(c)/360;
}else{
if(_5dc=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_5d5[i]*parseFloat(c);
}
}
}
_5d8.push(val);
}
return this[_5d4].apply(this,_5d8);
},fromComputedStyle:function(elem,_5de){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _5e1=MochiKit.Style.getStyle.apply(d,arguments);
if(!_5e1){
continue;
}
var _5e2=cls.fromString(_5e1);
if(!_5e2){
break;
}
if(_5e2.asRGB().a>0){
return _5e2;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_5e8){
v*=_5e8;
if(v<0){
return 0;
}else{
if(v>_5e8){
return _5e8;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_5ee,_5ef,_5f0){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_5ee=hsv.s;
_5ef=hsv.v;
_5f0=hsv.a;
}
var red;
var _5f3;
var blue;
if(_5ee===0){
red=_5ef;
_5f3=_5ef;
blue=_5ef;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_5ef*(1-_5ee);
var q=_5ef*(1-(_5ee*f));
var t=_5ef*(1-(_5ee*(1-f)));
switch(i){
case 1:
red=q;
_5f3=_5ef;
blue=p;
break;
case 2:
red=p;
_5f3=_5ef;
blue=t;
break;
case 3:
red=p;
_5f3=q;
blue=_5ef;
break;
case 4:
red=t;
_5f3=p;
blue=_5ef;
break;
case 5:
red=_5ef;
_5f3=p;
blue=q;
break;
case 6:
case 0:
red=_5ef;
_5f3=t;
blue=p;
break;
}
}
return {r:red,g:_5f3,b:blue,a:_5f0};
},hslToRGB:function(hue,_5fb,_5fc,_5fd){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_5fb=hsl.s;
_5fc=hsl.l;
_5fd=hsl.a;
}
var red;
var _600;
var blue;
if(_5fb===0){
red=_5fc;
_600=_5fc;
blue=_5fc;
}else{
var m2;
if(_5fc<=0.5){
m2=_5fc*(1+_5fb);
}else{
m2=_5fc+_5fb-(_5fc*_5fb);
}
var m1=(2*_5fc)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_600=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_600,b:blue,a:_5fd};
},rgbToHSV:function(red,_607,blue,_609){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_607=rgb.g;
blue=rgb.b;
_609=rgb.a;
}
var max=Math.max(Math.max(red,_607),blue);
var min=Math.min(Math.min(red,_607),blue);
var hue;
var _60e;
var _60f=max;
if(min==max){
hue=0;
_60e=0;
}else{
var _610=(max-min);
_60e=_610/max;
if(red==max){
hue=(_607-blue)/_610;
}else{
if(_607==max){
hue=2+((blue-red)/_610);
}else{
hue=4+((red-_607)/_610);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_60e,v:_60f,a:_609};
},rgbToHSL:function(red,_612,blue,_614){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_612=rgb.g;
blue=rgb.b;
_614=rgb.a;
}
var max=Math.max(red,Math.max(_612,blue));
var min=Math.min(red,Math.min(_612,blue));
var hue;
var _619;
var _61a=(max+min)/2;
var _61b=max-min;
if(_61b===0){
hue=0;
_619=0;
}else{
if(_61a<=0.5){
_619=_61b/(max+min);
}else{
_619=_61b/(2-max-min);
}
if(red==max){
hue=(_612-blue)/_61b;
}else{
if(_612==max){
hue=2+((blue-red)/_61b);
}else{
hue=4+((red-_612)/_61b);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_619,l:_61a,a:_614};
},toColorPart:function(num){
num=Math.round(num);
var _61d=num.toString(16);
if(num<16){
return "0"+_61d;
}
return _61d;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _61f=1/3;
var _620={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_61f,_61f,_61f],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_61f,2*_61f,2*_61f],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
for(var k in _620){
var name=k+"Color";
var _623=this.Color.fromRGB.apply(this.Color,_620[k]);
this.Color[name]=m.partial(m.operator.identity,_623);
}
var _624=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _626=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_624,_626);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Signal");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Signal","1.5",["Base","DOM"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Signal.Event.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
};
MochiKit.Signal.Event.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Signal.Event.prototype.src=function(){
return this._src;
};
MochiKit.Signal.Event.prototype.event=function(){
return this._event;
};
MochiKit.Signal.Event.prototype.type=function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
};
MochiKit.Signal.Event.prototype.target=function(){
return this._event.target||this._event.srcElement;
};
MochiKit.Signal.Event.prototype._relatedTarget=null;
MochiKit.Signal.Event.prototype.relatedTarget=function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
};
MochiKit.Signal.Event.prototype._modifier=null;
MochiKit.Signal.Event.prototype.modifier=function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
};
MochiKit.Signal.Event.prototype._key=null;
MochiKit.Signal.Event.prototype.key=function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
};
MochiKit.Signal.Event.prototype._mouse=null;
MochiKit.Signal.Event.prototype.mouse=function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("drag")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client={x:0,y:0};
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page={x:0,y:0};
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel={x:0,y:0};
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
};
MochiKit.Signal.Event.prototype.stop=function(){
this.stopPropagation();
this.preventDefault();
};
MochiKit.Signal.Event.prototype.stopPropagation=function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
};
MochiKit.Signal.Event.prototype.preventDefault=function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
};
MochiKit.Signal.Event.prototype._confirmUnload=null;
MochiKit.Signal.Event.prototype.confirmUnload=function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
};
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _635=MochiKit.Signal._specialMacKeys;
for(var i=63236;i<=63242;i++){
_635[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _637=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_637[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_637[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_637[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_637[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_639){
this.source=_639.source;
this.signal=_639.signal;
this.listener=_639.listener;
this.isDOM=_639.isDOM;
this.objOrFunc=_639.objOrFunc;
this.funcOrStr=_639.funcOrStr;
this.connected=_639.connected;
this.namespace=_639.namespace;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Signal.Ident.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "src:"+repr(this.source)+", sig: "+repr(this.signal)+", isDOM: "+repr(this.isDOM)+", connected: "+repr(this.connected);
};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _63c=self._observers;
for(var i=0;i<_63c.length;i++){
if(_63c[i].signal!=="onload"&&_63c[i].signal!=="onunload"){
self._disconnect(_63c[i]);
}
}
},_listener:function(src,sig,func,obj,_642){
var self=MochiKit.Signal;
var E=self.Event;
if(!_642){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_645){
obj[func].apply(obj,[new E(src,_645)]);
var _646=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_646);
};
}else{
return function(_647){
obj[func].apply(obj,[new E(src,_647)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_648){
func.apply(obj,[new E(src,_648)]);
var _649=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_649);
};
}else{
return function(_64a){
func.apply(obj,[new E(src,_64a)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_650){
var e=new E(src,_650);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_652,_653){
var obj=null;
var func=null;
if(typeof (_653)!="undefined"){
obj=_652;
func=_653;
if(typeof (_653)=="string"){
if(typeof (_652[_653])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_653)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_652)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_652;
}
}
return [obj,func];
},connect:function(src,sig,_658,_659,_65a){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _65c=sig.split(".");
if(_65c.length>=2){
sig=_65c[0];
}
var _65d=self._getDestPair(_658,_659);
var obj=_65d[0];
var func=_65d[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _660=!!(src.addEventListener||src.attachEvent);
if(_660&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _661=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_660&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _661=self._listener(src,sig,func,obj,_660);
sig="onDOMMouseScroll";
}else{
var _661=self._listener(src,sig,func,obj,_660);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_661,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_661);
}
}
var _662=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_661,isDOM:_660,objOrFunc:_658,funcOrStr:_659,connected:true,namespace:_65c[1]||""});
self._observers.push(_662);
if(!_660&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_662],arguments,1);
src.__connect__.apply(src,args);
}
return _662;
},connectOnce:function(src,sig,_666,_667){
var self=MochiKit.Signal;
var _669=self.connect(src,sig,_666,_667);
var _66a;
_66a=self.connect(src,sig,function(){
self.disconnect(_669);
self.disconnect(_66a);
});
return _669;
},_disconnect:function(_66b){
if(!_66b.connected){
return;
}
_66b.connected=false;
var src=_66b.source;
var sig=_66b.signal;
var _66e=_66b.listener;
if(!_66b.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_66b,sig,_66b.objOrFunc,_66b.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_66e,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_66e);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_66f){
var self=MochiKit.Signal;
var _671=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_671.length-1;i>=0;i--){
var o=_671[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(self._lock===0){
_671.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_671,_66f);
if(idx>=0){
self._disconnect(_66f);
if(self._lock===0){
_671.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_67a,_67b){
var self=MochiKit.Signal;
var _67d=self._observers;
var _67e=self._disconnect;
var lock=self._lock;
var _680=self._dirty;
if(typeof (_67b)==="undefined"){
_67b=null;
}
for(var i=_67d.length-1;i>=0;i--){
var _682=_67d[i];
if(_682.objOrFunc===_67a&&(_67b===null||_682.funcOrStr===_67b)){
_67e(_682);
if(lock===0){
_67d.splice(i,1);
}else{
_680=true;
}
}
}
self._dirty=_680;
},disconnectAll:function(src,_684){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _686=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _688=self._disconnect;
var _689=self._observers;
var i,_68b;
var lock=self._lock;
var _68d=self._dirty;
if(_686.length===0){
for(i=_689.length-1;i>=0;i--){
_68b=_689[i];
if(_68b.source===src){
_688(_68b);
if(lock===0){
_689.splice(i,1);
}else{
_68d=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_686.length;i++){
sigs[_686[i]]=true;
}
for(i=_689.length-1;i>=0;i--){
_68b=_689[i];
if(_68b.source===src&&_68b.signal in sigs){
_688(_68b);
if(lock===0){
_689.splice(i,1);
}else{
_68d=true;
}
}
}
}
self._dirty=_68d;
},disconnectNS:function(_68f){
var self=MochiKit.Signal;
var _691=_68f.split(".");
if(_691.length!=2){
throw new Error("No namespace found in 'sigAndOrNS'");
}
var _692=_691[0];
var _693=_691[1];
var n=0;
var _695=self._observers;
for(var i=_695.length-1;i>=0;i--){
var _697=_695[i];
if((_697.namespace==_693)&&((_692!=""&&_697.signal==_692)||(_692==""))){
self._disconnect(_697);
if(self._lock===0){
_695.splice(i,1);
}else{
self._dirty=true;
}
n+=1;
}
}
return n;
},signal:function(src,sig,_69a){
var self=MochiKit.Signal;
var _69c=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _69e=[];
self._lock++;
for(var i=0;i<_69c.length;i++){
var _6a0=_69c[i];
if(_6a0.source===src&&_6a0.signal===sig&&_6a0.connected){
try{
if(_6a0.isDOM&&_6a0.funcOrStr!=null){
var obj=_6a0.objOrFunc;
obj[_6a0.funcOrStr].apply(obj,args);
}else{
if(_6a0.isDOM){
_6a0.objOrFunc.apply(src,args);
}else{
_6a0.listener.apply(src,args);
}
}
}
catch(e){
_69e.push(e);
}
}
}
self._lock--;
self._gc();
if(_69e.length==1){
throw _69e[0];
}else{
if(_69e.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_69e;
throw e;
}
}
},_gc:function(){
var self=MochiKit.Signal;
var _6a4=self._observers;
if(self._lock===0&&self._dirty){
for(var i=_6a4.length-1;i>=0;i--){
if(!_6a4[i].connected){
_6a4.splice(i,1);
}
}
self._dirty=false;
return true;
}
return false;
}});
MochiKit.Signal.disconnectAllFromTo=function(src,_6a7){
var self=MochiKit.Signal;
var _6a9=self._observers;
var _6aa=self._disconnect;
var lock=self._lock;
var _6ac=self._dirty;
for(var i=_6a9.length-1;i>=0;i--){
var _6ae=_6a9[i];
if(_6ae.objOrFunc===_6a7&&_6ae.source==src){
_6aa(_6ae);
if(lock===0){
_6a9.splice(i,1);
}else{
_6ac=true;
}
}
}
self._dirty=_6ac;
};
MochiKit.Signal.close=function(obj){
MochiKit.Signal.disconnectAll(obj);
MochiKit.Signal.disconnectAllTo(obj);
};
MochiKit.Signal._pubsub_topics={};
MochiKit.Signal.publish=function(_6b0,_6b1){
MochiKit.Signal.signal.apply(MochiKit.Signal,MochiKit.Base.extend([MochiKit.Signal._pubsub_topics,_6b0],arguments,1));
};
MochiKit.Signal.subscribe=function(_6b2,_6b3,_6b4){
return MochiKit.Signal.connect(MochiKit.Signal._pubsub_topics,_6b2,_6b3,_6b4);
};
MochiKit.Signal.unsubscribe=function(_6b5){
MochiKit.Signal.disconnect(_6b5);
};
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
MochiKit.Signal._lock=0;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
window.connect=MochiKit.Signal.connect;
window.disconnect=MochiKit.Signal.disconnect;
window.disconnectAll=MochiKit.Signal.disconnectAll;
window.signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Position");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _6b8=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _6b9=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_6b8,_6b9);
},cumulativeOffset:function(_6ba){
var _6bb=0;
var _6bc=0;
do{
_6bb+=_6ba.offsetTop||0;
_6bc+=_6ba.offsetLeft||0;
_6ba=_6ba.offsetParent;
}while(_6ba);
return new MochiKit.Style.Coordinates(_6bc,_6bb);
},realOffset:function(_6bd){
var _6be=0;
var _6bf=0;
do{
_6be+=_6bd.scrollTop||0;
_6bf+=_6bd.scrollLeft||0;
_6bd=_6bd.parentNode;
}while(_6bd);
return new MochiKit.Style.Coordinates(_6bf,_6be);
},within:function(_6c0,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_6c0,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_6c0);
if(_6c0.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_6c0.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_6c0.offsetWidth);
},withinIncludingScrolloffsets:function(_6c3,x,y){
var _6c6=this.realOffset(_6c3);
this.xcomp=x+_6c6.x-this.windowOffset.x;
this.ycomp=y+_6c6.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_6c3);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_6c3.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_6c3.offsetWidth);
},overlap:function(mode,_6c8){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_6c8.offsetHeight)-this.ycomp)/_6c8.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_6c8.offsetWidth)-this.xcomp)/_6c8.offsetWidth;
}
},absolutize:function(_6c9){
_6c9=MochiKit.DOM.getElement(_6c9);
if(_6c9.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _6ca=MochiKit.Position.positionedOffset(_6c9);
var _6cb=_6c9.clientWidth;
var _6cc=_6c9.clientHeight;
var _6cd={"position":_6c9.style.position,"left":_6ca.x-parseFloat(_6c9.style.left||0),"top":_6ca.y-parseFloat(_6c9.style.top||0),"width":_6c9.style.width,"height":_6c9.style.height};
_6c9.style.position="absolute";
_6c9.style.top=_6ca.y+"px";
_6c9.style.left=_6ca.x+"px";
_6c9.style.width=_6cb+"px";
_6c9.style.height=_6cc+"px";
return _6cd;
},positionedOffset:function(_6ce){
var _6cf=0,_6d0=0;
do{
_6cf+=_6ce.offsetTop||0;
_6d0+=_6ce.offsetLeft||0;
_6ce=_6ce.offsetParent;
if(_6ce){
var p=MochiKit.Style.getStyle(_6ce,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_6ce);
return new MochiKit.Style.Coordinates(_6d0,_6cf);
},relativize:function(_6d2,_6d3){
_6d2=MochiKit.DOM.getElement(_6d2);
if(_6d2.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_6d2.style.top||0)-(_6d3["top"]||0);
var left=parseFloat(_6d2.style.left||0)-(_6d3["left"]||0);
_6d2.style.position=_6d3["position"];
_6d2.style.top=top+"px";
_6d2.style.left=left+"px";
_6d2.style.width=_6d3["width"];
_6d2.style.height=_6d3["height"];
},clone:function(_6d6,_6d7){
_6d6=MochiKit.DOM.getElement(_6d6);
_6d7=MochiKit.DOM.getElement(_6d7);
_6d7.style.position="absolute";
var _6d8=this.cumulativeOffset(_6d6);
_6d7.style.top=_6d8.y+"px";
_6d7.style.left=_6d8.x+"px";
_6d7.style.width=_6d6.offsetWidth+"px";
_6d7.style.height=_6d6.offsetHeight+"px";
},page:function(_6d9){
var _6da=0;
var _6db=0;
var _6dc=_6d9;
do{
_6da+=_6dc.offsetTop||0;
_6db+=_6dc.offsetLeft||0;
if(_6dc.offsetParent==document.body&&MochiKit.Style.getStyle(_6dc,"position")=="absolute"){
break;
}
}while(_6dc=_6dc.offsetParent);
_6dc=_6d9;
do{
_6da-=_6dc.scrollTop||0;
_6db-=_6dc.scrollLeft||0;
}while(_6dc=_6dc.parentNode);
return new MochiKit.Style.Coordinates(_6db,_6da);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Visual");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
goog.require("MochiKit.Color");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_6df){
e=MochiKit.DOM.getElement(e);
this._setOptions(_6df);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _6e0=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_6e0=C.fromBackground(e);
}else{
if(!(_6e0 instanceof C)){
_6e0=C.fromString(_6e0);
}
}
this.isTransparent=(_6e0.asRGB().a<=0);
var _6e2=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_6e2=C.fromBackground(e.offsetParent);
}else{
if(!(_6e2 instanceof C)){
_6e2=C.fromString(_6e2);
}
}
this._roundCornersImpl(e,_6e0,_6e2);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _6e4=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _6e6=doc.defaultView.getComputedStyle(e,null);
if(typeof (_6e6)==="undefined"||_6e6===null){
return e;
}
var _6e7=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_6e6.getPropertyValue("padding-top"),marginRight:_6e6.getPropertyValue("padding-right"),marginBottom:_6e6.getPropertyValue("padding-bottom"),marginLeft:_6e6.getPropertyValue("padding-left"),padding:"0px"}});
_6e7.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_6e7);
return e;
},_roundCornersImpl:function(e,_6e9,_6ea){
if(this.options.border){
this._renderBorder(e,_6ea);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_6e9,_6ea);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_6e9,_6ea);
}
},_renderBorder:function(el,_6ec){
var _6ed="1px solid "+this._borderColor(_6ec);
var _6ee="border-left: "+_6ed;
var _6ef="border-right: "+_6ed;
var _6f0="style='"+_6ee+";"+_6ef+"'";
el.innerHTML="<div "+_6f0+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_6f2,_6f3){
var _6f4=this._createCorner(_6f3);
for(var i=0;i<this.options.numSlices;i++){
_6f4.appendChild(this._createCornerSlice(_6f2,_6f3,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_6f4,el.firstChild);
},_roundBottomCorners:function(el,_6f7,_6f8){
var _6f9=this._createCorner(_6f8);
for(var i=(this.options.numSlices-1);i>=0;i--){
_6f9.appendChild(this._createCornerSlice(_6f7,_6f8,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_6f9);
},_createCorner:function(_6fb){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_6fb.toString()}});
},_createCornerSlice:function(_6fd,_6fe,n,_700){
var _701=MochiKit.DOM.SPAN();
var _702=_701.style;
_702.backgroundColor=_6fd.toString();
_702.display="block";
_702.height="1px";
_702.overflow="hidden";
_702.fontSize="1px";
var _703=this._borderColor(_6fd,_6fe);
if(this.options.border&&n===0){
_702.borderTopStyle="solid";
_702.borderTopWidth="1px";
_702.borderLeftWidth="0px";
_702.borderRightWidth="0px";
_702.borderBottomWidth="0px";
_702.height="0px";
_702.borderColor=_703.toString();
}else{
if(_703){
_702.borderColor=_703.toString();
_702.borderStyle="solid";
_702.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_702.height="2px";
}
this._setMargin(_701,n,_700);
this._setBorder(_701,n,_700);
return _701;
},_setOptions:function(_704){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_704);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _705=this.options.corners;
if(this._hasString(_705,"all","top")){
return "";
}
var _706=(_705.indexOf("tl")!=-1);
var _707=(_705.indexOf("tr")!=-1);
if(_706&&_707){
return "";
}
if(_706){
return "left";
}
if(_707){
return "right";
}
return "";
},_whichSideBottom:function(){
var _708=this.options.corners;
if(this._hasString(_708,"all","bottom")){
return "";
}
var _709=(_708.indexOf("bl")!=-1);
var _70a=(_708.indexOf("br")!=-1);
if(_709&&_70a){
return "";
}
if(_709){
return "left";
}
if(_70a){
return "right";
}
return "";
},_borderColor:function(_70b,_70c){
if(_70b=="transparent"){
return _70c;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _70c.blendedColor(_70b);
}
}
}
return "";
},_setMargin:function(el,n,_70f){
var _710=this._marginSize(n)+"px";
var _711=(_70f=="top"?this._whichSideTop():this._whichSideBottom());
var _712=el.style;
if(_711=="left"){
_712.marginLeft=_710;
_712.marginRight="0px";
}else{
if(_711=="right"){
_712.marginRight=_710;
_712.marginLeft="0px";
}else{
_712.marginLeft=_710;
_712.marginRight=_710;
}
}
},_setBorder:function(el,n,_715){
var _716=this._borderSize(n)+"px";
var _717=(_715=="top"?this._whichSideTop():this._whichSideBottom());
var _718=el.style;
if(_717=="left"){
_718.borderLeftWidth=_716;
_718.borderRightWidth="0px";
}else{
if(_717=="right"){
_718.borderRightWidth=_716;
_718.borderLeftWidth="0px";
}else{
_718.borderLeftWidth=_716;
_718.borderRightWidth=_716;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _71b=[1,0];
return _71b[n];
}else{
if(o.compact){
var _71c=[2,1];
return _71c[n];
}else{
if(o.blend){
var _71d=[3,2,1,0];
return _71d[n];
}else{
var _71e=[5,3,2,1];
return _71e[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _721;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_721=[1,0];
}else{
if(o.blend){
_721=[2,1,1,1];
}else{
if(o.border){
_721=[0,2,0,0];
}else{
if(this.isTransparent){
_721=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _721[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_726){
new MochiKit.Visual._RoundCorners(e,_726);
};
MochiKit.Visual.roundClass=function(_727,_728,_729){
var _72a=MochiKit.DOM.getElementsByTagAndClassName(_727,_728);
for(var i=0;i<_72a.length;i++){
MochiKit.Visual.roundElement(_72a[i],_729);
}
};
MochiKit.Visual.tagifyText=function(_72c,_72d){
_72d=_72d||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_72d+=";zoom:1";
}
_72c=MochiKit.DOM.getElement(_72c);
var ma=MochiKit.Base.map;
ma(function(_72f){
if(_72f.nodeType==3){
ma(function(_730){
_72c.insertBefore(MochiKit.DOM.SPAN({style:_72d},_730==" "?String.fromCharCode(160):_730),_72f);
},_72f.nodeValue.split(""));
MochiKit.DOM.removeElement(_72f);
}
},_72c.childNodes);
};
MochiKit.Visual._forceRerendering=function(_731){
try{
_731=MochiKit.DOM.getElement(_731);
var n=document.createTextNode(" ");
_731.appendChild(n);
_731.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_733,_734,_735){
_735=MochiKit.Base.update({speed:0.1,delay:0},_735);
var _736=_735.delay;
var _737=0;
MochiKit.Base.map(function(_738){
_735.delay=_737*_735.speed+_736;
new _734(_738,_735);
_737+=1;
},_733);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_739,_73a,_73b){
_739=MochiKit.DOM.getElement(_739);
_73a=(_73a||"appear").toLowerCase();
_73b=MochiKit.Base.update({queue:{position:"end",scope:(_739.id||"global"),limit:1}},_73b);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_739,"display")!="none"?v.PAIRS[_73a][1]:v.PAIRS[_73a][0]](_739,_73b);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_743){
if(_743){
pos*=2*_743;
}else{
pos*=10;
}
var _744=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_744:1-_744;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.spring=function(pos){
return 1-(Math.cos(pos*2.5*Math.PI)*Math.exp(-pos*6));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_74a){
var _74b=new Date().getTime();
var _74c=(typeof (_74a.options.queue)=="string")?_74a.options.queue:_74a.options.queue.position;
var ma=MochiKit.Base.map;
switch(_74c){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_74a.finishOn;
e.finishOn+=_74a.finishOn;
}
},this.effects);
break;
case "end":
var _74f;
ma(function(e){
var i=e.finishOn;
if(i>=(_74f||i)){
_74f=i;
}
},this.effects);
_74b=_74f||_74b;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
case "replace":
ma(function(e){
e.cancel();
},this.effects);
break;
}
_74a.startOn+=_74b;
_74a.finishOn+=_74b;
if(!_74a.options.queue.limit||this.effects.length<_74a.options.queue.limit){
this.effects.push(_74a);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_755){
return setInterval(func,_755);
},remove:function(_756){
this.effects=MochiKit.Base.filter(function(e){
return e!=_756;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_758){
clearInterval(_758);
},loop:function(){
var _759=new Date().getTime();
MochiKit.Base.map(function(_75a){
_75a.loop(_759);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_75b){
if(typeof (_75b)!="string"){
return _75b;
}
if(!this.instances[_75b]){
this.instances[_75b]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_75b];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_75c){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_75c,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_75e){
if(_75e>=this.startOn){
if(_75e>=this.finishOn){
return this.finalize();
}
var pos=(_75e-this.startOn)/(this.finishOn-this.startOn);
var _760=Math.round(pos*this.options.fps*this.options.duration);
if(_760>this.currentFrame){
this.render(pos);
this.currentFrame=_760;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
var _762=this.options.transition;
if(typeof (_762)=="string"){
_762=MochiKit.Visual.Transitions[_762];
}
if(typeof (_762)=="function"){
pos=_762(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_763){
},event:function(_764){
if(this.options[_764+"Internal"]){
this.options[_764+"Internal"](this);
}
if(this.options[_764]){
this.options[_764](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_765,_766){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_765,_766);
}
this.__init__(_765,_766);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_768,_769){
this.effects=_768||[];
this.start(_769);
},update:function(_76a){
MochiKit.Base.map(function(_76b){
_76b.render(_76a);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_76c){
_76c.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_76d,_76e){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_76d,_76e);
}
this.__init__(_76d,_76e);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_770,_771){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_770||[];
MochiKit.Base.map(function(_773){
defs.duration+=_773.options.duration;
},this.effects);
MochiKit.Base.setdefault(_771,defs);
this.start(_771);
},update:function(_774){
var time=_774*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _777=this.effects[i];
if(time<=_777.options.duration){
_777.render(time/_777.options.duration);
break;
}else{
time-=_777.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_778){
_778.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_779,_77a){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_779,_77a);
}
this.__init__(_779,_77a);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_77c,_77d){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_77c);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_77d=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_77d);
this.start(_77d);
},update:function(_780){
MochiKit.Style.setStyle(this.element,{"opacity":_780});
}});
MochiKit.Visual.Move=function(_781,_782){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_781,_782);
}
this.__init__(_781,_782);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_784,_785){
this.element=MochiKit.DOM.getElement(_784);
_785=MochiKit.Base.update({x:0,y:0,mode:"relative"},_785);
this.start(_785);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _787=s.visibility;
var _788=s.display;
if(_788=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_788=="none"){
s.visibility=_787;
s.display=_788;
}
},update:function(_789){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_789+this.originalLeft)+"px",top:Math.round(this.options.y*_789+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_78a,_78b,_78c){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_78a,_78b,_78c);
}
this.__init__(_78a,_78b,_78c);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_78e,_78f,_790){
this.element=MochiKit.DOM.getElement(_78e);
_790=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_78f},_790);
this.start(_790);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _794=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_795){
if(_794.indexOf(_795)>0){
this.fontSize=parseFloat(_794);
this.fontSizeType=_795;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_796){
var _797=(this.options.scaleFrom/100)+(this.factor*_796);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_797+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_797,this.dims[1]*_797);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_798,_799){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_799)+"px";
}
if(this.options.scaleY){
d.height=r(_798)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_798-this.dims[0])/2;
var _79d=(_799-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_79d+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_79d+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_79e,_79f){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_79e,_79f);
}
this.__init__(_79e,_79f);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_7a1,_7a2){
this.element=MochiKit.DOM.getElement(_7a1);
_7a2=MochiKit.Base.update({startcolor:"#ffff99"},_7a2);
this.start(_7a2);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_7a7){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_7a7));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_7aa,_7ab){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_7aa,_7ab);
}
this.__init__(_7aa,_7ab);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_7ad,_7ae){
this.element=MochiKit.DOM.getElement(_7ad);
this.start(_7ae);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _7b0=p.cumulativeOffset(this.element);
if(this.options.offset){
_7b0.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_7b0.y>max?max:_7b0.y)-this.scrollStart;
},update:function(_7b2){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_7b2*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_7b4,_7b5){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_7b4,_7b5);
}
this.__init__(_7b4,_7b5);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_7b7,_7b8){
this.element=MochiKit.DOM.getElement(_7b7);
this.start(_7b8);
},setup:function(){
var b=MochiKit.Base;
var _7ba=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _7bb,unit;
for(var s in _7ba){
_7bb=_7ba[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_7bb)){
var _7be=_7bb.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_7bb=parseFloat(_7be[1]);
unit=(_7be.length==3)?_7be[2]:null;
this.styleEnd[s]=_7bb;
this.units[s]=unit;
_7bb=MochiKit.Style.getStyle(this.element,s);
_7be=_7bb.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_7bb=parseFloat(_7be[1]);
this.styleStart[s]=_7bb;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_7bb=c.fromString(_7bb);
if(_7bb){
this.units[s]="color";
this.styleEnd[s]=_7bb.toHexString();
_7bb=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_7bb).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_7bb;
}
}
}
},update:function(_7c2){
var _7c3;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _7c6=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_7c6[i]+(end[i]-_7c6[i])*_7c2));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_7c3=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_7c2*1000)/1000+this.units[s];
this.element.style[s]=_7c3;
}
}
}});
MochiKit.Visual.fade=function(_7c9,_7ca){
var s=MochiKit.Style;
var _7cc=s.getStyle(_7c9,"opacity");
_7ca=MochiKit.Base.update({from:s.getStyle(_7c9,"opacity")||1,to:0,afterFinishInternal:function(_7cd){
if(_7cd.options.to!==0){
return;
}
s.hideElement(_7cd.element);
s.setStyle(_7cd.element,{"opacity":_7cc});
}},_7ca);
return new MochiKit.Visual.Opacity(_7c9,_7ca);
};
MochiKit.Visual.appear=function(_7ce,_7cf){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_7cf=MochiKit.Base.update({from:(s.getStyle(_7ce,"display")=="none"?0:s.getStyle(_7ce,"opacity")||0),to:1,afterFinishInternal:function(_7d2){
v._forceRerendering(_7d2.element);
},beforeSetupInternal:function(_7d3){
s.setStyle(_7d3.element,{"opacity":_7d3.options.from});
s.showElement(_7d3.element);
}},_7cf);
return new v.Opacity(_7ce,_7cf);
};
MochiKit.Visual.puff=function(_7d4,_7d5){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_7d4=MochiKit.DOM.getElement(_7d4);
var _7d8=MochiKit.Style.getElementDimensions(_7d4,true);
var _7d9={position:s.getStyle(_7d4,"position"),top:_7d4.style.top,left:_7d4.style.left,width:_7d4.style.width,height:_7d4.style.height,opacity:s.getStyle(_7d4,"opacity")};
_7d5=MochiKit.Base.update({beforeSetupInternal:function(_7da){
MochiKit.Position.absolutize(_7da.effects[0].element);
},afterFinishInternal:function(_7db){
s.hideElement(_7db.effects[0].element);
s.setStyle(_7db.effects[0].element,_7d9);
},scaleContent:true,scaleFromCenter:true},_7d5);
return new v.Parallel([new v.Scale(_7d4,200,{sync:true,scaleFromCenter:_7d5.scaleFromCenter,scaleMode:{originalHeight:_7d8.h,originalWidth:_7d8.w},scaleContent:_7d5.scaleContent,restoreAfterFinish:true}),new v.Opacity(_7d4,{sync:true,to:0})],_7d5);
};
MochiKit.Visual.blindUp=function(_7dc,_7dd){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7dc=d.getElement(_7dc);
var _7e0=s.getElementDimensions(_7dc,true);
var _7e1=s.makeClipping(_7dc);
_7dd=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7e0.h,originalWidth:_7e0.w},restoreAfterFinish:true,afterFinishInternal:function(_7e2){
s.hideElement(_7e2.element);
s.undoClipping(_7e2.element,_7e1);
}},_7dd);
return new MochiKit.Visual.Scale(_7dc,0,_7dd);
};
MochiKit.Visual.blindDown=function(_7e3,_7e4){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7e3=d.getElement(_7e3);
var _7e7=s.getElementDimensions(_7e3,true);
var _7e8;
_7e4=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7e7.h,originalWidth:_7e7.w},restoreAfterFinish:true,afterSetupInternal:function(_7e9){
_7e8=s.makeClipping(_7e9.element);
s.setStyle(_7e9.element,{height:"0px"});
s.showElement(_7e9.element);
},afterFinishInternal:function(_7ea){
s.undoClipping(_7ea.element,_7e8);
}},_7e4);
return new MochiKit.Visual.Scale(_7e3,100,_7e4);
};
MochiKit.Visual.switchOff=function(_7eb,_7ec){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7eb=d.getElement(_7eb);
var _7ef=s.getElementDimensions(_7eb,true);
var _7f0=s.getStyle(_7eb,"opacity");
var _7f1;
_7ec=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_7f2){
s.makePositioned(_7eb);
_7f1=s.makeClipping(_7eb);
},afterFinishInternal:function(_7f3){
s.hideElement(_7eb);
s.undoClipping(_7eb,_7f1);
s.undoPositioned(_7eb);
s.setStyle(_7eb,{"opacity":_7f0});
}},_7ec);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_7eb,{sync:true,duration:0.57*_7ec.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_7eb,1,{sync:true,duration:0.43*_7ec.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_7ef.h,originalWidth:_7ef.w},scaleContent:false,restoreAfterFinish:true})],_7ec);
};
MochiKit.Visual.dropOut=function(_7f5,_7f6){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7f5=d.getElement(_7f5);
var _7f9={top:s.getStyle(_7f5,"top"),left:s.getStyle(_7f5,"left"),opacity:s.getStyle(_7f5,"opacity")};
_7f6=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_7fa){
s.makePositioned(_7fa.effects[0].element);
},afterFinishInternal:function(_7fb){
s.hideElement(_7fb.effects[0].element);
s.undoPositioned(_7fb.effects[0].element);
s.setStyle(_7fb.effects[0].element,_7f9);
}},_7f6);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_7f5,{x:0,y:_7f6.distance,sync:true}),new v.Opacity(_7f5,{sync:true,to:0})],_7f6);
};
MochiKit.Visual.shake=function(_7fd,_7fe){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7fd=d.getElement(_7fd);
var _802={top:s.getStyle(_7fd,"top"),left:s.getStyle(_7fd,"left")};
_7fe=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_803){
s.undoPositioned(_7fd);
s.setStyle(_7fd,_802);
}},_7fe);
return new v.Sequence([new v.Move(_7fd,{sync:true,duration:0.1*_7fe.duration,x:20,y:0}),new v.Move(_7fd,{sync:true,duration:0.2*_7fe.duration,x:-40,y:0}),new v.Move(_7fd,{sync:true,duration:0.2*_7fe.duration,x:40,y:0}),new v.Move(_7fd,{sync:true,duration:0.2*_7fe.duration,x:-40,y:0}),new v.Move(_7fd,{sync:true,duration:0.2*_7fe.duration,x:40,y:0}),new v.Move(_7fd,{sync:true,duration:0.1*_7fe.duration,x:-20,y:0})],_7fe);
};
MochiKit.Visual.slideDown=function(_804,_805){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_804=d.getElement(_804);
if(!_804.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_804);
var _809=s.getStyle(_804.firstChild,"bottom")||0;
var _80a=s.getElementDimensions(_804,true);
var _80b;
_805=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_80a.h,originalWidth:_80a.w},restoreAfterFinish:true,afterSetupInternal:function(_80c){
s.makePositioned(_80c.element);
s.makePositioned(_80c.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_80c.element,{top:""});
}
_80b=s.makeClipping(_80c.element);
s.setStyle(_80c.element,{height:"0px"});
s.showElement(_80c.element);
},afterUpdateInternal:function(_80d){
var _80e=s.getElementDimensions(_80d.element,true);
s.setStyle(_80d.element.firstChild,{bottom:(_80d.dims[0]-_80e.h)+"px"});
},afterFinishInternal:function(_80f){
s.undoClipping(_80f.element,_80b);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_80f.element);
s.undoPositioned(_80f.element.firstChild);
}else{
s.undoPositioned(_80f.element.firstChild);
s.undoPositioned(_80f.element);
}
s.setStyle(_80f.element.firstChild,{bottom:_809});
}},_805);
return new MochiKit.Visual.Scale(_804,100,_805);
};
MochiKit.Visual.slideUp=function(_810,_811){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_810=d.getElement(_810);
if(!_810.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_810);
var _815=s.getStyle(_810.firstChild,"bottom");
var _816=s.getElementDimensions(_810,true);
var _817;
_811=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_816.h,originalWidth:_816.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_818){
s.makePositioned(_818.element);
s.makePositioned(_818.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_818.element,{top:""});
}
_817=s.makeClipping(_818.element);
s.showElement(_818.element);
},afterUpdateInternal:function(_819){
var _81a=s.getElementDimensions(_819.element,true);
s.setStyle(_819.element.firstChild,{bottom:(_819.dims[0]-_81a.h)+"px"});
},afterFinishInternal:function(_81b){
s.hideElement(_81b.element);
s.undoClipping(_81b.element,_817);
s.undoPositioned(_81b.element.firstChild);
s.undoPositioned(_81b.element);
s.setStyle(_81b.element.firstChild,{bottom:_815});
}},_811);
return new MochiKit.Visual.Scale(_810,0,_811);
};
MochiKit.Visual.squish=function(_81c,_81d){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _821=s.getElementDimensions(_81c,true);
var _822;
_81d=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_821.h,originalWidth:_821.w},beforeSetupInternal:function(_823){
_822=s.makeClipping(_823.element);
},afterFinishInternal:function(_824){
s.hideElement(_824.element);
s.undoClipping(_824.element,_822);
}},_81d);
return new MochiKit.Visual.Scale(_81c,/Opera/.test(navigator.userAgent)?1:0,_81d);
};
MochiKit.Visual.grow=function(_825,_826){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_825=d.getElement(_825);
_826=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_826);
var _82a={top:_825.style.top,left:_825.style.left,height:_825.style.height,width:_825.style.width,opacity:s.getStyle(_825,"opacity")};
var dims=s.getElementDimensions(_825,true);
var _82c,_82d;
var _82e,_82f;
switch(_826.direction){
case "top-left":
_82c=_82d=_82e=_82f=0;
break;
case "top-right":
_82c=dims.w;
_82d=_82f=0;
_82e=-dims.w;
break;
case "bottom-left":
_82c=_82e=0;
_82d=dims.h;
_82f=-dims.h;
break;
case "bottom-right":
_82c=dims.w;
_82d=dims.h;
_82e=-dims.w;
_82f=-dims.h;
break;
case "center":
_82c=dims.w/2;
_82d=dims.h/2;
_82e=-dims.w/2;
_82f=-dims.h/2;
break;
}
var _830=MochiKit.Base.update({beforeSetupInternal:function(_831){
s.setStyle(_831.effects[0].element,{height:"0px"});
s.showElement(_831.effects[0].element);
},afterFinishInternal:function(_832){
s.undoClipping(_832.effects[0].element);
s.undoPositioned(_832.effects[0].element);
s.setStyle(_832.effects[0].element,_82a);
}},_826);
return new v.Move(_825,{x:_82c,y:_82d,duration:0.01,beforeSetupInternal:function(_833){
s.hideElement(_833.element);
s.makeClipping(_833.element);
s.makePositioned(_833.element);
},afterFinishInternal:function(_834){
new v.Parallel([new v.Opacity(_834.element,{sync:true,to:1,from:0,transition:_826.opacityTransition}),new v.Move(_834.element,{x:_82e,y:_82f,sync:true,transition:_826.moveTransition}),new v.Scale(_834.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_826.scaleTransition,scaleContent:_826.scaleContent,scaleFromCenter:_826.scaleFromCenter,restoreAfterFinish:true})],_830);
}});
};
MochiKit.Visual.shrink=function(_835,_836){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_835=d.getElement(_835);
_836=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_836);
var _83a={top:_835.style.top,left:_835.style.left,height:_835.style.height,width:_835.style.width,opacity:s.getStyle(_835,"opacity")};
var dims=s.getElementDimensions(_835,true);
var _83c,_83d;
switch(_836.direction){
case "top-left":
_83c=_83d=0;
break;
case "top-right":
_83c=dims.w;
_83d=0;
break;
case "bottom-left":
_83c=0;
_83d=dims.h;
break;
case "bottom-right":
_83c=dims.w;
_83d=dims.h;
break;
case "center":
_83c=dims.w/2;
_83d=dims.h/2;
break;
}
var _83e;
var _83f=MochiKit.Base.update({beforeStartInternal:function(_840){
s.makePositioned(_840.effects[0].element);
_83e=s.makeClipping(_840.effects[0].element);
},afterFinishInternal:function(_841){
s.hideElement(_841.effects[0].element);
s.undoClipping(_841.effects[0].element,_83e);
s.undoPositioned(_841.effects[0].element);
s.setStyle(_841.effects[0].element,_83a);
}},_836);
return new v.Parallel([new v.Opacity(_835,{sync:true,to:0,from:1,transition:_836.opacityTransition}),new v.Scale(_835,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_836.scaleTransition,scaleContent:_836.scaleContent,scaleFromCenter:_836.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_835,{x:_83c,y:_83d,sync:true,transition:_836.moveTransition})],_83f);
};
MochiKit.Visual.pulsate=function(_842,_843){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _847=MochiKit.Style.getStyle(_842,"opacity");
_843=b.update({duration:3,from:0,afterFinishInternal:function(_848){
MochiKit.Style.setStyle(_848.element,{"opacity":_847});
}},_843);
var _849=_843.transition||v.Transitions.sinoidal;
_843.transition=function(pos){
return _849(1-v.Transitions.pulse(pos,_843.pulses));
};
return new v.Opacity(_842,_843);
};
MochiKit.Visual.fold=function(_84b,_84c){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_84b=d.getElement(_84b);
var _850=s.getElementDimensions(_84b,true);
var _851={top:_84b.style.top,left:_84b.style.left,width:_84b.style.width,height:_84b.style.height};
var _852=s.makeClipping(_84b);
_84c=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_850.h,originalWidth:_850.w},afterFinishInternal:function(_853){
new v.Scale(_84b,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_850.h,originalWidth:_850.w},afterFinishInternal:function(_854){
s.hideElement(_854.element);
s.undoClipping(_854.element,_852);
s.setStyle(_854.element,_851);
}});
}},_84c);
return new v.Scale(_84b,5,_84c);
};
MochiKit.Base.nameFunctions(MochiKit.Visual);
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DragAndDrop");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Signal");
goog.require("MochiKit.Visual");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_855){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_855);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_85a){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_85a)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_85a);
}
},this.drops);
},findDeepestChild:function(_85c){
var _85d=_85c[0];
for(var i=1;i<_85c.length;++i){
if(MochiKit.DOM.isChildNode(_85c[i].element,_85d.element)){
_85d=_85c[i];
}
}
return _85d;
},show:function(_85f,_860){
if(!this.drops.length){
return;
}
var _861=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_85f,_860)){
_861.push(drop);
}
});
if(_861.length>0){
var drop=this.findDeepestChild(_861);
MochiKit.Position.within(drop.element,_85f.page.x,_85f.page.y);
drop.options.onhover(_860,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_864,_865){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_864.mouse(),_865)){
this.last_active.options.ondrop(_865,this.last_active.element,_864);
}
},reset:function(_866){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_866);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_868,_869){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_868,_869);
}
this.__init__(_868,_869);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_86b,_86c){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_86b);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_86c);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_870){
if(this.options._containers.length){
var _871;
if(this.options.tree){
_871=_870.treeNode;
}else{
_871=_870.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _871==c;
});
}else{
return true;
}
},isAccepted:function(_873){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_873,c);
}));
},isAffected:function(_875,_876){
return ((this.element!=_876)&&this.isContained(_876)&&this.isAccepted(_876)&&MochiKit.Position.within(this.element,_875.page.x,_875.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_877){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_877);
},unregister:function(_879){
this.drags=MochiKit.Base.filter(function(d){
return d!=_879;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_87c){
window.focus();
this.activeDraggable=_87c;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_87d){
if(!this.activeDraggable){
return;
}
var _87e=_87d.mouse();
if(this._lastPointer&&this._lastPointer.page.x==_87e.page.x&&this._lastPointer.page.y==_87e.page.y){
return;
}
this._lastPointer=_87e;
this.activeDraggable.updateDrag(_87d,_87e);
},endDrag:function(_87f){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_87f);
this.activeDraggable=null;
},keyPress:function(_880){
if(this.activeDraggable){
this.activeDraggable.keyPress(_880);
}
},notify:function(_881,_882,_883){
MochiKit.Signal.signal(this,_881,_882,_883);
}};
MochiKit.DragAndDrop.Draggable=function(_884,_885){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_884,_885);
}
this.__init__(_884,_885);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_887,_888){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_888=b.update({handle:false,starteffect:function(_88b){
this._savedOpacity=MochiKit.Style.getStyle(_88b,"opacity")||1;
new v.Opacity(_88b,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_88c,_88d,_88e){
var dur=Math.sqrt(Math.abs(_88d^2)+Math.abs(_88e^2))*0.02;
return new v.Move(_88c,{x:-_88e,y:-_88d,duration:dur});
},endeffect:function(_890){
new v.Opacity(_890,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_888);
var d=MochiKit.DOM;
this.element=d.getElement(_887);
if(_888.handle&&(typeof (_888.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_888.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_888.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_888.scroll&&!_888.scroll.scrollTo&&!_888.scroll.outerHTML){
_888.scroll=d.getElement(_888.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_888.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_888;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0",10),parseInt(s(this.element,"top")||"0",10)];
},initDrag:function(_893){
if(!_893.mouse().button.left){
return;
}
var src=_893.target();
var _895=(src.tagName||"").toUpperCase();
if(_895==="INPUT"||_895==="SELECT"||_895==="OPTION"||_895==="BUTTON"||_895==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _896=_893.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_896.page.x-pos.x,_896.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_893.stop();
},startDrag:function(_898){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=MochiKit.Style.getStyle(this.element,"z-index");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _899=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_899.left;
this.originalScrollTop=_899.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_898);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_89a,_89b){
if(!this.dragging){
this.startDrag(_89a);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_89b,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_89a);
this.draw(_89b);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _89f=[0,0];
if(_89b.page.x>(q.x-this.options.scrollSensitivity)){
_89f[0]=_89b.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_89b.page.x<(p.x+this.options.scrollSensitivity)){
_89f[0]=_89b.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_89b.page.y>(q.y-this.options.scrollSensitivity)){
_89f[1]=_89b.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_89b.page.y<(p.y+this.options.scrollSensitivity)){
_89f[1]=_89b.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_89f);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_89a.stop();
},finishDrag:function(_8a0,_8a1){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_8a1){
dr.Droppables.fire(_8a0,this.element);
}
dr.Draggables.notify("end",this,_8a0);
var _8a3=this.options.revert;
if(_8a3&&typeof (_8a3)=="function"){
_8a3=_8a3(this.element);
}
var d=this.currentDelta();
if(_8a3&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_8a5){
if(_8a5.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_8a5,false);
_8a5.stop();
},endDrag:function(_8a6){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_8a6,true);
_8a6.stop();
},draw:function(_8a7){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_8a7.page.x-pos.x-this.offset[0],_8a7.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _8ae=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_8ae.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_8ae.top=p[1]+"px";
}
if(_8ae.visibility=="hidden"){
_8ae.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_8af){
if(!_8af[0]&&!_8af[1]){
return;
}
this.scrollSpeed=[_8af[0]*this.options.scrollSpeed,_8af[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _8b0=new Date();
var _8b1=_8b0-this.lastScrolled;
this.lastScrolled=_8b0;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_8b1/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_8b1/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_8b1/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_8b1/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_8b1/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Sortable");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Position");
goog.require("MochiKit.DragAndDrop");
}
MochiKit.Base.module(MochiKit,"Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_8b9){
while(_8b9.tagName.toUpperCase()!="BODY"){
if(_8b9.id&&MochiKit.Sortable.sortables[_8b9.id]){
return _8b9;
}
_8b9=_8b9.parentNode;
}
},_createElementId:function(_8ba){
if(_8ba.id==null||_8ba.id==""){
var d=MochiKit.DOM;
var id;
var _8bd=1;
while(d.getElement(id="sortable"+_8bd)!=null){
_8bd+=1;
}
d.setNodeAttribute(_8ba,"id",id);
}
},options:function(_8be){
_8be=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_8be));
if(!_8be){
return;
}
return MochiKit.Sortable.sortables[_8be.id];
},destroy:function(_8bf){
var s=MochiKit.Sortable.options(_8bf);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_8c5,_8c6){
_8c5=MochiKit.DOM.getElement(_8c5);
var self=MochiKit.Sortable;
self._createElementId(_8c5);
_8c6=MochiKit.Base.update({element:_8c5,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_8c5],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_8c6);
self.destroy(_8c5);
var _8c8={revert:true,ghosting:_8c6.ghosting,scroll:_8c6.scroll,scrollSensitivity:_8c6.scrollSensitivity,scrollSpeed:_8c6.scrollSpeed,constraint:_8c6.constraint,handle:_8c6.handle};
if(_8c6.starteffect){
_8c8.starteffect=_8c6.starteffect;
}
if(_8c6.reverteffect){
_8c8.reverteffect=_8c6.reverteffect;
}else{
if(_8c6.ghosting){
_8c8.reverteffect=function(_8c9){
_8c9.style.top=0;
_8c9.style.left=0;
};
}
}
if(_8c6.endeffect){
_8c8.endeffect=_8c6.endeffect;
}
if(_8c6.zindex){
_8c8.zindex=_8c6.zindex;
}
var _8ca={overlap:_8c6.overlap,containment:_8c6.containment,hoverclass:_8c6.hoverclass,onhover:self.onHover,tree:_8c6.tree,accept:_8c6.accept};
var _8cb={onhover:self.onEmptyHover,overlap:_8c6.overlap,containment:_8c6.containment,hoverclass:_8c6.hoverclass,accept:_8c6.accept};
MochiKit.DOM.removeEmptyTextNodes(_8c5);
_8c6.draggables=[];
_8c6.droppables=[];
if(_8c6.dropOnEmpty||_8c6.tree){
new MochiKit.DragAndDrop.Droppable(_8c5,_8cb);
_8c6.droppables.push(_8c5);
}
MochiKit.Base.map(function(e){
var _8cd=_8c6.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_8c6.handle,e):e;
_8c6.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_8c8,{handle:_8cd})));
new MochiKit.DragAndDrop.Droppable(e,_8ca);
if(_8c6.tree){
e.treeNode=_8c5;
}
_8c6.droppables.push(e);
},(self.findElements(_8c5,_8c6)||[]));
if(_8c6.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_8cb);
e.treeNode=_8c5;
_8c6.droppables.push(e);
},(self.findTreeElements(_8c5,_8c6)||[]));
}
self.sortables[_8c5.id]=_8c6;
_8c6.lastValue=self.serialize(_8c5);
_8c6.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_8c5));
_8c6.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_8c5));
},onStart:function(_8cf,_8d0){
var self=MochiKit.Sortable;
var _8d2=self.options(_8cf);
_8d2.lastValue=self.serialize(_8d2.element);
},onEnd:function(_8d3,_8d4){
var self=MochiKit.Sortable;
self.unmark();
var _8d6=self.options(_8d3);
if(_8d6.lastValue!=self.serialize(_8d6.element)){
_8d6.onUpdate(_8d6.element);
}
},findElements:function(_8d7,_8d8){
return MochiKit.Sortable.findChildren(_8d7,_8d8.only,_8d8.tree,_8d8.tag);
},findTreeElements:function(_8d9,_8da){
return MochiKit.Sortable.findChildren(_8d9,_8da.only,_8da.tree?true:false,_8da.treeTag);
},findChildren:function(_8db,only,_8dd,_8de){
if(!_8db.hasChildNodes()){
return null;
}
_8de=_8de.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _8df=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_8de&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_8df.push(e);
}
if(_8dd){
var _8e2=MochiKit.Sortable.findChildren(e,only,_8dd,_8de);
if(_8e2&&_8e2.length>0){
_8df=_8df.concat(_8e2);
}
}
},_8db.childNodes);
return _8df;
},onHover:function(_8e3,_8e4,_8e5){
if(MochiKit.DOM.isChildNode(_8e4,_8e3)){
return;
}
var self=MochiKit.Sortable;
if(_8e5>0.33&&_8e5<0.66&&self.options(_8e4).tree){
return;
}else{
if(_8e5>0.5){
self.mark(_8e4,"before");
if(_8e4.previousSibling!=_8e3){
var _8e7=_8e3.parentNode;
_8e3.style.visibility="hidden";
_8e4.parentNode.insertBefore(_8e3,_8e4);
if(_8e4.parentNode!=_8e7){
self.options(_8e7).onChange(_8e3);
}
self.options(_8e4.parentNode).onChange(_8e3);
}
}else{
self.mark(_8e4,"after");
var _8e8=_8e4.nextSibling||null;
if(_8e8!=_8e3){
var _8e7=_8e3.parentNode;
_8e3.style.visibility="hidden";
_8e4.parentNode.insertBefore(_8e3,_8e8);
if(_8e4.parentNode!=_8e7){
self.options(_8e7).onChange(_8e3);
}
self.options(_8e4.parentNode).onChange(_8e3);
}
}
}
},_offsetSize:function(_8e9,type){
if(type=="vertical"||type=="height"){
return _8e9.offsetHeight;
}else{
return _8e9.offsetWidth;
}
},onEmptyHover:function(_8eb,_8ec,_8ed){
var _8ee=_8eb.parentNode;
var self=MochiKit.Sortable;
var _8f0=self.options(_8ec);
if(!MochiKit.DOM.isChildNode(_8ec,_8eb)){
var _8f1;
var _8f2=self.findElements(_8ec,{tag:_8f0.tag,only:_8f0.only});
var _8f3=null;
if(_8f2){
var _8f4=self._offsetSize(_8ec,_8f0.overlap)*(1-_8ed);
for(_8f1=0;_8f1<_8f2.length;_8f1+=1){
if(_8f4-self._offsetSize(_8f2[_8f1],_8f0.overlap)>=0){
_8f4-=self._offsetSize(_8f2[_8f1],_8f0.overlap);
}else{
if(_8f4-(self._offsetSize(_8f2[_8f1],_8f0.overlap)/2)>=0){
_8f3=_8f1+1<_8f2.length?_8f2[_8f1+1]:null;
break;
}else{
_8f3=_8f2[_8f1];
break;
}
}
}
}
_8ec.insertBefore(_8eb,_8f3);
self.options(_8ee).onChange(_8eb);
_8f0.onChange(_8eb);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_8f6,_8f7){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _8fa=self.options(_8f6.parentNode);
if(_8fa&&!_8fa.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _8fb=MochiKit.Position.cumulativeOffset(_8f6);
self._marker.style.left=_8fb.x+"px";
self._marker.style.top=_8fb.y+"px";
if(_8f7=="after"){
if(_8fa.overlap=="horizontal"){
self._marker.style.left=(_8fb.x+_8f6.clientWidth)+"px";
}else{
self._marker.style.top=(_8fb.y+_8f6.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_8fc,_8fd,_8fe){
var self=MochiKit.Sortable;
var _900=self.findElements(_8fc,_8fd)||[];
for(var i=0;i<_900.length;++i){
var _902=_900[i].id.match(_8fd.format);
if(!_902){
continue;
}
var _903={id:encodeURIComponent(_902?_902[1]:null),element:_8fc,parent:_8fe,children:[],position:_8fe.children.length,container:self._findChildrenElement(_900[i],_8fd.treeTag.toUpperCase())};
if(_903.container){
self._tree(_903.container,_8fd,_903);
}
_8fe.children.push(_903);
}
return _8fe;
},_findChildrenElement:function(_904,_905){
if(_904&&_904.hasChildNodes){
_905=_905.toUpperCase();
for(var i=0;i<_904.childNodes.length;++i){
if(_904.childNodes[i].tagName.toUpperCase()==_905){
return _904.childNodes[i];
}
}
}
return null;
},tree:function(_907,_908){
_907=MochiKit.DOM.getElement(_907);
var _909=MochiKit.Sortable.options(_907);
_908=MochiKit.Base.update({tag:_909.tag,treeTag:_909.treeTag,only:_909.only,name:_907.id,format:_909.format},_908||{});
var root={id:null,parent:null,children:new Array,container:_907,position:0};
return MochiKit.Sortable._tree(_907,_908,root);
},setSequence:function(_90b,_90c,_90d){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_90b=MochiKit.DOM.getElement(_90b);
_90d=b.update(self.options(_90b),_90d||{});
var _910={};
b.map(function(n){
var m=n.id.match(_90d.format);
if(m){
_910[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_90b,_90d));
b.map(function(_913){
var n=_910[_913];
if(n){
n[1].appendChild(n[0]);
delete _910[_913];
}
},_90c);
},_constructIndex:function(node){
var _916="";
do{
if(node.id){
_916="["+node.position+"]"+_916;
}
}while((node=node.parent)!=null);
return _916;
},sequence:function(_917,_918){
_917=MochiKit.DOM.getElement(_917);
var self=MochiKit.Sortable;
var _918=MochiKit.Base.update(self.options(_917),_918||{});
return MochiKit.Base.map(function(item){
return item.id.match(_918.format)?item.id.match(_918.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_917,_918)||[]));
},serialize:function(_91b,_91c){
_91b=MochiKit.DOM.getElement(_91b);
var self=MochiKit.Sortable;
_91c=MochiKit.Base.update(self.options(_91b),_91c||{});
var name=encodeURIComponent(_91c.name||_91b.id);
if(_91c.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_91b,_91c).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_91b,_91c)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base_ext");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Base_ext","1.5",["Base"]);
MochiKit.Base._arg_placeholder=function(_921){
this.index=_921;
};
var _1=new MochiKit.Base._arg_placeholder(0);
var _2=new MochiKit.Base._arg_placeholder(1);
var _3=new MochiKit.Base._arg_placeholder(2);
var _4=new MochiKit.Base._arg_placeholder(3);
var _5=new MochiKit.Base._arg_placeholder(4);
var _6=new MochiKit.Base._arg_placeholder(5);
var _7=new MochiKit.Base._arg_placeholder(6);
var _8=new MochiKit.Base._arg_placeholder(7);
var _9=new MochiKit.Base._arg_placeholder(8);
var _10=new MochiKit.Base._arg_placeholder(9);
MochiKit.Base._rebind_preargs=function(_922,args,_924){
_924=_924||{};
for(var i=0;i<_922.length;++i){
var pa=_922[i];
if(pa instanceof MochiKit.Base._arg_placeholder){
if(pa.index<args.length){
_922[i]=args[pa.index];
_924[pa.index]=pa.index;
}
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
MochiKit.Base._rebind_preargs(pa.im_preargs,args,_924);
}
}
}
return _924;
};
MochiKit.Base.bind2=function(func,self,_929){
if(typeof (func)=="string"){
func=self[func];
}
var _92a=func.im_func;
var _92b=func.im_preargs;
var _92c=func.im_self;
var m=MochiKit.Base;
if(typeof (func)=="function"&&typeof (func.apply)=="undefined"){
func=m._wrapDumbFunction(func);
}
if(typeof (_92a)!="function"){
_92a=func;
}
if(typeof (self)!="undefined"){
_92c=self;
}
if(typeof (_92b)=="undefined"){
_92b=[];
}else{
_92b=_92b.slice();
}
var args=Array.prototype.slice.call(arguments,self instanceof m._arg_placeholder?1:2);
var _92f=MochiKit.Base._rebind_preargs(_92b,args);
for(var _930 in _92f){
args.splice(_92f[_930],1);
}
m.extend(_92b,args);
var _931=function(){
var me=arguments.callee;
var self=me.im_self;
if(!self){
self=this;
}
var args=[];
if(me.im_preargs.length>0){
var imax=0;
for(var i=0;i<me.im_preargs.length;++i){
var pa=me.im_preargs[i];
if(pa instanceof m._arg_placeholder){
imax=Math.max(imax,pa.index+1);
pa=arguments[pa.index];
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
pa=pa.apply(self,arguments);
}
}
args.push(pa);
}
for(var j=imax;j<arguments.length;++j){
args.push(arguments[j]);
}
}else{
args=arguments;
}
if(self instanceof m._arg_placeholder){
self=arguments[self.index];
}
return me.im_func.apply(self,args);
};
_931.im_self=_92c;
_931.im_func=_92a;
_931.im_preargs=_92b;
if(typeof (_92a.NAME)=="string"){
_931.NAME="bind2("+_92a.NAME+",...)";
}
return _931;
};
MochiKit.Base.partial2=function(func,_93a){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,undefined],arguments,1));
};
MochiKit.Base.method2=function(self,func,_93e){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,self],arguments,2));
};
MochiKit.Base.bindLate2=function(func,self,_942){
var m=MochiKit.Base;
var args=arguments;
if(typeof (func)==="string"){
args=m.extend([m.forwardCall(func)],arguments,1);
return m.bind2.apply(this,args);
}
return m.bind2.apply(this,args);
};
MochiKit.Base.isBoundFunction=function(fn){
return typeof fn=="function"&&typeof fn.im_func=="function";
};
MochiKit.Base.protect=function(_946){
return function(){
return _946.apply(this,arguments);
};
};
MochiKit.Base.apply=function(fn,_948){
var args=MochiKit.Base.extend([],arguments,1);
return fn.apply(this,args);
};
MochiKit.Base.partition=function(_94a,cmp,left,_94d,_94e){
cmp=cmp||MochiKit.Base.operator.cle;
left=left||0;
_94d=_94d||_94a.length-1;
_94e=_94e||(left+Math.floor((_94d-left)/2));
var swap=function(i,j){
var tmp=_94a[i];
_94a[i]=_94a[j];
_94a[j]=tmp;
};
var _953=_94a[_94e];
swap(_94e,_94d);
var _954=left;
for(var i=left;i<=_94d;++i){
if(cmp(_94a[i],_953)){
swap(i,_954);
++_954;
}
}
swap(_954,_94d);
return _954;
};
MochiKit.Base.negateComparator=function(cmp){
return function(){
return -1*cmp.apply(this,arguments);
};
};
MochiKit.Base_ext.__new__=function(){
};
MochiKit.Base_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Iter_ext","1.5",["Base","Iter"]);
MochiKit.Iter.treePreOrder=function(_957,_958){
var _959=[_957];
return {repr:function(){
return "treePreOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_959.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_959.pop();
MochiKit.Iter.iextend(_959,_958(node));
return node;
}};
};
MochiKit.Iter.treeLevelOrder=function(_95b,_95c){
var _95d=[_95b];
return {repr:function(){
return "treeLevelOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_95d.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_95d.shift();
MochiKit.Iter.iextend(_95d,_95c(node));
return node;
}};
};
MochiKit.Iter.treePostOrder=function(_95f,_960){
var _961=[[_95f,false]];
return {repr:function(){
return "treePostOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_961.length==0){
throw MochiKit.Iter.StopIteration;
}
var n=_961.pop();
if(n[1]){
return n[0];
}
n[1]=true;
_961.push(n);
MochiKit.Iter.iextend(_961,MochiKit.Iter.imap(function(node){
return [node,false];
},_960(n[0])));
}
}};
};
MochiKit.Iter.pairView=function(_964,_965){
_965=_965||false;
var it=MochiKit.Iter.iter(_964);
try{
var _967=it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return MochiKit.Iter.EmptyIter;
}
if(_965){
it=MochiKit.Iter.chain(it,[_967]);
}
return {repr:function(){
return "pairView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _968=it.next();
var pair=[_967,_968];
_967=_968;
return pair;
}};
};
MochiKit.Iter.windowView=function(_96a,_96b,_96c){
_96b=_96b||2;
_96c=_96c||1;
var it=MochiKit.Iter.iter(_96a);
var win=[];
return {repr:function(){
return "windowView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(win.length<_96b){
while(win.length<_96b){
win.push(it.next());
}
}else{
for(var i=0;i<_96c;++i){
win.shift();
win.push(it.next());
}
}
return win.slice();
}};
};
MochiKit.Iter.filterMap=function(_970,_971,_972){
_972=_972||function(item){
return typeof item!=="undefined"&&item!==null;
};
return MochiKit.Iter.ifilter(_972,MochiKit.Iter.imap(_970,_971));
};
MochiKit.Iter.iflattenArray=function(root){
var _975=[root];
return {repr:function(){
return "iflattenArray(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_975.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_975.shift();
if(node instanceof Array){
Array.prototype.splice.apply(_975,[0,0].concat(node));
}else{
return node;
}
}
}};
};
MochiKit.Iter.chainFromIter=function(seq,_978){
_978=_978||MochiKit.Iter.iter;
var it=MochiKit.Iter.iter(seq);
var jt=null;
return {repr:function(){
return "chainFromIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(jt==null){
jt=MochiKit.Iter.iter(_978(it.next()));
}
while(true){
try{
var val=jt.next();
return val;
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=MochiKit.Iter.iter(_978(it.next()));
}
}
}};
};
MochiKit.Iter.uniqueView=function(_97c,pred){
pred=pred||MochiKit.Base.operator.ceq;
var it=MochiKit.Iter.iter(_97c);
var _97f=true;
var prev;
return {repr:function(){
return "uniqueView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_97f){
_97f=false;
prev=it.next();
return prev;
}
var val=it.next();
while(pred(prev,val)){
val=it.next();
}
prev=val;
return val;
}};
};
MochiKit.Iter.iproduct=function(_982,_983){
var sa=arguments[0],sb=arguments[1];
var it=MochiKit.Iter.iter(sa);
var jt=null;
var a,b;
return {repr:function(){
return "iproduct(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(jt==null){
a=it.next();
jt=MochiKit.Iter.iter(sb);
}
try{
b=jt.next();
return [a,b];
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=null;
}
}
}};
};
MochiKit.Iter.enumerate=function(_98a,_98b){
return MochiKit.Iter.izip(MochiKit.Iter.count(_98b),_98a);
};
MochiKit.Iter.breakIt=function(){
throw MochiKit.Iter.StopIteration;
};
MochiKit.Iter.EmptyIter={repr:function(){
return "EmptyIter";
},toString:MochiKit.Base.forwardCall("repr"),next:MochiKit.Iter.breakIt};
MochiKit.Iter.generateN=function(_98c,n){
return MochiKit.Iter.imap(function(){
return _98c();
},MochiKit.Iter.range(n));
};
MochiKit.Iter.izipLongest=function(_98e,_98f){
_98f=_98f||null;
_98e=MochiKit.Base.map(MochiKit.Iter.iter,_98e);
var _990=_98e.length;
return {repr:function(){
return "izipLongest(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _991=new Array(_98e.length);
for(var i=0;i<_98e.length;++i){
try{
_991[i]=_98e[i].next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
_98e[i]=MochiKit.Iter.repeat(_98f);
_991[i]=_98f;
--_990;
}
}
if(_990==0){
throw MochiKit.Iter.StopIteration;
}
return _991;
}};
};
MochiKit.Iter.any=function(){
return MochiKit.Iter.some.apply(this,arguments);
};
MochiKit.Iter.all=function(){
return MochiKit.Iter.every.apply(this,arguments);
};
MochiKit.Iter.starmap=function(){
return MochiKit.Iter.applymap.apply(this,arguments);
};
MochiKit.Iter.advance=function(iter,n){
while(n-->0){
iter.next();
}
return iter;
};
MochiKit.Iter.isSorted=function(_995,cmp){
return MochiKit.Iter.every(MochiKit.Iter.windowView(_995),cmp||MochiKit.Base.operator.cle);
};
MochiKit.Iter.interleave=function(_997,_998){
return MochiKit.Iter.chainFromIter(MochiKit.Iter.izip.apply(this,arguments));
};
MochiKit.Iter.remapView=function(_999,lst){
return MochiKit.Iter.imap(MochiKit.Base.partial(MochiKit.Base.operator.getitem,lst),_999);
};
MochiKit.Iter.compressIter=function(data,_99c){
return MochiKit.Iter.imap(function(d_s){
return d_s[0];
},MochiKit.Iter.ifilter(function(d_s){
return d_s[1]?true:false;
},MochiKit.Iter.izip(data,_99c)));
};
MochiKit.Iter.combinations=function(_99f,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_99f);
var n=pool.length;
if(r>n){
return MochiKit.Iter.EmptyIter;
}
var _9a5=mi.list(mi.range(r));
var _9a6=true;
return {repr:function(){
return "combinations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_9a6){
_9a6=false;
return mi.list(mi.remapView(_9a5,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_9a5[i]!=(i+n-r)){
done=false;
break;
}
}
if(done){
throw MochiKit.Iter.StopIteration;
}
_9a5[i]+=1;
for(var j=i+1;j<r;++j){
_9a5[j]=_9a5[j-1]+1;
}
return mi.list(mi.remapView(_9a5,pool));
}
}};
};
MochiKit.Iter.combinationsWithReplacement=function(_9aa,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_9aa);
var n=pool.length;
if(n==0||r==0){
return mi.EmptyIter;
}
var _9b0=mi.list(mi.repeat(0,r));
var _9b1=true;
return {repr:function(){
return "combinationsWithReplacement(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_9b1){
_9b1=false;
return mi.list(mi.remapView(_9b0,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_9b0[i]!=n-1){
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
_9b0=_9b0.slice(0,i).concat(mi.list(mi.repeat(_9b0[i]+1,r-i)));
return mi.list(mi.remapView(_9b0,pool));
}
}};
};
MochiKit.Iter.repeatSeq=function(_9b4,n){
if(n==0){
return MochiKit.Iter.EmptyIter;
}
var it=MochiKit.Iter.iter(_9b4);
return {next:function(){
try{
return it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration||--n<=0){
throw e;
}
it=MochiKit.Iter.iter(_9b4);
return it.next();
}
}};
};
MochiKit.Iter.permutations=function(_9b7,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_9b7);
var n=pool.length;
r=r||n;
if(r>n){
return mi.EmptyIter;
}
var _9bd=mi.list(mi.range(n));
var _9be=mi.list(mi.range(n,n-r,-1));
var _9bf=true;
return {repr:function(){
return "permutations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_9bf){
_9bf=false;
return mi.list(mi.remapView(mi.islice(_9bd,0,r),pool));
}
if(n==0){
throw mi.StopIteration;
}
var done=true;
for(var i=r-1;i>=0;--i){
_9be[i]-=1;
if(_9be[i]==0){
_9bd=_9bd.slice(0,i).concat(_9bd.slice(i+1),_9bd[i]);
_9be[i]=n-i;
}else{
var j=_9be[i];
var jdx=_9bd.length-j;
var tmp=_9bd[i];
_9bd[i]=_9bd[jdx];
_9bd[jdx]=tmp;
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
return mi.list(mi.remapView(mi.islice(_9bd,0,r),pool));
}};
};
MochiKit.Iter._Range=function(_9c5,stop,step){
this.start=_9c5;
this.stop=stop;
this.step=step;
};
MochiKit.Iter._Range.prototype.__iterator__=function(){
return new MochiKit.Iter.range(this.start,this.stop,this.step);
};
MochiKit.Iter.xrange=function(){
var _9c8=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_9c8=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_9c8=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("xrange() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("xrange() step must not be 0");
}
return new MochiKit.Iter._Range(_9c8,stop,step);
};
MochiKit.Iter.isJavaLikeIterator=function(_9cb){
return _9cb&&typeof _9cb.hasNext=="function"&&typeof _9cb.next=="function";
};
MochiKit.Iter.javaLikeIterator=function(_9cc){
return {repr:function(){
return "javaLikeIterator";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(!_9cc.hasNext()){
throw MochiKit.Iter.StopIteration;
}
return _9cc.next();
}};
};
MochiKit.Iter.registerJavaLikeIteratorSupport=function(){
MochiKit.Iter.registerIteratorFactory("javaLikeIterator",MochiKit.Iter.isJavaLikeIterator,MochiKit.Iter.javaLikeIterator);
};
MochiKit.Iter.countValue=function(_9cd,elem,cmp){
cmp=cmp||MochiKit.Base.operator.ceq;
var n=0;
MochiKit.Iter.forEach(_9cd,function(e){
if(cmp(e,elem)){
++n;
}
});
return n;
};
MochiKit.Iter.limit=function(iter,n){
return MochiKit.Iter.takewhile(function(){
return n-->0;
},iter);
};
MochiKit.Iter.accumulate=function(_9d4,func){
var iter=MochiKit.Iter.iter(_9d4);
func=func||MochiKit.Base.operator.add;
var _9d7;
var _9d8=true;
return {next:function(){
if(_9d8){
_9d8=false;
_9d7=iter.next();
return _9d7;
}
_9d7=func(_9d7,iter.next());
return _9d7;
}};
};
MochiKit.Iter.pluck=function(_9d9,_9da){
return MochiKit.Iter.imap(MochiKit.Base.itemgetter(_9da),_9d9);
};
MochiKit.Iter.chunked=function(_9db,n){
return MochiKit.Iter.windowView(_9db,n,n);
};
MochiKit.Iter.zipWith=function(fn,p,_9df){
return MochiKit.Iter.imap(function(item){
return fn.apply(this,item);
},MochiKit.Iter.izip.apply(null,MochiKit.Base.extend(null,arguments,1)));
};
MochiKit.Iter.forEachIdx=function(_9e1,fn){
var self=MochiKit.Iter;
self.exhaust(self.zipWith(fn,self.count(),_9e1));
};
MochiKit.Iter_ext.__new__=function(){
};
MochiKit.Iter_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Text");
}
MochiKit.Base.module(MochiKit,"Text_ext","1.5",["Base","Text"]);
MochiKit.Text.levenshteinDistance=function(s,t,_9e6){
_9e6=_9e6||false;
var n=s.length,m=t.length;
if(n==0){
return m;
}
if(m==0){
return n;
}
var d=new Array(n+1);
for(var r=0;r<n+1;++r){
d[r]=new Array(m+1);
}
for(var i=0;i<=n;++i){
d[i][0]=i;
}
for(var j=0;j<=m;++j){
d[0][j]=j;
}
for(var i=1;i<=n;++i){
for(var j=1;j<=m;++j){
var cost=(t[j-1]==s[i-1]?0:1);
var cell=Math.min(Math.min(d[i-1][j]+1,d[i][j-1]+1),d[i-1][j-1]+cost);
if(_9e6&&(i>2&&j>2)){
var _9ef=d[i-2][j-2]+1;
if(s[i-2]!=t[j-1]){
++_9ef;
}
if(s[i-1]!=t[j-2]){
++_9ef;
}
if(cell>_9ef){
cell=_9ef;
}
}
d[i][j]=cell;
}
}
return d[n][m];
};
MochiKit.Text.humanStringCompare=function(a,b){
if(a==b){
return 0;
}
var _9f2=/^(\+|\-)?\d+/;
var _9f3=/^\D+/;
while(a.length>0&&b.length>0){
var a0=null,ainc=-1;
var b0=null,binc=-1;
var ma=a.match(_9f3);
var mb=b.match(_9f3);
if(ma!=null&&mb!=null){
a0=ma[0].toLowerCase();
ainc=a0.length;
b0=mb[0].toLowerCase();
binc=b0.length;
}else{
if(ma==null){
ma=a.match(_9f2);
a0=parseInt(ma[0],10)+2<<15;
ainc=ma[0].length;
}else{
a0=a.charAt(0).toLowerCase().charCodeAt(0);
ainc=1;
}
if(mb==null){
mb=b.match(_9f2);
b0=parseInt(mb[0],10)+2<<15;
binc=mb[0].length;
}else{
b0=b.charAt(0).toLowerCase().charCodeAt(0);
binc=1;
}
}
if(a0<b0){
return -1;
}
if(a0>b0){
return +1;
}
a=a.substring(ainc);
b=b.substring(binc);
}
if(a.length>0){
return +1;
}
if(b.length>0){
return -1;
}
return 0;
};
MochiKit.Text_ext.__new__=function(){
};
MochiKit.Text_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.HeapQ");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"HeapQ","1.5",["Base","Iter"]);
MochiKit.HeapQ.heapify=function(x,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var n=x.length;
for(var i=Math.floor(n/2)-1;i>=0;--i){
MochiKit.HeapQ._siftup(x,i,cmp);
}
return x;
};
MochiKit.HeapQ._siftdown=function(heap,_9ff,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _a02=heap[pos];
while(pos>_9ff){
var _a03=(pos-1)>>1;
var _a04=heap[_a03];
if(cmp(_a02,_a04)){
heap[pos]=_a04;
pos=_a03;
continue;
}
break;
}
heap[pos]=_a02;
};
MochiKit.HeapQ._siftup=function(heap,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _a08=heap.length;
var _a09=pos;
var _a0a=heap[pos];
var _a0b=2*pos+1;
while(_a0b<_a08){
var _a0c=_a0b+1;
if(_a0c<_a08&&!(cmp(heap[_a0b],heap[_a0c]))){
_a0b=_a0c;
}
heap[pos]=heap[_a0b];
pos=_a0b;
_a0b=2*pos+1;
}
heap[pos]=_a0a;
MochiKit.HeapQ._siftdown(heap,_a09,pos,cmp);
};
MochiKit.HeapQ.heapPush=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
heap.push(item);
MochiKit.HeapQ._siftdown(heap,0,heap.length-1,cmp);
};
MochiKit.HeapQ.heapPop=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _a12=heap.pop();
var _a13;
if(heap.length>0){
_a13=heap[0];
heap[0]=_a12;
MochiKit.HeapQ._siftup(heap,0,cmp);
}else{
_a13=_a12;
}
return _a13;
};
MochiKit.HeapQ.heapReplace=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _a17=heap[0];
heap[0]=item;
MochiKit.HeapQ._siftup(heap,0,cmp);
return _a17;
};
MochiKit.HeapQ.heapPushPop=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
if(heap.length>0&&cmp(heap[0],item)){
var tmp=heap[0];
heap[0]=item;
item=tmp;
MochiKit.HeapQ._siftup(heap,0,cmp);
}
return item;
};
MochiKit.HeapQ.imergeSorted=function(_a1c,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var _cmp=function(a,b){
var c=cmp(a[0],b[0]);
return c;
};
var h=[];
mi.forEach(mi.izip(mi.count(),mi.imap(mi.iter,_a1c)),function(pair){
var _a26=pair[0],it=pair[1];
try{
var next=it.next;
h.push([next(),_a26,next]);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
}
});
m.HeapQ.heapify(h,_cmp);
return {repr:function(){
return "imergeSorted(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(h.length==0){
throw mi.StopIteration;
}
var s=h[0];
var v=s[0];
var next=s[2];
try{
s[0]=next();
m.HeapQ.heapReplace(h,s,_cmp);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
m.HeapQ.heapPop(h,_cmp);
}
return v;
}
}};
};
MochiKit.HeapQ.heapIter=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
return {next:function(){
if(heap.length==0){
throw MochiKit.Iter.StopIteration;
}
return MochiKit.HeapQ.heapPop(heap,cmp);
}};
};
MochiKit.HeapQ.nLargest=function(n,_a2f,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var it=mi.iter(_a2f);
var _a34=mi.list(mi.islice(it,n));
if(_a34.length==0){
return _a34;
}
m.HeapQ.heapify(_a34,cmp);
mi.forEach(it,function(elem){
m.HeapQ.heapPushPop(_a34,elem,cmp);
});
_a34.sort(function(a,b){
return -1*m.Base.compare(a,b);
});
return _a34;
};
MochiKit.HeapQ.nSmallest=function(n,_a39,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var h=mi.list(_a39);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),mi.range(Math.min(n,h.length)));
};
MochiKit.HeapQ.isHeap=function(lst,cmp){
cmp=cmp||MochiKit.Base.operator.cle;
for(var pos=1;pos<lst.length;++pos){
var _a41=(pos-1)>>1;
if(!cmp(lst[_a41],lst[pos])){
return false;
}
}
return true;
};
MochiKit.HeapQ.heapSort=function(_a42,cmp){
var m=MochiKit;
var h=m.Iter.list(_a42);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),m.Iter.range(h.length));
};
MochiKit.HeapQ.__new__=function(){
};
MochiKit.HeapQ.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.HeapQ);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit._MersenneTwister19937");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"_MersenneTwister19937","1.5",["Base"]);
MochiKit._MersenneTwister19937=function(){
var N=624;
var M=397;
var _a48=2567483615;
var _a49=2147483648;
var _a4a=2147483647;
var mt=new Array(N);
var mti=N+1;
function unsigned32(n1){
return n1<0?(n1^_a49)+_a49:n1;
}
function subtraction32(n1,n2){
return n1<n2?unsigned32((4294967296-(n2-n1))&4294967295):n1-n2;
}
function addition32(n1,n2){
return unsigned32((n1+n2)&4294967295);
}
function multiplication32(n1,n2){
var sum=0;
for(var i=0;i<32;++i){
if((n1>>>i)&1){
sum=addition32(sum,unsigned32(n2<<i));
}
}
return sum;
}
this.init_genrand=function(s){
mt[0]=unsigned32(s&4294967295);
for(mti=1;mti<N;mti++){
mt[mti]=addition32(multiplication32(1812433253,unsigned32(mt[mti-1]^(mt[mti-1]>>>30))),mti);
mt[mti]=unsigned32(mt[mti]&4294967295);
}
};
this.init_by_array=function(_a57,_a58){
var i,j,k;
this.init_genrand(19650218);
i=1;
j=0;
k=(N>_a58?N:_a58);
for(;k;k--){
mt[i]=addition32(addition32(unsigned32(mt[i]^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1664525)),_a57[j]),j);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=_a58){
j=0;
}
}
for(k=N-1;k;k--){
mt[i]=subtraction32(unsigned32((mt[i])^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1566083941)),i);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
}
mt[0]=2147483648;
};
this.genrand_int32=function(){
var y;
var _a5d=new Array(0,_a48);
if(mti>=N){
var kk;
if(mti==N+1){
this.init_genrand(5489);
}
for(kk=0;kk<N-M;kk++){
y=unsigned32((mt[kk]&_a49)|(mt[kk+1]&_a4a));
mt[kk]=unsigned32(mt[kk+M]^(y>>>1)^_a5d[y&1]);
}
for(;kk<N-1;kk++){
y=unsigned32((mt[kk]&_a49)|(mt[kk+1]&_a4a));
mt[kk]=unsigned32(mt[kk+(M-N)]^(y>>>1)^_a5d[y&1]);
}
y=unsigned32((mt[N-1]&_a49)|(mt[0]&_a4a));
mt[N-1]=unsigned32(mt[M-1]^(y>>>1)^_a5d[y&1]);
mti=0;
}
y=mt[mti++];
y=unsigned32(y^(y>>>11));
y=unsigned32(y^((y<<7)&2636928640));
y=unsigned32(y^((y<<15)&4022730752));
y=unsigned32(y^(y>>>18));
return y;
};
this.genrand_int31=function(){
return (this.genrand_int32()>>>1);
};
this.genrand_real1=function(){
return this.genrand_int32()*(1/4294967295);
};
this.genrand_real2=function(){
return this.genrand_int32()*(1/4294967296);
};
this.genrand_real3=function(){
return ((this.genrand_int32())+0.5)*(1/4294967296);
};
this.genrand_res53=function(){
var a=this.genrand_int32()>>>5,b=this.genrand_int32()>>>6;
return (a*67108864+b)*(1/9007199254740992);
};
this._getState=function(){
return {mt:mt.slice(),mti:mti};
};
this._setState=function(_a61){
mt=_a61.mt;
mti=_a61.mti;
};
};
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Random");
goog.require("MochiKit.Base");
goog.require("MochiKit._MersenneTwister19937");
}
MochiKit.Base.module(MochiKit,"Random","1.5",["Base","_MersenneTwister19937"]);
MochiKit.Random.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
MochiKit.Random._generator.seed(x);
};
MochiKit.Random.getState=function(){
return MochiKit.Random._generator.getState();
};
MochiKit.Random.setState=function(_a63){
MochiKit.Random._generator.setState(_a63);
};
MochiKit.Random.random=function(){
return MochiKit.Random._generator.random();
};
MochiKit.Random.randRange=function(_a64,_a65,step){
var self=MochiKit.Random;
if(arguments.length==1){
_a65=_a64;
_a64=0;
}
step=step||1;
var _a68=_a65-_a64;
if(step==1&&_a68>0){
return Math.floor(_a64+Math.floor(self.random()*_a68));
}
if(step>0){
var n=Math.floor((_a68+step-1)/step);
}else{
if(step<0){
var n=Math.floor((_a68+step+1)/step);
}
}
return _a64+step*Math.floor(self.random()*n);
};
MochiKit.Random.uniform=function(a,b){
return a+(b-a)*MochiKit.Random.random();
};
MochiKit.Random.shuffle=function(_a6c){
for(var i=_a6c.length-1;i>0;--i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
var tmp=_a6c[i];
_a6c[i]=_a6c[j];
_a6c[j]=tmp;
}
return _a6c;
};
MochiKit.Random.deal=function(_a70,func){
func=func||MochiKit.Base.operator.identity;
var deck=new Array(_a70);
for(var i=0;i<_a70;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
deck[i]=deck[j];
deck[j]=func(i);
}
return deck;
};
MochiKit.Random.choice=function(seq){
return seq[Math.floor(MochiKit.Random.random()*seq.length)];
};
MochiKit.Random.shuffled=function(_a76){
var n=_a76.length;
var a=new Array(n);
a[0]=_a76[0];
for(var i=1;i<n-1;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
a[i]=a[j];
a[j]=_a76[i];
}
return a;
};
MochiKit.Random.sample=function(_a7b,k){
var n=_a7b.length;
var _a7e=new Array(k);
var _a7f={};
for(var i=0;i<k;++i){
var j=MochiKit.Random.randRange(n);
while(j in _a7f){
j=MochiKit.Random.randRange(n);
}
_a7f[j]=true;
_a7e[i]=_a7b[j];
}
return _a7e;
};
MochiKit.Random._IRndGenerator=function(){
};
MochiKit.Random._IRndGenerator.prototype.seed=function(x){
};
MochiKit.Random._IRndGenerator.prototype.getState=function(){
};
MochiKit.Random._IRndGenerator.prototype.setState=function(_a83){
};
MochiKit.Random._IRndGenerator.prototype.random=function(){
};
MochiKit.Random.MersenneTwister=function(x){
this._mt=new MochiKit._MersenneTwister19937();
this.seed(x);
};
MochiKit.Random.MersenneTwister.prototype.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
this._mt.init_genrand(x);
};
MochiKit.Random.MersenneTwister.prototype.getState=function(){
return this._mt._getState();
};
MochiKit.Random.MersenneTwister.prototype.setState=function(_a86){
this._mt._setState(_a86);
};
MochiKit.Random.MersenneTwister.prototype.random=function(){
return this._mt.genrand_real2();
};
MochiKit.Random.SystemRandom=function(){
};
MochiKit.Random.SystemRandom.prototype.seed=function(x){
};
MochiKit.Random.SystemRandom.prototype.getState=function(){
};
MochiKit.Random.SystemRandom.prototype.setState=function(_a88){
};
MochiKit.Random.SystemRandom.prototype.random=function(){
return Math.random();
};
MochiKit.Random._generator=null;
MochiKit.Random._setGenerator=function(_a89){
MochiKit.Random._generator=_a89;
};
MochiKit.Random.__new__=function(){
MochiKit.Random._setGenerator(new MochiKit.Random.MersenneTwister());
};
MochiKit.Random.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Random);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Bisect");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Bisect","1.5",["Base"]);
MochiKit.Bisect.bisectRight=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(x,a[mid])<0){
hi=mid;
}else{
lo=mid+1;
}
}
return lo;
};
MochiKit.Bisect.insortRight=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectRight(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisectLeft=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(a[mid],x)<0){
lo=mid+1;
}else{
hi=mid;
}
}
return lo;
};
MochiKit.Bisect.insortLeft=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectLeft(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisect=MochiKit.Bisect.bisectRight;
MochiKit.Bisect.insort=MochiKit.Bisect.insortRight;
MochiKit.Bisect.__new__=function(){
};
MochiKit.Bisect.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Bisect);


