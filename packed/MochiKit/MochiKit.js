/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base");
}
var MochiKit=MochiKit||{};
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
MochiKit.NAME="MochiKit";
MochiKit.VERSION="1.5";
MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.Base=MochiKit.Base||{};
MochiKit.Base.module=function(_1,_2,_3,_4){
var _5=_1[_2]=_1[_2]||{};
var _6=(_1.NAME?_1.NAME+".":"");
_5.NAME=_6+_2;
_5.VERSION=_3;
_5.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_5.toString=function(){
return this.__repr__();
};
for(var i=0;_4!=null&&i<_4.length;i++){
if(!(_4[i] in _1)){
throw _5.NAME+" depends on "+_6+_4[i]+"!";
}
}
return _5;
};
MochiKit.Base.module(MochiKit,"Base","1.5",[]);
MochiKit.Base.update=function(_8,_9){
if(_8===null||_8===undefined){
_8={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_8[k]=o[k];
}
}
}
return _8;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_d){
var _e=_d.split("-");
var cc=_e[0];
for(var i=1;i<_e.length;i++){
cc+=_e[i].charAt(0).toUpperCase()+_e[i].substring(1);
}
return cc;
},counter:function(n,_12){
if(arguments.length===0){
n=1;
}
if(arguments.length<2){
_12=1;
}
return function(){
var c=n;
n+=_12;
return c;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _1e=m.extend(null,arguments);
while(_1e.length){
var o=_1e.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_1e.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_21,obj,_23){
if(!_23){
_23=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_21){
_21=[];
}
for(var i=_23;i<l;i++){
_21.push(obj[i]);
}
}
return _21;
},updatetree:function(_26,obj){
if(_26===null||_26===undefined){
_26={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_26[k])=="object"&&typeof (v)=="object"&&!MochiKit.Base.isDateLike(v)&&!(v instanceof Array)){
arguments.callee(_26[k],v);
}else{
_26[k]=v;
}
}
}
}
return _26;
},setdefault:function(_2c,obj,_2e){
if(_2c===null||_2c===undefined){
_2c={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _2c)){
_2c[k]=o[k];
}
}
}
return _2c;
},keys:function(obj){
var _33=[];
for(var _34 in obj){
_33.push(_34);
}
return _33;
},values:function(obj){
var _36=[];
for(var _37 in obj){
_36.push(obj[_37]);
}
return _36;
},items:function(obj){
var _39=[];
for(var _3a in obj){
var v;
try{
v=obj[_3a];
}
catch(e){
continue;
}
_39.push([_3a,v]);
}
return _39;
},_newNamedError:function(_3c,_3d,_3e){
_3e.prototype=new MochiKit.Base.NamedError(_3c.NAME+"."+_3d);
_3e.prototype.constructor=_3e;
_3c[_3d]=_3e;
},operator:{NAME:"operator",truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},floordiv:function(a,b){
return Math.floor(a/b);
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},pow:function(a,b){
return Math.pow(a,b);
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},getitem:function(a,b){
return a[b];
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
},concat:function(a,b){
return MochiKit.Base.concat(a,b);
},iconcat:function(a,b){
return a.concat(b);
},setitem:function(a,b,c){
return a[b]=c;
},delitem:function(a,b){
delete a[b];
}},forwardCall:function(_8b){
return function(){
return this[_8b].apply(this,arguments);
};
},itemgetter:function(_8c){
return function(arg){
return arg[_8c];
};
},bool:function(_8e){
if(typeof (_8e)==="boolean"||_8e instanceof Boolean){
return _8e.valueOf();
}else{
if(typeof (_8e)==="string"||_8e instanceof String){
return _8e.length>0&&_8e!="false"&&_8e!="null"&&_8e!="undefined"&&_8e!="0";
}else{
if(typeof (_8e)==="number"||_8e instanceof Number){
return !isNaN(_8e)&&_8e!=0;
}else{
if(_8e!=null&&typeof (_8e.length)==="number"){
return _8e.length!==0;
}else{
return _8e!=null;
}
}
}
}
},typeMatcher:function(){
var _8f={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_8f[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _8f)){
return false;
}
}
return true;
};
},isNull:function(obj,_94){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(obj,_97){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj,_9b){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj,_9d){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(arr,_a1){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(_a5,_a6){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn,obj,_ab){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _ac=[];
for(var i=1;i<arguments.length;i++){
_ac.push(fn(arguments[i]));
}
return _ac;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _b2=m.isArrayLike;
if(arguments.length<=2){
if(!_b2(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _b3=[];
for(var i=0;i<lst.length;i++){
_b3.push(fn(lst[i]));
}
return _b3;
}else{
if(fn===null){
fn=Array;
}
var _b5=null;
for(var i=1;i<arguments.length;i++){
if(!_b2(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_b5===null||_b5>l){
_b5=l;
}
}
_b3=[];
for(var i=0;i<_b5;i++){
var _b7=[];
for(var j=1;j<arguments.length;j++){
_b7.push(arguments[j][i]);
}
_b3.push(fn.apply(this,_b7));
}
return _b3;
}
},xfilter:function(fn,obj,_bb){
var _bc=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_bc.push(o);
}
}
return _bc;
},filter:function(fn,lst,_c1){
var _c2=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_c1);
}else{
if(typeof (_c1)=="undefined"||_c1===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_c2.push(o);
}
}
}else{
for(var i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_c1,o)){
_c2.push(o);
}
}
}
}
return _c2;
},_wrapDumbFunction:function(_c6){
return function(){
switch(arguments.length){
case 0:
return _c6();
case 1:
return _c6(arguments[0]);
case 2:
return _c6(arguments[0],arguments[1]);
case 3:
return _c6(arguments[0],arguments[1],arguments[2]);
}
var _c7=[];
for(var i=0;i<arguments.length;i++){
_c7.push("arguments["+i+"]");
}
return eval("(func("+_c7.join(",")+"))");
};
},methodcaller:function(_c9,_ca){
var _cb=MochiKit.Base.extend(null,arguments,1);
if(typeof (_c9)=="function"){
return function(obj){
return _c9.apply(obj,_cb);
};
}else{
return function(obj){
return obj[_c9].apply(obj,_cb);
};
}
},method:function(_ce,_cf){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_cf,_ce],arguments,2));
},compose:function(f1,f2,_d3){
var _d4=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_d4.push(fn);
}
return function(){
var _d8=arguments;
for(var i=_d4.length-1;i>=0;i--){
_d8=[_d4[i].apply(this,_d8)];
}
return _d8[0];
};
},bind:function(_da,_db,_dc){
if(typeof (_da)=="string"){
_da=_db[_da];
}
var _dd=_da.im_func;
var _de=_da.im_preargs;
var _df=_da.im_self;
var m=MochiKit.Base;
if(typeof (_da)=="function"&&typeof (_da.apply)=="undefined"){
_da=m._wrapDumbFunction(_da);
}
if(typeof (_dd)!="function"){
_dd=_da;
}
if(typeof (_db)!="undefined"){
_df=_db;
}
if(typeof (_de)=="undefined"){
_de=[];
}else{
_de=_de.slice();
}
m.extend(_de,arguments,2);
var _e1=function(){
var _e2=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_e2=m.concat(me.im_preargs,_e2);
}
var _e4=me.im_self;
if(!_e4){
_e4=this;
}
return me.im_func.apply(_e4,_e2);
};
_e1.im_self=_df;
_e1.im_func=_dd;
_e1.im_preargs=_de;
if(typeof (_dd.NAME)=="string"){
_e1.NAME="bind("+_dd.NAME+",...)";
}
return _e1;
},bindLate:function(_e5,_e6){
var m=MochiKit.Base;
var _e8=arguments;
if(typeof (_e5)==="string"){
_e8=m.extend([m.forwardCall(_e5)],arguments,1);
return m.bind.apply(this,_e8);
}
return m.bind.apply(this,_e8);
},bindMethods:function(_e9){
var _ea=MochiKit.Base.bind;
for(var k in _e9){
var _ec=_e9[k];
if(typeof (_ec)=="function"){
_e9[k]=_ea(_ec,_e9);
}
}
},registerComparator:function(_ed,_ee,_ef,_f0){
MochiKit.Base.comparatorRegistry.register(_ed,_ee,_ef,_f0);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _f3=(typeof (a)=="undefined"||a===null);
var _f4=(typeof (b)=="undefined"||b===null);
if(_f3&&_f4){
return 0;
}else{
if(_f3){
return -1;
}else{
if(_f4){
return 1;
}
}
}
var m=MochiKit.Base;
var _f6=m._primitives;
if(!(typeof (a) in _f6&&typeof (b) in _f6)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _f7=m.repr;
throw new TypeError(_f7(a)+" and "+_f7(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _fc=MochiKit.Base.compare;
var _fd=a.length;
var _fe=0;
if(_fd>b.length){
_fe=1;
_fd=b.length;
}else{
if(_fd<b.length){
_fe=-1;
}
}
for(var i=0;i<_fd;i++){
var cmp=_fc(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _fe;
},registerRepr:function(name,_102,wrap,_104){
MochiKit.Base.reprRegistry.register(name,_102,wrap,_104);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
try{
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
catch(ignore){
}
}
try{
var _106=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_106=_106.replace(/^\s+/,"").replace(/\s+/g," ");
_106=_106.replace(/,(\S)/,", $1");
var idx=_106.indexOf("{");
if(idx!=-1){
_106=_106.substr(0,idx)+"{...}";
}
}
return _106;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(name,_10d,wrap,_10f){
MochiKit.Base.jsonRegistry.register(name,_10d,wrap,_10f);
},evalJSON:function(_110){
return eval("("+MochiKit.Base._filterJSON(_110)+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
return (m)?m[1]:s;
},serializeJSON:function(o){
var _114=typeof (o);
if(_114=="number"||_114=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_114=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _11a;
if(typeof (o.toJSON)=="function"){
_11a=o.toJSON();
if(o!==_11a){
return me(_11a);
}
}
if(typeof (o.__json__)=="function"){
_11a=o.__json__();
if(o!==_11a){
return me(_11a);
}
}
if(typeof (o.json)=="function"){
_11a=o.json();
if(o!==_11a){
return me(_11a);
}
}
if(_114!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_11a=m.jsonRegistry.match(o);
if(o!==_11a){
return me(_11a);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_114=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_114=="function"){
return null;
}
res=[];
for(var k in o){
if(o.hasOwnProperty(k)){
var _11e;
if(typeof (k)=="number"){
_11e="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_11e=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_11e+":"+val);
}
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(self,arr){
if(self.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(self,arr)===0);
},concat:function(lst,_124){
var rval=[];
var _126=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_126(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _12a=m.compare;
if(arguments.length==1){
return function(a,b){
return _12a(a[key],b[key]);
};
}
var _12d=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_12d.length);i++){
var key=_12d[i];
rval=_12a(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _134=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _134(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_139,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _13c=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_13c(o,cur)==_139){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_140,_141,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_141)=="undefined"||_141===null){
_141=0;
}
for(var i=_141;i<end;i++){
if(lst[i]===_140){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _147=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_147+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_147<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_147;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(MochiKit.Base.compare);
if(data.length%2==0){
var _14b=data.length/2;
return (data[_14b]+data[_14b-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_14d,_14e,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_14e)=="undefined"||_14e===null){
_14e=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_14e;i<end;i++){
if(cmp(lst[i],_14d)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_153){
var _154=[node];
var _155=MochiKit.Base.extend;
while(_154.length){
var res=_153(_154.shift());
if(res){
_155(_154,res);
}
}
},nameFunctions:function(_157){
var base=_157.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _157){
var o=_157[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_15b,_15c){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_15b)=="string"||(typeof (_15b.nodeType)!="undefined"&&_15b.nodeType>0))){
var kv=MochiKit.DOM.formContents(_15b);
_15b=kv[0];
_15c=kv[1];
}else{
if(arguments.length==1){
if(typeof (_15b.length)=="number"&&_15b.length==2){
return arguments.callee(_15b[0],_15b[1]);
}
var o=_15b;
_15b=[];
_15c=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_15b.push(k);
_15c.push(v[i]);
}
}else{
_15b.push(k);
_15c.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_15b.length,_15c.length);
var _164=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_15c[i];
if(typeof (v)!="undefined"&&v!==null){
if(MochiKit.Base.isDateLike(v)){
v=MochiKit.DateTime.toISOTimestamp(v,true);
}
rval.push(_164(_15b[i])+"="+_164(v));
}
}
return rval.join("&");
},parseQueryString:function(_165,_166){
var qstr=(_165.charAt(0)=="?")?_165.substring(1):_165;
var _168=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _16a;
if(typeof (decodeURIComponent)!="undefined"){
_16a=decodeURIComponent;
}else{
_16a=unescape;
}
if(_166){
for(var i=0;i<_168.length;i++){
var pair=_168[i].split("=");
var name=_16a(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_16a(pair.join("=")));
}
}else{
for(var i=0;i<_168.length;i++){
pair=_168[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_16a(name)]=_16a(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_170,wrap,_172){
if(_172){
this.pairs.unshift([name,_170,wrap]);
}else{
this.pairs.push([name,_170,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.moduleExport=function(_178,_179){
var SKIP={toString:true,NAME:true,VERSION:true};
var mods=MochiKit.Base.extend([],arguments,1);
while((_179=mods.shift())!=null){
for(var k in _179){
var v=_179[k];
if(v!=null){
var _17e=(typeof (v.__export__)=="boolean");
var _17f=(k[0]!=="_"&&!SKIP[k]);
if(_17e?v.__export__:_17f){
if(typeof (v)=="object"&&v.NAME&&v.VERSION){
mods.push(v);
}else{
_178[k]=_179[k];
}
}
}
}
}
return _178;
};
MochiKit.Base._exportSymbols=function(_180,_181){
if(MochiKit.__export__!==false&&_181.__export__!==false){
MochiKit.Base.moduleExport(_180,_181);
}
};
MochiKit.Base._deprecated=function(_182,name,_184,_185,_186){
if(typeof (_182)==="string"){
if(_182.indexOf("MochiKit.")===0){
_182=_182.substring(9);
}
_182=MochiKit[_182];
}
var _187=_184.split(".")[1];
var _188=_184.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_182.NAME+"."+name+" is deprecated since version "+_185+". Use "+_184+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_187]){
throw new Error(msg);
}
return MochiKit[_187][_188].apply(this,arguments);
};
func.__export__=(_186===true);
_182[name]=func;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=function(){
};
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3");
m._deprecated(m,"find","MochiKit.Base.findValue","1.3");
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_18d){
return encodeURIComponent(_18d).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_18e){
return escape(_18e).replace(/\+/g,"%2B").replace(/\"/g,"%22").replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.NamedError.prototype.constructor=m.NamedError;
m.NamedError.prototype.repr=function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
};
m.NamedError.prototype.toString=m.forwardCall("repr");
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.isValue=m.typeMatcher("boolean","number","string");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
m.nameFunctions(this.operator);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Iter","1.5",["Base"]);
MochiKit.Base.update(MochiKit.Iter,{registerIteratorFactory:function(name,_191,_192,_193){
MochiKit.Iter.iteratorRegistry.register(name,_191,_192,_193);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_195,_196){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_196;
},_195);
}
if(typeof (_195.next)=="function"){
return _195;
}else{
if(typeof (_195.iter)=="function"){
return _195.iter();
}else{
if(typeof (_195.__iterator__)=="function"){
return _195.__iterator__(false);
}
}
}
try{
return self.iteratorRegistry.match(_195);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_195)+": "+m.repr(_195)+" is not iterable");
}
throw e;
}
},count:function(n,step){
if(!n){
n=0;
}
if(arguments.length<2){
step=1;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n,step)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _1a1=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_1a1.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_1a7){
return _1a7.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _1ad=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_1ad);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _1b9=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_1b9=arguments[1];
stop=arguments[2];
}else{
_1b9=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_1b9,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
if(_1b9>=stop){
throw self.StopIteration;
}
var rval;
while(i<_1b9){
rval=seq.next();
i++;
}
_1b9+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _1c3=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_1c3));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1ce=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1ce.length>1){
try{
return _1ce[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1ce.shift();
}
}
if(_1ce.length==1){
var arg=_1ce.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1d9,sync,_1db){
sync.pos[_1d9]=-1;
var m=MochiKit.Base;
var _1dd=m.listMin;
return {repr:function(){
return "tee("+_1d9+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1d9];
if(i==sync.max){
rval=_1db.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1d9]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1d9]+=1;
if(i==sync.min&&_1dd(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1e0,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1e0=self.iter(_1e0);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1e0));
}
return rval;
},list:function(_1e7){
var rval;
if(_1e7 instanceof Array){
return _1e7.slice();
}
if(typeof (_1e7)=="function"&&!(_1e7 instanceof Function)&&typeof (_1e7.length)=="number"){
rval=[];
for(var i=0;i<_1e7.length;i++){
rval.push(_1e7[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1e7=self.iter(_1e7);
rval=[];
var _1eb;
try{
while(true){
_1eb=_1e7.next();
rval.push(_1eb);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1ed,_1ee){
var i=0;
var x=_1ee;
var self=MochiKit.Iter;
_1ed=self.iter(_1ed);
if(arguments.length<3){
try{
x=_1ed.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1ed.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1f2=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1f2=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1f2=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1f2>=stop)||(step<0&&_1f2<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1f2;
_1f2+=step;
return rval;
},repr:function(){
return "range("+[_1f2,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1f6,_1f7){
if(typeof (_1f7)=="undefined"||_1f7===null){
_1f7=0;
}
var x=_1f7;
var self=MochiKit.Iter;
_1f6=self.iter(_1f6);
try{
while(true){
x+=_1f6.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1fa){
var self=MochiKit.Iter;
_1fa=self.iter(_1fa);
try{
while(true){
_1fa.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1fc,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_1fc)&&!self.isIterable(_1fc)){
try{
for(var i=0;i<_1fc.length;i++){
func(_1fc[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_1fc));
}
return func;
},every:function(_202,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_202).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_205,cmp){
var rval=MochiKit.Iter.list(_205);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_208){
var rval=MochiKit.Iter.list(_208);
rval.reverse();
return rval;
},some:function(_20a,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_20a).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_20e,skip){
skip=skip||0;
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_20e)&&!self.isIterable(_20e)){
for(var i=skip;i<_20e.length;i++){
lst.push(_20e[i]);
}
}else{
_20e=self.iter(_20e);
try{
while(skip-->0){
_20e.next();
}
while(true){
lst.push(_20e.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_213,_214){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_214=m.operator.identity;
}
_213=self.iter(_213);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_213.next();
k=_214(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _21b=true;
var _21c=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_21c(k,pk)===0){
fetch();
if(_21b){
_21b=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_21c(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_21d,_21e){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_21e=m.operator.identity;
}
_21d=self.iter(_21d);
var _221=[];
var _222=true;
var _223;
var _224=m.compare;
while(true){
try{
var _225=_21d.next();
var key=_21e(_225);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_222||_224(key,_223)!==0){
var _227=[];
_221.push([key,_227]);
}
_227.push(_225);
_222=false;
_223=key;
}
return _221;
},arrayLikeIter:function(_228){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_228.length){
throw MochiKit.Iter.StopIteration;
}
return _228[i++];
}};
},hasIterateNext:function(_22a){
return (_22a&&typeof (_22a.iterateNext)=="function");
},iterateNextIter:function(_22b){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_22b.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Logging");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_22f,info){
this.num=num;
this.level=_22f;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_232){
var self=MochiKit.Logging;
if(typeof (_232)=="string"){
_232=self.LogLevel[_232];
}
return function(msg){
var _235=msg.level;
if(typeof (_235)=="string"){
_235=self.LogLevel[_235];
}
return _235>=_232;
};
},isLogMessage:function(_236){
var _237=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _237)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_23c){
this.counter=0;
if(typeof (_23c)=="undefined"||_23c===null){
_23c=-1;
}
this.maxSize=_23c;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_241,_242,_243){
if(typeof (_242)=="string"){
_242=MochiKit.Logging.logLevelAtLeast(_242);
}
var _244=[_242,_243];
_244.ident=_241;
this.listeners[_241]=_244;
},removeListener:function(_245){
delete this.listeners[_245];
},baseLog:function(_246,_247,_248){
if(typeof (_246)=="number"){
if(_246>=MochiKit.Logging.LogLevel.FATAL){
_246="FATAL";
}else{
if(_246>=MochiKit.Logging.LogLevel.ERROR){
_246="ERROR";
}else{
if(_246>=MochiKit.Logging.LogLevel.WARNING){
_246="WARNING";
}else{
if(_246>=MochiKit.Logging.LogLevel.INFO){
_246="INFO";
}else{
_246="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_246,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_24a){
var _24b=0;
if(!(typeof (_24a)=="undefined"||_24a===null)){
_24b=Math.max(0,this._messages.length-_24a);
}
return this._messages.slice(_24b);
},getMessageText:function(_24c){
if(typeof (_24c)=="undefined"||_24c===null){
_24c=30;
}
var _24d=this.getMessages(_24c);
if(_24d.length){
var lst=MochiKit.Base.map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_24d);
lst.unshift("LAST "+_24d.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_250){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_250||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _252=m.partial;
var _253=this.Logger;
var _254=_253.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_252(_254,"DEBUG"),log:_252(_254,"INFO"),error:_252(_254,"ERROR"),fatal:_252(_254,"FATAL"),warning:_252(_254,"WARNING")});
var self=this;
var _256=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_256("log");
this.logError=_256("error");
this.logDebug=_256("debug");
this.logFatal=_256("fatal");
this.logWarning=_256("warning");
this.logger=new _253();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DateTime");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var date=new Date(parseInt(iso[0],10),parseInt(iso[1],10)-1,parseInt(iso[2],10));
date.setFullYear(iso[0]);
date.setMonth(iso[1]-1);
date.setDate(iso[2]);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_25e,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_25e=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_25e,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_25e,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_25e,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_266){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _267=MochiKit.DateTime._padTwo;
if(_266){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
var lst=[(_266?_267(date.getHours()):""+date.getHours()),_267(date.getMinutes()),_267(date.getSeconds())];
return lst.join(":")+(_266?"Z":"");
};
MochiKit.DateTime.toISOTimestamp=function(date,_26a){
if(typeof (date)=="undefined"||date===null){
return null;
}
var time=MochiKit.DateTime.toISOTime(date,_26a);
var sep=_26a?"T":" ";
if(_26a){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+time;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _26e=MochiKit.DateTime._padTwo;
var _26f=MochiKit.DateTime._padFour;
return [_26f(date.getFullYear()),_26e(date.getMonth()+1),_26e(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?""+n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return ""+n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _275=MochiKit.DateTime._padTwo;
return [_275(d.getMonth()+1),_275(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Format");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_277,_278,_279,_27a,_27b,_27c,_27d,_27e,_27f){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _277;
}
var _281=_278;
var _282=_279;
if(num<0){
num=-num;
}else{
_281=_281.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_27a);
if(_27b){
num=num*100;
_282=fmt.percent+_282;
}
num=MochiKit.Format.roundToFixed(num,_27c);
var _285=num.split(/\./);
var _286=_285[0];
var frac=(_285.length==1)?"":_285[1];
var res="";
while(_286.length<_27d){
_286="0"+_286;
}
if(_27e){
while(_286.length>_27e){
var i=_286.length-_27e;
res=fmt.separator+_286.substring(i,_286.length)+res;
_286=_286.substring(0,i);
}
}
res=_286+res;
if(_27c>0){
while(frac.length<_27f){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _281+res+_282;
};
};
MochiKit.Format.numberFormatter=function(_28a,_28b,_28c){
if(typeof (_28b)=="undefined"){
_28b="";
}
var _28d=_28a.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_28d){
throw TypeError("Invalid pattern");
}
var _28e=_28a.substr(0,_28d.index);
var _28f=_28a.substr(_28d.index+_28d[0].length);
if(_28e.search(/-/)==-1){
_28e=_28e+"-";
}
var _290=_28d[1];
var frac=(typeof (_28d[2])=="string"&&_28d[2]!="")?_28d[2]:"";
var _292=(typeof (_28d[3])=="string"&&_28d[3]!="");
var tmp=_290.split(/,/);
var _294;
if(typeof (_28c)=="undefined"){
_28c="default";
}
if(tmp.length==1){
_294=null;
}else{
_294=tmp[1].length;
}
var _295=_290.length-_290.replace(/0/g,"").length;
var _296=frac.length-frac.replace(/0/g,"").length;
var _297=frac.length;
var rval=MochiKit.Format._numberFormatter(_28b,_28e,_28f,_28c,_292,_297,_295,_294,_296);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",m.map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_29c){
if(typeof (_29c)=="undefined"||_29c===null){
_29c="default";
}
if(typeof (_29c)=="string"){
var rval=MochiKit.Format.LOCALE[_29c];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_29c]=rval;
}
return rval;
}else{
return _29c;
}
};
MochiKit.Format.twoDigitAverage=function(_29e,_29f){
if(_29f){
var res=_29e/_29f;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_2a1){
var res=MochiKit.Format.roundToFixed(_2a1,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_2a4){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2a4){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_2a4+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_2a6){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2a6){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_2a6+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_2a8){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_2a8),_2a8);
};
MochiKit.Format.truncToFixed=function(_2aa,_2ab){
var _2ac=MochiKit.Format._numberToFixed(_2aa,_2ab);
var _2ad=_2ac.indexOf(".");
if(_2ad>0&&_2ad+_2ab+1<_2ac.length){
_2ac=_2ac.substring(0,_2ad+_2ab+1);
_2ac=MochiKit.Format._shiftNumber(_2ac,0);
}
return _2ac;
};
MochiKit.Format.roundToFixed=function(_2ae,_2af){
var _2b0=MochiKit.Format._numberToFixed(_2ae,_2af);
var _2b1=_2b0.indexOf(".");
if(_2b1>0&&_2b1+_2af+1<_2b0.length){
var str=MochiKit.Format._shiftNumber(_2b0,_2af);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_2b0=MochiKit.Format._shiftNumber(str,-_2af);
}
return _2b0;
};
MochiKit.Format._numberToFixed=function(_2b3,_2b4){
var str=_2b3.toString();
var _2b6=str.split(/[eE]/);
var exp=(_2b6.length===1)?0:parseInt(_2b6[1],10)||0;
var _2b8=MochiKit.Format._shiftNumber(_2b6[0],exp);
_2b6=_2b8.split(/\./);
var _2b9=_2b6[0];
var frac=(_2b6.length===1)?"":_2b6[1];
while(frac.length<_2b4){
frac+="0";
}
if(frac.length>0){
return _2b9+"."+frac;
}else{
return _2b9;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_2be){
return MochiKit.Format.twoDigitFloat(100*_2be)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text");
goog.require("MochiKit.Base");
goog.require("MochiKit.Format");
}
MochiKit.Base.module(MochiKit,"Text","1.5",["Base","Format"]);
MochiKit.Text.startsWith=function(_2c3,str){
return str!=null&&_2c3!=null&&str.indexOf(_2c3)==0;
};
MochiKit.Text.endsWith=function(_2c5,str){
return str!=null&&_2c5!=null&&str.lastIndexOf(_2c5)==Math.max(str.length-_2c5.length,0);
};
MochiKit.Text.contains=function(_2c7,str){
return str!=null&&_2c7!=null&&str.indexOf(_2c7)>=0;
};
MochiKit.Text.padLeft=function(str,_2ca,_2cb){
str=str||"";
_2cb=_2cb||" ";
while(str.length<_2ca){
str=_2cb+str;
}
return str;
};
MochiKit.Text.padRight=function(str,_2cd,_2ce){
str=str||"";
_2ce=_2ce||" ";
while(str.length<_2cd){
str+=_2ce;
}
return str;
};
MochiKit.Text.truncate=function(str,_2d0,tail){
if(str==null||str.length<=_2d0||_2d0<0){
return str;
}else{
if(tail!=null){
str=str.slice(0,Math.max(0,_2d0-tail.length));
if(typeof (str)=="string"){
return str+tail;
}else{
return MochiKit.Base.extend(str,tail);
}
}else{
return str.slice(0,_2d0);
}
}
};
MochiKit.Text.split=function(str,_2d3,max){
if(str==null){
return str;
}
_2d3=_2d3||"\n";
var bits=str.split(_2d3);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(max,bits.length,bits.slice(max,bits.length).join(_2d3));
return bits;
};
MochiKit.Text.rsplit=function(str,_2d7,max){
if(str==null){
return str;
}
_2d7=_2d7||"\n";
var bits=str.split(_2d7);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(0,bits.length-max,bits.slice(0,bits.length-max).join(_2d7));
return bits;
};
MochiKit.Text.formatter=function(_2da,_2db){
if(_2db==null){
_2db=MochiKit.Format.formatLocale();
}else{
if(typeof (_2db)=="string"){
_2db=MochiKit.Format.formatLocale(_2db);
}
}
var _2dc=MochiKit.Text._parsePattern(_2da);
return function(){
var _2dd=MochiKit.Base.extend([],arguments);
var res=[];
for(var i=0;i<_2dc.length;i++){
if(typeof (_2dc[i])=="string"){
res.push(_2dc[i]);
}else{
res.push(MochiKit.Text.formatValue(_2dc[i],_2dd,_2db));
}
}
return res.join("");
};
};
MochiKit.Text.format=function(_2e0){
var func=MochiKit.Text.formatter(_2e0);
return func.apply(this,MochiKit.Base.extend([],arguments,1));
};
MochiKit.Text.formatValue=function(spec,_2e3,_2e4){
var self=MochiKit.Text;
if(typeof (spec)==="string"){
spec=self._parseFormatFlags(spec,0,spec.length);
}
for(var i=0;spec.path!=null&&i<spec.path.length;i++){
if(_2e3!=null){
_2e3=_2e3[spec.path[i]];
}
}
if(_2e4==null){
_2e4=MochiKit.Format.formatLocale();
}else{
if(typeof (_2e4)=="string"){
_2e4=MochiKit.Format.formatLocale(_2e4);
}
}
var str="";
if(spec.type=="number"){
if(_2e3 instanceof Number){
_2e3=_2e3.valueOf();
}
if(typeof (_2e3)!="number"||isNaN(_2e3)){
str="";
}else{
if(_2e3===Number.POSITIVE_INFINITY){
str="\u221e";
}else{
if(_2e3===Number.NEGATIVE_INFINITY){
str="-\u221e";
}else{
var sign=(_2e3<0)?"-":spec.sign;
_2e3=Math.abs(_2e3);
if(spec.format==="%"){
str=self._truncToPercent(_2e3,spec.precision);
}else{
if(spec.format==="d"){
str=MochiKit.Format.roundToFixed(_2e3,0);
}else{
if(spec.radix!=10){
str=Math.floor(_2e3).toString(spec.radix);
if(spec.format==="x"){
str=str.toLowerCase();
}else{
if(spec.format==="X"){
str=str.toUpperCase();
}
}
}else{
if(spec.precision>=0){
str=MochiKit.Format.roundToFixed(_2e3,spec.precision);
}else{
str=_2e3.toString();
}
}
}
}
if(spec.padding==="0"&&spec.format==="%"){
str=self.padLeft(str,spec.width-sign.length-1,"0");
}else{
if(spec.padding=="0"){
str=self.padLeft(str,spec.width-sign.length,"0");
}
}
str=self._localizeNumber(str,_2e4,spec.group);
str=sign+str;
}
}
}
if(str!==""&&spec.format==="%"){
str=str+_2e4.percent;
}
}else{
if(spec.format=="r"){
str=MochiKit.Base.repr(_2e3);
}else{
str=(_2e3==null)?"":_2e3.toString();
}
str=self.truncate(str,spec.precision);
}
if(spec.align=="<"){
str=self.padRight(str,spec.width);
}else{
str=self.padLeft(str,spec.width);
}
return str;
};
MochiKit.Text._localizeNumber=function(num,_2ea,_2eb){
var _2ec=num.split(/\./);
var _2ed=_2ec[0];
var frac=(_2ec.length==1)?"":_2ec[1];
var res=(frac.length>0)?_2ea.decimal:"";
while(_2eb&&frac.length>3){
res=res+frac.substring(0,3)+_2ea.separator;
frac=frac.substring(3);
if(_2ed.charAt(0)=="0"){
_2ed=_2ed.substring(1);
}
}
if(frac.length>0){
res=res+frac;
}
while(_2eb&&_2ed.length>3){
var pos=_2ed.length-3;
res=_2ea.separator+_2ed.substring(pos)+res;
_2ed=_2ed.substring((_2ed.charAt(0)=="0")?1:0,pos);
}
return _2ed+res;
};
MochiKit.Text._parsePattern=function(_2f1){
var self=MochiKit.Text;
var _2f3=[];
var re=/{[^{}]*}|{{?|}}?/g;
var _2f5=re.lastIndex=0;
var m;
while((m=re.exec(_2f1))!=null){
if(_2f5<m.index){
_2f3.push(_2f1.substring(_2f5,m.index));
}
var str=m[0];
_2f5=m.index+str.length;
if(self.startsWith("{",str)&&self.endsWith("}",str)){
_2f3.push(self._parseFormat(_2f1,m.index+1,_2f5-1));
}else{
if(self.startsWith("{{",str)||self.startsWith("}}",str)){
_2f3.push(str.substring(1));
}else{
if(self.startsWith("{",str)){
var msg="unescaped { char, should be escaped as {{";
throw new self.FormatPatternError(_2f1,m.index,msg);
}else{
if(self.startsWith("}",str)){
var msg="unescaped } char, should be escaped as }}";
throw new self.FormatPatternError(_2f1,m.index,msg);
}
}
}
}
}
if(_2f5<_2f1.length){
_2f3.push(_2f1.substring(_2f5));
}
return _2f3;
};
MochiKit.Text._parseFormat=function(_2f9,_2fa,_2fb){
var self=MochiKit.Text;
var text=_2f9.substring(_2fa,_2fb);
var _2fe=self.split(text,":",1);
var path=_2fe[0];
var _300=_2fa+path.length+((_2fe.length==1)?0:1);
var info=self._parseFormatFlags(_2f9,_300,_2fb);
info.path=(path=="")?[]:path.split(".");
for(var i=0;i<info.path.length;i++){
var v=info.path[i];
v=v.replace(/^\s+/,"").replace(/\s+$/,"");
if(v==""&&info.path.length==1){
v=0;
}else{
if(v==""){
var msg="format value path contains blanks";
throw new self.FormatPatternError(_2f9,_2fa,msg);
}else{
if(/^\d+$/.test(v)){
v=parseInt(v,10);
}
}
}
info.path[i]=v;
}
if(info.path.length<=0||typeof (info.path[0])!="number"){
info.path.unshift(0);
}
return info;
};
MochiKit.Text._parseFormatFlags=function(_305,_306,_307){
var _308=MochiKit.Base.update;
var info={type:"string",format:"s",width:0,precision:-1,align:">",sign:"",padding:" ",group:false};
var text=_305.substring(_306,_307).replace(/\s+$/,"");
var m=/^([<>+ 0,-]+)?(\d+)?(\.\d*)?([srbdoxXf%])?(.*)$/.exec(text);
var _30c=m[1];
var _30d=m[2];
var _30e=m[3];
var type=m[4];
var _310=m[5];
for(var i=0;_30c&&i<_30c.length;i++){
var chr=_30c.charAt(i);
if(chr=="<"||chr==">"){
info.align=chr;
}else{
if(chr=="+"||chr=="-"||chr==" "){
info.sign=(chr=="-")?"":chr;
}else{
if(chr=="0"){
info.padding=chr;
}else{
if(chr==","){
info.group=true;
}
}
}
}
}
if(_30d){
info.width=parseInt(_30d,10);
}
if(_30e&&_30e.length>1){
info.precision=parseInt(_30e.substring(1),10);
}
if(type=="s"||type=="r"){
info.format=type;
}else{
if(type=="b"){
_308(info,{type:"number",format:type,radix:2});
}else{
if(type=="o"){
_308(info,{type:"number",format:type,radix:8});
}else{
if(type=="x"||type=="X"){
_308(info,{type:"number",format:type,radix:16});
}else{
if(type=="d"||type=="f"||type=="%"){
_308(info,{type:"number",format:type,radix:10});
}
}
}
}
}
if(_310){
var msg="unsupported format flag: "+_310.charAt(0);
throw new MochiKit.Text.FormatPatternError(_305,_306,msg);
}
return info;
};
MochiKit.Text._truncToPercent=function(_314,_315){
var str;
if(_315>=0){
str=MochiKit.Format.roundToFixed(_314,_315+2);
}else{
str=(_314==null)?"0":_314.toString();
}
var arr=MochiKit.Text.split(str,".",2);
var frac=MochiKit.Text.padRight(arr[1],2,"0");
var _319=arr[0]+frac.substring(0,2);
frac=frac.substring(2);
while(/^0[0-9]/.test(_319)){
_319=_319.substring(1);
}
return (frac.length<=0)?_319:_319+"."+frac;
};
MochiKit.Text.FormatPatternError=function(_31a,pos,_31c){
this.pattern=_31a;
this.pos=pos;
this.message=_31c;
};
MochiKit.Text.FormatPatternError.prototype=new MochiKit.Base.NamedError("MochiKit.Text.FormatPatternError");
MochiKit.Text.FormatPatternError.constructor=MochiKit.Text.FormatPatternError;
if(MochiKit.__export__){
formatter=MochiKit.Text.formatter;
format=MochiKit.Text.format;
formatValue=MochiKit.Text.formatValue;
}
MochiKit.Base.nameFunctions(MochiKit.Text);
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Async");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_31d){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_31d;
this.silentlyCancelled=false;
this.chained=false;
this.finalized=false;
};
MochiKit.Async.Deferred.prototype.repr=function(){
return "Deferred("+this.id+", "+this.state()+")";
};
MochiKit.Async.Deferred.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.Deferred.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.Deferred.prototype.state=function(){
if(this.fired==-1){
return "unfired";
}else{
if(this.fired===0){
return "success";
}else{
return "error";
}
}
};
MochiKit.Async.Deferred.prototype.cancel=function(e){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(typeof (e)==="string"){
e=new self.GenericError(e);
}else{
if(!(e instanceof Error)){
e=new self.CancelledError(this);
}
}
this.errback(e);
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel(e);
}
}
};
MochiKit.Async.Deferred.prototype._resback=function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
if(this.paused===0){
this._fire();
}
};
MochiKit.Async.Deferred.prototype._check=function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
};
MochiKit.Async.Deferred.prototype.callback=function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.errback=function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.addBoth=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
};
MochiKit.Async.Deferred.prototype.addCallback=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
};
MochiKit.Async.Deferred.prototype.addErrback=function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
};
MochiKit.Async.Deferred.prototype.addCallbacks=function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype.setFinalizer=function(fn){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
this._finalizer=fn;
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype._fire=function(){
var _32a=this.chain;
var _32b=this.fired;
var res=this.results[_32b];
var self=this;
var cb=null;
while(_32a.length>0&&this.paused===0){
var pair=_32a.shift();
var f=pair[_32b];
if(f===null){
continue;
}
try{
var ret=f(res);
if(ret!==undefined){
res=ret;
}
_32b=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self.paused--;
self._resback(res);
};
this.paused++;
}
}
catch(err){
_32b=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_32b;
this.results[_32b]=res;
if(this.chain.length==0&&this.paused===0&&this._finalizer){
this.finalized=true;
this._finalizer(res);
}
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_334){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_336){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _339=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_339.length;i++){
var func=_339[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e2){
}
}
var _33e=null;
try{
_33e=this.status;
if(!_33e&&m.isNotEmpty(this.responseText)){
_33e=304;
}
}
catch(e){
}
if(_33e==200||_33e==201||_33e==204||_33e==304||_33e==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e2){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_342){
if(typeof (_342)=="undefined"||_342===null){
_342="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_342);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self._doXHR(url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:"",async:true},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,opts.async,opts.username,opts.password);
}else{
req.open(opts.method,url,opts.async);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _34f=opts.headers;
if(!m.isArrayLike(_34f)){
_34f=m.items(_34f);
}
for(var i=0;i<_34f.length;i++){
var _351=_34f[i];
var name=_351[0];
var _353=_351[1];
req.setRequestHeader(name,_353);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},loadScript:function(url){
var d=new MochiKit.Async.Deferred();
var _35e=document.createElement("script");
_35e.type="text/javascript";
_35e.src=url;
_35e.onload=function(){
_35e.onload=null;
_35e.onerror=null;
_35e.onreadystatechange=null;
_35e=null;
d.callback();
};
_35e.onerror=function(msg){
_35e.onload=null;
_35e.onerror=null;
_35e.onreadystatechange=null;
_35e=null;
msg="Failed to load script at "+url+": "+msg;
d.errback(new URIError(msg,url));
};
_35e.onreadystatechange=function(){
if(_35e.readyState=="loaded"||_35e.readyState=="complete"){
_35e.onload();
}else{
MochiKit.Async.callLater(10,_35e.onerror,"Script loading timed out");
}
};
document.getElementsByTagName("head")[0].appendChild(_35e);
return d;
},wait:function(_360,_361){
var d=new MochiKit.Async.Deferred();
var cb=MochiKit.Base.bind("callback",d,_361);
var _364=setTimeout(cb,Math.floor(_360*1000));
d.canceller=function(){
try{
clearTimeout(_364);
}
catch(e){
}
};
return d;
},callLater:function(_365,func){
var m=MochiKit.Base;
var _368=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_365).addCallback(function(res){
return _368();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype.__class__=MochiKit.Async.DeferredLock;
MochiKit.Async.DeferredLock.prototype.acquire=function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
};
MochiKit.Async.DeferredLock.prototype.release=function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
};
MochiKit.Async.DeferredLock.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.DeferredLock.prototype.repr=function(){
var _36b;
if(this.locked){
_36b="locked, "+this.waiting.length+" waiting";
}else{
_36b="unlocked";
}
return "DeferredLock("+this.id+", "+_36b+")";
};
MochiKit.Async.DeferredLock.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.DeferredList=function(list,_36d,_36e,_36f,_370){
MochiKit.Async.Deferred.apply(this,[_370]);
this.list=list;
var _371=[];
this.resultList=_371;
this.finishedCount=0;
this.fireOnOneCallback=_36d;
this.fireOnOneErrback=_36e;
this.consumeErrors=_36f;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_371.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_36d){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype.constructor=MochiKit.Async.DeferredList;
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_375,_376,_377){
this.resultList[_375]=[_376,_377];
this.finishedCount+=1;
if(this.fired==-1){
if(_376&&this.fireOnOneCallback){
this.callback([_375,_377]);
}else{
if(!_376&&this.fireOnOneErrback){
this.errback(_377);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_376&&this.consumeErrors){
_377=null;
}
return _377;
};
MochiKit.Async.gatherResults=function(_378){
var d=new MochiKit.Async.DeferredList(_378,false,true,false);
d.addCallback(function(_37a){
var ret=[];
for(var i=0;i<_37a.length;i++){
ret.push(_37a[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _37f;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_37f=r;
}else{
if(r instanceof Error){
_37f=self.fail(r);
}else{
_37f=self.succeed(r);
}
}
}
catch(e){
_37f=self.fail(e);
}
return _37f;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_383){
this.deferred=_383;
});
ne("CancelledError",function(_384){
this.deferred=_384;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DOM");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _38c=self._document;
var _38d=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_38d;
self._document=_38c;
throw e;
}
self._window=_38d;
self._document=_38c;
return rval;
},formContents:function(elem){
var _390=[];
var _391=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _396=elem.tagName.toUpperCase();
if(_396==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_396==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_390.push(name);
_391.push(v);
return null;
}
_390.push(name);
_391.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_390.push(name);
_391.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_390.push(name);
_391.push(v);
}
return null;
}
}
if(_396==="FORM"||_396==="P"||_396==="SPAN"||_396==="DIV"){
return elem.childNodes;
}
_390.push(name);
_391.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_390,_391];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _39f=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_39f;
throw e;
}
self._document=_39f;
return rval;
},registerDOMConverter:function(name,_3a2,wrap,_3a4){
MochiKit.DOM.domConverters.register(name,_3a2,wrap,_3a4);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _3ab=im.repeat;
}
var map=m.map;
var _3ad=self.domConverters;
var _3ae=arguments.callee;
var _3af=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _3b0=null;
try{
_3b0=iter(node);
}
catch(e){
}
if(_3b0){
return map(_3ae,_3b0,_3ab(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _3ae(n,ctx);
};
return map(func,node);
}
}
try{
node=_3ad.match(node,ctx);
continue;
}
catch(e){
if(e!=_3af){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_3b4){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_3b4)=="string"){
_3b4=self.getElement(_3b4);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_3b4){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_3b8){
var o={};
o[attr]=_3b8;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3bd=self.attributeArray.renames[attr];
var _3be=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_3bd){
return node[_3bd];
}
var _3bf=node.getAttribute(attr);
if(_3bf!=_3be){
return _3bf;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3c3=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_3c3){
return node[_3c3];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_3c5){
var elem=node;
var self=MochiKit.DOM;
var base=MochiKit.Base;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_3c5){
if(self.attributeArray.compliant){
for(var k in _3c5){
var v=_3c5[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _3cb=self.attributeArray.renames;
for(var k in _3c5){
v=_3c5[k];
var _3cc=_3cb[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_3cc)=="string"){
elem[_3cc]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3d0=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3d1=MochiKit.Base.concat;
while(_3d0.length){
var n=_3d0.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_3d0=_3d1(n,_3d0);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3d6=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3d7=elem.parentNode;
var _3d8=MochiKit.Base.concat;
while(_3d6.length){
var n=_3d6.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_3d7.insertBefore(n,elem);
}else{
_3d6=_3d8(n,_3d6);
}
}
}
return _3d7;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3dd=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_3dd);
}else{
return self.appendChildNodes(elem.parentNode,_3dd);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _3e1;
while((_3e1=elem.firstChild)){
elem.removeChild(_3e1);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_3e3){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_3e3)=="string"||typeof (_3e3)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _3e8=self._xhtml;
if(_3e3&&!self.attributeArray.compliant){
var _3e9="";
if("name" in _3e3){
_3e9+=" name=\""+self.escapeHTML(_3e3.name)+"\"";
}
if(name=="input"&&"type" in _3e3){
_3e9+=" type=\""+self.escapeHTML(_3e3.type)+"\"";
}
if(_3e9){
name="<"+name+_3e9+">";
_3e8=false;
}
}
var d=self._document;
if(_3e8&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_3e3){
self.updateNodeAttributes(elem,_3e3);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
if(e&&e.parentNode){
e.parentNode.removeChild(e);
}
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _3f2=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_3f2);
_3f2.replaceChild(src,dest);
}else{
_3f2.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByClassName:function(_3f5,_3f6){
var self=MochiKit.DOM;
if(self._document.getElementsByClassName){
self.getElementsByClassName=function(_3f8,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _3fa=elm.getElementsByClassName(_3f8);
return MochiKit.Base.extend([],_3fa);
};
}else{
if(self._document.evaluate){
self.getElementsByClassName=function(_3fb,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _3fd=_3fb.split(" ");
var _3fe="";
for(var k=0,kl=_3fd.length;k<kl;++k){
_3fe+="[contains(concat(' ', @class, ' '), ' "+_3fd[k]+" ')]";
}
var tag="*";
var _402=[];
try{
var _403="http://www.w3.org/1999/xhtml";
var _404=(self._document.documentElement.namespaceURI===_403)?_403:null;
_402=self._document.evaluate(".//"+tag+_3fe,elm,_404,0,null);
}
catch(e){
_402=self._document.evaluate(".//"+tag+_3fe,elm,null,0,null);
}
return MochiKit.Iter.list(_402);
};
}else{
self.getElementsByClassName=function(_405,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _407=_405.split(" ");
var _408=[];
for(var k=0,kl=_407.length;k<kl;++k){
_408.push(new RegExp("(^|\\s)"+_407[k]+"(\\s|$)"));
}
var _40b=elm.all?elm.all:elm.getElementsByTagName("*");
var _40c=[];
for(var l=0,ll=_40b.length;l<ll;++l){
var _40f=_40b[l];
var _410=false;
for(var m=0,ml=_408.length;m<ml;++m){
_410=_408[m].test(_40f.className);
if(!_410){
break;
}
}
if(_410){
_40c.push(_40f);
}
}
return _40c;
};
}
}
return self.getElementsByClassName(_3f5,_3f6);
},getElementsByTagAndClassName:function(_413,_414,_415){
var self=MochiKit.DOM;
if(typeof (_413)=="undefined"||_413===null){
_413="*";
}
if(typeof (_415)=="undefined"||_415===null){
_415=self._document;
}
_415=self.getElement(_415);
if(_415==null){
return [];
}
if(_413=="*"){
return self.getElementsByClassName(_414,_415);
}
var _417=(_415.getElementsByTagName(_413)||self._document.all);
if(typeof (_414)=="undefined"||_414===null){
return MochiKit.Base.extend(null,_417);
}
var _418=[];
for(var i=0;i<_417.length;i++){
var _41a=_417[i];
var cls=_41a.className;
if(typeof (cls)!="string"){
cls=_41a.getAttribute("class");
}
if(typeof (cls)=="string"){
var _41c=cls.split(" ");
for(var j=0;j<_41c.length;j++){
if(_41c[j]==_414){
_418.push(_41a);
break;
}
}
}
}
return _418;
},_newCallStack:function(path,once){
var rval=function(){
var _421=arguments.callee.callStack;
for(var i=0;i<_421.length;i++){
if(_421[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_423,path,func,once){
var self=MochiKit.DOM;
var _428=_423[path];
var _429=_428;
if(!(typeof (_428)=="function"&&typeof (_428.callStack)=="object"&&_428.callStack!==null)){
_429=self._newCallStack(path,once);
if(typeof (_428)=="function"){
_429.callStack.push(_428);
}
_423[path]=_429;
}
_429.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_42c){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_42c=self.getElement(_42c);
if(_42c){
_42c.focus();
}
});
},setElementClass:function(_42e,_42f){
var self=MochiKit.DOM;
var obj=self.getElement(_42e);
if(self.attributeArray.compliant){
obj.setAttribute("class",_42f);
}else{
obj.setAttribute("className",_42f);
}
},toggleElementClass:function(_432){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_432)){
self.removeElementClass(obj,_432);
}
}
},addElementClass:function(_436,_437){
var self=MochiKit.DOM;
var obj=self.getElement(_436);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_437);
return true;
}
if(cls==_437){
return false;
}
var _43b=cls.split(" ");
for(var i=0;i<_43b.length;i++){
if(_43b[i]==_437){
return false;
}
}
self.setElementClass(obj,cls+" "+_437);
return true;
},removeElementClass:function(_43d,_43e){
var self=MochiKit.DOM;
var obj=self.getElement(_43d);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_43e){
self.setElementClass(obj,"");
return true;
}
var _442=cls.split(" ");
for(var i=0;i<_442.length;i++){
if(_442[i]==_43e){
_442.splice(i,1);
self.setElementClass(obj,_442.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_444,_445,_446){
var obj=MochiKit.DOM.getElement(_444);
var res=MochiKit.DOM.removeElementClass(obj,_445);
if(res){
MochiKit.DOM.addElementClass(obj,_446);
}
return res;
},hasElementClass:function(_449,_44a,_44b){
var obj=MochiKit.DOM.getElement(_449);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _44e=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_44e.length;j++){
if(_44e[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _456=[dom];
var self=MochiKit.DOM;
var _458=self.escapeHTML;
var _459=self.attributeArray;
while(_456.length){
dom=_456.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _45a=[];
var _45b=_459(dom);
for(var i=0;i<_45b.length;i++){
var a=_45b[i];
_45a.push([" ",a.name,"=\"",_458(a.value),"\""]);
}
_45a.sort();
for(i=0;i<_45a.length;i++){
var _45e=_45a[i];
for(var j=0;j<_45e.length;j++){
lst.push(_45e[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_456.push("</"+dom.tagName.toLowerCase()+">");
var _460=dom.childNodes;
for(i=_460.length-1;i>=0;i--){
_456.push(_460[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_458(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_462){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _467=node.nodeValue;
if(typeof (_467)=="string"){
rval.push(_467);
}
})(MochiKit.DOM.getElement(node));
if(_462){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_468){
_468=MochiKit.DOM.getElement(_468);
for(var i=0;i<_468.childNodes.length;i++){
var node=_468.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_46b,_46c,_46d){
var self=MochiKit.DOM;
if(typeof (_46b)=="undefined"||_46b===null){
_46b="*";
}
if(typeof (_46d)=="undefined"||_46d===null){
_46d=self._document;
}
_46d=self.getElement(_46d);
if(_46d==null){
return null;
}
var _46f=(_46d.getElementsByTagName(_46b)||self._document.all);
if(_46f.length<=0){
return null;
}else{
if(typeof (_46c)=="undefined"||_46c===null){
return _46f[0];
}
}
for(var i=0;i<_46f.length;i++){
var _471=_46f[i];
var cls=_471.className;
if(typeof (cls)!="string"){
cls=_471.getAttribute("class");
}
if(typeof (cls)=="string"){
var _473=cls.split(" ");
for(var j=0;j<_473.length;j++){
if(_473[j]==_46c){
return _471;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_476,_477){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_476)=="undefined"||_476===null){
_476="*";
}else{
_476=_476.toUpperCase();
}
if(typeof (_477)=="undefined"||_477===null){
_477=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _479=elem.tagName.toUpperCase();
if((_476==="*"||_476==_479)&&(_477===null||self.hasElementClass(elem,_477))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _47c="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_47c);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _47d=this._document.createElement("span");
var _47e;
if(_47d&&_47d.attributes&&_47d.attributes.length>0){
var _47f=m.filter;
_47e=function(node){
return _47f(_47e.ignoreAttrFilter,node.attributes);
};
_47e.ignoreAttr={};
var _481=_47d.attributes;
var _482=_47e.ignoreAttr;
for(var i=0;i<_481.length;i++){
var a=_481[i];
_482[a.name]=a.value;
}
_47e.ignoreAttrFilter=function(a){
return (_47e.ignoreAttr[a.name]!=a.value);
};
_47e.compliant=false;
_47e.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","rowspan":"rowSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_47e=function(node){
return node.attributes;
};
_47e.compliant=true;
_47e.ignoreAttr={};
_47e.renames={};
}
_47e.__export__=false;
this.attributeArray=_47e;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _487=this.createDOMFunc;
this.UL=_487("ul");
this.OL=_487("ol");
this.LI=_487("li");
this.DL=_487("dl");
this.DT=_487("dt");
this.DD=_487("dd");
this.TD=_487("td");
this.TR=_487("tr");
this.TBODY=_487("tbody");
this.THEAD=_487("thead");
this.TFOOT=_487("tfoot");
this.TABLE=_487("table");
this.CAPTION=_487("caption");
this.TH=_487("th");
this.INPUT=_487("input");
this.SPAN=_487("span");
this.A=_487("a");
this.DIV=_487("div");
this.IMG=_487("img");
this.BUTTON=_487("button");
this.TT=_487("tt");
this.PRE=_487("pre");
this.H1=_487("h1");
this.H2=_487("h2");
this.H3=_487("h3");
this.H4=_487("h4");
this.H5=_487("h5");
this.H6=_487("h6");
this.BR=_487("br");
this.HR=_487("hr");
this.LABEL=_487("label");
this.TEXTAREA=_487("textarea");
this.FORM=_487("form");
this.P=_487("p");
this.SELECT=_487("select");
this.OPTION=_487("option");
this.OPTGROUP=_487("optgroup");
this.LEGEND=_487("legend");
this.FIELDSET=_487("fieldset");
this.STRONG=_487("strong");
this.CANVAS=_487("canvas");
this.IFRAME=_487("iframe");
this.LINK=_487("link");
this.SCRIPT=_487("script");
this.NAV=_487("nav");
this.HEADER=_487("header");
this.FOOTER=_487("footer");
this.MARK=_487("mark");
this.TIME=_487("time");
this.HGROUP=_487("hgroup");
this.ASIDE=_487("aside");
this.ARTICLE=_487("article");
this.SECTION=_487("section");
this.$=this.getElement;
this.NBSP="\xa0";
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Selector");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_488){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_488.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_489){
throw "Parse error in selector: "+_489;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _48b=this.params;
var expr=this.expression;
var _48d,_48e,_48f,rest;
while(_48d=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_48b.attributes=_48b.attributes||[];
_48b.attributes.push({name:_48d[2],operator:_48d[3],value:_48d[4]||_48d[5]||""});
expr=_48d[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_48d=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_48e=_48d[1];
_48f=_48d[2];
rest=_48d[3];
switch(_48e){
case "#":
_48b.id=_48f;
break;
case ".":
_48b.classNames.push(_48f);
break;
case ":":
_48b.pseudoClassNames.push(_48f);
break;
case "":
case undefined:
_48b.tagName=_48f.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _492=this.params;
var _493=[];
var _494,i;
function childElements(_496){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_496+".childNodes)";
}
if(_492.wildcard){
_493.push("true");
}
if(_494=_492.id){
_493.push("element.id == "+repr(_494));
}
if(_494=_492.tagName){
_493.push("element.tagName.toUpperCase() == "+repr(_494));
}
if((_494=_492.classNames).length>0){
for(i=0;i<_494.length;i++){
_493.push("MochiKit.DOM.hasElementClass(element, "+repr(_494[i])+")");
}
}
if((_494=_492.pseudoClassNames).length>0){
for(i=0;i<_494.length;i++){
var _497=_494[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _498=_497[1];
var _499=_497[2];
switch(_498){
case "root":
_493.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_497=_499.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_497){
throw "Invalid argument to pseudo element nth-child: "+_499;
}
var a,b;
if(_497[0]=="odd"){
a=2;
b=1;
}else{
if(_497[0]=="even"){
a=2;
b=0;
}else{
a=_497[2]&&parseInt(_497,10)||null;
b=parseInt(_497[3],10);
}
}
_493.push("this.nthChild(element,"+a+","+b+","+!!_498.match("^nth-last")+","+!!_498.match("of-type$")+")");
break;
case "first-child":
_493.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_493.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_493.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_493.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_493.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_493.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_493.push("element.childNodes.length == 0");
break;
case "enabled":
_493.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_493.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_493.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _49c=new MochiKit.Selector.Selector(_499);
_493.push("!( "+_49c.buildMatchExpression()+")");
break;
}
}
}
if(_494=_492.attributes){
MochiKit.Base.map(function(_49d){
var _49e="MochiKit.DOM.getNodeAttribute(element, "+repr(_49d.name)+")";
var _49f=function(_4a0){
return _49e+".split("+repr(_4a0)+")";
};
_493.push(_49e+" != null");
switch(_49d.operator){
case "=":
_493.push(_49e+" == "+repr(_49d.value));
break;
case "~=":
_493.push("MochiKit.Base.findValue("+_49f(" ")+", "+repr(_49d.value)+") > -1");
break;
case "^=":
_493.push(_49e+".substring(0, "+_49d.value.length+") == "+repr(_49d.value));
break;
case "$=":
_493.push(_49e+".substring("+_49e+".length - "+_49d.value.length+") == "+repr(_49d.value));
break;
case "*=":
_493.push(_49e+".match("+repr(_49d.value)+")");
break;
case "|=":
_493.push(_49f("-")+"[0].toUpperCase() == "+repr(_49d.value.toUpperCase()));
break;
case "!=":
_493.push(_49e+" != "+repr(_49d.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_49d.operator+" in selector";
}
},_494);
}
return _493.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_4a2,a,b,_4a5,_4a6){
var _4a7=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4a2.parentNode.childNodes);
if(_4a6){
_4a7=MochiKit.Base.filter(function(node){
return node.tagName==_4a2.tagName;
},_4a7);
}
if(_4a5){
_4a7=MochiKit.Iter.reversed(_4a7);
}
if(a){
var _4aa=MochiKit.Base.findIdentical(_4a7,_4a2);
return ((_4aa+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_4a7,_4a2)+1;
}
},isUIElement:function(_4ab){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_4ab.tagName.toLowerCase())>-1;
},findElements:function(_4ac,axis){
var _4ae;
if(axis==undefined){
axis="";
}
function inScope(_4af,_4b0){
if(axis==""){
return MochiKit.DOM.isChildNode(_4af,_4b0);
}else{
if(axis==">"){
return _4af.parentNode===_4b0;
}else{
if(axis=="+"){
return _4af===nextSiblingElement(_4b0);
}else{
if(axis=="~"){
var _4b1=_4b0;
while(_4b1=nextSiblingElement(_4b1)){
if(_4af===_4b1){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_4ae=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_4ae)){
if(!_4ac||inScope(_4ae,_4ac)){
return [_4ae];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_4ac=(_4ac||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_4ac){
throw "> combinator not allowed without preceeding expression";
}
_4ac=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4ac.childNodes);
}else{
if(axis=="+"){
if(!_4ac){
throw "+ combinator not allowed without preceeding expression";
}
_4ac=nextSiblingElement(_4ac)&&[nextSiblingElement(_4ac)];
}else{
if(axis=="~"){
if(!_4ac){
throw "~ combinator not allowed without preceeding expression";
}
var _4b4=[];
while(nextSiblingElement(_4ac)){
_4ac=nextSiblingElement(_4ac);
_4b4.push(_4ac);
}
_4ac=_4b4;
}
}
}
}
if(!_4ac){
return [];
}
var _4b5=MochiKit.Base.filter(MochiKit.Base.bind(function(_4b6){
return this.match(_4b6);
},this),_4ac);
return _4b5;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_4b7,_4b8){
_4b7=MochiKit.DOM.getElement(_4b7);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_4bd){
try{
var res=_4b7.querySelectorAll(_4bd);
return Array.prototype.slice.call(res,0);
}
catch(ignore){
}
var _4bf="";
var _4c0=function(_4c1,expr){
var _4c3=expr.match(/^[>+~]$/);
if(_4c3){
_4bf=_4c3[0];
return _4c1;
}else{
var _4c4=new MochiKit.Selector.Selector(expr);
var _4c5=MochiKit.Iter.reduce(function(_4c6,_4c7){
return MochiKit.Base.extend(_4c6,_4c4.findElements(_4c7||_4b7,_4bf));
},_4c1,[]);
_4bf="";
return _4c5;
}
};
var _4c8=_4bd.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_4c0,_4c8,[null]));
},_4b8));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Style");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_4d0){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_4d0=MochiKit.Base.camelize(_4d0);
if(!elem||elem==d){
return undefined;
}
if(_4d0=="opacity"&&typeof (elem.filters)!="undefined"){
var _4d3=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_4d3&&_4d3[1]){
return parseFloat(_4d3[1])/100;
}
return 1;
}
if(_4d0=="float"||_4d0=="cssFloat"||_4d0=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _4d4=elem.style?elem.style[_4d0]:null;
if(!_4d4){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_4d0=_4d0.replace(/([A-Z])/g,"-$1").toLowerCase();
_4d4=css?css.getPropertyValue(_4d0):null;
}else{
if(elem.currentStyle){
_4d4=elem.currentStyle[_4d0];
if(/^\d/.test(_4d4)&&!/px$/.test(_4d4)&&_4d0!="fontWeight"){
var left=elem.style.left;
var _4d7=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_4d4||0;
_4d4=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_4d7;
}
}
}
}
if(_4d0=="opacity"){
_4d4=parseFloat(_4d4);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_4d0)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_4d4="auto";
}
}
return _4d4=="auto"?null:_4d4;
},setStyle:function(elem,_4d9){
elem=MochiKit.DOM.getElement(elem);
for(var name in _4d9){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_4d9[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_4d9[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_4d9[name];
}else{
elem.style.styleFloat=_4d9[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_4d9[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _4de=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_4de?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_4e0){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _4e3=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(typeof (elem)=="string"){
elem=dom.getElement(elem);
}
if(elem==null||(!_4e3(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _4e7=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_4e7=elem.offsetParent;
if(_4e7!=elem){
while(_4e7){
c.x+=parseInt(_4e7.style.borderLeftWidth,10)||0;
c.y+=parseInt(_4e7.style.borderTopWidth,10)||0;
c.x+=_4e7.offsetLeft;
c.y+=_4e7.offsetTop;
_4e7=_4e7.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_4e7=elem.parentNode;
}else{
_4e7=null;
}
while(_4e7){
var _4ec=_4e7.tagName.toUpperCase();
if(_4ec==="BODY"||_4ec==="HTML"){
break;
}
var disp=self.getStyle(_4e7,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_4e7.scrollLeft;
c.y-=_4e7.scrollTop;
}
if(_4e7.parentNode){
_4e7=_4e7.parentNode;
}else{
_4e7=null;
}
}
}
}
}
if(_4e0){
_4e0=arguments.callee(_4e0);
if(_4e0){
c.x-=(_4e0.x||0);
c.y-=(_4e0.y||0);
}
}
return c;
},setElementPosition:function(elem,_4ef,_4f0){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_4f0)=="undefined"){
_4f0="px";
}
var _4f1={};
var _4f2=MochiKit.Base.isUndefinedOrNull;
if(!_4f2(_4ef.x)){
_4f1["left"]=_4ef.x+_4f0;
}
if(!_4f2(_4ef.y)){
_4f1["top"]=_4ef.y+_4f0;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_4f1});
},makePositioned:function(_4f3){
_4f3=MochiKit.DOM.getElement(_4f3);
var pos=MochiKit.Style.getStyle(_4f3,"position");
if(pos=="static"||!pos){
_4f3.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_4f3.style.top=0;
_4f3.style.left=0;
}
}
},undoPositioned:function(_4f5){
_4f5=MochiKit.DOM.getElement(_4f5);
if(_4f5.style.position=="relative"){
_4f5.style.position=_4f5.style.top=_4f5.style.left=_4f5.style.bottom=_4f5.style.right="";
}
},makeClipping:function(_4f6){
_4f6=MochiKit.DOM.getElement(_4f6);
var s=_4f6.style;
var _4f8={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_4f6,"overflow")||"visible")!="hidden"){
_4f6.style.overflow="hidden";
_4f6.style.overflowX="hidden";
_4f6.style.overflowY="hidden";
}
return _4f8;
},undoClipping:function(_4f9,_4fa){
_4f9=MochiKit.DOM.getElement(_4f9);
if(typeof (_4fa)=="string"){
_4f9.style.overflow=_4fa;
}else{
if(_4fa!=null){
_4f9.style.overflow=_4fa["overflow"];
_4f9.style.overflowX=_4fa["overflow-x"];
_4f9.style.overflowY=_4fa["overflow-y"];
}
}
},getElementDimensions:function(elem,_4fc){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _501=s.visibility;
var _502=s.position;
var _503=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _504=elem.offsetWidth;
var _505=elem.offsetHeight;
s.display=_503;
s.position=_502;
s.visibility=_501;
}else{
_504=elem.offsetWidth||0;
_505=elem.offsetHeight||0;
}
if(_4fc){
var _506="colSpan" in elem&&"rowSpan" in elem;
var _507=(_506&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_507){
if(/MSIE/.test(navigator.userAgent)){
var _508=elem.previousSibling?0.5:1;
var _509=elem.nextSibling?0.5:1;
}else{
var _508=0.5;
var _509=0.5;
}
}else{
var _508=1;
var _509=1;
}
_504-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_508*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_509*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_506){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _50a=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _50a=1;
}else{
var _50a=_507?0.5:1;
}
}
}else{
var _50a=1;
}
_505-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_50a*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_504,_505);
},setElementDimensions:function(elem,_50c,_50d){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_50d)=="undefined"){
_50d="px";
}
var _50e={};
var _50f=MochiKit.Base.isUndefinedOrNull;
if(!_50f(_50c.w)){
_50e["width"]=_50c.w+_50d;
}
if(!_50f(_50c.h)){
_50e["height"]=_50c.h+_50d;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_50e});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _513=elem.tagName.toUpperCase();
return self._defaultDisplay[_513]||"block";
},setDisplayForElement:function(_514,_515){
var _516=MochiKit.Base.extend(null,arguments,1);
var _517=MochiKit.DOM.getElement;
for(var i=0;i<_516.length;i++){
_515=_517(_516[i]);
if(_515){
_515.style.display=_514;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _521=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_521.length;i++){
this._defaultDisplay[_521[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3",true);
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.LoggingPane");
goog.require("MochiKit.Base");
goog.require("MochiKit.Logging");
}
MochiKit.Base.module(MochiKit,"LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_525){
var m=MochiKit.LoggingPane;
_525=!(!_525);
if(m._loggingPane&&m._loggingPane.inline!=_525){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_525,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_527,_528){
if(typeof (_528)=="undefined"||_528===null){
_528=MochiKit.Logging.logger;
}
this.logger=_528;
var _529=MochiKit.Base.update;
var _52a=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _52c=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_527){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _533=doc.getElementById(uid);
var _534=!!_533;
if(_533&&typeof (_533.loggingPane)!="undefined"){
_533.loggingPane.logger=this.logger;
_533.loggingPane.buildAndApplyFilter();
return _533.loggingPane;
}
if(_534){
var _535;
while((_535=_533.firstChild)){
_533.removeChild(_535);
}
}else{
_533=doc.createElement("div");
_533.id=uid;
}
_533.loggingPane=this;
var _536=doc.createElement("input");
var _537=doc.createElement("input");
var _538=doc.createElement("button");
var _539=doc.createElement("button");
var _53a=doc.createElement("button");
var _53b=doc.createElement("button");
var _53c=doc.createElement("div");
var _53d=doc.createElement("div");
var _53e=uid+"_Listener";
this.colorTable=_52c(this.colorTable);
var _53f=[];
var _540=null;
var _541=function(msg){
var _543=msg.level;
if(typeof (_543)=="number"){
_543=MochiKit.Logging.LogLevel[_543];
}
return _543;
};
var _544=function(msg){
return msg.info.join(" ");
};
var _546=bind(function(msg){
var _548=_541(msg);
var text=_544(msg);
var c=this.colorTable[_548];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_548;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_548+": "+text));
_53d.appendChild(p);
_53d.appendChild(doc.createElement("br"));
if(_53c.offsetHeight>_53c.scrollHeight){
_53c.scrollTop=0;
}else{
_53c.scrollTop=_53c.scrollHeight;
}
},this);
var _54c=function(msg){
_53f[_53f.length]=msg;
_546(msg);
};
var _54e=function(){
var _54f,_550;
try{
_54f=new RegExp(_536.value);
_550=new RegExp(_537.value);
}
catch(e){
MochiKit.Logging.logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_54f.test(_541(msg))&&_550.test(_544(msg)));
};
};
var _552=function(){
while(_53d.firstChild){
_53d.removeChild(_53d.firstChild);
}
};
var _553=function(){
_53f=[];
_552();
};
var _554=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_53e);
try{
try{
_533.loggingPane=null;
}
catch(e){
MochiKit.Logging.logFatal("Bookmarklet was closed incorrectly.");
}
if(_527){
_533.parentNode.removeChild(_533);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _555=function(){
_552();
for(var i=0;i<_53f.length;i++){
var msg=_53f[i];
if(_540===null||_540(msg)){
_546(msg);
}
}
};
this.buildAndApplyFilter=function(){
_540=_54e();
_555();
this.logger.removeListener(_53e);
this.logger.addListener(_53e,_540,_54c);
};
var _558=bind(function(){
_53f=this.logger.getMessages();
_555();
},this);
var _559=bind(function(_55a){
_55a=_55a||window.event;
var key=_55a.which||_55a.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _55c="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_527){
_55c+="; height: 10em; border-top: 2px solid black";
}else{
_55c+="; height: 100%;";
}
_533.style.cssText=_55c;
if(!_534){
doc.body.appendChild(_533);
}
_55c={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_52a(_536,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_559,"style":_55c});
_533.appendChild(_536);
_52a(_537,{"value":".*","onkeypress":_559,"style":_55c});
_533.appendChild(_537);
_55c="width: 8%; display:inline; font: "+this.logFont;
_538.appendChild(doc.createTextNode("Filter"));
_538.onclick=bind("buildAndApplyFilter",this);
_538.style.cssText=_55c;
_533.appendChild(_538);
_539.appendChild(doc.createTextNode("Load"));
_539.onclick=_558;
_539.style.cssText=_55c;
_533.appendChild(_539);
_53a.appendChild(doc.createTextNode("Clear"));
_53a.onclick=_553;
_53a.style.cssText=_55c;
_533.appendChild(_53a);
_53b.appendChild(doc.createTextNode("Close"));
_53b.onclick=_554;
_53b.style.cssText=_55c;
_533.appendChild(_53b);
_53c.style.cssText="overflow: auto; width: 100%";
_53d.style.cssText="width: 100%; height: "+(_527?"8em":"100%");
_53c.appendChild(_53d);
_533.appendChild(_53c);
this.buildAndApplyFilter();
_558();
if(_527){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_527;
this.closePane=_554;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Color");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_55e,blue,_560){
if(typeof (_560)=="undefined"||_560===null){
_560=1;
}
this.rgb={r:red,g:_55e,b:blue,a:_560};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_561){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_561);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_567){
var hsl=this.asHSL();
hsl.s=_567;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_56a){
var hsl=this.asHSL();
hsl.l=_56a;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_56d){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_56d,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_570){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_570,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_573,_574){
if(typeof (_574)=="undefined"||_574===null){
_574=0.5;
}
var sf=1-_574;
var s=this.rgb;
var d=_573.rgb;
var df=_574;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_579){
var a=this.asRGB();
var b=_579.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().l>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_590,blue,_592){
var _593=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_590=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_592=undefined;
}else{
_592=rgb.a;
}
}
return new _593(red,_590,blue,_592);
},fromHSL:function(hue,_596,_597,_598){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_59b,_59c,_59d){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _5a0=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _5a1=_5a0._namedColors[name.toLowerCase()];
if(typeof (_5a1)=="string"){
return _5a0.fromHexString(_5a1);
}else{
if(name=="transparent"){
return _5a0.transparentColor();
}
}
return null;
},fromString:function(_5a2){
var self=MochiKit.Color.Color;
var _5a4=_5a2.substr(0,3);
if(_5a4=="rgb"){
return self.fromRGBString(_5a2);
}else{
if(_5a4=="hsl"){
return self.fromHSLString(_5a2);
}else{
if(_5a2.charAt(0)=="#"){
return self.fromHexString(_5a2);
}
}
}
return self.fromName(_5a2);
},fromHexString:function(_5a5){
if(_5a5.charAt(0)=="#"){
_5a5=_5a5.substring(1);
}
var _5a6=[];
var i,hex;
if(_5a5.length==3){
for(i=0;i<3;i++){
hex=_5a5.substr(i,1);
_5a6.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_5a5.substr(i,2);
_5a6.push(parseInt(hex,16)/255);
}
}
var _5a9=MochiKit.Color.Color;
return _5a9.fromRGB.apply(_5a9,_5a6);
},_fromColorString:function(pre,_5ab,_5ac,_5ad){
if(_5ad.indexOf(pre)===0){
_5ad=_5ad.substring(_5ad.indexOf("(",3)+1,_5ad.length-1);
}
var _5ae=_5ad.split(/\s*,\s*/);
var _5af=[];
for(var i=0;i<_5ae.length;i++){
var c=_5ae[i];
var val;
var _5b3=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_5b3=="deg"){
val=parseFloat(c)/360;
}else{
if(_5b3=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_5ac[i]*parseFloat(c);
}
}
}
_5af.push(val);
}
return this[_5ab].apply(this,_5af);
},fromComputedStyle:function(elem,_5b5){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _5b8=MochiKit.Style.getStyle.apply(d,arguments);
if(!_5b8){
continue;
}
var _5b9=cls.fromString(_5b8);
if(!_5b9){
break;
}
if(_5b9.asRGB().a>0){
return _5b9;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_5bf){
v*=_5bf;
if(v<0){
return 0;
}else{
if(v>_5bf){
return _5bf;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_5c5,_5c6,_5c7){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_5c5=hsv.s;
_5c6=hsv.v;
_5c7=hsv.a;
}
var red;
var _5ca;
var blue;
if(_5c5===0){
red=_5c6;
_5ca=_5c6;
blue=_5c6;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_5c6*(1-_5c5);
var q=_5c6*(1-(_5c5*f));
var t=_5c6*(1-(_5c5*(1-f)));
switch(i){
case 1:
red=q;
_5ca=_5c6;
blue=p;
break;
case 2:
red=p;
_5ca=_5c6;
blue=t;
break;
case 3:
red=p;
_5ca=q;
blue=_5c6;
break;
case 4:
red=t;
_5ca=p;
blue=_5c6;
break;
case 5:
red=_5c6;
_5ca=p;
blue=q;
break;
case 6:
case 0:
red=_5c6;
_5ca=t;
blue=p;
break;
}
}
return {r:red,g:_5ca,b:blue,a:_5c7};
},hslToRGB:function(hue,_5d2,_5d3,_5d4){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_5d2=hsl.s;
_5d3=hsl.l;
_5d4=hsl.a;
}
var red;
var _5d7;
var blue;
if(_5d2===0){
red=_5d3;
_5d7=_5d3;
blue=_5d3;
}else{
var m2;
if(_5d3<=0.5){
m2=_5d3*(1+_5d2);
}else{
m2=_5d3+_5d2-(_5d3*_5d2);
}
var m1=(2*_5d3)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_5d7=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_5d7,b:blue,a:_5d4};
},rgbToHSV:function(red,_5de,blue,_5e0){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5de=rgb.g;
blue=rgb.b;
_5e0=rgb.a;
}
var max=Math.max(Math.max(red,_5de),blue);
var min=Math.min(Math.min(red,_5de),blue);
var hue;
var _5e5;
var _5e6=max;
if(min==max){
hue=0;
_5e5=0;
}else{
var _5e7=(max-min);
_5e5=_5e7/max;
if(red==max){
hue=(_5de-blue)/_5e7;
}else{
if(_5de==max){
hue=2+((blue-red)/_5e7);
}else{
hue=4+((red-_5de)/_5e7);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_5e5,v:_5e6,a:_5e0};
},rgbToHSL:function(red,_5e9,blue,_5eb){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5e9=rgb.g;
blue=rgb.b;
_5eb=rgb.a;
}
var max=Math.max(red,Math.max(_5e9,blue));
var min=Math.min(red,Math.min(_5e9,blue));
var hue;
var _5f0;
var _5f1=(max+min)/2;
var _5f2=max-min;
if(_5f2===0){
hue=0;
_5f0=0;
}else{
if(_5f1<=0.5){
_5f0=_5f2/(max+min);
}else{
_5f0=_5f2/(2-max-min);
}
if(red==max){
hue=(_5e9-blue)/_5f2;
}else{
if(_5e9==max){
hue=2+((blue-red)/_5f2);
}else{
hue=4+((red-_5e9)/_5f2);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_5f0,l:_5f1,a:_5eb};
},toColorPart:function(num){
num=Math.round(num);
var _5f4=num.toString(16);
if(num<16){
return "0"+_5f4;
}
return _5f4;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _5f6=1/3;
var _5f7={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_5f6,_5f6,_5f6],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_5f6,2*_5f6,2*_5f6],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
for(var k in _5f7){
var name=k+"Color";
var _5fa=this.Color.fromRGB.apply(this.Color,_5f7[k]);
this.Color[name]=m.partial(m.operator.identity,_5fa);
}
var _5fb=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _5fd=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_5fb,_5fd);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Signal");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Signal","1.5",["Base","DOM"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Signal.Event.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
};
MochiKit.Signal.Event.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Signal.Event.prototype.src=function(){
return this._src;
};
MochiKit.Signal.Event.prototype.event=function(){
return this._event;
};
MochiKit.Signal.Event.prototype.type=function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
};
MochiKit.Signal.Event.prototype.target=function(){
return this._event.target||this._event.srcElement;
};
MochiKit.Signal.Event.prototype._relatedTarget=null;
MochiKit.Signal.Event.prototype.relatedTarget=function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
};
MochiKit.Signal.Event.prototype._modifier=null;
MochiKit.Signal.Event.prototype.modifier=function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
};
MochiKit.Signal.Event.prototype._key=null;
MochiKit.Signal.Event.prototype.key=function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
};
MochiKit.Signal.Event.prototype._mouse=null;
MochiKit.Signal.Event.prototype.mouse=function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("drag")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client={x:0,y:0};
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page={x:0,y:0};
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel={x:0,y:0};
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
};
MochiKit.Signal.Event.prototype.stop=function(){
this.stopPropagation();
this.preventDefault();
};
MochiKit.Signal.Event.prototype.stopPropagation=function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
};
MochiKit.Signal.Event.prototype.preventDefault=function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
};
MochiKit.Signal.Event.prototype._confirmUnload=null;
MochiKit.Signal.Event.prototype.confirmUnload=function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
};
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _60c=MochiKit.Signal._specialMacKeys;
for(var i=63236;i<=63242;i++){
_60c[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _60e=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_60e[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_60e[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_60e[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_60e[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_610){
this.source=_610.source;
this.signal=_610.signal;
this.listener=_610.listener;
this.isDOM=_610.isDOM;
this.objOrFunc=_610.objOrFunc;
this.funcOrStr=_610.funcOrStr;
this.connected=_610.connected;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Signal.Ident.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "src:"+repr(this.source)+", sig: "+repr(this.signal)+", isDOM: "+repr(this.isDOM)+", connected: "+repr(this.connected);
};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _613=self._observers;
for(var i=0;i<_613.length;i++){
if(_613[i].signal!=="onload"&&_613[i].signal!=="onunload"){
self._disconnect(_613[i]);
}
}
},_listener:function(src,sig,func,obj,_619){
var self=MochiKit.Signal;
var E=self.Event;
if(!_619){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_61c){
obj[func].apply(obj,[new E(src,_61c)]);
var _61d=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_61d);
};
}else{
return function(_61e){
obj[func].apply(obj,[new E(src,_61e)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_61f){
func.apply(obj,[new E(src,_61f)]);
var _620=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_620);
};
}else{
return function(_621){
func.apply(obj,[new E(src,_621)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_627){
var e=new E(src,_627);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_629,_62a){
var obj=null;
var func=null;
if(typeof (_62a)!="undefined"){
obj=_629;
func=_62a;
if(typeof (_62a)=="string"){
if(typeof (_629[_62a])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_62a)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_629)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_629;
}
}
return [obj,func];
},connect:function(src,sig,_62f,_630){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _632=self._getDestPair(_62f,_630);
var obj=_632[0];
var func=_632[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _635=!!(src.addEventListener||src.attachEvent);
if(_635&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _636=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_635&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _636=self._listener(src,sig,func,obj,_635);
sig="onDOMMouseScroll";
}else{
var _636=self._listener(src,sig,func,obj,_635);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_636,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_636);
}
}
var _637=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_636,isDOM:_635,objOrFunc:_62f,funcOrStr:_630,connected:true});
self._observers.push(_637);
if(!_635&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_637],arguments,1);
src.__connect__.apply(src,args);
}
return _637;
},connectOnce:function(src,sig,_63b,_63c){
var self=MochiKit.Signal;
var _63e=self.connect(src,sig,_63b,_63c);
var _63f;
_63f=self.connect(src,sig,function(){
self.disconnect(_63e);
self.disconnect(_63f);
});
return _63e;
},_disconnect:function(_640){
if(!_640.connected){
return;
}
_640.connected=false;
var src=_640.source;
var sig=_640.signal;
var _643=_640.listener;
if(!_640.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_640,sig,_640.objOrFunc,_640.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_643,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_643);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_644){
var self=MochiKit.Signal;
var _646=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_646.length-1;i>=0;i--){
var o=_646[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(self._lock===0){
_646.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_646,_644);
if(idx>=0){
self._disconnect(_644);
if(self._lock===0){
_646.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_64f,_650){
var self=MochiKit.Signal;
var _652=self._observers;
var _653=self._disconnect;
var lock=self._lock;
var _655=self._dirty;
if(typeof (_650)==="undefined"){
_650=null;
}
for(var i=_652.length-1;i>=0;i--){
var _657=_652[i];
if(_657.objOrFunc===_64f&&(_650===null||_657.funcOrStr===_650)){
_653(_657);
if(lock===0){
_652.splice(i,1);
}else{
_655=true;
}
}
}
self._dirty=_655;
},disconnectAll:function(src,sig){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _65b=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _65d=self._disconnect;
var _65e=self._observers;
var i,_660;
var lock=self._lock;
var _662=self._dirty;
if(_65b.length===0){
for(i=_65e.length-1;i>=0;i--){
_660=_65e[i];
if(_660.source===src){
_65d(_660);
if(lock===0){
_65e.splice(i,1);
}else{
_662=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_65b.length;i++){
sigs[_65b[i]]=true;
}
for(i=_65e.length-1;i>=0;i--){
_660=_65e[i];
if(_660.source===src&&_660.signal in sigs){
_65d(_660);
if(lock===0){
_65e.splice(i,1);
}else{
_662=true;
}
}
}
}
self._dirty=_662;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _667=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _669=[];
self._lock++;
for(var i=0;i<_667.length;i++){
var _66b=_667[i];
if(_66b.source===src&&_66b.signal===sig&&_66b.connected){
try{
if(_66b.isDOM&&_66b.funcOrStr!=null){
var obj=_66b.objOrFunc;
obj[_66b.funcOrStr].apply(obj,args);
}else{
if(_66b.isDOM){
_66b.objOrFunc.apply(src,args);
}else{
_66b.listener.apply(src,args);
}
}
}
catch(e){
_669.push(e);
}
}
}
self._lock--;
self._gc();
if(_669.length==1){
throw _669[0];
}else{
if(_669.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_669;
throw e;
}
}
},_gc:function(){
var self=MochiKit.Signal;
var _66f=self._observers;
if(self._lock===0&&self._dirty){
for(var i=_66f.length-1;i>=0;i--){
if(!_66f[i].connected){
_66f.splice(i,1);
}
}
self._dirty=false;
return true;
}
return false;
}});
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=0;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Position");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _673=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _674=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_673,_674);
},cumulativeOffset:function(_675){
var _676=0;
var _677=0;
do{
_676+=_675.offsetTop||0;
_677+=_675.offsetLeft||0;
_675=_675.offsetParent;
}while(_675);
return new MochiKit.Style.Coordinates(_677,_676);
},realOffset:function(_678){
var _679=0;
var _67a=0;
do{
_679+=_678.scrollTop||0;
_67a+=_678.scrollLeft||0;
_678=_678.parentNode;
}while(_678);
return new MochiKit.Style.Coordinates(_67a,_679);
},within:function(_67b,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_67b,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_67b);
if(_67b.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_67b.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_67b.offsetWidth);
},withinIncludingScrolloffsets:function(_67e,x,y){
var _681=this.realOffset(_67e);
this.xcomp=x+_681.x-this.windowOffset.x;
this.ycomp=y+_681.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_67e);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_67e.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_67e.offsetWidth);
},overlap:function(mode,_683){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_683.offsetHeight)-this.ycomp)/_683.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_683.offsetWidth)-this.xcomp)/_683.offsetWidth;
}
},absolutize:function(_684){
_684=MochiKit.DOM.getElement(_684);
if(_684.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _685=MochiKit.Position.positionedOffset(_684);
var _686=_684.clientWidth;
var _687=_684.clientHeight;
var _688={"position":_684.style.position,"left":_685.x-parseFloat(_684.style.left||0),"top":_685.y-parseFloat(_684.style.top||0),"width":_684.style.width,"height":_684.style.height};
_684.style.position="absolute";
_684.style.top=_685.y+"px";
_684.style.left=_685.x+"px";
_684.style.width=_686+"px";
_684.style.height=_687+"px";
return _688;
},positionedOffset:function(_689){
var _68a=0,_68b=0;
do{
_68a+=_689.offsetTop||0;
_68b+=_689.offsetLeft||0;
_689=_689.offsetParent;
if(_689){
var p=MochiKit.Style.getStyle(_689,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_689);
return new MochiKit.Style.Coordinates(_68b,_68a);
},relativize:function(_68d,_68e){
_68d=MochiKit.DOM.getElement(_68d);
if(_68d.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_68d.style.top||0)-(_68e["top"]||0);
var left=parseFloat(_68d.style.left||0)-(_68e["left"]||0);
_68d.style.position=_68e["position"];
_68d.style.top=top+"px";
_68d.style.left=left+"px";
_68d.style.width=_68e["width"];
_68d.style.height=_68e["height"];
},clone:function(_691,_692){
_691=MochiKit.DOM.getElement(_691);
_692=MochiKit.DOM.getElement(_692);
_692.style.position="absolute";
var _693=this.cumulativeOffset(_691);
_692.style.top=_693.y+"px";
_692.style.left=_693.x+"px";
_692.style.width=_691.offsetWidth+"px";
_692.style.height=_691.offsetHeight+"px";
},page:function(_694){
var _695=0;
var _696=0;
var _697=_694;
do{
_695+=_697.offsetTop||0;
_696+=_697.offsetLeft||0;
if(_697.offsetParent==document.body&&MochiKit.Style.getStyle(_697,"position")=="absolute"){
break;
}
}while(_697=_697.offsetParent);
_697=_694;
do{
_695-=_697.scrollTop||0;
_696-=_697.scrollLeft||0;
}while(_697=_697.parentNode);
return new MochiKit.Style.Coordinates(_696,_695);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Visual");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
goog.require("MochiKit.Color");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_69a){
e=MochiKit.DOM.getElement(e);
this._setOptions(_69a);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _69b=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_69b=C.fromBackground(e);
}else{
if(!(_69b instanceof C)){
_69b=C.fromString(_69b);
}
}
this.isTransparent=(_69b.asRGB().a<=0);
var _69d=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_69d=C.fromBackground(e.offsetParent);
}else{
if(!(_69d instanceof C)){
_69d=C.fromString(_69d);
}
}
this._roundCornersImpl(e,_69b,_69d);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _69f=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _6a1=doc.defaultView.getComputedStyle(e,null);
if(typeof (_6a1)==="undefined"||_6a1===null){
return e;
}
var _6a2=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_6a1.getPropertyValue("padding-top"),marginRight:_6a1.getPropertyValue("padding-right"),marginBottom:_6a1.getPropertyValue("padding-bottom"),marginLeft:_6a1.getPropertyValue("padding-left"),padding:"0px"}});
_6a2.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_6a2);
return e;
},_roundCornersImpl:function(e,_6a4,_6a5){
if(this.options.border){
this._renderBorder(e,_6a5);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_6a4,_6a5);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_6a4,_6a5);
}
},_renderBorder:function(el,_6a7){
var _6a8="1px solid "+this._borderColor(_6a7);
var _6a9="border-left: "+_6a8;
var _6aa="border-right: "+_6a8;
var _6ab="style='"+_6a9+";"+_6aa+"'";
el.innerHTML="<div "+_6ab+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_6ad,_6ae){
var _6af=this._createCorner(_6ae);
for(var i=0;i<this.options.numSlices;i++){
_6af.appendChild(this._createCornerSlice(_6ad,_6ae,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_6af,el.firstChild);
},_roundBottomCorners:function(el,_6b2,_6b3){
var _6b4=this._createCorner(_6b3);
for(var i=(this.options.numSlices-1);i>=0;i--){
_6b4.appendChild(this._createCornerSlice(_6b2,_6b3,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_6b4);
},_createCorner:function(_6b6){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_6b6.toString()}});
},_createCornerSlice:function(_6b8,_6b9,n,_6bb){
var _6bc=MochiKit.DOM.SPAN();
var _6bd=_6bc.style;
_6bd.backgroundColor=_6b8.toString();
_6bd.display="block";
_6bd.height="1px";
_6bd.overflow="hidden";
_6bd.fontSize="1px";
var _6be=this._borderColor(_6b8,_6b9);
if(this.options.border&&n===0){
_6bd.borderTopStyle="solid";
_6bd.borderTopWidth="1px";
_6bd.borderLeftWidth="0px";
_6bd.borderRightWidth="0px";
_6bd.borderBottomWidth="0px";
_6bd.height="0px";
_6bd.borderColor=_6be.toString();
}else{
if(_6be){
_6bd.borderColor=_6be.toString();
_6bd.borderStyle="solid";
_6bd.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_6bd.height="2px";
}
this._setMargin(_6bc,n,_6bb);
this._setBorder(_6bc,n,_6bb);
return _6bc;
},_setOptions:function(_6bf){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_6bf);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _6c0=this.options.corners;
if(this._hasString(_6c0,"all","top")){
return "";
}
var _6c1=(_6c0.indexOf("tl")!=-1);
var _6c2=(_6c0.indexOf("tr")!=-1);
if(_6c1&&_6c2){
return "";
}
if(_6c1){
return "left";
}
if(_6c2){
return "right";
}
return "";
},_whichSideBottom:function(){
var _6c3=this.options.corners;
if(this._hasString(_6c3,"all","bottom")){
return "";
}
var _6c4=(_6c3.indexOf("bl")!=-1);
var _6c5=(_6c3.indexOf("br")!=-1);
if(_6c4&&_6c5){
return "";
}
if(_6c4){
return "left";
}
if(_6c5){
return "right";
}
return "";
},_borderColor:function(_6c6,_6c7){
if(_6c6=="transparent"){
return _6c7;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _6c7.blendedColor(_6c6);
}
}
}
return "";
},_setMargin:function(el,n,_6ca){
var _6cb=this._marginSize(n)+"px";
var _6cc=(_6ca=="top"?this._whichSideTop():this._whichSideBottom());
var _6cd=el.style;
if(_6cc=="left"){
_6cd.marginLeft=_6cb;
_6cd.marginRight="0px";
}else{
if(_6cc=="right"){
_6cd.marginRight=_6cb;
_6cd.marginLeft="0px";
}else{
_6cd.marginLeft=_6cb;
_6cd.marginRight=_6cb;
}
}
},_setBorder:function(el,n,_6d0){
var _6d1=this._borderSize(n)+"px";
var _6d2=(_6d0=="top"?this._whichSideTop():this._whichSideBottom());
var _6d3=el.style;
if(_6d2=="left"){
_6d3.borderLeftWidth=_6d1;
_6d3.borderRightWidth="0px";
}else{
if(_6d2=="right"){
_6d3.borderRightWidth=_6d1;
_6d3.borderLeftWidth="0px";
}else{
_6d3.borderLeftWidth=_6d1;
_6d3.borderRightWidth=_6d1;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _6d6=[1,0];
return _6d6[n];
}else{
if(o.compact){
var _6d7=[2,1];
return _6d7[n];
}else{
if(o.blend){
var _6d8=[3,2,1,0];
return _6d8[n];
}else{
var _6d9=[5,3,2,1];
return _6d9[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _6dc;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_6dc=[1,0];
}else{
if(o.blend){
_6dc=[2,1,1,1];
}else{
if(o.border){
_6dc=[0,2,0,0];
}else{
if(this.isTransparent){
_6dc=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _6dc[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_6e1){
new MochiKit.Visual._RoundCorners(e,_6e1);
};
MochiKit.Visual.roundClass=function(_6e2,_6e3,_6e4){
var _6e5=MochiKit.DOM.getElementsByTagAndClassName(_6e2,_6e3);
for(var i=0;i<_6e5.length;i++){
MochiKit.Visual.roundElement(_6e5[i],_6e4);
}
};
MochiKit.Visual.tagifyText=function(_6e7,_6e8){
_6e8=_6e8||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_6e8+=";zoom:1";
}
_6e7=MochiKit.DOM.getElement(_6e7);
var ma=MochiKit.Base.map;
ma(function(_6ea){
if(_6ea.nodeType==3){
ma(function(_6eb){
_6e7.insertBefore(MochiKit.DOM.SPAN({style:_6e8},_6eb==" "?String.fromCharCode(160):_6eb),_6ea);
},_6ea.nodeValue.split(""));
MochiKit.DOM.removeElement(_6ea);
}
},_6e7.childNodes);
};
MochiKit.Visual._forceRerendering=function(_6ec){
try{
_6ec=MochiKit.DOM.getElement(_6ec);
var n=document.createTextNode(" ");
_6ec.appendChild(n);
_6ec.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_6ee,_6ef,_6f0){
_6f0=MochiKit.Base.update({speed:0.1,delay:0},_6f0);
var _6f1=_6f0.delay;
var _6f2=0;
MochiKit.Base.map(function(_6f3){
_6f0.delay=_6f2*_6f0.speed+_6f1;
new _6ef(_6f3,_6f0);
_6f2+=1;
},_6ee);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_6f4,_6f5,_6f6){
_6f4=MochiKit.DOM.getElement(_6f4);
_6f5=(_6f5||"appear").toLowerCase();
_6f6=MochiKit.Base.update({queue:{position:"end",scope:(_6f4.id||"global"),limit:1}},_6f6);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_6f4,"display")!="none"?v.PAIRS[_6f5][1]:v.PAIRS[_6f5][0]](_6f4,_6f6);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_6fe){
if(_6fe){
pos*=2*_6fe;
}else{
pos*=10;
}
var _6ff=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_6ff:1-_6ff;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.spring=function(pos){
return 1-(Math.cos(pos*2.5*Math.PI)*Math.exp(-pos*6));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_705){
var _706=new Date().getTime();
var _707=(typeof (_705.options.queue)=="string")?_705.options.queue:_705.options.queue.position;
var ma=MochiKit.Base.map;
switch(_707){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_705.finishOn;
e.finishOn+=_705.finishOn;
}
},this.effects);
break;
case "end":
var _70a;
ma(function(e){
var i=e.finishOn;
if(i>=(_70a||i)){
_70a=i;
}
},this.effects);
_706=_70a||_706;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
case "replace":
ma(function(e){
e.cancel();
},this.effects);
break;
}
_705.startOn+=_706;
_705.finishOn+=_706;
if(!_705.options.queue.limit||this.effects.length<_705.options.queue.limit){
this.effects.push(_705);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_710){
return setInterval(func,_710);
},remove:function(_711){
this.effects=MochiKit.Base.filter(function(e){
return e!=_711;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_713){
clearInterval(_713);
},loop:function(){
var _714=new Date().getTime();
MochiKit.Base.map(function(_715){
_715.loop(_714);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_716){
if(typeof (_716)!="string"){
return _716;
}
if(!this.instances[_716]){
this.instances[_716]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_716];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_717){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_717,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_719){
if(_719>=this.startOn){
if(_719>=this.finishOn){
return this.finalize();
}
var pos=(_719-this.startOn)/(this.finishOn-this.startOn);
var _71b=Math.round(pos*this.options.fps*this.options.duration);
if(_71b>this.currentFrame){
this.render(pos);
this.currentFrame=_71b;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
var _71d=this.options.transition;
if(typeof (_71d)=="string"){
_71d=MochiKit.Visual.Transitions[_71d];
}
if(typeof (_71d)=="function"){
pos=_71d(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_71e){
},event:function(_71f){
if(this.options[_71f+"Internal"]){
this.options[_71f+"Internal"](this);
}
if(this.options[_71f]){
this.options[_71f](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_720,_721){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_720,_721);
}
this.__init__(_720,_721);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_723,_724){
this.effects=_723||[];
this.start(_724);
},update:function(_725){
MochiKit.Base.map(function(_726){
_726.render(_725);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_727){
_727.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_728,_729){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_728,_729);
}
this.__init__(_728,_729);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_72b,_72c){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_72b||[];
MochiKit.Base.map(function(_72e){
defs.duration+=_72e.options.duration;
},this.effects);
MochiKit.Base.setdefault(_72c,defs);
this.start(_72c);
},update:function(_72f){
var time=_72f*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _732=this.effects[i];
if(time<=_732.options.duration){
_732.render(time/_732.options.duration);
break;
}else{
time-=_732.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_733){
_733.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_734,_735){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_734,_735);
}
this.__init__(_734,_735);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_737,_738){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_737);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_738=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_738);
this.start(_738);
},update:function(_73b){
MochiKit.Style.setStyle(this.element,{"opacity":_73b});
}});
MochiKit.Visual.Move=function(_73c,_73d){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_73c,_73d);
}
this.__init__(_73c,_73d);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_73f,_740){
this.element=MochiKit.DOM.getElement(_73f);
_740=MochiKit.Base.update({x:0,y:0,mode:"relative"},_740);
this.start(_740);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _742=s.visibility;
var _743=s.display;
if(_743=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_743=="none"){
s.visibility=_742;
s.display=_743;
}
},update:function(_744){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_744+this.originalLeft)+"px",top:Math.round(this.options.y*_744+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_745,_746,_747){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_745,_746,_747);
}
this.__init__(_745,_746,_747);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_749,_74a,_74b){
this.element=MochiKit.DOM.getElement(_749);
_74b=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_74a},_74b);
this.start(_74b);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _74f=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_750){
if(_74f.indexOf(_750)>0){
this.fontSize=parseFloat(_74f);
this.fontSizeType=_750;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_751){
var _752=(this.options.scaleFrom/100)+(this.factor*_751);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_752+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_752,this.dims[1]*_752);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_753,_754){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_754)+"px";
}
if(this.options.scaleY){
d.height=r(_753)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_753-this.dims[0])/2;
var _758=(_754-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_758+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_758+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_759,_75a){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_759,_75a);
}
this.__init__(_759,_75a);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_75c,_75d){
this.element=MochiKit.DOM.getElement(_75c);
_75d=MochiKit.Base.update({startcolor:"#ffff99"},_75d);
this.start(_75d);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_762){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_762));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_765,_766){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_765,_766);
}
this.__init__(_765,_766);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_768,_769){
this.element=MochiKit.DOM.getElement(_768);
this.start(_769);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _76b=p.cumulativeOffset(this.element);
if(this.options.offset){
_76b.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_76b.y>max?max:_76b.y)-this.scrollStart;
},update:function(_76d){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_76d*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_76f,_770){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_76f,_770);
}
this.__init__(_76f,_770);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_772,_773){
this.element=MochiKit.DOM.getElement(_772);
this.start(_773);
},setup:function(){
var b=MochiKit.Base;
var _775=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _776,unit;
for(var s in _775){
_776=_775[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_776)){
var _779=_776.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_776=parseFloat(_779[1]);
unit=(_779.length==3)?_779[2]:null;
this.styleEnd[s]=_776;
this.units[s]=unit;
_776=MochiKit.Style.getStyle(this.element,s);
_779=_776.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_776=parseFloat(_779[1]);
this.styleStart[s]=_776;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_776=c.fromString(_776);
if(_776){
this.units[s]="color";
this.styleEnd[s]=_776.toHexString();
_776=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_776).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_776;
}
}
}
},update:function(_77d){
var _77e;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _781=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_781[i]+(end[i]-_781[i])*_77d));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_77e=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_77d*1000)/1000+this.units[s];
this.element.style[s]=_77e;
}
}
}});
MochiKit.Visual.fade=function(_784,_785){
var s=MochiKit.Style;
var _787=s.getStyle(_784,"opacity");
_785=MochiKit.Base.update({from:s.getStyle(_784,"opacity")||1,to:0,afterFinishInternal:function(_788){
if(_788.options.to!==0){
return;
}
s.hideElement(_788.element);
s.setStyle(_788.element,{"opacity":_787});
}},_785);
return new MochiKit.Visual.Opacity(_784,_785);
};
MochiKit.Visual.appear=function(_789,_78a){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_78a=MochiKit.Base.update({from:(s.getStyle(_789,"display")=="none"?0:s.getStyle(_789,"opacity")||0),to:1,afterFinishInternal:function(_78d){
v._forceRerendering(_78d.element);
},beforeSetupInternal:function(_78e){
s.setStyle(_78e.element,{"opacity":_78e.options.from});
s.showElement(_78e.element);
}},_78a);
return new v.Opacity(_789,_78a);
};
MochiKit.Visual.puff=function(_78f,_790){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_78f=MochiKit.DOM.getElement(_78f);
var _793=MochiKit.Style.getElementDimensions(_78f,true);
var _794={position:s.getStyle(_78f,"position"),top:_78f.style.top,left:_78f.style.left,width:_78f.style.width,height:_78f.style.height,opacity:s.getStyle(_78f,"opacity")};
_790=MochiKit.Base.update({beforeSetupInternal:function(_795){
MochiKit.Position.absolutize(_795.effects[0].element);
},afterFinishInternal:function(_796){
s.hideElement(_796.effects[0].element);
s.setStyle(_796.effects[0].element,_794);
},scaleContent:true,scaleFromCenter:true},_790);
return new v.Parallel([new v.Scale(_78f,200,{sync:true,scaleFromCenter:_790.scaleFromCenter,scaleMode:{originalHeight:_793.h,originalWidth:_793.w},scaleContent:_790.scaleContent,restoreAfterFinish:true}),new v.Opacity(_78f,{sync:true,to:0})],_790);
};
MochiKit.Visual.blindUp=function(_797,_798){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_797=d.getElement(_797);
var _79b=s.getElementDimensions(_797,true);
var _79c=s.makeClipping(_797);
_798=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_79b.h,originalWidth:_79b.w},restoreAfterFinish:true,afterFinishInternal:function(_79d){
s.hideElement(_79d.element);
s.undoClipping(_79d.element,_79c);
}},_798);
return new MochiKit.Visual.Scale(_797,0,_798);
};
MochiKit.Visual.blindDown=function(_79e,_79f){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_79e=d.getElement(_79e);
var _7a2=s.getElementDimensions(_79e,true);
var _7a3;
_79f=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7a2.h,originalWidth:_7a2.w},restoreAfterFinish:true,afterSetupInternal:function(_7a4){
_7a3=s.makeClipping(_7a4.element);
s.setStyle(_7a4.element,{height:"0px"});
s.showElement(_7a4.element);
},afterFinishInternal:function(_7a5){
s.undoClipping(_7a5.element,_7a3);
}},_79f);
return new MochiKit.Visual.Scale(_79e,100,_79f);
};
MochiKit.Visual.switchOff=function(_7a6,_7a7){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7a6=d.getElement(_7a6);
var _7aa=s.getElementDimensions(_7a6,true);
var _7ab=s.getStyle(_7a6,"opacity");
var _7ac;
_7a7=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_7ad){
s.makePositioned(_7a6);
_7ac=s.makeClipping(_7a6);
},afterFinishInternal:function(_7ae){
s.hideElement(_7a6);
s.undoClipping(_7a6,_7ac);
s.undoPositioned(_7a6);
s.setStyle(_7a6,{"opacity":_7ab});
}},_7a7);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_7a6,{sync:true,duration:0.57*_7a7.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_7a6,1,{sync:true,duration:0.43*_7a7.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_7aa.h,originalWidth:_7aa.w},scaleContent:false,restoreAfterFinish:true})],_7a7);
};
MochiKit.Visual.dropOut=function(_7b0,_7b1){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7b0=d.getElement(_7b0);
var _7b4={top:s.getStyle(_7b0,"top"),left:s.getStyle(_7b0,"left"),opacity:s.getStyle(_7b0,"opacity")};
_7b1=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_7b5){
s.makePositioned(_7b5.effects[0].element);
},afterFinishInternal:function(_7b6){
s.hideElement(_7b6.effects[0].element);
s.undoPositioned(_7b6.effects[0].element);
s.setStyle(_7b6.effects[0].element,_7b4);
}},_7b1);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_7b0,{x:0,y:_7b1.distance,sync:true}),new v.Opacity(_7b0,{sync:true,to:0})],_7b1);
};
MochiKit.Visual.shake=function(_7b8,_7b9){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7b8=d.getElement(_7b8);
var _7bd={top:s.getStyle(_7b8,"top"),left:s.getStyle(_7b8,"left")};
_7b9=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_7be){
s.undoPositioned(_7b8);
s.setStyle(_7b8,_7bd);
}},_7b9);
return new v.Sequence([new v.Move(_7b8,{sync:true,duration:0.1*_7b9.duration,x:20,y:0}),new v.Move(_7b8,{sync:true,duration:0.2*_7b9.duration,x:-40,y:0}),new v.Move(_7b8,{sync:true,duration:0.2*_7b9.duration,x:40,y:0}),new v.Move(_7b8,{sync:true,duration:0.2*_7b9.duration,x:-40,y:0}),new v.Move(_7b8,{sync:true,duration:0.2*_7b9.duration,x:40,y:0}),new v.Move(_7b8,{sync:true,duration:0.1*_7b9.duration,x:-20,y:0})],_7b9);
};
MochiKit.Visual.slideDown=function(_7bf,_7c0){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7bf=d.getElement(_7bf);
if(!_7bf.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_7bf);
var _7c4=s.getStyle(_7bf.firstChild,"bottom")||0;
var _7c5=s.getElementDimensions(_7bf,true);
var _7c6;
_7c0=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7c5.h,originalWidth:_7c5.w},restoreAfterFinish:true,afterSetupInternal:function(_7c7){
s.makePositioned(_7c7.element);
s.makePositioned(_7c7.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7c7.element,{top:""});
}
_7c6=s.makeClipping(_7c7.element);
s.setStyle(_7c7.element,{height:"0px"});
s.showElement(_7c7.element);
},afterUpdateInternal:function(_7c8){
var _7c9=s.getElementDimensions(_7c8.element,true);
s.setStyle(_7c8.element.firstChild,{bottom:(_7c8.dims[0]-_7c9.h)+"px"});
},afterFinishInternal:function(_7ca){
s.undoClipping(_7ca.element,_7c6);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_7ca.element);
s.undoPositioned(_7ca.element.firstChild);
}else{
s.undoPositioned(_7ca.element.firstChild);
s.undoPositioned(_7ca.element);
}
s.setStyle(_7ca.element.firstChild,{bottom:_7c4});
}},_7c0);
return new MochiKit.Visual.Scale(_7bf,100,_7c0);
};
MochiKit.Visual.slideUp=function(_7cb,_7cc){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7cb=d.getElement(_7cb);
if(!_7cb.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_7cb);
var _7d0=s.getStyle(_7cb.firstChild,"bottom");
var _7d1=s.getElementDimensions(_7cb,true);
var _7d2;
_7cc=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7d1.h,originalWidth:_7d1.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_7d3){
s.makePositioned(_7d3.element);
s.makePositioned(_7d3.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7d3.element,{top:""});
}
_7d2=s.makeClipping(_7d3.element);
s.showElement(_7d3.element);
},afterUpdateInternal:function(_7d4){
var _7d5=s.getElementDimensions(_7d4.element,true);
s.setStyle(_7d4.element.firstChild,{bottom:(_7d4.dims[0]-_7d5.h)+"px"});
},afterFinishInternal:function(_7d6){
s.hideElement(_7d6.element);
s.undoClipping(_7d6.element,_7d2);
s.undoPositioned(_7d6.element.firstChild);
s.undoPositioned(_7d6.element);
s.setStyle(_7d6.element.firstChild,{bottom:_7d0});
}},_7cc);
return new MochiKit.Visual.Scale(_7cb,0,_7cc);
};
MochiKit.Visual.squish=function(_7d7,_7d8){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _7dc=s.getElementDimensions(_7d7,true);
var _7dd;
_7d8=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_7dc.w,originalWidth:_7dc.h},beforeSetupInternal:function(_7de){
_7dd=s.makeClipping(_7de.element);
},afterFinishInternal:function(_7df){
s.hideElement(_7df.element);
s.undoClipping(_7df.element,_7dd);
}},_7d8);
return new MochiKit.Visual.Scale(_7d7,/Opera/.test(navigator.userAgent)?1:0,_7d8);
};
MochiKit.Visual.grow=function(_7e0,_7e1){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7e0=d.getElement(_7e0);
_7e1=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_7e1);
var _7e5={top:_7e0.style.top,left:_7e0.style.left,height:_7e0.style.height,width:_7e0.style.width,opacity:s.getStyle(_7e0,"opacity")};
var dims=s.getElementDimensions(_7e0,true);
var _7e7,_7e8;
var _7e9,_7ea;
switch(_7e1.direction){
case "top-left":
_7e7=_7e8=_7e9=_7ea=0;
break;
case "top-right":
_7e7=dims.w;
_7e8=_7ea=0;
_7e9=-dims.w;
break;
case "bottom-left":
_7e7=_7e9=0;
_7e8=dims.h;
_7ea=-dims.h;
break;
case "bottom-right":
_7e7=dims.w;
_7e8=dims.h;
_7e9=-dims.w;
_7ea=-dims.h;
break;
case "center":
_7e7=dims.w/2;
_7e8=dims.h/2;
_7e9=-dims.w/2;
_7ea=-dims.h/2;
break;
}
var _7eb=MochiKit.Base.update({beforeSetupInternal:function(_7ec){
s.setStyle(_7ec.effects[0].element,{height:"0px"});
s.showElement(_7ec.effects[0].element);
},afterFinishInternal:function(_7ed){
s.undoClipping(_7ed.effects[0].element);
s.undoPositioned(_7ed.effects[0].element);
s.setStyle(_7ed.effects[0].element,_7e5);
}},_7e1);
return new v.Move(_7e0,{x:_7e7,y:_7e8,duration:0.01,beforeSetupInternal:function(_7ee){
s.hideElement(_7ee.element);
s.makeClipping(_7ee.element);
s.makePositioned(_7ee.element);
},afterFinishInternal:function(_7ef){
new v.Parallel([new v.Opacity(_7ef.element,{sync:true,to:1,from:0,transition:_7e1.opacityTransition}),new v.Move(_7ef.element,{x:_7e9,y:_7ea,sync:true,transition:_7e1.moveTransition}),new v.Scale(_7ef.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_7e1.scaleTransition,scaleContent:_7e1.scaleContent,scaleFromCenter:_7e1.scaleFromCenter,restoreAfterFinish:true})],_7eb);
}});
};
MochiKit.Visual.shrink=function(_7f0,_7f1){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7f0=d.getElement(_7f0);
_7f1=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_7f1);
var _7f5={top:_7f0.style.top,left:_7f0.style.left,height:_7f0.style.height,width:_7f0.style.width,opacity:s.getStyle(_7f0,"opacity")};
var dims=s.getElementDimensions(_7f0,true);
var _7f7,_7f8;
switch(_7f1.direction){
case "top-left":
_7f7=_7f8=0;
break;
case "top-right":
_7f7=dims.w;
_7f8=0;
break;
case "bottom-left":
_7f7=0;
_7f8=dims.h;
break;
case "bottom-right":
_7f7=dims.w;
_7f8=dims.h;
break;
case "center":
_7f7=dims.w/2;
_7f8=dims.h/2;
break;
}
var _7f9;
var _7fa=MochiKit.Base.update({beforeStartInternal:function(_7fb){
s.makePositioned(_7fb.effects[0].element);
_7f9=s.makeClipping(_7fb.effects[0].element);
},afterFinishInternal:function(_7fc){
s.hideElement(_7fc.effects[0].element);
s.undoClipping(_7fc.effects[0].element,_7f9);
s.undoPositioned(_7fc.effects[0].element);
s.setStyle(_7fc.effects[0].element,_7f5);
}},_7f1);
return new v.Parallel([new v.Opacity(_7f0,{sync:true,to:0,from:1,transition:_7f1.opacityTransition}),new v.Scale(_7f0,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_7f1.scaleTransition,scaleContent:_7f1.scaleContent,scaleFromCenter:_7f1.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_7f0,{x:_7f7,y:_7f8,sync:true,transition:_7f1.moveTransition})],_7fa);
};
MochiKit.Visual.pulsate=function(_7fd,_7fe){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _802=MochiKit.Style.getStyle(_7fd,"opacity");
_7fe=b.update({duration:3,from:0,afterFinishInternal:function(_803){
MochiKit.Style.setStyle(_803.element,{"opacity":_802});
}},_7fe);
var _804=_7fe.transition||v.Transitions.sinoidal;
_7fe.transition=function(pos){
return _804(1-v.Transitions.pulse(pos,_7fe.pulses));
};
return new v.Opacity(_7fd,_7fe);
};
MochiKit.Visual.fold=function(_806,_807){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_806=d.getElement(_806);
var _80b=s.getElementDimensions(_806,true);
var _80c={top:_806.style.top,left:_806.style.left,width:_806.style.width,height:_806.style.height};
var _80d=s.makeClipping(_806);
_807=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_80b.h,originalWidth:_80b.w},afterFinishInternal:function(_80e){
new v.Scale(_806,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_80b.h,originalWidth:_80b.w},afterFinishInternal:function(_80f){
s.hideElement(_80f.element);
s.undoClipping(_80f.element,_80d);
s.setStyle(_80f.element,_80c);
}});
}},_807);
return new v.Scale(_806,5,_807);
};
MochiKit.Base.nameFunctions(MochiKit.Visual);
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DragAndDrop");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Signal");
goog.require("MochiKit.Visual");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_810){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_810);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_815){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_815)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_815);
}
},this.drops);
},findDeepestChild:function(_817){
var _818=_817[0];
for(var i=1;i<_817.length;++i){
if(MochiKit.DOM.isChildNode(_817[i].element,_818.element)){
_818=_817[i];
}
}
return _818;
},show:function(_81a,_81b){
if(!this.drops.length){
return;
}
var _81c=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_81a,_81b)){
_81c.push(drop);
}
});
if(_81c.length>0){
var drop=this.findDeepestChild(_81c);
MochiKit.Position.within(drop.element,_81a.page.x,_81a.page.y);
drop.options.onhover(_81b,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_81f,_820){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_81f.mouse(),_820)){
this.last_active.options.ondrop(_820,this.last_active.element,_81f);
}
},reset:function(_821){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_821);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_823,_824){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_823,_824);
}
this.__init__(_823,_824);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_826,_827){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_826);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_827);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_82b){
if(this.options._containers.length){
var _82c;
if(this.options.tree){
_82c=_82b.treeNode;
}else{
_82c=_82b.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _82c==c;
});
}else{
return true;
}
},isAccepted:function(_82e){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_82e,c);
}));
},isAffected:function(_830,_831){
return ((this.element!=_831)&&this.isContained(_831)&&this.isAccepted(_831)&&MochiKit.Position.within(this.element,_830.page.x,_830.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_832){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_832);
},unregister:function(_834){
this.drags=MochiKit.Base.filter(function(d){
return d!=_834;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_837){
window.focus();
this.activeDraggable=_837;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_838){
if(!this.activeDraggable){
return;
}
var _839=_838.mouse();
if(this._lastPointer&&this._lastPointer.page.x==_839.page.x&&this._lastPointer.page.y==_839.page.y){
return;
}
this._lastPointer=_839;
this.activeDraggable.updateDrag(_838,_839);
},endDrag:function(_83a){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_83a);
this.activeDraggable=null;
},keyPress:function(_83b){
if(this.activeDraggable){
this.activeDraggable.keyPress(_83b);
}
},notify:function(_83c,_83d,_83e){
MochiKit.Signal.signal(this,_83c,_83d,_83e);
}};
MochiKit.DragAndDrop.Draggable=function(_83f,_840){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_83f,_840);
}
this.__init__(_83f,_840);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_842,_843){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_843=b.update({handle:false,starteffect:function(_846){
this._savedOpacity=MochiKit.Style.getStyle(_846,"opacity")||1;
new v.Opacity(_846,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_847,_848,_849){
var dur=Math.sqrt(Math.abs(_848^2)+Math.abs(_849^2))*0.02;
return new v.Move(_847,{x:-_849,y:-_848,duration:dur});
},endeffect:function(_84b){
new v.Opacity(_84b,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_843);
var d=MochiKit.DOM;
this.element=d.getElement(_842);
if(_843.handle&&(typeof (_843.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_843.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_843.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_843.scroll&&!_843.scroll.scrollTo&&!_843.scroll.outerHTML){
_843.scroll=d.getElement(_843.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_843.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_843;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0",10),parseInt(s(this.element,"top")||"0",10)];
},initDrag:function(_84e){
if(!_84e.mouse().button.left){
return;
}
var src=_84e.target();
var _850=(src.tagName||"").toUpperCase();
if(_850==="INPUT"||_850==="SELECT"||_850==="OPTION"||_850==="BUTTON"||_850==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _851=_84e.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_851.page.x-pos.x,_851.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_84e.stop();
},startDrag:function(_853){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=MochiKit.Style.getStyle(this.element,"z-index");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _854=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_854.left;
this.originalScrollTop=_854.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_853);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_855,_856){
if(!this.dragging){
this.startDrag(_855);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_856,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_855);
this.draw(_856);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _85a=[0,0];
if(_856.page.x>(q.x-this.options.scrollSensitivity)){
_85a[0]=_856.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_856.page.x<(p.x+this.options.scrollSensitivity)){
_85a[0]=_856.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_856.page.y>(q.y-this.options.scrollSensitivity)){
_85a[1]=_856.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_856.page.y<(p.y+this.options.scrollSensitivity)){
_85a[1]=_856.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_85a);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_855.stop();
},finishDrag:function(_85b,_85c){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_85c){
dr.Droppables.fire(_85b,this.element);
}
dr.Draggables.notify("end",this,_85b);
var _85e=this.options.revert;
if(_85e&&typeof (_85e)=="function"){
_85e=_85e(this.element);
}
var d=this.currentDelta();
if(_85e&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_860){
if(_860.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_860,false);
_860.stop();
},endDrag:function(_861){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_861,true);
_861.stop();
},draw:function(_862){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_862.page.x-pos.x-this.offset[0],_862.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _869=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_869.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_869.top=p[1]+"px";
}
if(_869.visibility=="hidden"){
_869.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_86a){
if(!_86a[0]&&!_86a[1]){
return;
}
this.scrollSpeed=[_86a[0]*this.options.scrollSpeed,_86a[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _86b=new Date();
var _86c=_86b-this.lastScrolled;
this.lastScrolled=_86b;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_86c/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_86c/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_86c/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_86c/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_86c/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Sortable");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Position");
goog.require("MochiKit.DragAndDrop");
}
MochiKit.Base.module(MochiKit,"Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_874){
while(_874.tagName.toUpperCase()!="BODY"){
if(_874.id&&MochiKit.Sortable.sortables[_874.id]){
return _874;
}
_874=_874.parentNode;
}
},_createElementId:function(_875){
if(_875.id==null||_875.id==""){
var d=MochiKit.DOM;
var id;
var _878=1;
while(d.getElement(id="sortable"+_878)!=null){
_878+=1;
}
d.setNodeAttribute(_875,"id",id);
}
},options:function(_879){
_879=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_879));
if(!_879){
return;
}
return MochiKit.Sortable.sortables[_879.id];
},destroy:function(_87a){
var s=MochiKit.Sortable.options(_87a);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_880,_881){
_880=MochiKit.DOM.getElement(_880);
var self=MochiKit.Sortable;
self._createElementId(_880);
_881=MochiKit.Base.update({element:_880,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_880],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_881);
self.destroy(_880);
var _883={revert:true,ghosting:_881.ghosting,scroll:_881.scroll,scrollSensitivity:_881.scrollSensitivity,scrollSpeed:_881.scrollSpeed,constraint:_881.constraint,handle:_881.handle};
if(_881.starteffect){
_883.starteffect=_881.starteffect;
}
if(_881.reverteffect){
_883.reverteffect=_881.reverteffect;
}else{
if(_881.ghosting){
_883.reverteffect=function(_884){
_884.style.top=0;
_884.style.left=0;
};
}
}
if(_881.endeffect){
_883.endeffect=_881.endeffect;
}
if(_881.zindex){
_883.zindex=_881.zindex;
}
var _885={overlap:_881.overlap,containment:_881.containment,hoverclass:_881.hoverclass,onhover:self.onHover,tree:_881.tree,accept:_881.accept};
var _886={onhover:self.onEmptyHover,overlap:_881.overlap,containment:_881.containment,hoverclass:_881.hoverclass,accept:_881.accept};
MochiKit.DOM.removeEmptyTextNodes(_880);
_881.draggables=[];
_881.droppables=[];
if(_881.dropOnEmpty||_881.tree){
new MochiKit.DragAndDrop.Droppable(_880,_886);
_881.droppables.push(_880);
}
MochiKit.Base.map(function(e){
var _888=_881.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_881.handle,e):e;
_881.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_883,{handle:_888})));
new MochiKit.DragAndDrop.Droppable(e,_885);
if(_881.tree){
e.treeNode=_880;
}
_881.droppables.push(e);
},(self.findElements(_880,_881)||[]));
if(_881.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_886);
e.treeNode=_880;
_881.droppables.push(e);
},(self.findTreeElements(_880,_881)||[]));
}
self.sortables[_880.id]=_881;
_881.lastValue=self.serialize(_880);
_881.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_880));
_881.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_880));
},onStart:function(_88a,_88b){
var self=MochiKit.Sortable;
var _88d=self.options(_88a);
_88d.lastValue=self.serialize(_88d.element);
},onEnd:function(_88e,_88f){
var self=MochiKit.Sortable;
self.unmark();
var _891=self.options(_88e);
if(_891.lastValue!=self.serialize(_891.element)){
_891.onUpdate(_891.element);
}
},findElements:function(_892,_893){
return MochiKit.Sortable.findChildren(_892,_893.only,_893.tree,_893.tag);
},findTreeElements:function(_894,_895){
return MochiKit.Sortable.findChildren(_894,_895.only,_895.tree?true:false,_895.treeTag);
},findChildren:function(_896,only,_898,_899){
if(!_896.hasChildNodes()){
return null;
}
_899=_899.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _89a=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_899&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_89a.push(e);
}
if(_898){
var _89d=MochiKit.Sortable.findChildren(e,only,_898,_899);
if(_89d&&_89d.length>0){
_89a=_89a.concat(_89d);
}
}
},_896.childNodes);
return _89a;
},onHover:function(_89e,_89f,_8a0){
if(MochiKit.DOM.isChildNode(_89f,_89e)){
return;
}
var self=MochiKit.Sortable;
if(_8a0>0.33&&_8a0<0.66&&self.options(_89f).tree){
return;
}else{
if(_8a0>0.5){
self.mark(_89f,"before");
if(_89f.previousSibling!=_89e){
var _8a2=_89e.parentNode;
_89e.style.visibility="hidden";
_89f.parentNode.insertBefore(_89e,_89f);
if(_89f.parentNode!=_8a2){
self.options(_8a2).onChange(_89e);
}
self.options(_89f.parentNode).onChange(_89e);
}
}else{
self.mark(_89f,"after");
var _8a3=_89f.nextSibling||null;
if(_8a3!=_89e){
var _8a2=_89e.parentNode;
_89e.style.visibility="hidden";
_89f.parentNode.insertBefore(_89e,_8a3);
if(_89f.parentNode!=_8a2){
self.options(_8a2).onChange(_89e);
}
self.options(_89f.parentNode).onChange(_89e);
}
}
}
},_offsetSize:function(_8a4,type){
if(type=="vertical"||type=="height"){
return _8a4.offsetHeight;
}else{
return _8a4.offsetWidth;
}
},onEmptyHover:function(_8a6,_8a7,_8a8){
var _8a9=_8a6.parentNode;
var self=MochiKit.Sortable;
var _8ab=self.options(_8a7);
if(!MochiKit.DOM.isChildNode(_8a7,_8a6)){
var _8ac;
var _8ad=self.findElements(_8a7,{tag:_8ab.tag,only:_8ab.only});
var _8ae=null;
if(_8ad){
var _8af=self._offsetSize(_8a7,_8ab.overlap)*(1-_8a8);
for(_8ac=0;_8ac<_8ad.length;_8ac+=1){
if(_8af-self._offsetSize(_8ad[_8ac],_8ab.overlap)>=0){
_8af-=self._offsetSize(_8ad[_8ac],_8ab.overlap);
}else{
if(_8af-(self._offsetSize(_8ad[_8ac],_8ab.overlap)/2)>=0){
_8ae=_8ac+1<_8ad.length?_8ad[_8ac+1]:null;
break;
}else{
_8ae=_8ad[_8ac];
break;
}
}
}
}
_8a7.insertBefore(_8a6,_8ae);
self.options(_8a9).onChange(_8a6);
_8ab.onChange(_8a6);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_8b1,_8b2){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _8b5=self.options(_8b1.parentNode);
if(_8b5&&!_8b5.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _8b6=MochiKit.Position.cumulativeOffset(_8b1);
self._marker.style.left=_8b6.x+"px";
self._marker.style.top=_8b6.y+"px";
if(_8b2=="after"){
if(_8b5.overlap=="horizontal"){
self._marker.style.left=(_8b6.x+_8b1.clientWidth)+"px";
}else{
self._marker.style.top=(_8b6.y+_8b1.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_8b7,_8b8,_8b9){
var self=MochiKit.Sortable;
var _8bb=self.findElements(_8b7,_8b8)||[];
for(var i=0;i<_8bb.length;++i){
var _8bd=_8bb[i].id.match(_8b8.format);
if(!_8bd){
continue;
}
var _8be={id:encodeURIComponent(_8bd?_8bd[1]:null),element:_8b7,parent:_8b9,children:[],position:_8b9.children.length,container:self._findChildrenElement(_8bb[i],_8b8.treeTag.toUpperCase())};
if(_8be.container){
self._tree(_8be.container,_8b8,_8be);
}
_8b9.children.push(_8be);
}
return _8b9;
},_findChildrenElement:function(_8bf,_8c0){
if(_8bf&&_8bf.hasChildNodes){
_8c0=_8c0.toUpperCase();
for(var i=0;i<_8bf.childNodes.length;++i){
if(_8bf.childNodes[i].tagName.toUpperCase()==_8c0){
return _8bf.childNodes[i];
}
}
}
return null;
},tree:function(_8c2,_8c3){
_8c2=MochiKit.DOM.getElement(_8c2);
var _8c4=MochiKit.Sortable.options(_8c2);
_8c3=MochiKit.Base.update({tag:_8c4.tag,treeTag:_8c4.treeTag,only:_8c4.only,name:_8c2.id,format:_8c4.format},_8c3||{});
var root={id:null,parent:null,children:new Array,container:_8c2,position:0};
return MochiKit.Sortable._tree(_8c2,_8c3,root);
},setSequence:function(_8c6,_8c7,_8c8){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_8c6=MochiKit.DOM.getElement(_8c6);
_8c8=b.update(self.options(_8c6),_8c8||{});
var _8cb={};
b.map(function(n){
var m=n.id.match(_8c8.format);
if(m){
_8cb[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_8c6,_8c8));
b.map(function(_8ce){
var n=_8cb[_8ce];
if(n){
n[1].appendChild(n[0]);
delete _8cb[_8ce];
}
},_8c7);
},_constructIndex:function(node){
var _8d1="";
do{
if(node.id){
_8d1="["+node.position+"]"+_8d1;
}
}while((node=node.parent)!=null);
return _8d1;
},sequence:function(_8d2,_8d3){
_8d2=MochiKit.DOM.getElement(_8d2);
var self=MochiKit.Sortable;
var _8d3=MochiKit.Base.update(self.options(_8d2),_8d3||{});
return MochiKit.Base.map(function(item){
return item.id.match(_8d3.format)?item.id.match(_8d3.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_8d2,_8d3)||[]));
},serialize:function(_8d6,_8d7){
_8d6=MochiKit.DOM.getElement(_8d6);
var self=MochiKit.Sortable;
_8d7=MochiKit.Base.update(self.options(_8d6),_8d7||{});
var name=encodeURIComponent(_8d7.name||_8d6.id);
if(_8d7.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_8d6,_8d7).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_8d6,_8d7)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base_ext");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Base_ext","1.5",["Base"]);
MochiKit.Base._arg_placeholder=function(_8dc){
this.index=_8dc;
};
var _1=new MochiKit.Base._arg_placeholder(0);
var _2=new MochiKit.Base._arg_placeholder(1);
var _3=new MochiKit.Base._arg_placeholder(2);
var _4=new MochiKit.Base._arg_placeholder(3);
var _5=new MochiKit.Base._arg_placeholder(4);
var _6=new MochiKit.Base._arg_placeholder(5);
var _7=new MochiKit.Base._arg_placeholder(6);
var _8=new MochiKit.Base._arg_placeholder(7);
var _9=new MochiKit.Base._arg_placeholder(8);
var _10=new MochiKit.Base._arg_placeholder(9);
MochiKit.Base._rebind_preargs=function(_8dd,args,_8df){
_8df=_8df||{};
for(var i=0;i<_8dd.length;++i){
var pa=_8dd[i];
if(pa instanceof MochiKit.Base._arg_placeholder){
if(pa.index<args.length){
_8dd[i]=args[pa.index];
_8df[pa.index]=pa.index;
}
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
MochiKit.Base._rebind_preargs(pa.im_preargs,args,_8df);
}
}
}
return _8df;
};
MochiKit.Base.bind2=function(func,self,_8e4){
if(typeof (func)=="string"){
func=self[func];
}
var _8e5=func.im_func;
var _8e6=func.im_preargs;
var _8e7=func.im_self;
var m=MochiKit.Base;
if(typeof (func)=="function"&&typeof (func.apply)=="undefined"){
func=m._wrapDumbFunction(func);
}
if(typeof (_8e5)!="function"){
_8e5=func;
}
if(typeof (self)!="undefined"){
_8e7=self;
}
if(typeof (_8e6)=="undefined"){
_8e6=[];
}else{
_8e6=_8e6.slice();
}
var args=Array.prototype.slice.call(arguments,self instanceof m._arg_placeholder?1:2);
var _8ea=MochiKit.Base._rebind_preargs(_8e6,args);
for(var _8eb in _8ea){
args.splice(_8ea[_8eb],1);
}
m.extend(_8e6,args);
var _8ec=function(){
var me=arguments.callee;
var self=me.im_self;
if(!self){
self=this;
}
var args=[];
if(me.im_preargs.length>0){
var imax=0;
for(var i=0;i<me.im_preargs.length;++i){
var pa=me.im_preargs[i];
if(pa instanceof m._arg_placeholder){
imax=Math.max(imax,pa.index+1);
pa=arguments[pa.index];
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
pa=pa.apply(self,arguments);
}
}
args.push(pa);
}
for(var j=imax;j<arguments.length;++j){
args.push(arguments[j]);
}
}else{
args=arguments;
}
if(self instanceof m._arg_placeholder){
self=arguments[self.index];
}
return me.im_func.apply(self,args);
};
_8ec.im_self=_8e7;
_8ec.im_func=_8e5;
_8ec.im_preargs=_8e6;
if(typeof (_8e5.NAME)=="string"){
_8ec.NAME="bind2("+_8e5.NAME+",...)";
}
return _8ec;
};
MochiKit.Base.partial2=function(func,_8f5){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,undefined],arguments,1));
};
MochiKit.Base.method2=function(self,func,_8f9){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,self],arguments,2));
};
MochiKit.Base.bindLate2=function(func,self,_8fd){
var m=MochiKit.Base;
var args=arguments;
if(typeof (func)==="string"){
args=m.extend([m.forwardCall(func)],arguments,1);
return m.bind2.apply(this,args);
}
return m.bind2.apply(this,args);
};
MochiKit.Base.isBoundFunction=function(fn){
return typeof fn=="function"&&typeof fn.im_func=="function";
};
MochiKit.Base.protect=function(_901){
return function(){
return _901.apply(this,arguments);
};
};
MochiKit.Base.apply=function(fn,_903){
var args=MochiKit.Base.extend([],arguments,1);
return fn.apply(this,args);
};
MochiKit.Base.partition=function(_905,cmp,left,_908,_909){
cmp=cmp||MochiKit.Base.operator.cle;
left=left||0;
_908=_908||_905.length-1;
_909=_909||(left+Math.floor((_908-left)/2));
function swap(i,j){
var tmp=_905[i];
_905[i]=_905[j];
_905[j]=tmp;
}
var _90d=_905[_909];
swap(_909,_908);
var _90e=left;
for(var i=left;i<=_908;++i){
if(cmp(_905[i],_90d)){
swap(i,_90e);
++_90e;
}
}
swap(_90e,_908);
return _90e;
};
MochiKit.Base.countValue=function(_910,elem,cmp){
cmp=cmp||MochiKit.Base.operator.ceq;
var n=0;
MochiKit.Iter.forEach(_910,function(e){
if(cmp(e,elem)){
++n;
}
});
return n;
};
MochiKit.Base.negateComparator=function(cmp){
return function(){
return -1*cmp.apply(this,arguments);
};
};
MochiKit.Base_ext.__new__=function(){
};
MochiKit.Base_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Iter_ext","1.5",["Base","Iter"]);
MochiKit.Iter.treePreOrder=function(_916,_917){
var _918=[_916];
return {repr:function(){
return "treePreOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_918.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_918.pop();
MochiKit.Iter.iextend(_918,_917(node));
return node;
}};
};
MochiKit.Iter.treeLevelOrder=function(_91a,_91b){
var _91c=[_91a];
return {repr:function(){
return "treeLevelOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_91c.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_91c.shift();
MochiKit.Iter.iextend(_91c,_91b(node));
return node;
}};
};
MochiKit.Iter.treePostOrder=function(_91e,_91f){
var _920=[[_91e,false]];
return {repr:function(){
return "treePostOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_920.length==0){
throw MochiKit.Iter.StopIteration;
}
var n=_920.pop();
if(n[1]){
return n[0];
}
n[1]=true;
_920.push(n);
MochiKit.Iter.iextend(_920,MochiKit.Iter.imap(function(node){
return [node,false];
},_91f(n[0])));
}
}};
};
MochiKit.Iter.pairView=function(_923,_924){
_924=_924||false;
var it=MochiKit.Iter.iter(_923);
try{
var _926=it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return MochiKit.Iter.EmptyIter;
}
if(_924){
it=MochiKit.Iter.chain(it,[_926]);
}
return {repr:function(){
return "pairView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _927=it.next();
var pair=[_926,_927];
_926=_927;
return pair;
}};
};
MochiKit.Iter.windowView=function(_929,_92a,_92b){
_92a=_92a||2;
_92b=_92b||1;
var it=MochiKit.Iter.iter(_929);
var win=[];
return {repr:function(){
return "windowView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(win.length<_92a){
while(win.length<_92a){
win.push(it.next());
}
}else{
for(var i=0;i<_92b;++i){
win.shift();
win.push(it.next());
}
}
return win.slice();
}};
};
MochiKit.Iter.filterMap=function(_92f,_930,_931){
_931=_931||function(item){
return typeof item!=="undefined"&&item!==null;
};
return MochiKit.Iter.ifilter(_931,MochiKit.Iter.imap(_92f,_930));
};
MochiKit.Iter.iflattenArray=function(root){
var _934=[root];
return {repr:function(){
return "iflattenArray(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_934.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_934.shift();
if(node instanceof Array){
Array.prototype.splice.apply(_934,[0,0].concat(node));
}else{
return node;
}
}
}};
};
MochiKit.Iter.chainFromIter=function(seq,_937){
_937=_937||MochiKit.Iter.iter;
var it=MochiKit.Iter.iter(seq);
var jt=null;
return {repr:function(){
return "chainFromIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(jt==null){
jt=MochiKit.Iter.iter(_937(it.next()));
}
while(true){
try{
var val=jt.next();
return val;
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=MochiKit.Iter.iter(_937(it.next()));
}
}
}};
};
MochiKit.Iter.uniqueView=function(_93b,pred){
pred=pred||MochiKit.Base.operator.ceq;
var it=MochiKit.Iter.iter(_93b);
var _93e=true;
var prev;
return {repr:function(){
return "uniqueView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_93e){
_93e=false;
prev=it.next();
return prev;
}
var val=it.next();
while(pred(prev,val)){
val=it.next();
}
prev=val;
return val;
}};
};
MochiKit.Iter.iproduct=function(_941,_942){
var sa=arguments[0],sb=arguments[1];
var it=MochiKit.Iter.iter(sa);
var jt=null;
var a,b;
return {repr:function(){
return "iproduct(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(jt==null){
a=it.next();
jt=MochiKit.Iter.iter(sb);
}
try{
b=jt.next();
return [a,b];
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=null;
}
}
}};
};
MochiKit.Iter.enumerate=function(_949,_94a){
return MochiKit.Iter.izip(MochiKit.Iter.count(_94a),_949);
};
MochiKit.Iter.breakIt=function(){
throw MochiKit.Iter.StopIteration;
};
MochiKit.Iter.EmptyIter={repr:function(){
return "EmptyIter";
},toString:MochiKit.Base.forwardCall("repr"),next:MochiKit.Iter.breakIt};
MochiKit.Iter.generateN=function(_94b,n){
return MochiKit.Iter.imap(function(){
return _94b();
},MochiKit.Iter.range(n));
};
MochiKit.Iter.izipLongest=function(_94d,_94e){
_94e=_94e||null;
_94d=MochiKit.Base.map(MochiKit.Iter.iter,_94d);
var _94f=_94d.length;
return {repr:function(){
return "izipLongest(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _950=new Array(_94d.length);
for(var i=0;i<_94d.length;++i){
try{
_950[i]=_94d[i].next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
_94d[i]=MochiKit.Iter.repeat(_94e);
_950[i]=_94e;
--_94f;
}
}
if(_94f==0){
throw MochiKit.Iter.StopIteration;
}
return _950;
}};
};
MochiKit.Iter.any=function(){
return MochiKit.Iter.some.apply(this,arguments);
};
MochiKit.Iter.all=function(){
return MochiKit.Iter.every.apply(this,arguments);
};
MochiKit.Iter.starmap=function(){
return MochiKit.Iter.applymap.apply(this,arguments);
};
MochiKit.Iter.advance=function(iter,n){
while(n-->0){
iter.next();
}
return iter;
};
MochiKit.Iter.isSorted=function(_954,cmp){
return MochiKit.Iter.every(MochiKit.Iter.windowView(_954),cmp||MochiKit.Base.operator.cle);
};
MochiKit.Iter.interleave=function(_956,_957){
return MochiKit.Iter.chainFromIter(MochiKit.Iter.izip.apply(this,arguments));
};
MochiKit.Iter.remapView=function(_958,lst){
return MochiKit.Iter.imap(MochiKit.Base.partial(MochiKit.Base.operator.getitem,lst),_958);
};
MochiKit.Iter.compressIter=function(data,_95b){
return MochiKit.Iter.imap(function(d_s){
return d_s[0];
},MochiKit.Iter.ifilter(function(d_s){
return d_s[1]?true:false;
},MochiKit.Iter.izip(data,_95b)));
};
MochiKit.Iter.combinations=function(_95e,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_95e);
var n=pool.length;
if(r>n){
return MochiKit.Iter.EmptyIter;
}
var _964=mi.list(mi.range(r));
var _965=true;
return {repr:function(){
return "combinations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_965){
_965=false;
return mi.list(mi.remapView(_964,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_964[i]!=(i+n-r)){
done=false;
break;
}
}
if(done){
throw MochiKit.Iter.StopIteration;
}
_964[i]+=1;
for(var j=i+1;j<r;++j){
_964[j]=_964[j-1]+1;
}
return mi.list(mi.remapView(_964,pool));
}
}};
};
MochiKit.Iter.combinationsWithReplacement=function(_969,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_969);
var n=pool.length;
if(n==0||r==0){
return mi.EmptyIter;
}
var _96f=mi.list(mi.repeat(0,r));
var _970=true;
return {repr:function(){
return "combinationsWithReplacement(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_970){
_970=false;
return mi.list(mi.remapView(_96f,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_96f[i]!=n-1){
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
_96f=_96f.slice(0,i).concat(mi.list(mi.repeat(_96f[i]+1,r-i)));
return mi.list(mi.remapView(_96f,pool));
}
}};
};
MochiKit.Iter.repeatSeq=function(_973,n){
if(n==0){
return MochiKit.Iter.EmptyIter;
}
var it=MochiKit.Iter.iter(_973);
return {next:function(){
try{
return it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration||--n<=0){
throw e;
}
it=MochiKit.Iter.iter(_973);
return it.next();
}
}};
};
MochiKit.Iter.permutations=function(_976,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_976);
var n=pool.length;
r=r||n;
if(r>n){
return mi.EmptyIter;
}
var _97c=mi.list(mi.range(n));
var _97d=mi.list(mi.range(n,n-r,-1));
var _97e=true;
return {repr:function(){
return "permutations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_97e){
_97e=false;
return mi.list(mi.remapView(mi.islice(_97c,0,r),pool));
}
if(n==0){
throw mi.StopIteration;
}
var done=true;
for(var i=r-1;i>=0;--i){
_97d[i]-=1;
if(_97d[i]==0){
_97c=_97c.slice(0,i).concat(_97c.slice(i+1),_97c[i]);
_97d[i]=n-i;
}else{
var j=_97d[i];
var jdx=_97c.length-j;
var tmp=_97c[i];
_97c[i]=_97c[jdx];
_97c[jdx]=tmp;
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
return mi.list(mi.remapView(mi.islice(_97c,0,r),pool));
}};
};
MochiKit.Iter._Range=function(_984,stop,step){
this.start=_984;
this.stop=stop;
this.step=step;
};
MochiKit.Iter._Range.prototype.__iterator__=function(){
return new MochiKit.Iter.range(this.start,this.stop,this.step);
};
MochiKit.Iter.xrange=function(){
var _987=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_987=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_987=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("xrange() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("xrange() step must not be 0");
}
return new MochiKit.Iter._Range(_987,stop,step);
};
MochiKit.Iter.isJavaLikeIterator=function(_98a){
return _98a&&typeof _98a.hasNext=="function"&&typeof _98a.next=="function";
};
MochiKit.Iter.javaLikeIterator=function(_98b){
return {repr:function(){
return "javaLikeIterator";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(!_98b.hasNext()){
throw MochiKit.Iter.StopIteration;
}
return _98b.next();
}};
};
MochiKit.Iter.registerJavaLikeIteratorSupport=function(){
MochiKit,Iter.registerIteratorFactory("javaStyleIterator",MochiKit.Iter.isJavaLikeIterator,MochiKit.Iter.javaLikeIterator);
};
MochiKit.Iter_ext.__new__=function(){
};
MochiKit.Iter_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text_ext");
goog.require("MochiKit.Text");
}
MochiKit.Base.module(MochiKit,"Text_ext","1.5",["Text"]);
MochiKit.Text.levenshteinDistance=function(s,t,_98e){
_98e=_98e||false;
var n=s.length,m=t.length;
if(n==0){
return m;
}
if(m==0){
return n;
}
var d=new Array(n+1);
for(var r=0;r<n+1;++r){
d[r]=new Array(m+1);
}
for(var i=0;i<=n;++i){
d[i][0]=i;
}
for(var j=0;j<=m;++j){
d[0][j]=j;
}
for(var i=1;i<=n;++i){
for(var j=1;j<=m;++j){
var cost=(t[j-1]==s[i-1]?0:1);
var cell=Math.min(Math.min(d[i-1][j]+1,d[i][j-1]+1),d[i-1][j-1]+cost);
if(_98e&&(i>2&&j>2)){
var _997=d[i-2][j-2]+1;
if(s[i-2]!=t[j-1]){
++_997;
}
if(s[i-1]!=t[j-2]){
++_997;
}
if(cell>_997){
cell=_997;
}
}
d[i][j]=cell;
}
}
return d[n][m];
};
MochiKit.Text.humanStringCompare=function(a,b){
if(a==b){
return 0;
}
var _99a=/^(\+|\-)?\d+/;
var _99b=/^\D+/;
while(a.length>0&&b.length>0){
var a0=null,ainc=-1;
var b0=null,binc=-1;
var ma=a.match(_99b);
var mb=b.match(_99b);
if(ma!=null&&mb!=null){
a0=ma[0].toLowerCase();
ainc=a0.length;
b0=mb[0].toLowerCase();
binc=b0.length;
}else{
if(ma==null){
ma=a.match(_99a);
a0=parseInt(ma[0],10)+2<<15;
ainc=ma[0].length;
}else{
a0=a.charAt(0).toLowerCase().charCodeAt(0);
ainc=1;
}
if(mb==null){
mb=b.match(_99a);
b0=parseInt(mb[0],10)+2<<15;
binc=mb[0].length;
}else{
b0=b.charAt(0).toLowerCase().charCodeAt(0);
binc=1;
}
}
if(a0<b0){
return -1;
}
if(a0>b0){
return +1;
}
a=a.substring(ainc);
b=b.substring(binc);
}
if(a.length>0){
return +1;
}
if(b.length>0){
return -1;
}
return 0;
};
MochiKit.Text_ext.__new__=function(){
};
MochiKit.Text_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.HeapQ");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"HeapQ","1.5",["Base","Iter"]);
MochiKit.HeapQ.heapify=function(x,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var n=x.length;
for(var i=Math.floor(n/2)-1;i>=0;--i){
MochiKit.HeapQ._siftup(x,i,cmp);
}
return x;
};
MochiKit.HeapQ._siftdown=function(heap,_9a7,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9aa=heap[pos];
while(pos>_9a7){
var _9ab=(pos-1)>>1;
var _9ac=heap[_9ab];
if(cmp(_9aa,_9ac)){
heap[pos]=_9ac;
pos=_9ab;
continue;
}
break;
}
heap[pos]=_9aa;
};
MochiKit.HeapQ._siftup=function(heap,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9b0=heap.length;
var _9b1=pos;
var _9b2=heap[pos];
var _9b3=2*pos+1;
while(_9b3<_9b0){
var _9b4=_9b3+1;
if(_9b4<_9b0&&!(cmp(heap[_9b3],heap[_9b4]))){
_9b3=_9b4;
}
heap[pos]=heap[_9b3];
pos=_9b3;
_9b3=2*pos+1;
}
heap[pos]=_9b2;
MochiKit.HeapQ._siftdown(heap,_9b1,pos,cmp);
};
MochiKit.HeapQ.heapPush=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
heap.push(item);
MochiKit.HeapQ._siftdown(heap,0,heap.length-1,cmp);
};
MochiKit.HeapQ.heapPop=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9ba=heap.pop();
var _9bb;
if(heap.length>0){
_9bb=heap[0];
heap[0]=_9ba;
MochiKit.HeapQ._siftup(heap,0,cmp);
}else{
_9bb=_9ba;
}
return _9bb;
};
MochiKit.HeapQ.heapReplace=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9bf=heap[0];
heap[0]=item;
MochiKit.HeapQ._siftup(heap,0,cmp);
return _9bf;
};
MochiKit.HeapQ.heapPushPop=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
if(heap.length>0&&cmp(heap[0],item)){
var tmp=heap[0];
heap[0]=item;
item=tmp;
MochiKit.HeapQ._siftup(heap,0,cmp);
}
return item;
};
MochiKit.HeapQ.imergeSorted=function(_9c4,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var _cmp=function(a,b){
var c=cmp(a[0],b[0]);
return c;
};
var h=[];
mi.forEach(mi.izip(mi.count(),mi.imap(mi.iter,_9c4)),function(pair){
var _9ce=pair[0],it=pair[1];
try{
var next=it.next;
h.push([next(),_9ce,next]);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
}
});
m.HeapQ.heapify(h,_cmp);
return {repr:function(){
return "imergeSorted(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(h.length==0){
throw mi.StopIteration;
}
var s=h[0];
var v=s[0];
var next=s[2];
try{
s[0]=next();
m.HeapQ.heapReplace(h,s,_cmp);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
m.HeapQ.heapPop(h,_cmp);
}
return v;
}
}};
};
MochiKit.HeapQ.heapIter=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
return {next:function(){
if(heap.length==0){
throw MochiKit.Iter.StopIteration;
}
return MochiKit.HeapQ.heapPop(heap,cmp);
}};
};
MochiKit.HeapQ.nLargest=function(n,_9d7,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var it=mi.iter(_9d7);
var _9dc=mi.list(mi.islice(it,n));
if(_9dc.length==0){
return _9dc;
}
m.HeapQ.heapify(_9dc,cmp);
mi.forEach(it,function(elem){
m.HeapQ.heapPushPop(_9dc,elem,cmp);
});
_9dc.sort(function(a,b){
return -1*m.Base.compare(a,b);
});
return _9dc;
};
MochiKit.HeapQ.nSmallest=function(n,_9e1,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var h=mi.list(_9e1);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),mi.range(Math.min(n,h.length)));
};
MochiKit.HeapQ.isHeap=function(lst,cmp){
cmp=cmp||MochiKit.Base.operator.cle;
for(var pos=1;pos<lst.length;++pos){
var _9e9=(pos-1)>>1;
if(!cmp(lst[_9e9],lst[pos])){
return false;
}
}
return true;
};
MochiKit.HeapQ.heapSort=function(_9ea,cmp){
var m=MochiKit;
var h=m.Iter.list(_9ea);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),m.Iter.range(h.length));
};
MochiKit.HeapQ.__new__=function(){
};
MochiKit.HeapQ.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.HeapQ);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit._MersenneTwister19937");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"_MersenneTwister19937","1.5",["Base"]);
MochiKit._MersenneTwister19937=function(){
var N=624;
var M=397;
var _9f0=2567483615;
var _9f1=2147483648;
var _9f2=2147483647;
var mt=new Array(N);
var mti=N+1;
function unsigned32(n1){
return n1<0?(n1^_9f1)+_9f1:n1;
}
function subtraction32(n1,n2){
return n1<n2?unsigned32((4294967296-(n2-n1))&4294967295):n1-n2;
}
function addition32(n1,n2){
return unsigned32((n1+n2)&4294967295);
}
function multiplication32(n1,n2){
var sum=0;
for(var i=0;i<32;++i){
if((n1>>>i)&1){
sum=addition32(sum,unsigned32(n2<<i));
}
}
return sum;
}
this.init_genrand=function(s){
mt[0]=unsigned32(s&4294967295);
for(mti=1;mti<N;mti++){
mt[mti]=addition32(multiplication32(1812433253,unsigned32(mt[mti-1]^(mt[mti-1]>>>30))),mti);
mt[mti]=unsigned32(mt[mti]&4294967295);
}
};
this.init_by_array=function(_9ff,_a00){
var i,j,k;
this.init_genrand(19650218);
i=1;
j=0;
k=(N>_a00?N:_a00);
for(;k;k--){
mt[i]=addition32(addition32(unsigned32(mt[i]^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1664525)),_9ff[j]),j);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=_a00){
j=0;
}
}
for(k=N-1;k;k--){
mt[i]=subtraction32(unsigned32((mt[i])^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1566083941)),i);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
}
mt[0]=2147483648;
};
this.genrand_int32=function(){
var y;
var _a05=new Array(0,_9f0);
if(mti>=N){
var kk;
if(mti==N+1){
this.init_genrand(5489);
}
for(kk=0;kk<N-M;kk++){
y=unsigned32((mt[kk]&_9f1)|(mt[kk+1]&_9f2));
mt[kk]=unsigned32(mt[kk+M]^(y>>>1)^_a05[y&1]);
}
for(;kk<N-1;kk++){
y=unsigned32((mt[kk]&_9f1)|(mt[kk+1]&_9f2));
mt[kk]=unsigned32(mt[kk+(M-N)]^(y>>>1)^_a05[y&1]);
}
y=unsigned32((mt[N-1]&_9f1)|(mt[0]&_9f2));
mt[N-1]=unsigned32(mt[M-1]^(y>>>1)^_a05[y&1]);
mti=0;
}
y=mt[mti++];
y=unsigned32(y^(y>>>11));
y=unsigned32(y^((y<<7)&2636928640));
y=unsigned32(y^((y<<15)&4022730752));
y=unsigned32(y^(y>>>18));
return y;
};
this.genrand_int31=function(){
return (this.genrand_int32()>>>1);
};
this.genrand_real1=function(){
return this.genrand_int32()*(1/4294967295);
};
this.genrand_real2=function(){
return this.genrand_int32()*(1/4294967296);
};
this.genrand_real3=function(){
return ((this.genrand_int32())+0.5)*(1/4294967296);
};
this.genrand_res53=function(){
var a=this.genrand_int32()>>>5,b=this.genrand_int32()>>>6;
return (a*67108864+b)*(1/9007199254740992);
};
this._getState=function(){
return {mt:mt.slice(),mti:mti};
};
this._setState=function(_a09){
mt=_a09.mt;
mti=_a09.mti;
};
};
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Random");
goog.require("MochiKit.Base");
goog.require("MochiKit._MersenneTwister19937");
}
MochiKit.Base.module(MochiKit,"Random","1.5",["Base","_MersenneTwister19937"]);
MochiKit.Random.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
MochiKit.Random._generator.seed(x);
};
MochiKit.Random.getState=function(){
return MochiKit.Random._generator.getState();
};
MochiKit.Random.setState=function(_a0b){
MochiKit.Random._generator.setState(_a0b);
};
MochiKit.Random.random=function(){
return MochiKit.Random._generator.random();
};
MochiKit.Random.randRange=function(_a0c,_a0d,step){
var self=MochiKit.Random;
if(arguments.length==1){
_a0d=_a0c;
_a0c=0;
}
step=step||1;
var _a10=_a0d-_a0c;
if(step==1&&_a10>0){
return Math.floor(_a0c+Math.floor(self.random()*_a10));
}
if(step>0){
var n=Math.floor((_a10+step-1)/step);
}else{
if(step<0){
var n=Math.floor((_a10+step+1)/step);
}
}
return _a0c+step*Math.floor(self.random()*n);
};
MochiKit.Random.uniform=function(a,b){
return a+(b-a)*MochiKit.Random.random();
};
MochiKit.Random.shuffle=function(_a14){
for(var i=_a14.length-1;i>0;--i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
var tmp=_a14[i];
_a14[i]=_a14[j];
_a14[j]=tmp;
}
return _a14;
};
MochiKit.Random.deal=function(_a18,func){
func=func||MochiKit.Base.operator.identity;
var deck=new Array(_a18);
for(var i=0;i<_a18;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
deck[i]=deck[j];
deck[j]=func(i);
}
return deck;
};
MochiKit.Random.choice=function(seq){
return seq[Math.floor(MochiKit.Random.random()*seq.length)];
};
MochiKit.Random.shuffled=function(_a1e){
var n=_a1e.length;
var a=new Array(n);
a[0]=_a1e[0];
for(var i=1;i<n-1;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
a[i]=a[j];
a[j]=_a1e[i];
}
return a;
};
MochiKit.Random.sample=function(_a23,k){
var n=_a23.length;
var _a26=new Array(k);
var _a27={};
for(var i=0;i<k;++i){
var j=MochiKit.Random.randRange(n);
while(j in _a27){
j=MochiKit.Random.randRange(n);
}
_a27[j]=true;
_a26[i]=_a23[j];
}
return _a26;
};
MochiKit.Random._IRndGenerator=function(){
};
MochiKit.Random._IRndGenerator.prototype.seed=function(x){
};
MochiKit.Random._IRndGenerator.prototype.getState=function(){
};
MochiKit.Random._IRndGenerator.prototype.setState=function(_a2b){
};
MochiKit.Random._IRndGenerator.prototype.random=function(){
};
MochiKit.Random.MersenneTwister=function(x){
this._mt=new MochiKit._MersenneTwister19937();
this.seed(x);
};
MochiKit.Random.MersenneTwister.prototype.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
this._mt.init_genrand(x);
};
MochiKit.Random.MersenneTwister.prototype.getState=function(){
return this._mt._getState();
};
MochiKit.Random.MersenneTwister.prototype.setState=function(_a2e){
this._mt._setState(_a2e);
};
MochiKit.Random.MersenneTwister.prototype.random=function(){
return this._mt.genrand_real2();
};
MochiKit.Random.SystemRandom=function(){
};
MochiKit.Random.SystemRandom.prototype.seed=function(x){
};
MochiKit.Random.SystemRandom.prototype.getState=function(){
};
MochiKit.Random.SystemRandom.prototype.setState=function(_a30){
};
MochiKit.Random.SystemRandom.prototype.random=function(){
return Math.random();
};
MochiKit.Random._generator=null;
MochiKit.Random._setGenerator=function(_a31){
MochiKit.Random._generator=_a31;
};
MochiKit.Random.__new__=function(){
MochiKit.Random._setGenerator(new MochiKit.Random.MersenneTwister());
};
MochiKit.Random.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Random);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Bisect");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Bisect","1.5",["Base"]);
MochiKit.Bisect.bisectRight=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(x,a[mid])<0){
hi=mid;
}else{
lo=mid+1;
}
}
return lo;
};
MochiKit.Bisect.insortRight=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectRight(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisectLeft=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(a[mid],x)<0){
lo=mid+1;
}else{
hi=mid;
}
}
return lo;
};
MochiKit.Bisect.insortLeft=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectLeft(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisect=MochiKit.Bisect.bisectRight;
MochiKit.Bisect.insort=MochiKit.Bisect.insortRight;
MochiKit.Bisect.__new__=function(){
};
MochiKit.Bisect.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Bisect);


