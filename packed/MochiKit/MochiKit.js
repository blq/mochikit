/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base");
}
if(typeof MochiKit=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
MochiKit.NAME="MochiKit";
MochiKit.VERSION="1.5";
MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.Base=MochiKit.Base||{};
MochiKit.Base.module=function(_1,_2,_3,_4){
var _5=_1[_2]=_1[_2]||{};
var _6=(_1.NAME?_1.NAME+".":"");
_5.NAME=_6+_2;
_5.VERSION=_3;
_5.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_5.toString=function(){
return this.__repr__();
};
for(var i=0;_4!=null&&i<_4.length;i++){
if(!(_4[i] in _1)){
throw _5.NAME+" depends on "+_6+_4[i]+"!";
}
}
return _5;
};
MochiKit.Base.module(MochiKit,"Base","1.5",[]);
MochiKit.Base.update=function(_8,_9,_a){
if(_8===null||_8===undefined){
_8={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_8[k]=o[k];
}
}
}
return _8;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_e){
var _f=_e.split("-");
var cc=_f[0];
for(var i=1;i<_f.length;i++){
cc+=_f[i].charAt(0).toUpperCase()+_f[i].substring(1);
}
return cc;
},counter:function(n,_13){
if(arguments.length===0){
n=1;
}
if(arguments.length<2){
_13=1;
}
return function(){
var c=n;
n+=_13;
return c;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst,_1d){
var res=[];
var m=MochiKit.Base;
var _20=m.extend(null,arguments);
while(_20.length){
var o=_20.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_20.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_23,obj,_25){
if(!_25){
_25=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_23){
_23=[];
}
for(var i=_25;i<l;i++){
_23.push(obj[i]);
}
}
return _23;
},updatetree:function(_28,obj){
if(_28===null||_28===undefined){
_28={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_28[k])=="object"&&typeof (v)=="object"&&!MochiKit.Base.isDateLike(v)&&!(v instanceof Array)){
arguments.callee(_28[k],v);
}else{
_28[k]=v;
}
}
}
}
return _28;
},setdefault:function(_2e,obj,_30){
if(_2e===null||_2e===undefined){
_2e={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _2e)){
_2e[k]=o[k];
}
}
}
return _2e;
},keys:function(obj){
var _35=[];
for(var _36 in obj){
_35.push(_36);
}
return _35;
},values:function(obj){
var _38=[];
for(var _39 in obj){
_38.push(obj[_39]);
}
return _38;
},items:function(obj){
var _3b=[];
for(var _3c in obj){
var v;
try{
v=obj[_3c];
}
catch(e){
continue;
}
_3b.push([_3c,v]);
}
return _3b;
},_newNamedError:function(_3e,_3f,_40){
_40.prototype=new MochiKit.Base.NamedError(_3e.NAME+"."+_3f);
_40.prototype.constructor=_40;
_3e[_3f]=_40;
},operator:{NAME:"operator",truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},floordiv:function(a,b){
return Math.floor(a/b);
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},pow:function(a,b){
return Math.pow(a,b);
},divmod:function(a,b){
return [a/b,a%b];
},max:function(a,b){
return Math.max(a,b);
},min:function(a,b){
return Math.min(a,b);
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},getitem:function(a,b){
return a[b];
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
},concat:function(a,b){
return MochiKit.Base.concat(a,b);
},iconcat:function(a,b){
return a.concat(b);
},setitem:function(a,b,c){
return a[b]=c;
},delitem:function(a,b){
delete a[b];
}},forwardCall:function(_93){
return function(){
return this[_93].apply(this,arguments);
};
},itemgetter:function(_94){
return function(arg){
return arg[_94];
};
},bool:function(_96){
if(typeof (_96)==="boolean"||_96 instanceof Boolean){
return _96.valueOf();
}else{
if(typeof (_96)==="string"||_96 instanceof String){
return _96.length>0&&_96!="false"&&_96!="null"&&_96!="undefined"&&_96!="0";
}else{
if(typeof (_96)==="number"||_96 instanceof Number){
return !isNaN(_96)&&_96!=0;
}else{
if(_96!=null&&typeof (_96.length)==="number"){
return _96.length!==0;
}else{
return _96!=null;
}
}
}
}
},typeMatcher:function(){
var _97={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_97[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _97)){
return false;
}
}
return true;
};
},isNull:function(obj,_9c){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(obj,_9f){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj,_a3){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj,_a5){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(arr,_a9){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(_ad,_ae){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn,obj,_b3){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _b4=[];
for(var i=1;i<arguments.length;i++){
_b4.push(fn(arguments[i]));
}
return _b4;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _ba=m.isArrayLike;
if(arguments.length<=2){
if(!_ba(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _bb=[];
for(var i=0;i<lst.length;i++){
_bb.push(fn(lst[i]));
}
return _bb;
}else{
if(fn===null){
fn=Array;
}
var _bd=null;
for(var i=1;i<arguments.length;i++){
if(!_ba(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_bd===null||_bd>l){
_bd=l;
}
}
_bb=[];
for(var i=0;i<_bd;i++){
var _bf=[];
for(var j=1;j<arguments.length;j++){
_bf.push(arguments[j][i]);
}
_bb.push(fn.apply(this,_bf));
}
return _bb;
}
},xfilter:function(fn,obj,_c3){
var _c4=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_c4.push(o);
}
}
return _c4;
},filter:function(fn,lst,_c9){
var _ca=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_c9);
}else{
if(typeof (_c9)=="undefined"||_c9===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_ca.push(o);
}
}
}else{
for(var i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_c9,o)){
_ca.push(o);
}
}
}
}
return _ca;
},_wrapDumbFunction:function(_ce){
return function(){
switch(arguments.length){
case 0:
return _ce();
case 1:
return _ce(arguments[0]);
case 2:
return _ce(arguments[0],arguments[1]);
case 3:
return _ce(arguments[0],arguments[1],arguments[2]);
}
var _cf=[];
for(var i=0;i<arguments.length;i++){
_cf.push("arguments["+i+"]");
}
return eval("(func("+_cf.join(",")+"))");
};
},methodcaller:function(_d1,_d2){
var _d3=MochiKit.Base.extend(null,arguments,1);
if(typeof (_d1)=="function"){
return function(obj){
return _d1.apply(obj,_d3);
};
}else{
return function(obj){
return obj[_d1].apply(obj,_d3);
};
}
},method:function(_d6,_d7){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_d7,_d6],arguments,2));
},compose:function(f1,f2,_db){
var _dc=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_dc.push(fn);
}
return function(){
var _e0=arguments;
for(var i=_dc.length-1;i>=0;i--){
_e0=[_dc[i].apply(this,_e0)];
}
return _e0[0];
};
},bind:function(_e2,_e3,_e4){
if(typeof (_e2)=="string"){
_e2=_e3[_e2];
}
var _e5=_e2.im_func;
var _e6=_e2.im_preargs;
var _e7=_e2.im_self;
var m=MochiKit.Base;
if(typeof (_e2)=="function"&&typeof (_e2.apply)=="undefined"){
_e2=m._wrapDumbFunction(_e2);
}
if(typeof (_e5)!="function"){
_e5=_e2;
}
if(typeof (_e3)!="undefined"){
_e7=_e3;
}
if(typeof (_e6)=="undefined"){
_e6=[];
}else{
_e6=_e6.slice();
}
m.extend(_e6,arguments,2);
var _e9=function(){
var _ea=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_ea=m.concat(me.im_preargs,_ea);
}
var _ec=me.im_self;
if(!_ec){
_ec=this;
}
return me.im_func.apply(_ec,_ea);
};
_e9.im_self=_e7;
_e9.im_func=_e5;
_e9.im_preargs=_e6;
if(typeof (_e5.NAME)=="string"){
_e9.NAME="bind("+_e5.NAME+",...)";
}
return _e9;
},bindLate:function(_ed,_ee){
var m=MochiKit.Base;
var _f0=arguments;
if(typeof (_ed)==="string"){
_f0=m.extend([m.forwardCall(_ed)],arguments,1);
return m.bind.apply(this,_f0);
}
return m.bind.apply(this,_f0);
},bindMethods:function(_f1){
var _f2=MochiKit.Base.bind;
for(var k in _f1){
var _f4=_f1[k];
if(typeof (_f4)=="function"){
_f1[k]=_f2(_f4,_f1);
}
}
return _f1;
},registerComparator:function(_f5,_f6,_f7,_f8){
MochiKit.Base.comparatorRegistry.register(_f5,_f6,_f7,_f8);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _fb=(typeof (a)=="undefined"||a===null);
var _fc=(typeof (b)=="undefined"||b===null);
if(_fb&&_fc){
return 0;
}else{
if(_fb){
return -1;
}else{
if(_fc){
return 1;
}
}
}
var m=MochiKit.Base;
var _fe=m._primitives;
if(!(typeof (a) in _fe&&typeof (b) in _fe)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _ff=m.repr;
throw new TypeError(_ff(a)+" and "+_ff(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _104=MochiKit.Base.compare;
var _105=a.length;
var rval=0;
if(_105>b.length){
rval=1;
_105=b.length;
}else{
if(_105<b.length){
rval=-1;
}
}
for(var i=0;i<_105;i++){
var cmp=_104(a[i],b[i]);
if(cmp){
return cmp;
}
}
return rval;
},registerRepr:function(name,_10a,wrap,_10c){
MochiKit.Base.reprRegistry.register(name,_10a,wrap,_10c);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
try{
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
catch(ignore){
}
}
try{
var _10e=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_10e=_10e.replace(/^\s+/,"").replace(/\s+/g," ");
_10e=_10e.replace(/,(\S)/,", $1");
var idx=_10e.indexOf("{");
if(idx!=-1){
_10e=_10e.substr(0,idx)+"{...}";
}
}
return _10e;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(name,_115,wrap,_117){
MochiKit.Base.jsonRegistry.register(name,_115,wrap,_117);
},evalJSON:function(_118){
return eval("("+MochiKit.Base._filterJSON(_118)+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
return (m)?m[1]:s;
},serializeJSON:function(o){
var _11c=typeof (o);
if(_11c=="number"||_11c=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_11c=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _122;
if(typeof (o.toJSON)=="function"){
_122=o.toJSON();
if(o!==_122){
return me(_122);
}
}
if(typeof (o.__json__)=="function"){
_122=o.__json__();
if(o!==_122){
return me(_122);
}
}
if(typeof (o.json)=="function"){
_122=o.json();
if(o!==_122){
return me(_122);
}
}
if(_11c!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_122=m.jsonRegistry.match(o);
if(o!==_122){
return me(_122);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_11c=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_11c=="function"){
return null;
}
res=[];
for(var k in o){
if(o.hasOwnProperty(k)){
var _126;
if(typeof (k)=="number"){
_126="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_126=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_126+":"+val);
}
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(self,arr){
if(self.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(self,arr)===0);
},concat:function(lst,_12c){
var rval=[];
var _12e=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_12e(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _132=m.compare;
if(arguments.length==1){
return function(a,b){
return _132(a[key],b[key]);
};
}
var _135=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_135.length);i++){
var key=_135[i];
rval=_132(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _13c=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _13c(b,a);
};
},partial:function(func,_140){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_142,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _145=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_145(o,cur)==_142){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_149,_14a,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_14a)=="undefined"||_14a===null){
_14a=0;
}
for(var i=_14a;i<end;i++){
if(lst[i]===_149){
return i;
}
}
return -1;
},mean:function(val,_14e){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _152=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_152+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_152<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_152;
},median:function(val,_156){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(MochiKit.Base.compare);
if(data.length%2==0){
var _158=data.length/2;
return (data[_158]+data[_158-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_15a,_15b,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_15b)=="undefined"||_15b===null){
_15b=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_15b;i<end;i++){
if(cmp(lst[i],_15a)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_160){
var _161=[node];
var _162=MochiKit.Base.extend;
while(_161.length){
var res=_160(_161.shift());
if(res){
_162(_161,res);
}
}
},nameFunctions:function(_164){
var base=_164.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _164){
var o=_164[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_168,_169){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_168)=="string"||(typeof (_168.nodeType)!="undefined"&&_168.nodeType>0))){
var kv=MochiKit.DOM.formContents(_168);
_168=kv[0];
_169=kv[1];
}else{
if(arguments.length==1){
if(typeof (_168.length)=="number"&&_168.length==2){
return arguments.callee(_168[0],_168[1]);
}
var o=_168;
_168=[];
_169=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_168.push(k);
_169.push(v[i]);
}
}else{
_168.push(k);
_169.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_168.length,_169.length);
var _171=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_169[i];
if(typeof (v)!="undefined"&&v!==null){
if(MochiKit.Base.isDateLike(v)){
v=MochiKit.DateTime.toISOTimestamp(v,true);
}
rval.push(_171(_168[i])+"="+_171(v));
}
}
return rval.join("&");
},parseQueryString:function(_172,_173){
var qstr=(_172.charAt(0)=="?")?_172.substring(1):_172;
var _175=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _177;
if(typeof (decodeURIComponent)!="undefined"){
_177=decodeURIComponent;
}else{
_177=unescape;
}
if(_173){
for(var i=0;i<_175.length;i++){
var pair=_175[i].split("=");
var name=_177(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_177(pair.join("=")));
}
}else{
for(var i=0;i<_175.length;i++){
pair=_175[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_177(name)]=_177(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_17d,wrap,_17f){
if(_17f){
this.pairs.unshift([name,_17d,wrap]);
}else{
this.pairs.push([name,_17d,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.moduleExport=function(_185,_186){
var SKIP={toString:true,NAME:true,VERSION:true};
var mods=MochiKit.Base.extend([],arguments,1);
while((_186=mods.shift())!=null){
for(var k in _186){
var v=_186[k];
if(v!=null){
var _18b=(typeof (v.__export__)=="boolean");
var _18c=(k[0]!=="_"&&!SKIP[k]);
if(_18b?v.__export__:_18c){
if(typeof (v)=="object"&&v.NAME&&v.VERSION){
mods.push(v);
}else{
_185[k]=_186[k];
}
}
}
}
}
return _185;
};
MochiKit.Base._exportSymbols=function(_18d,_18e){
if(MochiKit.__export__!==false&&_18e.__export__!==false){
MochiKit.Base.moduleExport(_18d,_18e);
}
};
MochiKit.Base._deprecated=function(_18f,name,_191,_192,_193){
if(typeof (_18f)==="string"){
if(_18f.indexOf("MochiKit.")===0){
_18f=_18f.substring(9);
}
_18f=MochiKit[_18f];
}
var _194=_191.split(".")[1];
var _195=_191.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_18f.NAME+"."+name+" is deprecated since version "+_192+". Use "+_191+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_194]){
throw new Error(msg);
}
return MochiKit[_194][_195].apply(this,arguments);
};
func.__export__=(_193===true);
_18f[name]=func;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=function(){
};
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3");
m._deprecated(m,"find","MochiKit.Base.findValue","1.3");
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_19a){
return encodeURIComponent(_19a).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_19b){
return escape(_19b).replace(/\+/g,"%2B").replace(/\"/g,"%22").replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.NamedError.prototype.constructor=m.NamedError;
m.NamedError.prototype.repr=function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
};
m.NamedError.prototype.toString=m.forwardCall("repr");
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.isValue=m.typeMatcher("boolean","number","string");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
m.nameFunctions(this.operator);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
window.compare=MochiKit.Base.compare;
window.compose=MochiKit.Base.compose;
window.serializeJSON=MochiKit.Base.serializeJSON;
window.mean=MochiKit.Base.mean;
window.median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Iter","1.5",["Base"]);
MochiKit.Base.update(MochiKit.Iter,{registerIteratorFactory:function(name,_19e,_19f,_1a0){
MochiKit.Iter.iteratorRegistry.register(name,_19e,_19f,_1a0);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_1a2,_1a3){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_1a3;
},_1a2);
}
if(typeof (_1a2.next)=="function"){
return _1a2;
}else{
if(typeof (_1a2.iter)=="function"){
return _1a2.iter();
}else{
if(typeof (_1a2.__iterator__)=="function"){
return _1a2.__iterator__(false);
}
}
}
try{
return self.iteratorRegistry.match(_1a2);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_1a2)+": "+m.repr(_1a2)+" is not iterable");
}
throw e;
}
},count:function(n,step){
if(!n){
n=0;
}
if(arguments.length<2){
step=1;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n,step)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _1ae=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_1ae.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_1b4){
return _1b4.next();
},izip:function(p,_1b6){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _1ba=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_1ba);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _1c6=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_1c6=arguments[1];
stop=arguments[2];
}else{
_1c6=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_1c6,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
if(_1c6>=stop){
throw self.StopIteration;
}
var rval;
while(i<_1c6){
rval=seq.next();
i++;
}
_1c6+=step;
return rval;
}};
},imap:function(fun,p,_1cd){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _1d0=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_1d0));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,_1d8){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1db=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1db.length>1){
try{
return _1db[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1db.shift();
}
}
if(_1db.length==1){
var arg=_1db.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1e6,sync,_1e8){
sync.pos[_1e6]=-1;
var m=MochiKit.Base;
var _1ea=m.listMin;
return {repr:function(){
return "tee("+_1e6+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1e6];
if(i==sync.max){
rval=_1e8.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1e6]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1e6]+=1;
if(i==sync.min&&_1ea(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1ed,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1ed=self.iter(_1ed);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1ed));
}
return rval;
},list:function(_1f4){
var rval;
if(_1f4 instanceof Array){
return _1f4.slice();
}
if(typeof (_1f4)=="function"&&!(_1f4 instanceof Function)&&typeof (_1f4.length)=="number"){
rval=[];
for(var i=0;i<_1f4.length;i++){
rval.push(_1f4[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1f4=self.iter(_1f4);
rval=[];
var _1f8;
try{
while(true){
_1f8=_1f4.next();
rval.push(_1f8);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1fa,_1fb){
var x=_1fb;
var self=MochiKit.Iter;
_1fa=self.iter(_1fa);
if(arguments.length<3){
try{
x=_1fa.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
}
try{
while(true){
x=fn(x,_1fa.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1fe=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1fe=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1fe=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1fe>=stop)||(step<0&&_1fe<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1fe;
_1fe+=step;
return rval;
},repr:function(){
return "range("+[_1fe,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_202,_203){
if(typeof (_203)=="undefined"||_203===null){
_203=0;
}
var x=_203;
var self=MochiKit.Iter;
_202=self.iter(_202);
try{
while(true){
x+=_202.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_206){
var self=MochiKit.Iter;
_206=self.iter(_206);
try{
while(true){
_206.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_208,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_208)&&!self.isIterable(_208)){
try{
for(var i=0;i<_208.length;i++){
func(_208[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_208));
}
return func;
},every:function(_20e,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_20e).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_211,cmp){
var rval=MochiKit.Iter.list(_211);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_214){
var rval=MochiKit.Iter.list(_214);
rval.reverse();
return rval;
},some:function(_216,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_216).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_21a,skip){
skip=skip||0;
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_21a)&&!self.isIterable(_21a)){
for(var i=skip;i<_21a.length;i++){
lst.push(_21a[i]);
}
}else{
_21a=self.iter(_21a);
try{
while(skip-->0){
_21a.next();
}
while(true){
lst.push(_21a.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_21f,_220){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_220=m.operator.identity;
}
_21f=self.iter(_21f);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_21f.next();
k=_220(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _227=true;
var _228=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_228(k,pk)===0){
fetch();
if(_227){
_227=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_228(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_229,_22a){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_22a=m.operator.identity;
}
_229=self.iter(_229);
var _22d=[];
var _22e=true;
var _22f;
var _230=m.compare;
while(true){
try{
var _231=_229.next();
var key=_22a(_231);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_22e||_230(key,_22f)!==0){
var _233=[];
_22d.push([key,_233]);
}
_233.push(_231);
_22e=false;
_22f=key;
}
return _22d;
},arrayLikeIter:function(_234){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_234.length){
throw MochiKit.Iter.StopIteration;
}
return _234[i++];
}};
},hasIterateNext:function(_236){
return (_236&&typeof (_236.iterateNext)=="function");
},iterateNextIter:function(_237){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_237.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
MochiKit.Iter.StopIteration=StopIteration;
}else{
MochiKit.Iter.StopIteration=new m.NamedError("StopIteration");
}
MochiKit.Iter.iteratorRegistry=new m.AdapterRegistry();
MochiKit.Iter.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
MochiKit.Iter.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
window.reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Logging");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_23b,info){
this.num=num;
this.level=_23b;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_23e){
var self=MochiKit.Logging;
if(typeof (_23e)=="string"){
_23e=self.LogLevel[_23e];
}
return function(msg){
var _241=msg.level;
if(typeof (_241)=="string"){
_241=self.LogLevel[_241];
}
return _241>=_23e;
};
},isLogMessage:function(_242){
var _243=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _243)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_248){
this.counter=0;
if(typeof (_248)=="undefined"||_248===null){
_248=-1;
}
this.maxSize=_248;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(_249,msg){
msg=_249+": "+msg;
if(typeof (window)!="undefined"&&window.console&&window.console.log){
var _24b=null;
switch(_249){
case "INFO":
_24b=typeof window.console.info=="function"?"info":null;
break;
case "DEBUG":
_24b=typeof window.console.debug=="function"?"debug":null;
break;
case "WARNING":
_24b=typeof window.console.warn=="function"?"warn":null;
break;
case "ERROR":
_24b=typeof window.console.error=="function"?"error":null;
break;
case "FATAL":
_24b=typeof window.console.error=="function"?"error":null;
break;
}
_24b=_24b||"log";
window.console[_24b](msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_24f,_250,_251){
if(typeof (_250)=="string"){
_250=MochiKit.Logging.logLevelAtLeast(_250);
}
var _252=[_250,_251];
_252.ident=_24f;
this.listeners[_24f]=_252;
},removeListener:function(_253){
delete this.listeners[_253];
},baseLog:function(_254,_255,_256){
if(typeof (_254)=="number"){
if(_254>=MochiKit.Logging.LogLevel.FATAL){
_254="FATAL";
}else{
if(_254>=MochiKit.Logging.LogLevel.ERROR){
_254="ERROR";
}else{
if(_254>=MochiKit.Logging.LogLevel.WARNING){
_254="WARNING";
}else{
if(_254>=MochiKit.Logging.LogLevel.INFO){
_254="INFO";
}else{
_254="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_254,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level,msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_258){
var _259=0;
if(!(typeof (_258)=="undefined"||_258===null)){
_259=Math.max(0,this._messages.length-_258);
}
return this._messages.slice(_259);
},getMessageText:function(_25a){
if(typeof (_25a)=="undefined"||_25a===null){
_25a=30;
}
var _25b=this.getMessages(_25a);
if(_25b.length){
var lst=MochiKit.Base.map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_25b);
lst.unshift("LAST "+_25b.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_25e){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_25e||false);
}
}};
MochiKit.Logging.__new__=function(){
MochiKit.Logging.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _260=m.partial;
var _261=this.Logger;
var _262=_261.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_260(_262,"DEBUG"),log:_260(_262,"INFO"),error:_260(_262,"ERROR"),fatal:_260(_262,"FATAL"),warning:_260(_262,"WARNING")});
var self=this;
var _264=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
MochiKit.Logging.log=_264("log");
MochiKit.Logging.logError=_264("error");
MochiKit.Logging.logDebug=_264("debug");
MochiKit.Logging.logFatal=_264("fatal");
MochiKit.Logging.logWarning=_264("warning");
this.logger=new _261();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DateTime");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var y=parseInt(iso[0],10),m=parseInt(iso[1],10)-1,d=parseInt(iso[2],10);
var date=new Date(y,m,d);
date.setFullYear(y);
date.setMonth(m);
date.setDate(d);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_26f,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_26f=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_26f,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_26f,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_26f,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_277){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _278=MochiKit.DateTime._padTwo;
if(_277){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
var lst=[(_277?_278(date.getHours()):""+date.getHours()),_278(date.getMinutes()),_278(date.getSeconds())];
return lst.join(":")+(_277?"Z":"");
};
MochiKit.DateTime.toISOTimestamp=function(date,_27b){
if(typeof (date)=="undefined"||date===null){
return null;
}
var time=MochiKit.DateTime.toISOTime(date,_27b);
var sep=_27b?"T":" ";
if(_27b){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+time;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _27f=MochiKit.DateTime._padTwo;
var _280=MochiKit.DateTime._padFour;
return [_280(date.getFullYear()),_27f(date.getMonth()+1),_27f(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?""+n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return ""+n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _286=MochiKit.DateTime._padTwo;
return [_286(d.getMonth()+1),_286(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Format");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_288,_289,_28a,_28b,_28c,_28d,_28e,_28f,_290){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _288;
}
var _292=_289;
var _293=_28a;
if(num<0){
num=-num;
}else{
_292=_292.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_28b);
if(_28c){
num=num*100;
_293=fmt.percent+_293;
}
num=MochiKit.Format.roundToFixed(num,_28d);
var _296=num.split(/\./);
var _297=_296[0];
var frac=(_296.length==1)?"":_296[1];
var res="";
while(_297.length<_28e){
_297="0"+_297;
}
if(_28f){
while(_297.length>_28f){
var i=_297.length-_28f;
res=fmt.separator+_297.substring(i,_297.length)+res;
_297=_297.substring(0,i);
}
}
res=_297+res;
if(_28d>0){
while(frac.length<_290){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _292+res+_293;
};
};
MochiKit.Format.numberFormatter=function(_29b,_29c,_29d){
if(typeof (_29c)=="undefined"){
_29c="";
}
var _29e=_29b.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_29e){
throw TypeError("Invalid pattern");
}
var _29f=_29b.substr(0,_29e.index);
var _2a0=_29b.substr(_29e.index+_29e[0].length);
if(_29f.search(/-/)==-1){
_29f=_29f+"-";
}
var _2a1=_29e[1];
var frac=(typeof (_29e[2])=="string"&&_29e[2]!="")?_29e[2]:"";
var _2a3=(typeof (_29e[3])=="string"&&_29e[3]!="");
var tmp=_2a1.split(/,/);
var _2a5;
if(typeof (_29d)=="undefined"){
_29d="default";
}
if(tmp.length==1){
_2a5=null;
}else{
_2a5=tmp[1].length;
}
var _2a6=_2a1.length-_2a1.replace(/0/g,"").length;
var _2a7=frac.length-frac.replace(/0/g,"").length;
var _2a8=frac.length;
var rval=MochiKit.Format._numberFormatter(_29c,_29f,_2a0,_29d,_2a3,_2a8,_2a6,_2a5,_2a7);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",m.map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_2ad){
if(typeof (_2ad)=="undefined"||_2ad===null){
_2ad="default";
}
if(typeof (_2ad)=="string"){
var rval=MochiKit.Format.LOCALE[_2ad];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_2ad]=rval;
}
return rval;
}else{
return _2ad;
}
};
MochiKit.Format.twoDigitAverage=function(_2af,_2b0){
if(_2b0){
var res=_2af/_2b0;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_2b2){
var res=MochiKit.Format.roundToFixed(_2b2,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_2b5){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2b5){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_2b5+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_2b7){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2b7){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_2b7+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_2b9){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_2b9),_2b9);
};
MochiKit.Format.truncToFixed=function(_2bb,_2bc){
var _2bd=MochiKit.Format._numberToFixed(_2bb,_2bc);
var _2be=_2bd.indexOf(".");
if(_2be>0&&_2be+_2bc+1<_2bd.length){
_2bd=_2bd.substring(0,_2be+_2bc+1);
_2bd=MochiKit.Format._shiftNumber(_2bd,0);
}
return _2bd;
};
MochiKit.Format.roundToFixed=function(_2bf,_2c0){
var _2c1=MochiKit.Format._numberToFixed(_2bf,_2c0);
var _2c2=_2c1.indexOf(".");
if(_2c2>0&&_2c2+_2c0+1<_2c1.length){
var str=MochiKit.Format._shiftNumber(_2c1,_2c0);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_2c1=MochiKit.Format._shiftNumber(str,-_2c0);
}
return _2c1;
};
MochiKit.Format._numberToFixed=function(_2c4,_2c5){
var str=_2c4.toString();
var _2c7=str.split(/[eE]/);
var exp=(_2c7.length===1)?0:parseInt(_2c7[1],10)||0;
var _2c9=MochiKit.Format._shiftNumber(_2c7[0],exp);
_2c7=_2c9.split(/\./);
var _2ca=_2c7[0];
var frac=(_2c7.length===1)?"":_2c7[1];
while(frac.length<_2c5){
frac+="0";
}
if(frac.length>0){
return _2ca+"."+frac;
}else{
return _2ca;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_2cf){
return MochiKit.Format.twoDigitFloat(100*_2cf)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text");
goog.require("MochiKit.Base");
goog.require("MochiKit.Format");
}
MochiKit.Base.module(MochiKit,"Text","1.5",["Base","Format"]);
MochiKit.Text.startsWith=function(_2d4,str){
return str!=null&&_2d4!=null&&str.indexOf(_2d4)==0;
};
MochiKit.Text.endsWith=function(_2d6,str){
return str!=null&&_2d6!=null&&str.lastIndexOf(_2d6)==Math.max(str.length-_2d6.length,0);
};
MochiKit.Text.contains=function(_2d8,str){
return str!=null&&_2d8!=null&&str.indexOf(_2d8)>=0;
};
MochiKit.Text.padLeft=function(str,_2db,_2dc){
str=str||"";
_2dc=_2dc||" ";
while(str.length<_2db){
str=_2dc+str;
}
return str;
};
MochiKit.Text.padRight=function(str,_2de,_2df){
str=str||"";
_2df=_2df||" ";
while(str.length<_2de){
str+=_2df;
}
return str;
};
MochiKit.Text.truncate=function(str,_2e1,tail){
if(str==null||str.length<=_2e1||_2e1<0){
return str;
}else{
if(tail!=null){
str=str.slice(0,Math.max(0,_2e1-tail.length));
if(typeof (str)=="string"){
return str+tail;
}else{
return MochiKit.Base.extend(str,tail);
}
}else{
return str.slice(0,_2e1);
}
}
};
MochiKit.Text.split=function(str,_2e4,max){
if(str==null){
return str;
}
_2e4=_2e4||"\n";
var bits=str.split(_2e4);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(max,bits.length,bits.slice(max,bits.length).join(_2e4));
return bits;
};
MochiKit.Text.rsplit=function(str,_2e8,max){
if(str==null){
return str;
}
_2e8=_2e8||"\n";
var bits=str.split(_2e8);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(0,bits.length-max,bits.slice(0,bits.length-max).join(_2e8));
return bits;
};
MochiKit.Text.formatter=function(_2eb,_2ec){
if(_2ec==null){
_2ec=MochiKit.Format.formatLocale();
}else{
if(typeof (_2ec)=="string"){
_2ec=MochiKit.Format.formatLocale(_2ec);
}
}
var _2ed=MochiKit.Text._parsePattern(_2eb);
return function(){
var _2ee=MochiKit.Base.extend([],arguments);
var res=[];
for(var i=0;i<_2ed.length;i++){
if(typeof (_2ed[i])=="string"){
res.push(_2ed[i]);
}else{
res.push(MochiKit.Text.formatValue(_2ed[i],_2ee,_2ec));
}
}
return res.join("");
};
};
MochiKit.Text.format=function(_2f1,_2f2){
var func=MochiKit.Text.formatter(_2f1);
return func.apply(this,MochiKit.Base.extend([],arguments,1));
};
MochiKit.Text.formatValue=function(spec,_2f5,_2f6){
var self=MochiKit.Text;
if(typeof (spec)==="string"){
spec=self._parseFormatFlags(spec,0,spec.length);
}
for(var i=0;spec.path!=null&&i<spec.path.length;i++){
if(_2f5!=null){
_2f5=_2f5[spec.path[i]];
}
}
if(_2f6==null){
_2f6=MochiKit.Format.formatLocale();
}else{
if(typeof (_2f6)=="string"){
_2f6=MochiKit.Format.formatLocale(_2f6);
}
}
var str="";
if(spec.type=="number"){
if(_2f5 instanceof Number){
_2f5=_2f5.valueOf();
}
if(typeof (_2f5)!="number"||isNaN(_2f5)){
str="";
}else{
if(_2f5===Number.POSITIVE_INFINITY){
str="\u221e";
}else{
if(_2f5===Number.NEGATIVE_INFINITY){
str="-\u221e";
}else{
var sign=(_2f5<0)?"-":spec.sign;
_2f5=Math.abs(_2f5);
if(spec.format==="%"){
str=self._truncToPercent(_2f5,spec.precision);
}else{
if(spec.format==="d"){
str=MochiKit.Format.roundToFixed(_2f5,0);
}else{
if(spec.radix!=10){
str=Math.floor(_2f5).toString(spec.radix);
if(spec.format==="x"){
str=str.toLowerCase();
}else{
if(spec.format==="X"){
str=str.toUpperCase();
}
}
}else{
if(spec.precision>=0){
str=MochiKit.Format.roundToFixed(_2f5,spec.precision);
}else{
str=_2f5.toString();
}
}
}
}
if(spec.padding==="0"&&spec.format==="%"){
str=self.padLeft(str,spec.width-sign.length-1,"0");
}else{
if(spec.padding=="0"){
str=self.padLeft(str,spec.width-sign.length,"0");
}
}
str=self._localizeNumber(str,_2f6,spec.group);
str=sign+str;
}
}
}
if(str!==""&&spec.format==="%"){
str=str+_2f6.percent;
}
}else{
if(spec.format=="r"){
str=MochiKit.Base.repr(_2f5);
}else{
str=(_2f5==null)?"":_2f5.toString();
}
str=self.truncate(str,spec.precision);
}
if(spec.align=="<"){
str=self.padRight(str,spec.width);
}else{
str=self.padLeft(str,spec.width);
}
return str;
};
MochiKit.Text._localizeNumber=function(num,_2fc,_2fd){
var _2fe=num.split(/\./);
var _2ff=_2fe[0];
var frac=(_2fe.length==1)?"":_2fe[1];
var res=(frac.length>0)?_2fc.decimal:"";
while(_2fd&&frac.length>3){
res=res+frac.substring(0,3)+_2fc.separator;
frac=frac.substring(3);
if(_2ff.charAt(0)=="0"){
_2ff=_2ff.substring(1);
}
}
if(frac.length>0){
res=res+frac;
}
while(_2fd&&_2ff.length>3){
var pos=_2ff.length-3;
res=_2fc.separator+_2ff.substring(pos)+res;
_2ff=_2ff.substring((_2ff.charAt(0)=="0")?1:0,pos);
}
return _2ff+res;
};
MochiKit.Text._parsePattern=function(_303){
var self=MochiKit.Text;
var _305=[];
var re=/{[^{}]*}|{{?|}}?/g;
var _307=re.lastIndex=0;
var m;
while((m=re.exec(_303))!=null){
if(_307<m.index){
_305.push(_303.substring(_307,m.index));
}
var str=m[0];
_307=m.index+str.length;
if(self.startsWith("{",str)&&self.endsWith("}",str)){
_305.push(self._parseFormat(_303,m.index+1,_307-1));
}else{
if(self.startsWith("{{",str)||self.startsWith("}}",str)){
_305.push(str.substring(1));
}else{
if(self.startsWith("{",str)){
var msg="unescaped { char, should be escaped as {{";
throw new self.FormatPatternError(_303,m.index,msg);
}else{
if(self.startsWith("}",str)){
var msg="unescaped } char, should be escaped as }}";
throw new self.FormatPatternError(_303,m.index,msg);
}
}
}
}
}
if(_307<_303.length){
_305.push(_303.substring(_307));
}
return _305;
};
MochiKit.Text._parseFormat=function(_30b,_30c,_30d){
var self=MochiKit.Text;
var text=_30b.substring(_30c,_30d);
var _310=self.split(text,":",1);
var path=_310[0];
var _312=_30c+path.length+((_310.length==1)?0:1);
var info=self._parseFormatFlags(_30b,_312,_30d);
info.path=(path=="")?[]:path.split(".");
for(var i=0;i<info.path.length;i++){
var v=info.path[i];
v=v.replace(/^\s+/,"").replace(/\s+$/,"");
if(v==""&&info.path.length==1){
v=0;
}else{
if(v==""){
var msg="format value path contains blanks";
throw new self.FormatPatternError(_30b,_30c,msg);
}else{
if(/^\d+$/.test(v)){
v=parseInt(v,10);
}
}
}
info.path[i]=v;
}
if(info.path.length<=0||typeof (info.path[0])!="number"){
info.path.unshift(0);
}
return info;
};
MochiKit.Text._parseFormatFlags=function(_317,_318,_319){
var _31a=MochiKit.Base.update;
var info={type:"string",format:"s",width:0,precision:-1,align:">",sign:"",padding:" ",group:false};
var text=_317.substring(_318,_319).replace(/\s+$/,"");
var m=/^([<>+ 0,-]+)?(\d+)?(\.\d*)?([srbdoxXf%])?(.*)$/.exec(text);
var _31e=m[1];
var _31f=m[2];
var _320=m[3];
var type=m[4];
var _322=m[5];
for(var i=0;_31e&&i<_31e.length;i++){
var chr=_31e.charAt(i);
if(chr=="<"||chr==">"){
info.align=chr;
}else{
if(chr=="+"||chr=="-"||chr==" "){
info.sign=(chr=="-")?"":chr;
}else{
if(chr=="0"){
info.padding=chr;
}else{
if(chr==","){
info.group=true;
}
}
}
}
}
if(_31f){
info.width=parseInt(_31f,10);
}
if(_320&&_320.length>1){
info.precision=parseInt(_320.substring(1),10);
}
if(type=="s"||type=="r"){
info.format=type;
}else{
if(type=="b"){
_31a(info,{type:"number",format:type,radix:2});
}else{
if(type=="o"){
_31a(info,{type:"number",format:type,radix:8});
}else{
if(type=="x"||type=="X"){
_31a(info,{type:"number",format:type,radix:16});
}else{
if(type=="d"||type=="f"||type=="%"){
_31a(info,{type:"number",format:type,radix:10});
}
}
}
}
}
if(_322){
var msg="unsupported format flag: "+_322.charAt(0);
throw new MochiKit.Text.FormatPatternError(_317,_318,msg);
}
return info;
};
MochiKit.Text._truncToPercent=function(_326,_327){
var str;
if(_327>=0){
str=MochiKit.Format.roundToFixed(_326,_327+2);
}else{
str=(_326==null)?"0":_326.toString();
}
var arr=MochiKit.Text.split(str,".",2);
var frac=MochiKit.Text.padRight(arr[1],2,"0");
var _32b=arr[0]+frac.substring(0,2);
frac=frac.substring(2);
while(/^0[0-9]/.test(_32b)){
_32b=_32b.substring(1);
}
return (frac.length<=0)?_32b:_32b+"."+frac;
};
MochiKit.Text.FormatPatternError=function(_32c,pos,_32e){
this.pattern=_32c;
this.pos=pos;
this.message=_32e;
};
MochiKit.Text.FormatPatternError.prototype=new MochiKit.Base.NamedError("MochiKit.Text.FormatPatternError");
MochiKit.Text.FormatPatternError.constructor=MochiKit.Text.FormatPatternError;
if(MochiKit.__export__){
window.formatter=MochiKit.Text.formatter;
window.format=MochiKit.Text.format;
window.formatValue=MochiKit.Text.formatValue;
}
MochiKit.Base.nameFunctions(MochiKit.Text);
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Async");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_32f){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_32f;
this.silentlyCancelled=false;
this.chained=false;
this.finalized=false;
};
MochiKit.Async.Deferred.prototype.repr=function(){
return "Deferred("+this.id+", "+this.state()+")";
};
MochiKit.Async.Deferred.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.Deferred.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.Deferred.prototype.state=function(){
if(this.fired==-1){
return "unfired";
}else{
if(this.fired===0){
return "success";
}else{
return "error";
}
}
};
MochiKit.Async.Deferred.prototype.cancel=function(e){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(typeof (e)==="string"){
e=new self.GenericError(e);
}else{
if(!(e instanceof Error)){
e=new self.CancelledError(this);
}
}
this.errback(e);
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel(e);
}
}
};
MochiKit.Async.Deferred.prototype._resback=function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
if(this.paused===0){
this._fire();
}
};
MochiKit.Async.Deferred.prototype._check=function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
}
};
MochiKit.Async.Deferred.prototype.callback=function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.errback=function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.addBoth=function(fn,_337){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
};
MochiKit.Async.Deferred.prototype.addCallback=function(fn,_339){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
};
MochiKit.Async.Deferred.prototype.addErrback=function(fn,_33b){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
};
MochiKit.Async.Deferred.prototype.addCallbacks=function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype.setFinalizer=function(fn){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
this._finalizer=fn;
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype._fire=function(){
var _33f=this.chain;
var _340=this.fired;
var res=this.results[_340];
var self=this;
var cb=null;
while(_33f.length>0&&this.paused===0){
var pair=_33f.shift();
var f=pair[_340];
if(f===null){
continue;
}
try{
var ret=f(res);
if(ret!==undefined){
res=ret;
}
_340=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self.paused--;
self._resback(res);
};
this.paused++;
}
}
catch(err){
_340=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_340;
this.results[_340]=res;
if(this.chain.length==0&&this.paused===0&&this._finalizer){
this.finalized=true;
this._finalizer(res);
}
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_349){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_34b){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _34e=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_34e.length;i++){
var func=_34e[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e2){
}
}
var _353=null;
try{
_353=this.status;
if(!_353&&m.isNotEmpty(this.responseText)){
_353=304;
}
}
catch(e){
}
if(_353==200||_353==201||_353==204||_353==304||_353==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e2){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_357){
if(typeof (_357)=="undefined"||_357===null){
_357="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_357);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:"",async:true},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,opts.async,opts.username,opts.password);
}else{
req.open(opts.method,url,opts.async);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _361=opts.headers;
if(!m.isArrayLike(_361)){
_361=m.items(_361);
}
for(var i=0;i<_361.length;i++){
var _363=_361[i];
var name=_363[0];
var _365=_363[1];
req.setRequestHeader(name,_365);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url,_367){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},loadScript:function(url){
var d=new MochiKit.Async.Deferred();
var _371=document.createElement("script");
_371.type="text/javascript";
_371.src=url;
_371.onload=function(){
_371.onload=null;
_371.onerror=null;
_371.onreadystatechange=null;
_371=null;
d.callback();
};
_371.onerror=function(msg){
_371.onload=null;
_371.onerror=null;
_371.onreadystatechange=null;
_371=null;
msg="Failed to load script at "+url+": "+msg;
d.errback(new URIError(msg,url));
};
_371.onreadystatechange=function(){
if(_371.readyState=="loaded"||_371.readyState=="complete"){
_371.onload();
}else{
MochiKit.Async.callLater(10,_371.onerror,"Script loading timed out");
}
};
document.getElementsByTagName("head")[0].appendChild(_371);
return d;
},wait:function(_373,_374){
var d=new MochiKit.Async.Deferred();
var cb=MochiKit.Base.bind("callback",d,_374);
var _377=setTimeout(cb,Math.floor(_373*1000));
d.canceller=function(){
try{
clearTimeout(_377);
}
catch(e){
}
};
return d;
},callLater:function(_378,func,_37a){
var m=MochiKit.Base;
var _37c=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_378).addCallback(function(res){
return _37c();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype.__class__=MochiKit.Async.DeferredLock;
MochiKit.Async.DeferredLock.prototype.acquire=function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
};
MochiKit.Async.DeferredLock.prototype.release=function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
};
MochiKit.Async.DeferredLock.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.DeferredLock.prototype.repr=function(){
var _37f;
if(this.locked){
_37f="locked, "+this.waiting.length+" waiting";
}else{
_37f="unlocked";
}
return "DeferredLock("+this.id+", "+_37f+")";
};
MochiKit.Async.DeferredLock.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.DeferredList=function(list,_381,_382,_383,_384){
MochiKit.Async.Deferred.apply(this,[_384]);
this.list=list;
var _385=[];
this.resultList=_385;
this.finishedCount=0;
this.fireOnOneCallback=_381;
this.fireOnOneErrback=_382;
this.consumeErrors=_383;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_385.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_381){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype.constructor=MochiKit.Async.DeferredList;
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_389,_38a,_38b){
this.resultList[_389]=[_38a,_38b];
this.finishedCount+=1;
if(this.fired==-1){
if(_38a&&this.fireOnOneCallback){
this.callback([_389,_38b]);
}else{
if(!_38a&&this.fireOnOneErrback){
this.errback(_38b);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_38a&&this.consumeErrors){
_38b=null;
}
return _38b;
};
MochiKit.Async.gatherResults=function(_38c){
var d=new MochiKit.Async.DeferredList(_38c,false,true,false);
d.addCallback(function(_38e){
var ret=[];
for(var i=0;i<_38e.length;i++){
ret.push(_38e[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _393;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_393=r;
}else{
if(r instanceof Error){
_393=self.fail(r);
}else{
_393=self.succeed(r);
}
}
}
catch(e){
_393=self.fail(e);
}
return _393;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_397){
this.deferred=_397;
});
ne("CancelledError",function(_398){
this.deferred=_398;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DOM");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _3a0=self._document;
var _3a1=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_3a1;
self._document=_3a0;
throw e;
}
self._window=_3a1;
self._document=_3a0;
return rval;
},formContents:function(elem){
var _3a4=[];
var _3a5=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _3aa=elem.tagName.toUpperCase();
if(_3aa==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_3aa==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_3a4.push(name);
_3a5.push(v);
return null;
}
_3a4.push(name);
_3a5.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_3a4.push(name);
_3a5.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_3a4.push(name);
_3a5.push(v);
}
return null;
}
}
if(_3aa==="FORM"||_3aa==="P"||_3aa==="SPAN"||_3aa==="DIV"){
return elem.childNodes;
}
_3a4.push(name);
_3a5.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_3a4,_3a5];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _3b3=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_3b3;
throw e;
}
self._document=_3b3;
return rval;
},registerDOMConverter:function(name,_3b6,wrap,_3b8){
MochiKit.DOM.domConverters.register(name,_3b6,wrap,_3b8);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _3bf=im.repeat;
}
var map=m.map;
var _3c1=self.domConverters;
var _3c2=arguments.callee;
var _3c3=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _3c4=null;
try{
_3c4=iter(node);
}
catch(e){
}
if(_3c4){
return map(_3c2,_3c4,_3bf(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _3c2(n,ctx);
};
return map(func,node);
}
}
try{
node=_3c1.match(node,ctx);
continue;
}
catch(e){
if(e!=_3c3){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_3c8){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_3c8)=="string"){
_3c8=self.getElement(_3c8);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_3c8){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_3cc){
var o={};
o[attr]=_3cc;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3d1=self.attributeArray.renames[attr];
var _3d2=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_3d1){
return node[_3d1];
}
var _3d3=node.getAttribute(attr);
if(_3d3!=_3d2){
return _3d3;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3d7=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_3d7){
return node[_3d7];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_3d9){
var elem=node;
var self=MochiKit.DOM;
var base=MochiKit.Base;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_3d9){
if(self.attributeArray.compliant){
for(var k in _3d9){
var v=_3d9[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _3df=self.attributeArray.renames;
for(var k in _3d9){
v=_3d9[k];
var _3e0=_3df[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_3e0)=="string"){
elem[_3e0]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node,_3e2,_3e3){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3e6=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3e7=MochiKit.Base.concat;
while(_3e6.length){
var n=_3e6.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_3e6=_3e7(n,_3e6);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node,_3ea,_3eb){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3ee=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3ef=elem.parentNode;
var _3f0=MochiKit.Base.concat;
while(_3ee.length){
var n=_3ee.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_3ef.insertBefore(n,elem);
}else{
_3ee=_3f0(n,_3ee);
}
}
}
return _3ef;
},insertSiblingNodesAfter:function(node,_3f3,_3f4){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3f7=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_3f7);
}else{
return self.appendChildNodes(elem.parentNode,_3f7);
}
},replaceChildNodes:function(node,_3f9){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _3fc;
while((_3fc=elem.firstChild)){
elem.removeChild(_3fc);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_3fe){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_3fe)=="string"||typeof (_3fe)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _403=self._xhtml;
if(_3fe&&!self.attributeArray.compliant){
var _404="";
if("name" in _3fe){
_404+=" name=\""+self.escapeHTML(_3fe.name)+"\"";
}
if(name=="input"&&"type" in _3fe){
_404+=" type=\""+self.escapeHTML(_3fe.type)+"\"";
}
if(_404){
name="<"+name+_404+">";
_403=false;
}
}
var d=self._document;
if(_403&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_3fe){
self.updateNodeAttributes(elem,_3fe);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
if(e&&e.parentNode){
e.parentNode.removeChild(e);
}
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _40d=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_40d);
_40d.replaceChild(src,dest);
}else{
_40d.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByClassName:function(_410,_411){
var self=MochiKit.DOM;
if(self._document.getElementsByClassName){
self.getElementsByClassName=function(_413,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _415=elm.getElementsByClassName(_413);
return MochiKit.Base.extend([],_415);
};
}else{
if(self._document.evaluate){
self.getElementsByClassName=function(_416,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _418=_416.split(" ");
var _419="";
for(var k=0,kl=_418.length;k<kl;++k){
_419+="[contains(concat(' ', @class, ' '), ' "+_418[k]+" ')]";
}
var tag="*";
var _41d=[];
try{
var _41e="http://www.w3.org/1999/xhtml";
var _41f=(self._document.documentElement.namespaceURI===_41e)?_41e:null;
_41d=self._document.evaluate(".//"+tag+_419,elm,_41f,0,null);
}
catch(e){
_41d=self._document.evaluate(".//"+tag+_419,elm,null,0,null);
}
return MochiKit.Iter.list(_41d);
};
}else{
self.getElementsByClassName=function(_420,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _422=_420.split(" ");
var _423=[];
for(var k=0,kl=_422.length;k<kl;++k){
_423.push(new RegExp("(^|\\s)"+_422[k]+"(\\s|$)"));
}
var _426=elm.all?elm.all:elm.getElementsByTagName("*");
var _427=[];
for(var l=0,ll=_426.length;l<ll;++l){
var _42a=_426[l];
var _42b=false;
for(var m=0,ml=_423.length;m<ml;++m){
_42b=_423[m].test(_42a.className);
if(!_42b){
break;
}
}
if(_42b){
_427.push(_42a);
}
}
return _427;
};
}
}
return self.getElementsByClassName(_410,_411);
},getElementsByTagAndClassName:function(_42e,_42f,_430){
var self=MochiKit.DOM;
if(typeof (_42e)=="undefined"||_42e===null){
_42e="*";
}
if(typeof (_430)=="undefined"||_430===null){
_430=self._document;
}
_430=self.getElement(_430);
if(_430==null){
return [];
}
if(_42e=="*"){
return self.getElementsByClassName(_42f,_430);
}
var _432=(_430.getElementsByTagName(_42e)||self._document.all);
if(typeof (_42f)=="undefined"||_42f===null){
return MochiKit.Base.extend(null,_432);
}
var _433=[];
for(var i=0;i<_432.length;i++){
var _435=_432[i];
var cls=_435.className;
if(typeof (cls)!="string"){
cls=_435.getAttribute("class");
}
if(typeof (cls)=="string"){
var _437=cls.split(" ");
for(var j=0;j<_437.length;j++){
if(_437[j]==_42f){
_433.push(_435);
break;
}
}
}
}
return _433;
},_newCallStack:function(path,once){
var rval=function(){
var _43c=arguments.callee.callStack;
for(var i=0;i<_43c.length;i++){
if(_43c[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_43e,path,func,once){
var self=MochiKit.DOM;
var _443=_43e[path];
var _444=_443;
if(!(typeof (_443)=="function"&&typeof (_443.callStack)=="object"&&_443.callStack!==null)){
_444=self._newCallStack(path,once);
if(typeof (_443)=="function"){
_444.callStack.push(_443);
}
_43e[path]=_444;
}
_444.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_447){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_447=self.getElement(_447);
if(_447){
_447.focus();
}
});
},setElementClass:function(_449,_44a){
var self=MochiKit.DOM;
var obj=self.getElement(_449);
if(self.attributeArray.compliant){
obj.setAttribute("class",_44a);
}else{
obj.setAttribute("className",_44a);
}
},toggleElementClass:function(_44d,_44e,_44f){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_44d)){
self.removeElementClass(obj,_44d);
}
}
},addElementClass:function(_453,_454){
var self=MochiKit.DOM;
var obj=self.getElement(_453);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_454);
return true;
}
if(cls==_454){
return false;
}
var _458=cls.split(" ");
for(var i=0;i<_458.length;i++){
if(_458[i]==_454){
return false;
}
}
self.setElementClass(obj,cls+" "+_454);
return true;
},removeElementClass:function(_45a,_45b){
var self=MochiKit.DOM;
var obj=self.getElement(_45a);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_45b){
self.setElementClass(obj,"");
return true;
}
var _45f=cls.split(" ");
for(var i=0;i<_45f.length;i++){
if(_45f[i]==_45b){
_45f.splice(i,1);
self.setElementClass(obj,_45f.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_461,_462,_463){
var obj=MochiKit.DOM.getElement(_461);
var res=MochiKit.DOM.removeElementClass(obj,_462);
if(res){
MochiKit.DOM.addElementClass(obj,_463);
}
return res;
},hasElementClass:function(_466,_467,_468){
var obj=MochiKit.DOM.getElement(_466);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _46b=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_46b.length;j++){
if(_46b[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _473=[dom];
var self=MochiKit.DOM;
var _475=self.escapeHTML;
var _476=self.attributeArray;
while(_473.length){
dom=_473.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _477=[];
var _478=_476(dom);
for(var i=0;i<_478.length;i++){
var a=_478[i];
_477.push([" ",a.name,"=\"",_475(a.value),"\""]);
}
_477.sort();
for(i=0;i<_477.length;i++){
var _47b=_477[i];
for(var j=0;j<_47b.length;j++){
lst.push(_47b[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_473.push("</"+dom.tagName.toLowerCase()+">");
var _47d=dom.childNodes;
for(i=_47d.length-1;i>=0;i--){
_473.push(_47d[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_475(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_47f){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _484=node.nodeValue;
if(typeof (_484)=="string"){
rval.push(_484);
}
})(MochiKit.DOM.getElement(node));
if(_47f){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_485){
_485=MochiKit.DOM.getElement(_485);
for(var i=0;i<_485.childNodes.length;i++){
var node=_485.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_488,_489,_48a){
var self=MochiKit.DOM;
if(typeof (_488)=="undefined"||_488===null){
_488="*";
}
if(typeof (_48a)=="undefined"||_48a===null){
_48a=self._document;
}
_48a=self.getElement(_48a);
if(_48a==null){
return null;
}
var _48c=(_48a.getElementsByTagName(_488)||self._document.all);
if(_48c.length<=0){
return null;
}else{
if(typeof (_489)=="undefined"||_489===null){
return _48c[0];
}
}
for(var i=0;i<_48c.length;i++){
var _48e=_48c[i];
var cls=_48e.className;
if(typeof (cls)!="string"){
cls=_48e.getAttribute("class");
}
if(typeof (cls)=="string"){
var _490=cls.split(" ");
for(var j=0;j<_490.length;j++){
if(_490[j]==_489){
return _48e;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_493,_494){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_493)=="undefined"||_493===null){
_493="*";
}else{
_493=_493.toUpperCase();
}
if(typeof (_494)=="undefined"||_494===null){
_494=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _496=elem.tagName.toUpperCase();
if((_493==="*"||_493==_496)&&(_494===null||self.hasElementClass(elem,_494))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _499="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
MochiKit.DOM._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_499);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
MochiKit.DOM.domConverters=new m.AdapterRegistry();
var _49a=this._document.createElement("span");
var _49b;
if(_49a&&_49a.attributes&&_49a.attributes.length>0){
var _49c=m.filter;
_49b=function(node){
return _49c(_49b.ignoreAttrFilter,node.attributes);
};
_49b.ignoreAttr={};
var _49e=_49a.attributes;
var _49f=_49b.ignoreAttr;
for(var i=0;i<_49e.length;i++){
var a=_49e[i];
_49f[a.name]=a.value;
}
_49b.ignoreAttrFilter=function(a){
return (_49b.ignoreAttr[a.name]!=a.value);
};
_49b.compliant=false;
_49b.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","rowspan":"rowSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_49b=function(node){
return node.attributes;
};
_49b.compliant=true;
_49b.ignoreAttr={};
_49b.renames={};
}
_49b.__export__=false;
MochiKit.DOM.attributeArray=_49b;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _4a4=this.createDOMFunc;
MochiKit.DOM.A=_4a4("a");
MochiKit.DOM.ARTICLE=_4a4("article");
MochiKit.DOM.ASIDE=_4a4("aside");
MochiKit.DOM.BR=_4a4("br");
MochiKit.DOM.BUTTON=_4a4("button");
MochiKit.DOM.CANVAS=_4a4("canvas");
MochiKit.DOM.CAPTION=_4a4("caption");
MochiKit.DOM.DD=_4a4("dd");
MochiKit.DOM.DIV=_4a4("div");
MochiKit.DOM.DL=_4a4("dl");
MochiKit.DOM.DT=_4a4("dt");
MochiKit.DOM.FIELDSET=_4a4("fieldset");
MochiKit.DOM.FIGURE=_4a4("figure");
MochiKit.DOM.FIGCAPTION=_4a4("figcaption");
MochiKit.DOM.FOOTER=_4a4("footer");
MochiKit.DOM.FORM=_4a4("form");
MochiKit.DOM.H1=_4a4("h1");
MochiKit.DOM.H2=_4a4("h2");
MochiKit.DOM.H3=_4a4("h3");
MochiKit.DOM.H4=_4a4("h4");
MochiKit.DOM.H5=_4a4("h5");
MochiKit.DOM.H6=_4a4("h6");
MochiKit.DOM.HEADER=_4a4("header");
MochiKit.DOM.HGROUP=_4a4("hgroup");
MochiKit.DOM.HR=_4a4("hr");
MochiKit.DOM.IFRAME=_4a4("iframe");
MochiKit.DOM.IMG=_4a4("img");
MochiKit.DOM.INPUT=_4a4("input");
MochiKit.DOM.LABEL=_4a4("label");
MochiKit.DOM.LEGEND=_4a4("legend");
MochiKit.DOM.LI=_4a4("li");
MochiKit.DOM.LINK=_4a4("link");
MochiKit.DOM.MARK=_4a4("mark");
MochiKit.DOM.METER=_4a4("meter");
MochiKit.DOM.NAV=_4a4("nav");
MochiKit.DOM.OL=_4a4("ol");
MochiKit.DOM.OPTGROUP=_4a4("optgroup");
MochiKit.DOM.OPTION=_4a4("option");
MochiKit.DOM.P=_4a4("p");
MochiKit.DOM.PRE=_4a4("pre");
MochiKit.DOM.PROGRESS=_4a4("progress");
MochiKit.DOM.SCRIPT=_4a4("script");
MochiKit.DOM.SECTION=_4a4("section");
MochiKit.DOM.SELECT=_4a4("select");
MochiKit.DOM.SPAN=_4a4("span");
MochiKit.DOM.STRONG=_4a4("strong");
MochiKit.DOM.STYLE=_4a4("style");
MochiKit.DOM.TABLE=_4a4("table");
MochiKit.DOM.TBODY=_4a4("tbody");
MochiKit.DOM.TD=_4a4("td");
MochiKit.DOM.TEXTAREA=_4a4("textarea");
MochiKit.DOM.TFOOT=_4a4("tfoot");
MochiKit.DOM.TH=_4a4("th");
MochiKit.DOM.THEAD=_4a4("thead");
MochiKit.DOM.TR=_4a4("tr");
MochiKit.DOM.TT=_4a4("tt");
MochiKit.DOM.UL=_4a4("ul");
MochiKit.DOM.NBSP="\xa0";
MochiKit.DOM.$=this.getElement;
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
window.withWindow=MochiKit.DOM.withWindow;
window.withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Selector");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_4a5){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_4a5.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_4a6){
throw "Parse error in selector: "+_4a6;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _4a8=this.params;
var expr=this.expression;
var _4aa,_4ab,_4ac,rest;
while(_4aa=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_4a8.attributes=_4a8.attributes||[];
_4a8.attributes.push({name:_4aa[2],operator:_4aa[3],value:_4aa[4]||_4aa[5]||""});
expr=_4aa[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_4aa=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_4ab=_4aa[1];
_4ac=_4aa[2];
rest=_4aa[3];
switch(_4ab){
case "#":
_4a8.id=_4ac;
break;
case ".":
_4a8.classNames.push(_4ac);
break;
case ":":
_4a8.pseudoClassNames.push(_4ac);
break;
case "":
case undefined:
_4a8.tagName=_4ac.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _4af=this.params;
var _4b0=[];
var _4b1,i;
function childElements(_4b3){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_4b3+".childNodes)";
}
if(_4af.wildcard){
_4b0.push("true");
}
if(_4b1=_4af.id){
_4b0.push("element.id == "+repr(_4b1));
}
if(_4b1=_4af.tagName){
_4b0.push("element.tagName.toUpperCase() == "+repr(_4b1));
}
if((_4b1=_4af.classNames).length>0){
for(i=0;i<_4b1.length;i++){
_4b0.push("MochiKit.DOM.hasElementClass(element, "+repr(_4b1[i])+")");
}
}
if((_4b1=_4af.pseudoClassNames).length>0){
for(i=0;i<_4b1.length;i++){
var _4b4=_4b1[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _4b5=_4b4[1];
var _4b6=_4b4[2];
switch(_4b5){
case "root":
_4b0.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_4b4=_4b6.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_4b4){
throw "Invalid argument to pseudo element nth-child: "+_4b6;
}
var a,b;
if(_4b4[0]=="odd"){
a=2;
b=1;
}else{
if(_4b4[0]=="even"){
a=2;
b=0;
}else{
a=_4b4[2]&&parseInt(_4b4,10)||null;
b=parseInt(_4b4[3],10);
}
}
_4b0.push("this.nthChild(element,"+a+","+b+","+!!_4b5.match("^nth-last")+","+!!_4b5.match("of-type$")+")");
break;
case "first-child":
_4b0.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_4b0.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_4b0.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_4b0.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_4b0.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_4b0.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_4b0.push("element.childNodes.length == 0");
break;
case "enabled":
_4b0.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_4b0.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_4b0.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _4b9=new MochiKit.Selector.Selector(_4b6);
_4b0.push("!( "+_4b9.buildMatchExpression()+")");
break;
}
}
}
if(_4b1=_4af.attributes){
MochiKit.Base.map(function(_4ba){
var _4bb="MochiKit.DOM.getNodeAttribute(element, "+repr(_4ba.name)+")";
var _4bc=function(_4bd){
return _4bb+".split("+repr(_4bd)+")";
};
_4b0.push(_4bb+" != null");
switch(_4ba.operator){
case "=":
_4b0.push(_4bb+" == "+repr(_4ba.value));
break;
case "~=":
_4b0.push("MochiKit.Base.findValue("+_4bc(" ")+", "+repr(_4ba.value)+") > -1");
break;
case "^=":
_4b0.push(_4bb+".substring(0, "+_4ba.value.length+") == "+repr(_4ba.value));
break;
case "$=":
_4b0.push(_4bb+".substring("+_4bb+".length - "+_4ba.value.length+") == "+repr(_4ba.value));
break;
case "*=":
_4b0.push(_4bb+".match("+repr(_4ba.value)+")");
break;
case "|=":
_4b0.push(_4bc("-")+"[0].toUpperCase() == "+repr(_4ba.value.toUpperCase()));
break;
case "!=":
_4b0.push(_4bb+" != "+repr(_4ba.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_4ba.operator+" in selector";
}
},_4b1);
}
return _4b0.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_4bf,a,b,_4c2,_4c3){
var _4c4=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4bf.parentNode.childNodes);
if(_4c3){
_4c4=MochiKit.Base.filter(function(node){
return node.tagName==_4bf.tagName;
},_4c4);
}
if(_4c2){
_4c4=MochiKit.Iter.reversed(_4c4);
}
if(a){
var _4c7=MochiKit.Base.findIdentical(_4c4,_4bf);
return ((_4c7+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_4c4,_4bf)+1;
}
},isUIElement:function(_4c8){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_4c8.tagName.toLowerCase())>-1;
},findElements:function(_4c9,axis){
var _4cb;
if(axis==undefined){
axis="";
}
function inScope(_4cc,_4cd){
if(axis==""){
return MochiKit.DOM.isChildNode(_4cc,_4cd);
}else{
if(axis==">"){
return _4cc.parentNode===_4cd;
}else{
if(axis=="+"){
return _4cc===nextSiblingElement(_4cd);
}else{
if(axis=="~"){
var _4ce=_4cd;
while(_4ce=nextSiblingElement(_4ce)){
if(_4cc===_4ce){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_4cb=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_4cb)){
if(!_4c9||inScope(_4cb,_4c9)){
return [_4cb];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_4c9=(_4c9||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_4c9){
throw "> combinator not allowed without preceeding expression";
}
_4c9=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4c9.childNodes);
}else{
if(axis=="+"){
if(!_4c9){
throw "+ combinator not allowed without preceeding expression";
}
_4c9=nextSiblingElement(_4c9)&&[nextSiblingElement(_4c9)];
}else{
if(axis=="~"){
if(!_4c9){
throw "~ combinator not allowed without preceeding expression";
}
var _4d1=[];
while(nextSiblingElement(_4c9)){
_4c9=nextSiblingElement(_4c9);
_4d1.push(_4c9);
}
_4c9=_4d1;
}
}
}
}
if(!_4c9){
return [];
}
var _4d2=MochiKit.Base.filter(MochiKit.Base.bind(function(_4d3){
return this.match(_4d3);
},this),_4c9);
return _4d2;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_4d4,_4d5){
_4d4=MochiKit.DOM.getElement(_4d4);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_4da){
try{
var res=_4d4.querySelectorAll(_4da);
return Array.prototype.slice.call(res,0);
}
catch(ignore){
}
var _4dc="";
var _4dd=function(_4de,expr){
var _4e0=expr.match(/^[>+~]$/);
if(_4e0){
_4dc=_4e0[0];
return _4de;
}else{
var _4e1=new MochiKit.Selector.Selector(expr);
var _4e2=MochiKit.Iter.reduce(function(_4e3,_4e4){
return MochiKit.Base.extend(_4e3,_4e1.findElements(_4e4||_4d4,_4dc));
},_4de,[]);
_4dc="";
return _4e2;
}
};
var _4e5=_4da.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_4dd,_4e5,[null]));
},_4d5));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Style");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_4ed){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_4ed=MochiKit.Base.camelize(_4ed);
if(!elem||elem==d){
return undefined;
}
if(_4ed=="opacity"&&typeof (elem.filters)!="undefined"){
var _4f0=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_4f0&&_4f0[1]){
return parseFloat(_4f0[1])/100;
}
return 1;
}
if(_4ed=="float"||_4ed=="cssFloat"||_4ed=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _4f1=elem.style?elem.style[_4ed]:null;
if(!_4f1){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_4ed=_4ed.replace(/([A-Z])/g,"-$1").toLowerCase();
_4f1=css?css.getPropertyValue(_4ed):null;
}else{
if(elem.currentStyle){
_4f1=elem.currentStyle[_4ed];
if(/^\d/.test(_4f1)&&!/px$/.test(_4f1)&&_4ed!="fontWeight"){
var left=elem.style.left;
var _4f4=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_4f1||0;
_4f1=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_4f4;
}
}
}
}
if(_4ed=="opacity"){
_4f1=parseFloat(_4f1);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_4ed)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_4f1="auto";
}
}
return _4f1=="auto"?null:_4f1;
},setStyle:function(elem,_4f6){
elem=MochiKit.DOM.getElement(elem);
for(var name in _4f6){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_4f6[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_4f6[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_4f6[name];
}else{
elem.style.styleFloat=_4f6[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_4f6[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _4fb=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_4fb?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_4fd){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _500=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(typeof (elem)=="string"){
elem=dom.getElement(elem);
}
if(elem==null||(!_500(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _504=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_504=elem.offsetParent;
if(_504!=elem){
while(_504){
c.x+=parseInt(_504.style.borderLeftWidth,10)||0;
c.y+=parseInt(_504.style.borderTopWidth,10)||0;
c.x+=_504.offsetLeft;
c.y+=_504.offsetTop;
_504=_504.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_504=elem.parentNode;
}else{
_504=null;
}
while(_504){
var _509=_504.tagName.toUpperCase();
if(_509==="BODY"||_509==="HTML"){
break;
}
var disp=self.getStyle(_504,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_504.scrollLeft;
c.y-=_504.scrollTop;
}
if(_504.parentNode){
_504=_504.parentNode;
}else{
_504=null;
}
}
}
}
}
if(_4fd){
_4fd=arguments.callee(_4fd);
if(_4fd){
c.x-=(_4fd.x||0);
c.y-=(_4fd.y||0);
}
}
return c;
},setElementPosition:function(elem,_50c,_50d){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_50d)=="undefined"){
_50d="px";
}
var _50e={};
var _50f=MochiKit.Base.isUndefinedOrNull;
if(!_50f(_50c.x)){
_50e["left"]=_50c.x+_50d;
}
if(!_50f(_50c.y)){
_50e["top"]=_50c.y+_50d;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_50e});
},makePositioned:function(_510){
_510=MochiKit.DOM.getElement(_510);
var pos=MochiKit.Style.getStyle(_510,"position");
if(pos=="static"||!pos){
_510.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_510.style.top=0;
_510.style.left=0;
}
}
},undoPositioned:function(_512){
_512=MochiKit.DOM.getElement(_512);
if(_512.style.position=="relative"){
_512.style.position=_512.style.top=_512.style.left=_512.style.bottom=_512.style.right="";
}
},makeClipping:function(_513){
_513=MochiKit.DOM.getElement(_513);
var s=_513.style;
var _515={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_513,"overflow")||"visible")!="hidden"){
_513.style.overflow="hidden";
_513.style.overflowX="hidden";
_513.style.overflowY="hidden";
}
return _515;
},undoClipping:function(_516,_517){
_516=MochiKit.DOM.getElement(_516);
if(typeof (_517)=="string"){
_516.style.overflow=_517;
}else{
if(_517!=null){
_516.style.overflow=_517["overflow"];
_516.style.overflowX=_517["overflow-x"];
_516.style.overflowY=_517["overflow-y"];
}
}
},getElementDimensions:function(elem,_519){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _51e=s.visibility;
var _51f=s.position;
var _520=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _521=elem.offsetWidth;
var _522=elem.offsetHeight;
s.display=_520;
s.position=_51f;
s.visibility=_51e;
}else{
_521=elem.offsetWidth||0;
_522=elem.offsetHeight||0;
}
if(_519){
var _523="colSpan" in elem&&"rowSpan" in elem;
var _524=(_523&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_524){
if(/MSIE/.test(navigator.userAgent)){
var _525=elem.previousSibling?0.5:1;
var _526=elem.nextSibling?0.5:1;
}else{
var _525=0.5;
var _526=0.5;
}
}else{
var _525=1;
var _526=1;
}
_521-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_525*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_526*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_523){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _527=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _527=1;
}else{
var _527=_524?0.5:1;
}
}
}else{
var _527=1;
}
_522-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_527*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_521,_522);
},setElementDimensions:function(elem,_529,_52a){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_52a)=="undefined"){
_52a="px";
}
var _52b={};
var _52c=MochiKit.Base.isUndefinedOrNull;
if(!_52c(_529.w)){
_52b["width"]=_529.w+_52a;
}
if(!_52c(_529.h)){
_52b["height"]=_529.h+_52a;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_52b});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _530=elem.tagName.toUpperCase();
return self._defaultDisplay[_530]||"block";
},setDisplayForElement:function(_531,_532,_533){
var _534=MochiKit.Base.extend(null,arguments,1);
var _535=MochiKit.DOM.getElement;
for(var i=0;i<_534.length;i++){
_532=_535(_534[i]);
if(_532){
_532.style.display=_531;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _53f=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_53f.length;i++){
this._defaultDisplay[_53f[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3",true);
MochiKit.Style.hideElement=m.partial(MochiKit.Style.setDisplayForElement,"none");
MochiKit.Style.showElement=m.partial(MochiKit.Style.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.LoggingPane");
goog.require("MochiKit.Base");
goog.require("MochiKit.Logging");
}
MochiKit.Base.module(MochiKit,"LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_543){
var m=MochiKit.LoggingPane;
_543=!(!_543);
if(m._loggingPane&&m._loggingPane.inline!=_543){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_543,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_545,_546){
if(typeof (_546)=="undefined"||_546===null){
_546=MochiKit.Logging.logger;
}
this.logger=_546;
var _547=MochiKit.Base.update;
var _548=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _54a=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_545){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _551=doc.getElementById(uid);
var _552=!!_551;
if(_551&&typeof (_551.loggingPane)!="undefined"){
_551.loggingPane.logger=this.logger;
_551.loggingPane.buildAndApplyFilter();
return _551.loggingPane;
}
if(_552){
var _553;
while((_553=_551.firstChild)){
_551.removeChild(_553);
}
}else{
_551=doc.createElement("div");
_551.id=uid;
}
_551.loggingPane=this;
var _554=doc.createElement("input");
var _555=doc.createElement("input");
var _556=doc.createElement("button");
var _557=doc.createElement("button");
var _558=doc.createElement("button");
var _559=doc.createElement("button");
var _55a=doc.createElement("div");
var _55b=doc.createElement("div");
var _55c=uid+"_Listener";
this.colorTable=_54a(this.colorTable);
var _55d=[];
var _55e=null;
var _55f=function(msg){
var _561=msg.level;
if(typeof (_561)=="number"){
_561=MochiKit.Logging.LogLevel[_561];
}
return _561;
};
var _562=function(msg){
return msg.info.join(" ");
};
var _564=bind(function(msg){
var _566=_55f(msg);
var text=_562(msg);
var c=this.colorTable[_566];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_566;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_566+": "+text));
_55b.appendChild(p);
_55b.appendChild(doc.createElement("br"));
if(_55a.offsetHeight>_55a.scrollHeight){
_55a.scrollTop=0;
}else{
_55a.scrollTop=_55a.scrollHeight;
}
},this);
var _56a=function(msg){
_55d[_55d.length]=msg;
_564(msg);
};
var _56c=function(){
var _56d,_56e;
try{
_56d=new RegExp(_554.value);
_56e=new RegExp(_555.value);
}
catch(e){
MochiKit.Logging.logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_56d.test(_55f(msg))&&_56e.test(_562(msg)));
};
};
var _570=function(){
while(_55b.firstChild){
_55b.removeChild(_55b.firstChild);
}
};
var _571=function(){
_55d=[];
_570();
};
var _572=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_55c);
try{
try{
_551.loggingPane=null;
}
catch(e){
MochiKit.Logging.logFatal("Bookmarklet was closed incorrectly.");
}
if(_545){
_551.parentNode.removeChild(_551);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _573=function(){
_570();
for(var i=0;i<_55d.length;i++){
var msg=_55d[i];
if(_55e===null||_55e(msg)){
_564(msg);
}
}
};
this.buildAndApplyFilter=function(){
_55e=_56c();
_573();
this.logger.removeListener(_55c);
this.logger.addListener(_55c,_55e,_56a);
};
var _576=bind(function(){
_55d=this.logger.getMessages();
_573();
},this);
var _577=bind(function(_578){
_578=_578||window.event;
var key=_578.which||_578.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _57a="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_545){
_57a+="; height: 10em; border-top: 2px solid black";
}else{
_57a+="; height: 100%;";
}
_551.style.cssText=_57a;
if(!_552){
doc.body.appendChild(_551);
}
_57a={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_548(_554,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_577,"style":_57a});
_551.appendChild(_554);
_548(_555,{"value":".*","onkeypress":_577,"style":_57a});
_551.appendChild(_555);
_57a="width: 8%; display:inline; font: "+this.logFont;
_556.appendChild(doc.createTextNode("Filter"));
_556.onclick=bind("buildAndApplyFilter",this);
_556.style.cssText=_57a;
_551.appendChild(_556);
_557.appendChild(doc.createTextNode("Load"));
_557.onclick=_576;
_557.style.cssText=_57a;
_551.appendChild(_557);
_558.appendChild(doc.createTextNode("Clear"));
_558.onclick=_571;
_558.style.cssText=_57a;
_551.appendChild(_558);
_559.appendChild(doc.createTextNode("Close"));
_559.onclick=_572;
_559.style.cssText=_57a;
_551.appendChild(_559);
_55a.style.cssText="overflow: auto; width: 100%";
_55b.style.cssText="width: 100%; height: "+(_545?"8em":"100%");
_55a.appendChild(_55b);
_551.appendChild(_55a);
this.buildAndApplyFilter();
_576();
if(_545){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_545;
this.closePane=_572;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Color");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_57c,blue,_57e){
if(typeof (_57e)=="undefined"||_57e===null){
_57e=1;
}
this.rgb={r:red,g:_57c,b:blue,a:_57e};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_57f){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_57f);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_585){
var hsl=this.asHSL();
hsl.s=_585;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_588){
var hsl=this.asHSL();
hsl.l=_588;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_58b){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_58b,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_58e){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_58e,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_591,_592){
if(typeof (_592)=="undefined"||_592===null){
_592=0.5;
}
var sf=1-_592;
var s=this.rgb;
var d=_591.rgb;
var df=_592;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_597){
var a=this.asRGB();
var b=_597.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().l>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_5ae,blue,_5b0){
var _5b1=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5ae=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_5b0=undefined;
}else{
_5b0=rgb.a;
}
}
return new _5b1(red,_5ae,blue,_5b0);
},fromHSL:function(hue,_5b4,_5b5,_5b6){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_5b9,_5ba,_5bb){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _5be=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _5bf=_5be._namedColors[name.toLowerCase()];
if(typeof (_5bf)=="string"){
return _5be.fromHexString(_5bf);
}else{
if(name=="transparent"){
return _5be.transparentColor();
}
}
return null;
},fromString:function(_5c0){
var self=MochiKit.Color.Color;
var _5c2=_5c0.substr(0,3);
if(_5c2=="rgb"){
return self.fromRGBString(_5c0);
}else{
if(_5c2=="hsl"){
return self.fromHSLString(_5c0);
}else{
if(_5c0.charAt(0)=="#"){
return self.fromHexString(_5c0);
}
}
}
return self.fromName(_5c0);
},fromHexString:function(_5c3){
if(_5c3.charAt(0)=="#"){
_5c3=_5c3.substring(1);
}
var _5c4=[];
var i,hex;
if(_5c3.length==3){
for(i=0;i<3;i++){
hex=_5c3.substr(i,1);
_5c4.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_5c3.substr(i,2);
_5c4.push(parseInt(hex,16)/255);
}
}
var _5c7=MochiKit.Color.Color;
return _5c7.fromRGB.apply(_5c7,_5c4);
},_fromColorString:function(pre,_5c9,_5ca,_5cb){
if(_5cb.indexOf(pre)===0){
_5cb=_5cb.substring(_5cb.indexOf("(",3)+1,_5cb.length-1);
}
var _5cc=_5cb.split(/\s*,\s*/);
var _5cd=[];
for(var i=0;i<_5cc.length;i++){
var c=_5cc[i];
var val;
var _5d1=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_5d1=="deg"){
val=parseFloat(c)/360;
}else{
if(_5d1=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_5ca[i]*parseFloat(c);
}
}
}
_5cd.push(val);
}
return this[_5c9].apply(this,_5cd);
},fromComputedStyle:function(elem,_5d3){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _5d6=MochiKit.Style.getStyle.apply(d,arguments);
if(!_5d6){
continue;
}
var _5d7=cls.fromString(_5d6);
if(!_5d7){
break;
}
if(_5d7.asRGB().a>0){
return _5d7;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_5dd){
v*=_5dd;
if(v<0){
return 0;
}else{
if(v>_5dd){
return _5dd;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_5e3,_5e4,_5e5){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_5e3=hsv.s;
_5e4=hsv.v;
_5e5=hsv.a;
}
var red;
var _5e8;
var blue;
if(_5e3===0){
red=_5e4;
_5e8=_5e4;
blue=_5e4;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_5e4*(1-_5e3);
var q=_5e4*(1-(_5e3*f));
var t=_5e4*(1-(_5e3*(1-f)));
switch(i){
case 1:
red=q;
_5e8=_5e4;
blue=p;
break;
case 2:
red=p;
_5e8=_5e4;
blue=t;
break;
case 3:
red=p;
_5e8=q;
blue=_5e4;
break;
case 4:
red=t;
_5e8=p;
blue=_5e4;
break;
case 5:
red=_5e4;
_5e8=p;
blue=q;
break;
case 6:
case 0:
red=_5e4;
_5e8=t;
blue=p;
break;
}
}
return {r:red,g:_5e8,b:blue,a:_5e5};
},hslToRGB:function(hue,_5f0,_5f1,_5f2){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_5f0=hsl.s;
_5f1=hsl.l;
_5f2=hsl.a;
}
var red;
var _5f5;
var blue;
if(_5f0===0){
red=_5f1;
_5f5=_5f1;
blue=_5f1;
}else{
var m2;
if(_5f1<=0.5){
m2=_5f1*(1+_5f0);
}else{
m2=_5f1+_5f0-(_5f1*_5f0);
}
var m1=(2*_5f1)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_5f5=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_5f5,b:blue,a:_5f2};
},rgbToHSV:function(red,_5fc,blue,_5fe){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5fc=rgb.g;
blue=rgb.b;
_5fe=rgb.a;
}
var max=Math.max(Math.max(red,_5fc),blue);
var min=Math.min(Math.min(red,_5fc),blue);
var hue;
var _603;
var _604=max;
if(min==max){
hue=0;
_603=0;
}else{
var _605=(max-min);
_603=_605/max;
if(red==max){
hue=(_5fc-blue)/_605;
}else{
if(_5fc==max){
hue=2+((blue-red)/_605);
}else{
hue=4+((red-_5fc)/_605);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_603,v:_604,a:_5fe};
},rgbToHSL:function(red,_607,blue,_609){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_607=rgb.g;
blue=rgb.b;
_609=rgb.a;
}
var max=Math.max(red,Math.max(_607,blue));
var min=Math.min(red,Math.min(_607,blue));
var hue;
var _60e;
var _60f=(max+min)/2;
var _610=max-min;
if(_610===0){
hue=0;
_60e=0;
}else{
if(_60f<=0.5){
_60e=_610/(max+min);
}else{
_60e=_610/(2-max-min);
}
if(red==max){
hue=(_607-blue)/_610;
}else{
if(_607==max){
hue=2+((blue-red)/_610);
}else{
hue=4+((red-_607)/_610);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_60e,l:_60f,a:_609};
},toColorPart:function(num){
num=Math.round(num);
var _612=num.toString(16);
if(num<16){
return "0"+_612;
}
return _612;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _614=1/3;
var _615={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_614,_614,_614],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_614,2*_614,2*_614],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
for(var k in _615){
var name=k+"Color";
var _618=this.Color.fromRGB.apply(this.Color,_615[k]);
this.Color[name]=m.partial(m.operator.identity,_618);
}
var _619=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _61b=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_619,_61b);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Signal");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Signal","1.5",["Base","DOM"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Signal.Event.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
};
MochiKit.Signal.Event.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Signal.Event.prototype.src=function(){
return this._src;
};
MochiKit.Signal.Event.prototype.event=function(){
return this._event;
};
MochiKit.Signal.Event.prototype.type=function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
};
MochiKit.Signal.Event.prototype.target=function(){
return this._event.target||this._event.srcElement;
};
MochiKit.Signal.Event.prototype._relatedTarget=null;
MochiKit.Signal.Event.prototype.relatedTarget=function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
};
MochiKit.Signal.Event.prototype._modifier=null;
MochiKit.Signal.Event.prototype.modifier=function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
};
MochiKit.Signal.Event.prototype._key=null;
MochiKit.Signal.Event.prototype.key=function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
};
MochiKit.Signal.Event.prototype._mouse=null;
MochiKit.Signal.Event.prototype.mouse=function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("drag")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client={x:0,y:0};
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page={x:0,y:0};
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel={x:0,y:0};
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
};
MochiKit.Signal.Event.prototype.stop=function(){
this.stopPropagation();
this.preventDefault();
};
MochiKit.Signal.Event.prototype.stopPropagation=function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
};
MochiKit.Signal.Event.prototype.preventDefault=function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
};
MochiKit.Signal.Event.prototype._confirmUnload=null;
MochiKit.Signal.Event.prototype.confirmUnload=function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
};
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _62a=MochiKit.Signal._specialMacKeys;
for(var i=63236;i<=63242;i++){
_62a[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _62c=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_62c[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_62c[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_62c[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_62c[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_62e){
this.source=_62e.source;
this.signal=_62e.signal;
this.listener=_62e.listener;
this.isDOM=_62e.isDOM;
this.objOrFunc=_62e.objOrFunc;
this.funcOrStr=_62e.funcOrStr;
this.connected=_62e.connected;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Signal.Ident.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "src:"+repr(this.source)+", sig: "+repr(this.signal)+", isDOM: "+repr(this.isDOM)+", connected: "+repr(this.connected);
};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _631=self._observers;
for(var i=0;i<_631.length;i++){
if(_631[i].signal!=="onload"&&_631[i].signal!=="onunload"){
self._disconnect(_631[i]);
}
}
},_listener:function(src,sig,func,obj,_637){
var self=MochiKit.Signal;
var E=self.Event;
if(!_637){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_63a){
obj[func].apply(obj,[new E(src,_63a)]);
var _63b=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_63b);
};
}else{
return function(_63c){
obj[func].apply(obj,[new E(src,_63c)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_63d){
func.apply(obj,[new E(src,_63d)]);
var _63e=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_63e);
};
}else{
return function(_63f){
func.apply(obj,[new E(src,_63f)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_645){
var e=new E(src,_645);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_647,_648){
var obj=null;
var func=null;
if(typeof (_648)!="undefined"){
obj=_647;
func=_648;
if(typeof (_648)=="string"){
if(typeof (_647[_648])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_648)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_647)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_647;
}
}
return [obj,func];
},connect:function(src,sig,_64d,_64e){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _650=self._getDestPair(_64d,_64e);
var obj=_650[0];
var func=_650[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _653=!!(src.addEventListener||src.attachEvent);
if(_653&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _654=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_653&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _654=self._listener(src,sig,func,obj,_653);
sig="onDOMMouseScroll";
}else{
var _654=self._listener(src,sig,func,obj,_653);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_654,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_654);
}
}
var _655=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_654,isDOM:_653,objOrFunc:_64d,funcOrStr:_64e,connected:true});
self._observers.push(_655);
if(!_653&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_655],arguments,1);
src.__connect__.apply(src,args);
}
return _655;
},connectOnce:function(src,sig,_659,_65a){
var self=MochiKit.Signal;
var _65c=self.connect(src,sig,_659,_65a);
var _65d;
_65d=self.connect(src,sig,function(){
self.disconnect(_65c);
self.disconnect(_65d);
});
return _65c;
},_disconnect:function(_65e){
if(!_65e.connected){
return;
}
_65e.connected=false;
var src=_65e.source;
var sig=_65e.signal;
var _661=_65e.listener;
if(!_65e.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_65e,sig,_65e.objOrFunc,_65e.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_661,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_661);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_662){
var self=MochiKit.Signal;
var _664=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_664.length-1;i>=0;i--){
var o=_664[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(self._lock===0){
_664.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_664,_662);
if(idx>=0){
self._disconnect(_662);
if(self._lock===0){
_664.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_66d,_66e){
var self=MochiKit.Signal;
var _670=self._observers;
var _671=self._disconnect;
var lock=self._lock;
var _673=self._dirty;
if(typeof (_66e)==="undefined"){
_66e=null;
}
for(var i=_670.length-1;i>=0;i--){
var _675=_670[i];
if(_675.objOrFunc===_66d&&(_66e===null||_675.funcOrStr===_66e)){
_671(_675);
if(lock===0){
_670.splice(i,1);
}else{
_673=true;
}
}
}
self._dirty=_673;
},disconnectAll:function(src,_677){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _679=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _67b=self._disconnect;
var _67c=self._observers;
var i,_67e;
var lock=self._lock;
var _680=self._dirty;
if(_679.length===0){
for(i=_67c.length-1;i>=0;i--){
_67e=_67c[i];
if(_67e.source===src){
_67b(_67e);
if(lock===0){
_67c.splice(i,1);
}else{
_680=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_679.length;i++){
sigs[_679[i]]=true;
}
for(i=_67c.length-1;i>=0;i--){
_67e=_67c[i];
if(_67e.source===src&&_67e.signal in sigs){
_67b(_67e);
if(lock===0){
_67c.splice(i,1);
}else{
_680=true;
}
}
}
}
self._dirty=_680;
},signal:function(src,sig,_684){
var self=MochiKit.Signal;
var _686=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _688=[];
self._lock++;
for(var i=0;i<_686.length;i++){
var _68a=_686[i];
if(_68a.source===src&&_68a.signal===sig&&_68a.connected){
try{
if(_68a.isDOM&&_68a.funcOrStr!=null){
var obj=_68a.objOrFunc;
obj[_68a.funcOrStr].apply(obj,args);
}else{
if(_68a.isDOM){
_68a.objOrFunc.apply(src,args);
}else{
_68a.listener.apply(src,args);
}
}
}
catch(e){
_688.push(e);
}
}
}
self._lock--;
self._gc();
if(_688.length==1){
throw _688[0];
}else{
if(_688.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_688;
throw e;
}
}
},_gc:function(){
var self=MochiKit.Signal;
var _68e=self._observers;
if(self._lock===0&&self._dirty){
for(var i=_68e.length-1;i>=0;i--){
if(!_68e[i].connected){
_68e.splice(i,1);
}
}
self._dirty=false;
return true;
}
return false;
}});
MochiKit.Signal.disconnectAllFromTo=function(src,_691){
var self=MochiKit.Signal;
var _693=self._observers;
var _694=self._disconnect;
var lock=self._lock;
var _696=self._dirty;
for(var i=_693.length-1;i>=0;i--){
var _698=_693[i];
if(_698.objOrFunc===_691&&_698.source==src){
_694(_698);
if(lock===0){
_693.splice(i,1);
}else{
_696=true;
}
}
}
self._dirty=_696;
};
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
MochiKit.Signal._lock=0;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
window.connect=MochiKit.Signal.connect;
window.disconnect=MochiKit.Signal.disconnect;
window.disconnectAll=MochiKit.Signal.disconnectAll;
window.signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Position");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _69b=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _69c=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_69b,_69c);
},cumulativeOffset:function(_69d){
var _69e=0;
var _69f=0;
do{
_69e+=_69d.offsetTop||0;
_69f+=_69d.offsetLeft||0;
_69d=_69d.offsetParent;
}while(_69d);
return new MochiKit.Style.Coordinates(_69f,_69e);
},realOffset:function(_6a0){
var _6a1=0;
var _6a2=0;
do{
_6a1+=_6a0.scrollTop||0;
_6a2+=_6a0.scrollLeft||0;
_6a0=_6a0.parentNode;
}while(_6a0);
return new MochiKit.Style.Coordinates(_6a2,_6a1);
},within:function(_6a3,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_6a3,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_6a3);
if(_6a3.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_6a3.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_6a3.offsetWidth);
},withinIncludingScrolloffsets:function(_6a6,x,y){
var _6a9=this.realOffset(_6a6);
this.xcomp=x+_6a9.x-this.windowOffset.x;
this.ycomp=y+_6a9.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_6a6);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_6a6.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_6a6.offsetWidth);
},overlap:function(mode,_6ab){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_6ab.offsetHeight)-this.ycomp)/_6ab.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_6ab.offsetWidth)-this.xcomp)/_6ab.offsetWidth;
}
},absolutize:function(_6ac){
_6ac=MochiKit.DOM.getElement(_6ac);
if(_6ac.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _6ad=MochiKit.Position.positionedOffset(_6ac);
var _6ae=_6ac.clientWidth;
var _6af=_6ac.clientHeight;
var _6b0={"position":_6ac.style.position,"left":_6ad.x-parseFloat(_6ac.style.left||0),"top":_6ad.y-parseFloat(_6ac.style.top||0),"width":_6ac.style.width,"height":_6ac.style.height};
_6ac.style.position="absolute";
_6ac.style.top=_6ad.y+"px";
_6ac.style.left=_6ad.x+"px";
_6ac.style.width=_6ae+"px";
_6ac.style.height=_6af+"px";
return _6b0;
},positionedOffset:function(_6b1){
var _6b2=0,_6b3=0;
do{
_6b2+=_6b1.offsetTop||0;
_6b3+=_6b1.offsetLeft||0;
_6b1=_6b1.offsetParent;
if(_6b1){
var p=MochiKit.Style.getStyle(_6b1,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_6b1);
return new MochiKit.Style.Coordinates(_6b3,_6b2);
},relativize:function(_6b5,_6b6){
_6b5=MochiKit.DOM.getElement(_6b5);
if(_6b5.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_6b5.style.top||0)-(_6b6["top"]||0);
var left=parseFloat(_6b5.style.left||0)-(_6b6["left"]||0);
_6b5.style.position=_6b6["position"];
_6b5.style.top=top+"px";
_6b5.style.left=left+"px";
_6b5.style.width=_6b6["width"];
_6b5.style.height=_6b6["height"];
},clone:function(_6b9,_6ba){
_6b9=MochiKit.DOM.getElement(_6b9);
_6ba=MochiKit.DOM.getElement(_6ba);
_6ba.style.position="absolute";
var _6bb=this.cumulativeOffset(_6b9);
_6ba.style.top=_6bb.y+"px";
_6ba.style.left=_6bb.x+"px";
_6ba.style.width=_6b9.offsetWidth+"px";
_6ba.style.height=_6b9.offsetHeight+"px";
},page:function(_6bc){
var _6bd=0;
var _6be=0;
var _6bf=_6bc;
do{
_6bd+=_6bf.offsetTop||0;
_6be+=_6bf.offsetLeft||0;
if(_6bf.offsetParent==document.body&&MochiKit.Style.getStyle(_6bf,"position")=="absolute"){
break;
}
}while(_6bf=_6bf.offsetParent);
_6bf=_6bc;
do{
_6bd-=_6bf.scrollTop||0;
_6be-=_6bf.scrollLeft||0;
}while(_6bf=_6bf.parentNode);
return new MochiKit.Style.Coordinates(_6be,_6bd);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Visual");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
goog.require("MochiKit.Color");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_6c2){
e=MochiKit.DOM.getElement(e);
this._setOptions(_6c2);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _6c3=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_6c3=C.fromBackground(e);
}else{
if(!(_6c3 instanceof C)){
_6c3=C.fromString(_6c3);
}
}
this.isTransparent=(_6c3.asRGB().a<=0);
var _6c5=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_6c5=C.fromBackground(e.offsetParent);
}else{
if(!(_6c5 instanceof C)){
_6c5=C.fromString(_6c5);
}
}
this._roundCornersImpl(e,_6c3,_6c5);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _6c7=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _6c9=doc.defaultView.getComputedStyle(e,null);
if(typeof (_6c9)==="undefined"||_6c9===null){
return e;
}
var _6ca=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_6c9.getPropertyValue("padding-top"),marginRight:_6c9.getPropertyValue("padding-right"),marginBottom:_6c9.getPropertyValue("padding-bottom"),marginLeft:_6c9.getPropertyValue("padding-left"),padding:"0px"}});
_6ca.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_6ca);
return e;
},_roundCornersImpl:function(e,_6cc,_6cd){
if(this.options.border){
this._renderBorder(e,_6cd);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_6cc,_6cd);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_6cc,_6cd);
}
},_renderBorder:function(el,_6cf){
var _6d0="1px solid "+this._borderColor(_6cf);
var _6d1="border-left: "+_6d0;
var _6d2="border-right: "+_6d0;
var _6d3="style='"+_6d1+";"+_6d2+"'";
el.innerHTML="<div "+_6d3+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_6d5,_6d6){
var _6d7=this._createCorner(_6d6);
for(var i=0;i<this.options.numSlices;i++){
_6d7.appendChild(this._createCornerSlice(_6d5,_6d6,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_6d7,el.firstChild);
},_roundBottomCorners:function(el,_6da,_6db){
var _6dc=this._createCorner(_6db);
for(var i=(this.options.numSlices-1);i>=0;i--){
_6dc.appendChild(this._createCornerSlice(_6da,_6db,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_6dc);
},_createCorner:function(_6de){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_6de.toString()}});
},_createCornerSlice:function(_6e0,_6e1,n,_6e3){
var _6e4=MochiKit.DOM.SPAN();
var _6e5=_6e4.style;
_6e5.backgroundColor=_6e0.toString();
_6e5.display="block";
_6e5.height="1px";
_6e5.overflow="hidden";
_6e5.fontSize="1px";
var _6e6=this._borderColor(_6e0,_6e1);
if(this.options.border&&n===0){
_6e5.borderTopStyle="solid";
_6e5.borderTopWidth="1px";
_6e5.borderLeftWidth="0px";
_6e5.borderRightWidth="0px";
_6e5.borderBottomWidth="0px";
_6e5.height="0px";
_6e5.borderColor=_6e6.toString();
}else{
if(_6e6){
_6e5.borderColor=_6e6.toString();
_6e5.borderStyle="solid";
_6e5.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_6e5.height="2px";
}
this._setMargin(_6e4,n,_6e3);
this._setBorder(_6e4,n,_6e3);
return _6e4;
},_setOptions:function(_6e7){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_6e7);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _6e8=this.options.corners;
if(this._hasString(_6e8,"all","top")){
return "";
}
var _6e9=(_6e8.indexOf("tl")!=-1);
var _6ea=(_6e8.indexOf("tr")!=-1);
if(_6e9&&_6ea){
return "";
}
if(_6e9){
return "left";
}
if(_6ea){
return "right";
}
return "";
},_whichSideBottom:function(){
var _6eb=this.options.corners;
if(this._hasString(_6eb,"all","bottom")){
return "";
}
var _6ec=(_6eb.indexOf("bl")!=-1);
var _6ed=(_6eb.indexOf("br")!=-1);
if(_6ec&&_6ed){
return "";
}
if(_6ec){
return "left";
}
if(_6ed){
return "right";
}
return "";
},_borderColor:function(_6ee,_6ef){
if(_6ee=="transparent"){
return _6ef;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _6ef.blendedColor(_6ee);
}
}
}
return "";
},_setMargin:function(el,n,_6f2){
var _6f3=this._marginSize(n)+"px";
var _6f4=(_6f2=="top"?this._whichSideTop():this._whichSideBottom());
var _6f5=el.style;
if(_6f4=="left"){
_6f5.marginLeft=_6f3;
_6f5.marginRight="0px";
}else{
if(_6f4=="right"){
_6f5.marginRight=_6f3;
_6f5.marginLeft="0px";
}else{
_6f5.marginLeft=_6f3;
_6f5.marginRight=_6f3;
}
}
},_setBorder:function(el,n,_6f8){
var _6f9=this._borderSize(n)+"px";
var _6fa=(_6f8=="top"?this._whichSideTop():this._whichSideBottom());
var _6fb=el.style;
if(_6fa=="left"){
_6fb.borderLeftWidth=_6f9;
_6fb.borderRightWidth="0px";
}else{
if(_6fa=="right"){
_6fb.borderRightWidth=_6f9;
_6fb.borderLeftWidth="0px";
}else{
_6fb.borderLeftWidth=_6f9;
_6fb.borderRightWidth=_6f9;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _6fe=[1,0];
return _6fe[n];
}else{
if(o.compact){
var _6ff=[2,1];
return _6ff[n];
}else{
if(o.blend){
var _700=[3,2,1,0];
return _700[n];
}else{
var _701=[5,3,2,1];
return _701[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _704;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_704=[1,0];
}else{
if(o.blend){
_704=[2,1,1,1];
}else{
if(o.border){
_704=[0,2,0,0];
}else{
if(this.isTransparent){
_704=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _704[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_709){
new MochiKit.Visual._RoundCorners(e,_709);
};
MochiKit.Visual.roundClass=function(_70a,_70b,_70c){
var _70d=MochiKit.DOM.getElementsByTagAndClassName(_70a,_70b);
for(var i=0;i<_70d.length;i++){
MochiKit.Visual.roundElement(_70d[i],_70c);
}
};
MochiKit.Visual.tagifyText=function(_70f,_710){
_710=_710||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_710+=";zoom:1";
}
_70f=MochiKit.DOM.getElement(_70f);
var ma=MochiKit.Base.map;
ma(function(_712){
if(_712.nodeType==3){
ma(function(_713){
_70f.insertBefore(MochiKit.DOM.SPAN({style:_710},_713==" "?String.fromCharCode(160):_713),_712);
},_712.nodeValue.split(""));
MochiKit.DOM.removeElement(_712);
}
},_70f.childNodes);
};
MochiKit.Visual._forceRerendering=function(_714){
try{
_714=MochiKit.DOM.getElement(_714);
var n=document.createTextNode(" ");
_714.appendChild(n);
_714.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_716,_717,_718){
_718=MochiKit.Base.update({speed:0.1,delay:0},_718);
var _719=_718.delay;
var _71a=0;
MochiKit.Base.map(function(_71b){
_718.delay=_71a*_718.speed+_719;
new _717(_71b,_718);
_71a+=1;
},_716);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_71c,_71d,_71e){
_71c=MochiKit.DOM.getElement(_71c);
_71d=(_71d||"appear").toLowerCase();
_71e=MochiKit.Base.update({queue:{position:"end",scope:(_71c.id||"global"),limit:1}},_71e);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_71c,"display")!="none"?v.PAIRS[_71d][1]:v.PAIRS[_71d][0]](_71c,_71e);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_726){
if(_726){
pos*=2*_726;
}else{
pos*=10;
}
var _727=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_727:1-_727;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.spring=function(pos){
return 1-(Math.cos(pos*2.5*Math.PI)*Math.exp(-pos*6));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_72d){
var _72e=new Date().getTime();
var _72f=(typeof (_72d.options.queue)=="string")?_72d.options.queue:_72d.options.queue.position;
var ma=MochiKit.Base.map;
switch(_72f){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_72d.finishOn;
e.finishOn+=_72d.finishOn;
}
},this.effects);
break;
case "end":
var _732;
ma(function(e){
var i=e.finishOn;
if(i>=(_732||i)){
_732=i;
}
},this.effects);
_72e=_732||_72e;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
case "replace":
ma(function(e){
e.cancel();
},this.effects);
break;
}
_72d.startOn+=_72e;
_72d.finishOn+=_72e;
if(!_72d.options.queue.limit||this.effects.length<_72d.options.queue.limit){
this.effects.push(_72d);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_738){
return setInterval(func,_738);
},remove:function(_739){
this.effects=MochiKit.Base.filter(function(e){
return e!=_739;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_73b){
clearInterval(_73b);
},loop:function(){
var _73c=new Date().getTime();
MochiKit.Base.map(function(_73d){
_73d.loop(_73c);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_73e){
if(typeof (_73e)!="string"){
return _73e;
}
if(!this.instances[_73e]){
this.instances[_73e]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_73e];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_73f){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_73f,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_741){
if(_741>=this.startOn){
if(_741>=this.finishOn){
return this.finalize();
}
var pos=(_741-this.startOn)/(this.finishOn-this.startOn);
var _743=Math.round(pos*this.options.fps*this.options.duration);
if(_743>this.currentFrame){
this.render(pos);
this.currentFrame=_743;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
var _745=this.options.transition;
if(typeof (_745)=="string"){
_745=MochiKit.Visual.Transitions[_745];
}
if(typeof (_745)=="function"){
pos=_745(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_746){
},event:function(_747){
if(this.options[_747+"Internal"]){
this.options[_747+"Internal"](this);
}
if(this.options[_747]){
this.options[_747](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_748,_749){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_748,_749);
}
this.__init__(_748,_749);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_74b,_74c){
this.effects=_74b||[];
this.start(_74c);
},update:function(_74d){
MochiKit.Base.map(function(_74e){
_74e.render(_74d);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_74f){
_74f.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_750,_751){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_750,_751);
}
this.__init__(_750,_751);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_753,_754){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_753||[];
MochiKit.Base.map(function(_756){
defs.duration+=_756.options.duration;
},this.effects);
MochiKit.Base.setdefault(_754,defs);
this.start(_754);
},update:function(_757){
var time=_757*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _75a=this.effects[i];
if(time<=_75a.options.duration){
_75a.render(time/_75a.options.duration);
break;
}else{
time-=_75a.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_75b){
_75b.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_75c,_75d){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_75c,_75d);
}
this.__init__(_75c,_75d);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_75f,_760){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_75f);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_760=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_760);
this.start(_760);
},update:function(_763){
MochiKit.Style.setStyle(this.element,{"opacity":_763});
}});
MochiKit.Visual.Move=function(_764,_765){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_764,_765);
}
this.__init__(_764,_765);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_767,_768){
this.element=MochiKit.DOM.getElement(_767);
_768=MochiKit.Base.update({x:0,y:0,mode:"relative"},_768);
this.start(_768);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _76a=s.visibility;
var _76b=s.display;
if(_76b=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_76b=="none"){
s.visibility=_76a;
s.display=_76b;
}
},update:function(_76c){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_76c+this.originalLeft)+"px",top:Math.round(this.options.y*_76c+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_76d,_76e,_76f){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_76d,_76e,_76f);
}
this.__init__(_76d,_76e,_76f);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_771,_772,_773){
this.element=MochiKit.DOM.getElement(_771);
_773=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_772},_773);
this.start(_773);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _777=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_778){
if(_777.indexOf(_778)>0){
this.fontSize=parseFloat(_777);
this.fontSizeType=_778;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_779){
var _77a=(this.options.scaleFrom/100)+(this.factor*_779);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_77a+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_77a,this.dims[1]*_77a);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_77b,_77c){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_77c)+"px";
}
if(this.options.scaleY){
d.height=r(_77b)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_77b-this.dims[0])/2;
var _780=(_77c-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_780+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_780+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_781,_782){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_781,_782);
}
this.__init__(_781,_782);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_784,_785){
this.element=MochiKit.DOM.getElement(_784);
_785=MochiKit.Base.update({startcolor:"#ffff99"},_785);
this.start(_785);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_78a){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_78a));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_78d,_78e){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_78d,_78e);
}
this.__init__(_78d,_78e);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_790,_791){
this.element=MochiKit.DOM.getElement(_790);
this.start(_791);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _793=p.cumulativeOffset(this.element);
if(this.options.offset){
_793.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_793.y>max?max:_793.y)-this.scrollStart;
},update:function(_795){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_795*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_797,_798){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_797,_798);
}
this.__init__(_797,_798);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_79a,_79b){
this.element=MochiKit.DOM.getElement(_79a);
this.start(_79b);
},setup:function(){
var b=MochiKit.Base;
var _79d=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _79e,unit;
for(var s in _79d){
_79e=_79d[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_79e)){
var _7a1=_79e.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_79e=parseFloat(_7a1[1]);
unit=(_7a1.length==3)?_7a1[2]:null;
this.styleEnd[s]=_79e;
this.units[s]=unit;
_79e=MochiKit.Style.getStyle(this.element,s);
_7a1=_79e.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_79e=parseFloat(_7a1[1]);
this.styleStart[s]=_79e;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_79e=c.fromString(_79e);
if(_79e){
this.units[s]="color";
this.styleEnd[s]=_79e.toHexString();
_79e=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_79e).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_79e;
}
}
}
},update:function(_7a5){
var _7a6;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _7a9=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_7a9[i]+(end[i]-_7a9[i])*_7a5));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_7a6=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_7a5*1000)/1000+this.units[s];
this.element.style[s]=_7a6;
}
}
}});
MochiKit.Visual.fade=function(_7ac,_7ad){
var s=MochiKit.Style;
var _7af=s.getStyle(_7ac,"opacity");
_7ad=MochiKit.Base.update({from:s.getStyle(_7ac,"opacity")||1,to:0,afterFinishInternal:function(_7b0){
if(_7b0.options.to!==0){
return;
}
s.hideElement(_7b0.element);
s.setStyle(_7b0.element,{"opacity":_7af});
}},_7ad);
return new MochiKit.Visual.Opacity(_7ac,_7ad);
};
MochiKit.Visual.appear=function(_7b1,_7b2){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_7b2=MochiKit.Base.update({from:(s.getStyle(_7b1,"display")=="none"?0:s.getStyle(_7b1,"opacity")||0),to:1,afterFinishInternal:function(_7b5){
v._forceRerendering(_7b5.element);
},beforeSetupInternal:function(_7b6){
s.setStyle(_7b6.element,{"opacity":_7b6.options.from});
s.showElement(_7b6.element);
}},_7b2);
return new v.Opacity(_7b1,_7b2);
};
MochiKit.Visual.puff=function(_7b7,_7b8){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_7b7=MochiKit.DOM.getElement(_7b7);
var _7bb=MochiKit.Style.getElementDimensions(_7b7,true);
var _7bc={position:s.getStyle(_7b7,"position"),top:_7b7.style.top,left:_7b7.style.left,width:_7b7.style.width,height:_7b7.style.height,opacity:s.getStyle(_7b7,"opacity")};
_7b8=MochiKit.Base.update({beforeSetupInternal:function(_7bd){
MochiKit.Position.absolutize(_7bd.effects[0].element);
},afterFinishInternal:function(_7be){
s.hideElement(_7be.effects[0].element);
s.setStyle(_7be.effects[0].element,_7bc);
},scaleContent:true,scaleFromCenter:true},_7b8);
return new v.Parallel([new v.Scale(_7b7,200,{sync:true,scaleFromCenter:_7b8.scaleFromCenter,scaleMode:{originalHeight:_7bb.h,originalWidth:_7bb.w},scaleContent:_7b8.scaleContent,restoreAfterFinish:true}),new v.Opacity(_7b7,{sync:true,to:0})],_7b8);
};
MochiKit.Visual.blindUp=function(_7bf,_7c0){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7bf=d.getElement(_7bf);
var _7c3=s.getElementDimensions(_7bf,true);
var _7c4=s.makeClipping(_7bf);
_7c0=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7c3.h,originalWidth:_7c3.w},restoreAfterFinish:true,afterFinishInternal:function(_7c5){
s.hideElement(_7c5.element);
s.undoClipping(_7c5.element,_7c4);
}},_7c0);
return new MochiKit.Visual.Scale(_7bf,0,_7c0);
};
MochiKit.Visual.blindDown=function(_7c6,_7c7){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7c6=d.getElement(_7c6);
var _7ca=s.getElementDimensions(_7c6,true);
var _7cb;
_7c7=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7ca.h,originalWidth:_7ca.w},restoreAfterFinish:true,afterSetupInternal:function(_7cc){
_7cb=s.makeClipping(_7cc.element);
s.setStyle(_7cc.element,{height:"0px"});
s.showElement(_7cc.element);
},afterFinishInternal:function(_7cd){
s.undoClipping(_7cd.element,_7cb);
}},_7c7);
return new MochiKit.Visual.Scale(_7c6,100,_7c7);
};
MochiKit.Visual.switchOff=function(_7ce,_7cf){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7ce=d.getElement(_7ce);
var _7d2=s.getElementDimensions(_7ce,true);
var _7d3=s.getStyle(_7ce,"opacity");
var _7d4;
_7cf=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_7d5){
s.makePositioned(_7ce);
_7d4=s.makeClipping(_7ce);
},afterFinishInternal:function(_7d6){
s.hideElement(_7ce);
s.undoClipping(_7ce,_7d4);
s.undoPositioned(_7ce);
s.setStyle(_7ce,{"opacity":_7d3});
}},_7cf);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_7ce,{sync:true,duration:0.57*_7cf.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_7ce,1,{sync:true,duration:0.43*_7cf.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_7d2.h,originalWidth:_7d2.w},scaleContent:false,restoreAfterFinish:true})],_7cf);
};
MochiKit.Visual.dropOut=function(_7d8,_7d9){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7d8=d.getElement(_7d8);
var _7dc={top:s.getStyle(_7d8,"top"),left:s.getStyle(_7d8,"left"),opacity:s.getStyle(_7d8,"opacity")};
_7d9=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_7dd){
s.makePositioned(_7dd.effects[0].element);
},afterFinishInternal:function(_7de){
s.hideElement(_7de.effects[0].element);
s.undoPositioned(_7de.effects[0].element);
s.setStyle(_7de.effects[0].element,_7dc);
}},_7d9);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_7d8,{x:0,y:_7d9.distance,sync:true}),new v.Opacity(_7d8,{sync:true,to:0})],_7d9);
};
MochiKit.Visual.shake=function(_7e0,_7e1){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7e0=d.getElement(_7e0);
var _7e5={top:s.getStyle(_7e0,"top"),left:s.getStyle(_7e0,"left")};
_7e1=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_7e6){
s.undoPositioned(_7e0);
s.setStyle(_7e0,_7e5);
}},_7e1);
return new v.Sequence([new v.Move(_7e0,{sync:true,duration:0.1*_7e1.duration,x:20,y:0}),new v.Move(_7e0,{sync:true,duration:0.2*_7e1.duration,x:-40,y:0}),new v.Move(_7e0,{sync:true,duration:0.2*_7e1.duration,x:40,y:0}),new v.Move(_7e0,{sync:true,duration:0.2*_7e1.duration,x:-40,y:0}),new v.Move(_7e0,{sync:true,duration:0.2*_7e1.duration,x:40,y:0}),new v.Move(_7e0,{sync:true,duration:0.1*_7e1.duration,x:-20,y:0})],_7e1);
};
MochiKit.Visual.slideDown=function(_7e7,_7e8){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7e7=d.getElement(_7e7);
if(!_7e7.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_7e7);
var _7ec=s.getStyle(_7e7.firstChild,"bottom")||0;
var _7ed=s.getElementDimensions(_7e7,true);
var _7ee;
_7e8=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7ed.h,originalWidth:_7ed.w},restoreAfterFinish:true,afterSetupInternal:function(_7ef){
s.makePositioned(_7ef.element);
s.makePositioned(_7ef.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7ef.element,{top:""});
}
_7ee=s.makeClipping(_7ef.element);
s.setStyle(_7ef.element,{height:"0px"});
s.showElement(_7ef.element);
},afterUpdateInternal:function(_7f0){
var _7f1=s.getElementDimensions(_7f0.element,true);
s.setStyle(_7f0.element.firstChild,{bottom:(_7f0.dims[0]-_7f1.h)+"px"});
},afterFinishInternal:function(_7f2){
s.undoClipping(_7f2.element,_7ee);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_7f2.element);
s.undoPositioned(_7f2.element.firstChild);
}else{
s.undoPositioned(_7f2.element.firstChild);
s.undoPositioned(_7f2.element);
}
s.setStyle(_7f2.element.firstChild,{bottom:_7ec});
}},_7e8);
return new MochiKit.Visual.Scale(_7e7,100,_7e8);
};
MochiKit.Visual.slideUp=function(_7f3,_7f4){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_7f3=d.getElement(_7f3);
if(!_7f3.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_7f3);
var _7f8=s.getStyle(_7f3.firstChild,"bottom");
var _7f9=s.getElementDimensions(_7f3,true);
var _7fa;
_7f4=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7f9.h,originalWidth:_7f9.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_7fb){
s.makePositioned(_7fb.element);
s.makePositioned(_7fb.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_7fb.element,{top:""});
}
_7fa=s.makeClipping(_7fb.element);
s.showElement(_7fb.element);
},afterUpdateInternal:function(_7fc){
var _7fd=s.getElementDimensions(_7fc.element,true);
s.setStyle(_7fc.element.firstChild,{bottom:(_7fc.dims[0]-_7fd.h)+"px"});
},afterFinishInternal:function(_7fe){
s.hideElement(_7fe.element);
s.undoClipping(_7fe.element,_7fa);
s.undoPositioned(_7fe.element.firstChild);
s.undoPositioned(_7fe.element);
s.setStyle(_7fe.element.firstChild,{bottom:_7f8});
}},_7f4);
return new MochiKit.Visual.Scale(_7f3,0,_7f4);
};
MochiKit.Visual.squish=function(_7ff,_800){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _804=s.getElementDimensions(_7ff,true);
var _805;
_800=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_804.w,originalWidth:_804.h},beforeSetupInternal:function(_806){
_805=s.makeClipping(_806.element);
},afterFinishInternal:function(_807){
s.hideElement(_807.element);
s.undoClipping(_807.element,_805);
}},_800);
return new MochiKit.Visual.Scale(_7ff,/Opera/.test(navigator.userAgent)?1:0,_800);
};
MochiKit.Visual.grow=function(_808,_809){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_808=d.getElement(_808);
_809=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_809);
var _80d={top:_808.style.top,left:_808.style.left,height:_808.style.height,width:_808.style.width,opacity:s.getStyle(_808,"opacity")};
var dims=s.getElementDimensions(_808,true);
var _80f,_810;
var _811,_812;
switch(_809.direction){
case "top-left":
_80f=_810=_811=_812=0;
break;
case "top-right":
_80f=dims.w;
_810=_812=0;
_811=-dims.w;
break;
case "bottom-left":
_80f=_811=0;
_810=dims.h;
_812=-dims.h;
break;
case "bottom-right":
_80f=dims.w;
_810=dims.h;
_811=-dims.w;
_812=-dims.h;
break;
case "center":
_80f=dims.w/2;
_810=dims.h/2;
_811=-dims.w/2;
_812=-dims.h/2;
break;
}
var _813=MochiKit.Base.update({beforeSetupInternal:function(_814){
s.setStyle(_814.effects[0].element,{height:"0px"});
s.showElement(_814.effects[0].element);
},afterFinishInternal:function(_815){
s.undoClipping(_815.effects[0].element);
s.undoPositioned(_815.effects[0].element);
s.setStyle(_815.effects[0].element,_80d);
}},_809);
return new v.Move(_808,{x:_80f,y:_810,duration:0.01,beforeSetupInternal:function(_816){
s.hideElement(_816.element);
s.makeClipping(_816.element);
s.makePositioned(_816.element);
},afterFinishInternal:function(_817){
new v.Parallel([new v.Opacity(_817.element,{sync:true,to:1,from:0,transition:_809.opacityTransition}),new v.Move(_817.element,{x:_811,y:_812,sync:true,transition:_809.moveTransition}),new v.Scale(_817.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_809.scaleTransition,scaleContent:_809.scaleContent,scaleFromCenter:_809.scaleFromCenter,restoreAfterFinish:true})],_813);
}});
};
MochiKit.Visual.shrink=function(_818,_819){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_818=d.getElement(_818);
_819=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_819);
var _81d={top:_818.style.top,left:_818.style.left,height:_818.style.height,width:_818.style.width,opacity:s.getStyle(_818,"opacity")};
var dims=s.getElementDimensions(_818,true);
var _81f,_820;
switch(_819.direction){
case "top-left":
_81f=_820=0;
break;
case "top-right":
_81f=dims.w;
_820=0;
break;
case "bottom-left":
_81f=0;
_820=dims.h;
break;
case "bottom-right":
_81f=dims.w;
_820=dims.h;
break;
case "center":
_81f=dims.w/2;
_820=dims.h/2;
break;
}
var _821;
var _822=MochiKit.Base.update({beforeStartInternal:function(_823){
s.makePositioned(_823.effects[0].element);
_821=s.makeClipping(_823.effects[0].element);
},afterFinishInternal:function(_824){
s.hideElement(_824.effects[0].element);
s.undoClipping(_824.effects[0].element,_821);
s.undoPositioned(_824.effects[0].element);
s.setStyle(_824.effects[0].element,_81d);
}},_819);
return new v.Parallel([new v.Opacity(_818,{sync:true,to:0,from:1,transition:_819.opacityTransition}),new v.Scale(_818,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_819.scaleTransition,scaleContent:_819.scaleContent,scaleFromCenter:_819.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_818,{x:_81f,y:_820,sync:true,transition:_819.moveTransition})],_822);
};
MochiKit.Visual.pulsate=function(_825,_826){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _82a=MochiKit.Style.getStyle(_825,"opacity");
_826=b.update({duration:3,from:0,afterFinishInternal:function(_82b){
MochiKit.Style.setStyle(_82b.element,{"opacity":_82a});
}},_826);
var _82c=_826.transition||v.Transitions.sinoidal;
_826.transition=function(pos){
return _82c(1-v.Transitions.pulse(pos,_826.pulses));
};
return new v.Opacity(_825,_826);
};
MochiKit.Visual.fold=function(_82e,_82f){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_82e=d.getElement(_82e);
var _833=s.getElementDimensions(_82e,true);
var _834={top:_82e.style.top,left:_82e.style.left,width:_82e.style.width,height:_82e.style.height};
var _835=s.makeClipping(_82e);
_82f=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_833.h,originalWidth:_833.w},afterFinishInternal:function(_836){
new v.Scale(_82e,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_833.h,originalWidth:_833.w},afterFinishInternal:function(_837){
s.hideElement(_837.element);
s.undoClipping(_837.element,_835);
s.setStyle(_837.element,_834);
}});
}},_82f);
return new v.Scale(_82e,5,_82f);
};
MochiKit.Base.nameFunctions(MochiKit.Visual);
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DragAndDrop");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Signal");
goog.require("MochiKit.Visual");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_838){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_838);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_83d){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_83d)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_83d);
}
},this.drops);
},findDeepestChild:function(_83f){
var _840=_83f[0];
for(var i=1;i<_83f.length;++i){
if(MochiKit.DOM.isChildNode(_83f[i].element,_840.element)){
_840=_83f[i];
}
}
return _840;
},show:function(_842,_843){
if(!this.drops.length){
return;
}
var _844=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_842,_843)){
_844.push(drop);
}
});
if(_844.length>0){
var drop=this.findDeepestChild(_844);
MochiKit.Position.within(drop.element,_842.page.x,_842.page.y);
drop.options.onhover(_843,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_847,_848){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_847.mouse(),_848)){
this.last_active.options.ondrop(_848,this.last_active.element,_847);
}
},reset:function(_849){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_849);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_84b,_84c){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_84b,_84c);
}
this.__init__(_84b,_84c);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_84e,_84f){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_84e);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_84f);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_853){
if(this.options._containers.length){
var _854;
if(this.options.tree){
_854=_853.treeNode;
}else{
_854=_853.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _854==c;
});
}else{
return true;
}
},isAccepted:function(_856){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_856,c);
}));
},isAffected:function(_858,_859){
return ((this.element!=_859)&&this.isContained(_859)&&this.isAccepted(_859)&&MochiKit.Position.within(this.element,_858.page.x,_858.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_85a){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_85a);
},unregister:function(_85c){
this.drags=MochiKit.Base.filter(function(d){
return d!=_85c;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_85f){
window.focus();
this.activeDraggable=_85f;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_860){
if(!this.activeDraggable){
return;
}
var _861=_860.mouse();
if(this._lastPointer&&this._lastPointer.page.x==_861.page.x&&this._lastPointer.page.y==_861.page.y){
return;
}
this._lastPointer=_861;
this.activeDraggable.updateDrag(_860,_861);
},endDrag:function(_862){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_862);
this.activeDraggable=null;
},keyPress:function(_863){
if(this.activeDraggable){
this.activeDraggable.keyPress(_863);
}
},notify:function(_864,_865,_866){
MochiKit.Signal.signal(this,_864,_865,_866);
}};
MochiKit.DragAndDrop.Draggable=function(_867,_868){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_867,_868);
}
this.__init__(_867,_868);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_86a,_86b){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_86b=b.update({handle:false,starteffect:function(_86e){
this._savedOpacity=MochiKit.Style.getStyle(_86e,"opacity")||1;
new v.Opacity(_86e,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_86f,_870,_871){
var dur=Math.sqrt(Math.abs(_870^2)+Math.abs(_871^2))*0.02;
return new v.Move(_86f,{x:-_871,y:-_870,duration:dur});
},endeffect:function(_873){
new v.Opacity(_873,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_86b);
var d=MochiKit.DOM;
this.element=d.getElement(_86a);
if(_86b.handle&&(typeof (_86b.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_86b.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_86b.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_86b.scroll&&!_86b.scroll.scrollTo&&!_86b.scroll.outerHTML){
_86b.scroll=d.getElement(_86b.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_86b.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_86b;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0",10),parseInt(s(this.element,"top")||"0",10)];
},initDrag:function(_876){
if(!_876.mouse().button.left){
return;
}
var src=_876.target();
var _878=(src.tagName||"").toUpperCase();
if(_878==="INPUT"||_878==="SELECT"||_878==="OPTION"||_878==="BUTTON"||_878==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _879=_876.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_879.page.x-pos.x,_879.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_876.stop();
},startDrag:function(_87b){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=MochiKit.Style.getStyle(this.element,"z-index");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _87c=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_87c.left;
this.originalScrollTop=_87c.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_87b);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_87d,_87e){
if(!this.dragging){
this.startDrag(_87d);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_87e,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_87d);
this.draw(_87e);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _882=[0,0];
if(_87e.page.x>(q.x-this.options.scrollSensitivity)){
_882[0]=_87e.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_87e.page.x<(p.x+this.options.scrollSensitivity)){
_882[0]=_87e.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_87e.page.y>(q.y-this.options.scrollSensitivity)){
_882[1]=_87e.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_87e.page.y<(p.y+this.options.scrollSensitivity)){
_882[1]=_87e.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_882);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_87d.stop();
},finishDrag:function(_883,_884){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_884){
dr.Droppables.fire(_883,this.element);
}
dr.Draggables.notify("end",this,_883);
var _886=this.options.revert;
if(_886&&typeof (_886)=="function"){
_886=_886(this.element);
}
var d=this.currentDelta();
if(_886&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_888){
if(_888.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_888,false);
_888.stop();
},endDrag:function(_889){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_889,true);
_889.stop();
},draw:function(_88a){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_88a.page.x-pos.x-this.offset[0],_88a.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _891=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_891.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_891.top=p[1]+"px";
}
if(_891.visibility=="hidden"){
_891.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_892){
if(!_892[0]&&!_892[1]){
return;
}
this.scrollSpeed=[_892[0]*this.options.scrollSpeed,_892[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _893=new Date();
var _894=_893-this.lastScrolled;
this.lastScrolled=_893;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_894/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_894/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_894/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_894/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_894/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Sortable");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Position");
goog.require("MochiKit.DragAndDrop");
}
MochiKit.Base.module(MochiKit,"Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_89c){
while(_89c.tagName.toUpperCase()!="BODY"){
if(_89c.id&&MochiKit.Sortable.sortables[_89c.id]){
return _89c;
}
_89c=_89c.parentNode;
}
},_createElementId:function(_89d){
if(_89d.id==null||_89d.id==""){
var d=MochiKit.DOM;
var id;
var _8a0=1;
while(d.getElement(id="sortable"+_8a0)!=null){
_8a0+=1;
}
d.setNodeAttribute(_89d,"id",id);
}
},options:function(_8a1){
_8a1=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_8a1));
if(!_8a1){
return;
}
return MochiKit.Sortable.sortables[_8a1.id];
},destroy:function(_8a2){
var s=MochiKit.Sortable.options(_8a2);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_8a8,_8a9){
_8a8=MochiKit.DOM.getElement(_8a8);
var self=MochiKit.Sortable;
self._createElementId(_8a8);
_8a9=MochiKit.Base.update({element:_8a8,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_8a8],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_8a9);
self.destroy(_8a8);
var _8ab={revert:true,ghosting:_8a9.ghosting,scroll:_8a9.scroll,scrollSensitivity:_8a9.scrollSensitivity,scrollSpeed:_8a9.scrollSpeed,constraint:_8a9.constraint,handle:_8a9.handle};
if(_8a9.starteffect){
_8ab.starteffect=_8a9.starteffect;
}
if(_8a9.reverteffect){
_8ab.reverteffect=_8a9.reverteffect;
}else{
if(_8a9.ghosting){
_8ab.reverteffect=function(_8ac){
_8ac.style.top=0;
_8ac.style.left=0;
};
}
}
if(_8a9.endeffect){
_8ab.endeffect=_8a9.endeffect;
}
if(_8a9.zindex){
_8ab.zindex=_8a9.zindex;
}
var _8ad={overlap:_8a9.overlap,containment:_8a9.containment,hoverclass:_8a9.hoverclass,onhover:self.onHover,tree:_8a9.tree,accept:_8a9.accept};
var _8ae={onhover:self.onEmptyHover,overlap:_8a9.overlap,containment:_8a9.containment,hoverclass:_8a9.hoverclass,accept:_8a9.accept};
MochiKit.DOM.removeEmptyTextNodes(_8a8);
_8a9.draggables=[];
_8a9.droppables=[];
if(_8a9.dropOnEmpty||_8a9.tree){
new MochiKit.DragAndDrop.Droppable(_8a8,_8ae);
_8a9.droppables.push(_8a8);
}
MochiKit.Base.map(function(e){
var _8b0=_8a9.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_8a9.handle,e):e;
_8a9.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_8ab,{handle:_8b0})));
new MochiKit.DragAndDrop.Droppable(e,_8ad);
if(_8a9.tree){
e.treeNode=_8a8;
}
_8a9.droppables.push(e);
},(self.findElements(_8a8,_8a9)||[]));
if(_8a9.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_8ae);
e.treeNode=_8a8;
_8a9.droppables.push(e);
},(self.findTreeElements(_8a8,_8a9)||[]));
}
self.sortables[_8a8.id]=_8a9;
_8a9.lastValue=self.serialize(_8a8);
_8a9.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_8a8));
_8a9.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_8a8));
},onStart:function(_8b2,_8b3){
var self=MochiKit.Sortable;
var _8b5=self.options(_8b2);
_8b5.lastValue=self.serialize(_8b5.element);
},onEnd:function(_8b6,_8b7){
var self=MochiKit.Sortable;
self.unmark();
var _8b9=self.options(_8b6);
if(_8b9.lastValue!=self.serialize(_8b9.element)){
_8b9.onUpdate(_8b9.element);
}
},findElements:function(_8ba,_8bb){
return MochiKit.Sortable.findChildren(_8ba,_8bb.only,_8bb.tree,_8bb.tag);
},findTreeElements:function(_8bc,_8bd){
return MochiKit.Sortable.findChildren(_8bc,_8bd.only,_8bd.tree?true:false,_8bd.treeTag);
},findChildren:function(_8be,only,_8c0,_8c1){
if(!_8be.hasChildNodes()){
return null;
}
_8c1=_8c1.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _8c2=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_8c1&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_8c2.push(e);
}
if(_8c0){
var _8c5=MochiKit.Sortable.findChildren(e,only,_8c0,_8c1);
if(_8c5&&_8c5.length>0){
_8c2=_8c2.concat(_8c5);
}
}
},_8be.childNodes);
return _8c2;
},onHover:function(_8c6,_8c7,_8c8){
if(MochiKit.DOM.isChildNode(_8c7,_8c6)){
return;
}
var self=MochiKit.Sortable;
if(_8c8>0.33&&_8c8<0.66&&self.options(_8c7).tree){
return;
}else{
if(_8c8>0.5){
self.mark(_8c7,"before");
if(_8c7.previousSibling!=_8c6){
var _8ca=_8c6.parentNode;
_8c6.style.visibility="hidden";
_8c7.parentNode.insertBefore(_8c6,_8c7);
if(_8c7.parentNode!=_8ca){
self.options(_8ca).onChange(_8c6);
}
self.options(_8c7.parentNode).onChange(_8c6);
}
}else{
self.mark(_8c7,"after");
var _8cb=_8c7.nextSibling||null;
if(_8cb!=_8c6){
var _8ca=_8c6.parentNode;
_8c6.style.visibility="hidden";
_8c7.parentNode.insertBefore(_8c6,_8cb);
if(_8c7.parentNode!=_8ca){
self.options(_8ca).onChange(_8c6);
}
self.options(_8c7.parentNode).onChange(_8c6);
}
}
}
},_offsetSize:function(_8cc,type){
if(type=="vertical"||type=="height"){
return _8cc.offsetHeight;
}else{
return _8cc.offsetWidth;
}
},onEmptyHover:function(_8ce,_8cf,_8d0){
var _8d1=_8ce.parentNode;
var self=MochiKit.Sortable;
var _8d3=self.options(_8cf);
if(!MochiKit.DOM.isChildNode(_8cf,_8ce)){
var _8d4;
var _8d5=self.findElements(_8cf,{tag:_8d3.tag,only:_8d3.only});
var _8d6=null;
if(_8d5){
var _8d7=self._offsetSize(_8cf,_8d3.overlap)*(1-_8d0);
for(_8d4=0;_8d4<_8d5.length;_8d4+=1){
if(_8d7-self._offsetSize(_8d5[_8d4],_8d3.overlap)>=0){
_8d7-=self._offsetSize(_8d5[_8d4],_8d3.overlap);
}else{
if(_8d7-(self._offsetSize(_8d5[_8d4],_8d3.overlap)/2)>=0){
_8d6=_8d4+1<_8d5.length?_8d5[_8d4+1]:null;
break;
}else{
_8d6=_8d5[_8d4];
break;
}
}
}
}
_8cf.insertBefore(_8ce,_8d6);
self.options(_8d1).onChange(_8ce);
_8d3.onChange(_8ce);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_8d9,_8da){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _8dd=self.options(_8d9.parentNode);
if(_8dd&&!_8dd.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _8de=MochiKit.Position.cumulativeOffset(_8d9);
self._marker.style.left=_8de.x+"px";
self._marker.style.top=_8de.y+"px";
if(_8da=="after"){
if(_8dd.overlap=="horizontal"){
self._marker.style.left=(_8de.x+_8d9.clientWidth)+"px";
}else{
self._marker.style.top=(_8de.y+_8d9.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_8df,_8e0,_8e1){
var self=MochiKit.Sortable;
var _8e3=self.findElements(_8df,_8e0)||[];
for(var i=0;i<_8e3.length;++i){
var _8e5=_8e3[i].id.match(_8e0.format);
if(!_8e5){
continue;
}
var _8e6={id:encodeURIComponent(_8e5?_8e5[1]:null),element:_8df,parent:_8e1,children:[],position:_8e1.children.length,container:self._findChildrenElement(_8e3[i],_8e0.treeTag.toUpperCase())};
if(_8e6.container){
self._tree(_8e6.container,_8e0,_8e6);
}
_8e1.children.push(_8e6);
}
return _8e1;
},_findChildrenElement:function(_8e7,_8e8){
if(_8e7&&_8e7.hasChildNodes){
_8e8=_8e8.toUpperCase();
for(var i=0;i<_8e7.childNodes.length;++i){
if(_8e7.childNodes[i].tagName.toUpperCase()==_8e8){
return _8e7.childNodes[i];
}
}
}
return null;
},tree:function(_8ea,_8eb){
_8ea=MochiKit.DOM.getElement(_8ea);
var _8ec=MochiKit.Sortable.options(_8ea);
_8eb=MochiKit.Base.update({tag:_8ec.tag,treeTag:_8ec.treeTag,only:_8ec.only,name:_8ea.id,format:_8ec.format},_8eb||{});
var root={id:null,parent:null,children:new Array,container:_8ea,position:0};
return MochiKit.Sortable._tree(_8ea,_8eb,root);
},setSequence:function(_8ee,_8ef,_8f0){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_8ee=MochiKit.DOM.getElement(_8ee);
_8f0=b.update(self.options(_8ee),_8f0||{});
var _8f3={};
b.map(function(n){
var m=n.id.match(_8f0.format);
if(m){
_8f3[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_8ee,_8f0));
b.map(function(_8f6){
var n=_8f3[_8f6];
if(n){
n[1].appendChild(n[0]);
delete _8f3[_8f6];
}
},_8ef);
},_constructIndex:function(node){
var _8f9="";
do{
if(node.id){
_8f9="["+node.position+"]"+_8f9;
}
}while((node=node.parent)!=null);
return _8f9;
},sequence:function(_8fa,_8fb){
_8fa=MochiKit.DOM.getElement(_8fa);
var self=MochiKit.Sortable;
var _8fb=MochiKit.Base.update(self.options(_8fa),_8fb||{});
return MochiKit.Base.map(function(item){
return item.id.match(_8fb.format)?item.id.match(_8fb.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_8fa,_8fb)||[]));
},serialize:function(_8fe,_8ff){
_8fe=MochiKit.DOM.getElement(_8fe);
var self=MochiKit.Sortable;
_8ff=MochiKit.Base.update(self.options(_8fe),_8ff||{});
var name=encodeURIComponent(_8ff.name||_8fe.id);
if(_8ff.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_8fe,_8ff).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_8fe,_8ff)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base_ext");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Base_ext","1.5",["Base"]);
MochiKit.Base._arg_placeholder=function(_904){
this.index=_904;
};
var _1=new MochiKit.Base._arg_placeholder(0);
var _2=new MochiKit.Base._arg_placeholder(1);
var _3=new MochiKit.Base._arg_placeholder(2);
var _4=new MochiKit.Base._arg_placeholder(3);
var _5=new MochiKit.Base._arg_placeholder(4);
var _6=new MochiKit.Base._arg_placeholder(5);
var _7=new MochiKit.Base._arg_placeholder(6);
var _8=new MochiKit.Base._arg_placeholder(7);
var _9=new MochiKit.Base._arg_placeholder(8);
var _10=new MochiKit.Base._arg_placeholder(9);
MochiKit.Base._rebind_preargs=function(_905,args,_907){
_907=_907||{};
for(var i=0;i<_905.length;++i){
var pa=_905[i];
if(pa instanceof MochiKit.Base._arg_placeholder){
if(pa.index<args.length){
_905[i]=args[pa.index];
_907[pa.index]=pa.index;
}
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
MochiKit.Base._rebind_preargs(pa.im_preargs,args,_907);
}
}
}
return _907;
};
MochiKit.Base.bind2=function(func,self,_90c){
if(typeof (func)=="string"){
func=self[func];
}
var _90d=func.im_func;
var _90e=func.im_preargs;
var _90f=func.im_self;
var m=MochiKit.Base;
if(typeof (func)=="function"&&typeof (func.apply)=="undefined"){
func=m._wrapDumbFunction(func);
}
if(typeof (_90d)!="function"){
_90d=func;
}
if(typeof (self)!="undefined"){
_90f=self;
}
if(typeof (_90e)=="undefined"){
_90e=[];
}else{
_90e=_90e.slice();
}
var args=Array.prototype.slice.call(arguments,self instanceof m._arg_placeholder?1:2);
var _912=MochiKit.Base._rebind_preargs(_90e,args);
for(var _913 in _912){
args.splice(_912[_913],1);
}
m.extend(_90e,args);
var _914=function(){
var me=arguments.callee;
var self=me.im_self;
if(!self){
self=this;
}
var args=[];
if(me.im_preargs.length>0){
var imax=0;
for(var i=0;i<me.im_preargs.length;++i){
var pa=me.im_preargs[i];
if(pa instanceof m._arg_placeholder){
imax=Math.max(imax,pa.index+1);
pa=arguments[pa.index];
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
pa=pa.apply(self,arguments);
}
}
args.push(pa);
}
for(var j=imax;j<arguments.length;++j){
args.push(arguments[j]);
}
}else{
args=arguments;
}
if(self instanceof m._arg_placeholder){
self=arguments[self.index];
}
return me.im_func.apply(self,args);
};
_914.im_self=_90f;
_914.im_func=_90d;
_914.im_preargs=_90e;
if(typeof (_90d.NAME)=="string"){
_914.NAME="bind2("+_90d.NAME+",...)";
}
return _914;
};
MochiKit.Base.partial2=function(func,_91d){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,undefined],arguments,1));
};
MochiKit.Base.method2=function(self,func,_921){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,self],arguments,2));
};
MochiKit.Base.bindLate2=function(func,self,_925){
var m=MochiKit.Base;
var args=arguments;
if(typeof (func)==="string"){
args=m.extend([m.forwardCall(func)],arguments,1);
return m.bind2.apply(this,args);
}
return m.bind2.apply(this,args);
};
MochiKit.Base.isBoundFunction=function(fn){
return typeof fn=="function"&&typeof fn.im_func=="function";
};
MochiKit.Base.protect=function(_929){
return function(){
return _929.apply(this,arguments);
};
};
MochiKit.Base.apply=function(fn,_92b){
var args=MochiKit.Base.extend([],arguments,1);
return fn.apply(this,args);
};
MochiKit.Base.partition=function(_92d,cmp,left,_930,_931){
cmp=cmp||MochiKit.Base.operator.cle;
left=left||0;
_930=_930||_92d.length-1;
_931=_931||(left+Math.floor((_930-left)/2));
function swap(i,j){
var tmp=_92d[i];
_92d[i]=_92d[j];
_92d[j]=tmp;
}
var _935=_92d[_931];
swap(_931,_930);
var _936=left;
for(var i=left;i<=_930;++i){
if(cmp(_92d[i],_935)){
swap(i,_936);
++_936;
}
}
swap(_936,_930);
return _936;
};
MochiKit.Base.countValue=function(_938,elem,cmp){
cmp=cmp||MochiKit.Base.operator.ceq;
var n=0;
MochiKit.Iter.forEach(_938,function(e){
if(cmp(e,elem)){
++n;
}
});
return n;
};
MochiKit.Base.negateComparator=function(cmp){
return function(){
return -1*cmp.apply(this,arguments);
};
};
MochiKit.Base_ext.__new__=function(){
};
MochiKit.Base_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Iter_ext","1.5",["Base","Iter"]);
MochiKit.Iter.treePreOrder=function(_93e,_93f){
var _940=[_93e];
return {repr:function(){
return "treePreOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_940.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_940.pop();
MochiKit.Iter.iextend(_940,_93f(node));
return node;
}};
};
MochiKit.Iter.treeLevelOrder=function(_942,_943){
var _944=[_942];
return {repr:function(){
return "treeLevelOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_944.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_944.shift();
MochiKit.Iter.iextend(_944,_943(node));
return node;
}};
};
MochiKit.Iter.treePostOrder=function(_946,_947){
var _948=[[_946,false]];
return {repr:function(){
return "treePostOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_948.length==0){
throw MochiKit.Iter.StopIteration;
}
var n=_948.pop();
if(n[1]){
return n[0];
}
n[1]=true;
_948.push(n);
MochiKit.Iter.iextend(_948,MochiKit.Iter.imap(function(node){
return [node,false];
},_947(n[0])));
}
}};
};
MochiKit.Iter.pairView=function(_94b,_94c){
_94c=_94c||false;
var it=MochiKit.Iter.iter(_94b);
try{
var _94e=it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return MochiKit.Iter.EmptyIter;
}
if(_94c){
it=MochiKit.Iter.chain(it,[_94e]);
}
return {repr:function(){
return "pairView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _94f=it.next();
var pair=[_94e,_94f];
_94e=_94f;
return pair;
}};
};
MochiKit.Iter.windowView=function(_951,_952,_953){
_952=_952||2;
_953=_953||1;
var it=MochiKit.Iter.iter(_951);
var win=[];
return {repr:function(){
return "windowView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(win.length<_952){
while(win.length<_952){
win.push(it.next());
}
}else{
for(var i=0;i<_953;++i){
win.shift();
win.push(it.next());
}
}
return win.slice();
}};
};
MochiKit.Iter.filterMap=function(_957,_958,_959){
_959=_959||function(item){
return typeof item!=="undefined"&&item!==null;
};
return MochiKit.Iter.ifilter(_959,MochiKit.Iter.imap(_957,_958));
};
MochiKit.Iter.iflattenArray=function(root){
var _95c=[root];
return {repr:function(){
return "iflattenArray(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_95c.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_95c.shift();
if(node instanceof Array){
Array.prototype.splice.apply(_95c,[0,0].concat(node));
}else{
return node;
}
}
}};
};
MochiKit.Iter.chainFromIter=function(seq,_95f){
_95f=_95f||MochiKit.Iter.iter;
var it=MochiKit.Iter.iter(seq);
var jt=null;
return {repr:function(){
return "chainFromIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(jt==null){
jt=MochiKit.Iter.iter(_95f(it.next()));
}
while(true){
try{
var val=jt.next();
return val;
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=MochiKit.Iter.iter(_95f(it.next()));
}
}
}};
};
MochiKit.Iter.uniqueView=function(_963,pred){
pred=pred||MochiKit.Base.operator.ceq;
var it=MochiKit.Iter.iter(_963);
var _966=true;
var prev;
return {repr:function(){
return "uniqueView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_966){
_966=false;
prev=it.next();
return prev;
}
var val=it.next();
while(pred(prev,val)){
val=it.next();
}
prev=val;
return val;
}};
};
MochiKit.Iter.iproduct=function(_969,_96a){
var sa=arguments[0],sb=arguments[1];
var it=MochiKit.Iter.iter(sa);
var jt=null;
var a,b;
return {repr:function(){
return "iproduct(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(jt==null){
a=it.next();
jt=MochiKit.Iter.iter(sb);
}
try{
b=jt.next();
return [a,b];
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=null;
}
}
}};
};
MochiKit.Iter.enumerate=function(_971,_972){
return MochiKit.Iter.izip(MochiKit.Iter.count(_972),_971);
};
MochiKit.Iter.breakIt=function(){
throw MochiKit.Iter.StopIteration;
};
MochiKit.Iter.EmptyIter={repr:function(){
return "EmptyIter";
},toString:MochiKit.Base.forwardCall("repr"),next:MochiKit.Iter.breakIt};
MochiKit.Iter.generateN=function(_973,n){
return MochiKit.Iter.imap(function(){
return _973();
},MochiKit.Iter.range(n));
};
MochiKit.Iter.izipLongest=function(_975,_976){
_976=_976||null;
_975=MochiKit.Base.map(MochiKit.Iter.iter,_975);
var _977=_975.length;
return {repr:function(){
return "izipLongest(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _978=new Array(_975.length);
for(var i=0;i<_975.length;++i){
try{
_978[i]=_975[i].next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
_975[i]=MochiKit.Iter.repeat(_976);
_978[i]=_976;
--_977;
}
}
if(_977==0){
throw MochiKit.Iter.StopIteration;
}
return _978;
}};
};
MochiKit.Iter.any=function(){
return MochiKit.Iter.some.apply(this,arguments);
};
MochiKit.Iter.all=function(){
return MochiKit.Iter.every.apply(this,arguments);
};
MochiKit.Iter.starmap=function(){
return MochiKit.Iter.applymap.apply(this,arguments);
};
MochiKit.Iter.advance=function(iter,n){
while(n-->0){
iter.next();
}
return iter;
};
MochiKit.Iter.isSorted=function(_97c,cmp){
return MochiKit.Iter.every(MochiKit.Iter.windowView(_97c),cmp||MochiKit.Base.operator.cle);
};
MochiKit.Iter.interleave=function(_97e,_97f){
return MochiKit.Iter.chainFromIter(MochiKit.Iter.izip.apply(this,arguments));
};
MochiKit.Iter.remapView=function(_980,lst){
return MochiKit.Iter.imap(MochiKit.Base.partial(MochiKit.Base.operator.getitem,lst),_980);
};
MochiKit.Iter.compressIter=function(data,_983){
return MochiKit.Iter.imap(function(d_s){
return d_s[0];
},MochiKit.Iter.ifilter(function(d_s){
return d_s[1]?true:false;
},MochiKit.Iter.izip(data,_983)));
};
MochiKit.Iter.combinations=function(_986,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_986);
var n=pool.length;
if(r>n){
return MochiKit.Iter.EmptyIter;
}
var _98c=mi.list(mi.range(r));
var _98d=true;
return {repr:function(){
return "combinations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_98d){
_98d=false;
return mi.list(mi.remapView(_98c,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_98c[i]!=(i+n-r)){
done=false;
break;
}
}
if(done){
throw MochiKit.Iter.StopIteration;
}
_98c[i]+=1;
for(var j=i+1;j<r;++j){
_98c[j]=_98c[j-1]+1;
}
return mi.list(mi.remapView(_98c,pool));
}
}};
};
MochiKit.Iter.combinationsWithReplacement=function(_991,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_991);
var n=pool.length;
if(n==0||r==0){
return mi.EmptyIter;
}
var _997=mi.list(mi.repeat(0,r));
var _998=true;
return {repr:function(){
return "combinationsWithReplacement(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_998){
_998=false;
return mi.list(mi.remapView(_997,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_997[i]!=n-1){
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
_997=_997.slice(0,i).concat(mi.list(mi.repeat(_997[i]+1,r-i)));
return mi.list(mi.remapView(_997,pool));
}
}};
};
MochiKit.Iter.repeatSeq=function(_99b,n){
if(n==0){
return MochiKit.Iter.EmptyIter;
}
var it=MochiKit.Iter.iter(_99b);
return {next:function(){
try{
return it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration||--n<=0){
throw e;
}
it=MochiKit.Iter.iter(_99b);
return it.next();
}
}};
};
MochiKit.Iter.permutations=function(_99e,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_99e);
var n=pool.length;
r=r||n;
if(r>n){
return mi.EmptyIter;
}
var _9a4=mi.list(mi.range(n));
var _9a5=mi.list(mi.range(n,n-r,-1));
var _9a6=true;
return {repr:function(){
return "permutations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_9a6){
_9a6=false;
return mi.list(mi.remapView(mi.islice(_9a4,0,r),pool));
}
if(n==0){
throw mi.StopIteration;
}
var done=true;
for(var i=r-1;i>=0;--i){
_9a5[i]-=1;
if(_9a5[i]==0){
_9a4=_9a4.slice(0,i).concat(_9a4.slice(i+1),_9a4[i]);
_9a5[i]=n-i;
}else{
var j=_9a5[i];
var jdx=_9a4.length-j;
var tmp=_9a4[i];
_9a4[i]=_9a4[jdx];
_9a4[jdx]=tmp;
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
return mi.list(mi.remapView(mi.islice(_9a4,0,r),pool));
}};
};
MochiKit.Iter._Range=function(_9ac,stop,step){
this.start=_9ac;
this.stop=stop;
this.step=step;
};
MochiKit.Iter._Range.prototype.__iterator__=function(){
return new MochiKit.Iter.range(this.start,this.stop,this.step);
};
MochiKit.Iter.xrange=function(){
var _9af=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_9af=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_9af=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("xrange() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("xrange() step must not be 0");
}
return new MochiKit.Iter._Range(_9af,stop,step);
};
MochiKit.Iter.isJavaLikeIterator=function(_9b2){
return _9b2&&typeof _9b2.hasNext=="function"&&typeof _9b2.next=="function";
};
MochiKit.Iter.javaLikeIterator=function(_9b3){
return {repr:function(){
return "javaLikeIterator";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(!_9b3.hasNext()){
throw MochiKit.Iter.StopIteration;
}
return _9b3.next();
}};
};
MochiKit.Iter.registerJavaLikeIteratorSupport=function(){
MochiKit.Iter.registerIteratorFactory("javaStyleIterator",MochiKit.Iter.isJavaLikeIterator,MochiKit.Iter.javaLikeIterator);
};
MochiKit.Iter_ext.__new__=function(){
};
MochiKit.Iter_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Text");
}
MochiKit.Base.module(MochiKit,"Text_ext","1.5",["Base","Text"]);
MochiKit.Text.levenshteinDistance=function(s,t,_9b6){
_9b6=_9b6||false;
var n=s.length,m=t.length;
if(n==0){
return m;
}
if(m==0){
return n;
}
var d=new Array(n+1);
for(var r=0;r<n+1;++r){
d[r]=new Array(m+1);
}
for(var i=0;i<=n;++i){
d[i][0]=i;
}
for(var j=0;j<=m;++j){
d[0][j]=j;
}
for(var i=1;i<=n;++i){
for(var j=1;j<=m;++j){
var cost=(t[j-1]==s[i-1]?0:1);
var cell=Math.min(Math.min(d[i-1][j]+1,d[i][j-1]+1),d[i-1][j-1]+cost);
if(_9b6&&(i>2&&j>2)){
var _9bf=d[i-2][j-2]+1;
if(s[i-2]!=t[j-1]){
++_9bf;
}
if(s[i-1]!=t[j-2]){
++_9bf;
}
if(cell>_9bf){
cell=_9bf;
}
}
d[i][j]=cell;
}
}
return d[n][m];
};
MochiKit.Text.humanStringCompare=function(a,b){
if(a==b){
return 0;
}
var _9c2=/^(\+|\-)?\d+/;
var _9c3=/^\D+/;
while(a.length>0&&b.length>0){
var a0=null,ainc=-1;
var b0=null,binc=-1;
var ma=a.match(_9c3);
var mb=b.match(_9c3);
if(ma!=null&&mb!=null){
a0=ma[0].toLowerCase();
ainc=a0.length;
b0=mb[0].toLowerCase();
binc=b0.length;
}else{
if(ma==null){
ma=a.match(_9c2);
a0=parseInt(ma[0],10)+2<<15;
ainc=ma[0].length;
}else{
a0=a.charAt(0).toLowerCase().charCodeAt(0);
ainc=1;
}
if(mb==null){
mb=b.match(_9c2);
b0=parseInt(mb[0],10)+2<<15;
binc=mb[0].length;
}else{
b0=b.charAt(0).toLowerCase().charCodeAt(0);
binc=1;
}
}
if(a0<b0){
return -1;
}
if(a0>b0){
return +1;
}
a=a.substring(ainc);
b=b.substring(binc);
}
if(a.length>0){
return +1;
}
if(b.length>0){
return -1;
}
return 0;
};
MochiKit.Text_ext.__new__=function(){
};
MochiKit.Text_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.HeapQ");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"HeapQ","1.5",["Base","Iter"]);
MochiKit.HeapQ.heapify=function(x,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var n=x.length;
for(var i=Math.floor(n/2)-1;i>=0;--i){
MochiKit.HeapQ._siftup(x,i,cmp);
}
return x;
};
MochiKit.HeapQ._siftdown=function(heap,_9cf,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9d2=heap[pos];
while(pos>_9cf){
var _9d3=(pos-1)>>1;
var _9d4=heap[_9d3];
if(cmp(_9d2,_9d4)){
heap[pos]=_9d4;
pos=_9d3;
continue;
}
break;
}
heap[pos]=_9d2;
};
MochiKit.HeapQ._siftup=function(heap,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9d8=heap.length;
var _9d9=pos;
var _9da=heap[pos];
var _9db=2*pos+1;
while(_9db<_9d8){
var _9dc=_9db+1;
if(_9dc<_9d8&&!(cmp(heap[_9db],heap[_9dc]))){
_9db=_9dc;
}
heap[pos]=heap[_9db];
pos=_9db;
_9db=2*pos+1;
}
heap[pos]=_9da;
MochiKit.HeapQ._siftdown(heap,_9d9,pos,cmp);
};
MochiKit.HeapQ.heapPush=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
heap.push(item);
MochiKit.HeapQ._siftdown(heap,0,heap.length-1,cmp);
};
MochiKit.HeapQ.heapPop=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9e2=heap.pop();
var _9e3;
if(heap.length>0){
_9e3=heap[0];
heap[0]=_9e2;
MochiKit.HeapQ._siftup(heap,0,cmp);
}else{
_9e3=_9e2;
}
return _9e3;
};
MochiKit.HeapQ.heapReplace=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9e7=heap[0];
heap[0]=item;
MochiKit.HeapQ._siftup(heap,0,cmp);
return _9e7;
};
MochiKit.HeapQ.heapPushPop=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
if(heap.length>0&&cmp(heap[0],item)){
var tmp=heap[0];
heap[0]=item;
item=tmp;
MochiKit.HeapQ._siftup(heap,0,cmp);
}
return item;
};
MochiKit.HeapQ.imergeSorted=function(_9ec,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var _cmp=function(a,b){
var c=cmp(a[0],b[0]);
return c;
};
var h=[];
mi.forEach(mi.izip(mi.count(),mi.imap(mi.iter,_9ec)),function(pair){
var _9f6=pair[0],it=pair[1];
try{
var next=it.next;
h.push([next(),_9f6,next]);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
}
});
m.HeapQ.heapify(h,_cmp);
return {repr:function(){
return "imergeSorted(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(h.length==0){
throw mi.StopIteration;
}
var s=h[0];
var v=s[0];
var next=s[2];
try{
s[0]=next();
m.HeapQ.heapReplace(h,s,_cmp);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
m.HeapQ.heapPop(h,_cmp);
}
return v;
}
}};
};
MochiKit.HeapQ.heapIter=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
return {next:function(){
if(heap.length==0){
throw MochiKit.Iter.StopIteration;
}
return MochiKit.HeapQ.heapPop(heap,cmp);
}};
};
MochiKit.HeapQ.nLargest=function(n,_9ff,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var it=mi.iter(_9ff);
var _a04=mi.list(mi.islice(it,n));
if(_a04.length==0){
return _a04;
}
m.HeapQ.heapify(_a04,cmp);
mi.forEach(it,function(elem){
m.HeapQ.heapPushPop(_a04,elem,cmp);
});
_a04.sort(function(a,b){
return -1*m.Base.compare(a,b);
});
return _a04;
};
MochiKit.HeapQ.nSmallest=function(n,_a09,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var h=mi.list(_a09);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),mi.range(Math.min(n,h.length)));
};
MochiKit.HeapQ.isHeap=function(lst,cmp){
cmp=cmp||MochiKit.Base.operator.cle;
for(var pos=1;pos<lst.length;++pos){
var _a11=(pos-1)>>1;
if(!cmp(lst[_a11],lst[pos])){
return false;
}
}
return true;
};
MochiKit.HeapQ.heapSort=function(_a12,cmp){
var m=MochiKit;
var h=m.Iter.list(_a12);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),m.Iter.range(h.length));
};
MochiKit.HeapQ.__new__=function(){
};
MochiKit.HeapQ.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.HeapQ);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit._MersenneTwister19937");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"_MersenneTwister19937","1.5",["Base"]);
MochiKit._MersenneTwister19937=function(){
var N=624;
var M=397;
var _a18=2567483615;
var _a19=2147483648;
var _a1a=2147483647;
var mt=new Array(N);
var mti=N+1;
function unsigned32(n1){
return n1<0?(n1^_a19)+_a19:n1;
}
function subtraction32(n1,n2){
return n1<n2?unsigned32((4294967296-(n2-n1))&4294967295):n1-n2;
}
function addition32(n1,n2){
return unsigned32((n1+n2)&4294967295);
}
function multiplication32(n1,n2){
var sum=0;
for(var i=0;i<32;++i){
if((n1>>>i)&1){
sum=addition32(sum,unsigned32(n2<<i));
}
}
return sum;
}
this.init_genrand=function(s){
mt[0]=unsigned32(s&4294967295);
for(mti=1;mti<N;mti++){
mt[mti]=addition32(multiplication32(1812433253,unsigned32(mt[mti-1]^(mt[mti-1]>>>30))),mti);
mt[mti]=unsigned32(mt[mti]&4294967295);
}
};
this.init_by_array=function(_a27,_a28){
var i,j,k;
this.init_genrand(19650218);
i=1;
j=0;
k=(N>_a28?N:_a28);
for(;k;k--){
mt[i]=addition32(addition32(unsigned32(mt[i]^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1664525)),_a27[j]),j);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=_a28){
j=0;
}
}
for(k=N-1;k;k--){
mt[i]=subtraction32(unsigned32((mt[i])^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1566083941)),i);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
}
mt[0]=2147483648;
};
this.genrand_int32=function(){
var y;
var _a2d=new Array(0,_a18);
if(mti>=N){
var kk;
if(mti==N+1){
this.init_genrand(5489);
}
for(kk=0;kk<N-M;kk++){
y=unsigned32((mt[kk]&_a19)|(mt[kk+1]&_a1a));
mt[kk]=unsigned32(mt[kk+M]^(y>>>1)^_a2d[y&1]);
}
for(;kk<N-1;kk++){
y=unsigned32((mt[kk]&_a19)|(mt[kk+1]&_a1a));
mt[kk]=unsigned32(mt[kk+(M-N)]^(y>>>1)^_a2d[y&1]);
}
y=unsigned32((mt[N-1]&_a19)|(mt[0]&_a1a));
mt[N-1]=unsigned32(mt[M-1]^(y>>>1)^_a2d[y&1]);
mti=0;
}
y=mt[mti++];
y=unsigned32(y^(y>>>11));
y=unsigned32(y^((y<<7)&2636928640));
y=unsigned32(y^((y<<15)&4022730752));
y=unsigned32(y^(y>>>18));
return y;
};
this.genrand_int31=function(){
return (this.genrand_int32()>>>1);
};
this.genrand_real1=function(){
return this.genrand_int32()*(1/4294967295);
};
this.genrand_real2=function(){
return this.genrand_int32()*(1/4294967296);
};
this.genrand_real3=function(){
return ((this.genrand_int32())+0.5)*(1/4294967296);
};
this.genrand_res53=function(){
var a=this.genrand_int32()>>>5,b=this.genrand_int32()>>>6;
return (a*67108864+b)*(1/9007199254740992);
};
this._getState=function(){
return {mt:mt.slice(),mti:mti};
};
this._setState=function(_a31){
mt=_a31.mt;
mti=_a31.mti;
};
};
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Random");
goog.require("MochiKit.Base");
goog.require("MochiKit._MersenneTwister19937");
}
MochiKit.Base.module(MochiKit,"Random","1.5",["Base","_MersenneTwister19937"]);
MochiKit.Random.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
MochiKit.Random._generator.seed(x);
};
MochiKit.Random.getState=function(){
return MochiKit.Random._generator.getState();
};
MochiKit.Random.setState=function(_a33){
MochiKit.Random._generator.setState(_a33);
};
MochiKit.Random.random=function(){
return MochiKit.Random._generator.random();
};
MochiKit.Random.randRange=function(_a34,_a35,step){
var self=MochiKit.Random;
if(arguments.length==1){
_a35=_a34;
_a34=0;
}
step=step||1;
var _a38=_a35-_a34;
if(step==1&&_a38>0){
return Math.floor(_a34+Math.floor(self.random()*_a38));
}
if(step>0){
var n=Math.floor((_a38+step-1)/step);
}else{
if(step<0){
var n=Math.floor((_a38+step+1)/step);
}
}
return _a34+step*Math.floor(self.random()*n);
};
MochiKit.Random.uniform=function(a,b){
return a+(b-a)*MochiKit.Random.random();
};
MochiKit.Random.shuffle=function(_a3c){
for(var i=_a3c.length-1;i>0;--i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
var tmp=_a3c[i];
_a3c[i]=_a3c[j];
_a3c[j]=tmp;
}
return _a3c;
};
MochiKit.Random.deal=function(_a40,func){
func=func||MochiKit.Base.operator.identity;
var deck=new Array(_a40);
for(var i=0;i<_a40;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
deck[i]=deck[j];
deck[j]=func(i);
}
return deck;
};
MochiKit.Random.choice=function(seq){
return seq[Math.floor(MochiKit.Random.random()*seq.length)];
};
MochiKit.Random.shuffled=function(_a46){
var n=_a46.length;
var a=new Array(n);
a[0]=_a46[0];
for(var i=1;i<n-1;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
a[i]=a[j];
a[j]=_a46[i];
}
return a;
};
MochiKit.Random.sample=function(_a4b,k){
var n=_a4b.length;
var _a4e=new Array(k);
var _a4f={};
for(var i=0;i<k;++i){
var j=MochiKit.Random.randRange(n);
while(j in _a4f){
j=MochiKit.Random.randRange(n);
}
_a4f[j]=true;
_a4e[i]=_a4b[j];
}
return _a4e;
};
MochiKit.Random._IRndGenerator=function(){
};
MochiKit.Random._IRndGenerator.prototype.seed=function(x){
};
MochiKit.Random._IRndGenerator.prototype.getState=function(){
};
MochiKit.Random._IRndGenerator.prototype.setState=function(_a53){
};
MochiKit.Random._IRndGenerator.prototype.random=function(){
};
MochiKit.Random.MersenneTwister=function(x){
this._mt=new MochiKit._MersenneTwister19937();
this.seed(x);
};
MochiKit.Random.MersenneTwister.prototype.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
this._mt.init_genrand(x);
};
MochiKit.Random.MersenneTwister.prototype.getState=function(){
return this._mt._getState();
};
MochiKit.Random.MersenneTwister.prototype.setState=function(_a56){
this._mt._setState(_a56);
};
MochiKit.Random.MersenneTwister.prototype.random=function(){
return this._mt.genrand_real2();
};
MochiKit.Random.SystemRandom=function(){
};
MochiKit.Random.SystemRandom.prototype.seed=function(x){
};
MochiKit.Random.SystemRandom.prototype.getState=function(){
};
MochiKit.Random.SystemRandom.prototype.setState=function(_a58){
};
MochiKit.Random.SystemRandom.prototype.random=function(){
return Math.random();
};
MochiKit.Random._generator=null;
MochiKit.Random._setGenerator=function(_a59){
MochiKit.Random._generator=_a59;
};
MochiKit.Random.__new__=function(){
MochiKit.Random._setGenerator(new MochiKit.Random.MersenneTwister());
};
MochiKit.Random.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Random);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Bisect");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Bisect","1.5",["Base"]);
MochiKit.Bisect.bisectRight=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(x,a[mid])<0){
hi=mid;
}else{
lo=mid+1;
}
}
return lo;
};
MochiKit.Bisect.insortRight=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectRight(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisectLeft=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(a[mid],x)<0){
lo=mid+1;
}else{
hi=mid;
}
}
return lo;
};
MochiKit.Bisect.insortLeft=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectLeft(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisect=MochiKit.Bisect.bisectRight;
MochiKit.Bisect.insort=MochiKit.Bisect.insortRight;
MochiKit.Bisect.__new__=function(){
};
MochiKit.Bisect.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Bisect);


