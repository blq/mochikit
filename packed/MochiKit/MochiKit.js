/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base");
}
if(typeof MochiKit=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
MochiKit.NAME="MochiKit";
MochiKit.VERSION="1.5";
MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.Base=MochiKit.Base||{};
MochiKit.Base.module=function(_1,_2,_3,_4){
var _5=_1[_2]=_1[_2]||{};
var _6=(_1.NAME?_1.NAME+".":"");
_5.NAME=_6+_2;
_5.VERSION=_3;
_5.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_5.toString=function(){
return this.__repr__();
};
for(var i=0;_4!=null&&i<_4.length;i++){
if(!(_4[i] in _1)){
throw _5.NAME+" depends on "+_6+_4[i]+"!";
}
}
return _5;
};
MochiKit.Base.module(MochiKit,"Base","1.5",[]);
MochiKit.Base.update=function(_8,_9,_a){
if(_8===null||_8===undefined){
_8={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_8[k]=o[k];
}
}
}
return _8;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_e){
var _f=_e.split("-");
var cc=_f[0];
for(var i=1;i<_f.length;i++){
cc+=_f[i].charAt(0).toUpperCase()+_f[i].substring(1);
}
return cc;
},counter:function(n,_13){
if(arguments.length===0){
n=1;
}
if(arguments.length<2){
_13=1;
}
return function(){
var c=n;
n+=_13;
return c;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst,_1d){
var res=[];
var m=MochiKit.Base;
var _20=m.extend(null,arguments);
while(_20.length){
var o=_20.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_20.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_23,obj,_25){
if(!_25){
_25=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_23){
_23=[];
}
for(var i=_25;i<l;i++){
_23.push(obj[i]);
}
}
return _23;
},updatetree:function(_28,obj){
if(_28===null||_28===undefined){
_28={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_28[k])=="object"&&typeof (v)=="object"&&!MochiKit.Base.isDateLike(v)&&!(v instanceof Array)){
arguments.callee(_28[k],v);
}else{
_28[k]=v;
}
}
}
}
return _28;
},setdefault:function(_2e,obj,_30){
if(_2e===null||_2e===undefined){
_2e={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _2e)){
_2e[k]=o[k];
}
}
}
return _2e;
},keys:function(obj){
var _35=[];
for(var _36 in obj){
_35.push(_36);
}
return _35;
},values:function(obj){
var _38=[];
for(var _39 in obj){
_38.push(obj[_39]);
}
return _38;
},items:function(obj){
var _3b=[];
for(var _3c in obj){
var v;
try{
v=obj[_3c];
}
catch(e){
continue;
}
_3b.push([_3c,v]);
}
return _3b;
},_newNamedError:function(_3e,_3f,_40){
_40.prototype=new MochiKit.Base.NamedError(_3e.NAME+"."+_3f);
_40.prototype.constructor=_40;
_3e[_3f]=_40;
},operator:{NAME:"operator",truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},floordiv:function(a,b){
return Math.floor(a/b);
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},pow:function(a,b){
return Math.pow(a,b);
},divmod:function(a,b){
return [a/b,a%b];
},max:function(a,b){
return Math.max(a,b);
},min:function(a,b){
return Math.min(a,b);
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},getitem:function(a,b){
return a[b];
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
},concat:function(a,b){
return MochiKit.Base.concat(a,b);
},iconcat:function(a,b){
return a.concat(b);
},setitem:function(a,b,c){
return a[b]=c;
},delitem:function(a,b){
delete a[b];
},call:function(fn,_94){
return fn.apply(this,MochiKit.Base.extend([],arguments,1));
}},forwardCall:function(_95){
return function(){
return this[_95].apply(this,arguments);
};
},itemgetter:function(_96){
return function(arg){
return arg[_96];
};
},bool:function(_98){
if(typeof (_98)==="boolean"||_98 instanceof Boolean){
return _98.valueOf();
}else{
if(typeof (_98)==="string"||_98 instanceof String){
return _98.length>0&&_98!="false"&&_98!="null"&&_98!="undefined"&&_98!="0";
}else{
if(typeof (_98)==="number"||_98 instanceof Number){
return !isNaN(_98)&&_98!=0;
}else{
if(_98!=null&&typeof (_98.length)==="number"){
return _98.length!==0;
}else{
return _98!=null;
}
}
}
}
},typeMatcher:function(){
var _99={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_99[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _99)){
return false;
}
}
return true;
};
},isNull:function(obj,_9e){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(obj,_a1){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj,_a5){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj,_a7){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(arr,_ab){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(_af,_b0){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn,obj,_b5){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _b6=[];
for(var i=1;i<arguments.length;i++){
_b6.push(fn(arguments[i]));
}
return _b6;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _bc=m.isArrayLike;
if(arguments.length<=2){
if(!_bc(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _bd=[];
for(var i=0;i<lst.length;i++){
_bd.push(fn(lst[i]));
}
return _bd;
}else{
if(fn===null){
fn=Array;
}
var _bf=null;
for(var i=1;i<arguments.length;i++){
if(!_bc(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_bf===null||_bf>l){
_bf=l;
}
}
_bd=[];
for(var i=0;i<_bf;i++){
var _c1=[];
for(var j=1;j<arguments.length;j++){
_c1.push(arguments[j][i]);
}
_bd.push(fn.apply(this,_c1));
}
return _bd;
}
},xfilter:function(fn,obj,_c5){
var _c6=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_c6.push(o);
}
}
return _c6;
},filter:function(fn,lst,_cb){
var _cc=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_cb);
}else{
if(typeof (_cb)=="undefined"||_cb===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_cc.push(o);
}
}
}else{
for(var i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_cb,o)){
_cc.push(o);
}
}
}
}
return _cc;
},_wrapDumbFunction:function(_d0){
return function(){
switch(arguments.length){
case 0:
return _d0();
case 1:
return _d0(arguments[0]);
case 2:
return _d0(arguments[0],arguments[1]);
case 3:
return _d0(arguments[0],arguments[1],arguments[2]);
}
var _d1=[];
for(var i=0;i<arguments.length;i++){
_d1.push("arguments["+i+"]");
}
return eval("(func("+_d1.join(",")+"))");
};
},methodcaller:function(_d3,_d4){
var _d5=MochiKit.Base.extend(null,arguments,1);
if(typeof (_d3)=="function"){
return function(obj){
return _d3.apply(obj,_d5);
};
}else{
return function(obj){
return obj[_d3].apply(obj,_d5);
};
}
},method:function(_d8,_d9){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_d9,_d8],arguments,2));
},compose:function(f1,f2,_dd){
var _de=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_de.push(fn);
}
return function(){
var _e2=arguments;
for(var i=_de.length-1;i>=0;i--){
_e2=[_de[i].apply(this,_e2)];
}
return _e2[0];
};
},bind:function(_e4,_e5,_e6){
if(typeof (_e4)=="string"){
_e4=_e5[_e4];
}
var _e7=_e4.im_func;
var _e8=_e4.im_preargs;
var _e9=_e4.im_self;
var m=MochiKit.Base;
if(typeof (_e4)=="function"&&typeof (_e4.apply)=="undefined"){
_e4=m._wrapDumbFunction(_e4);
}
if(typeof (_e7)!="function"){
_e7=_e4;
}
if(typeof (_e5)!="undefined"){
_e9=_e5;
}
if(typeof (_e8)=="undefined"){
_e8=[];
}else{
_e8=_e8.slice();
}
m.extend(_e8,arguments,2);
var _eb=function(){
var _ec=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_ec=m.concat(me.im_preargs,_ec);
}
var _ee=me.im_self;
if(!_ee){
_ee=this;
}
return me.im_func.apply(_ee,_ec);
};
_eb.im_self=_e9;
_eb.im_func=_e7;
_eb.im_preargs=_e8;
if(typeof (_e7.NAME)=="string"){
_eb.NAME="bind("+_e7.NAME+",...)";
}
return _eb;
},bindLate:function(_ef,_f0){
var m=MochiKit.Base;
var _f2=arguments;
if(typeof (_ef)==="string"){
_f2=m.extend([m.forwardCall(_ef)],arguments,1);
return m.bind.apply(this,_f2);
}
return m.bind.apply(this,_f2);
},bindMethods:function(_f3){
var _f4=MochiKit.Base.bind;
for(var k in _f3){
var _f6=_f3[k];
if(typeof (_f6)=="function"){
_f3[k]=_f4(_f6,_f3);
}
}
return _f3;
},registerComparator:function(_f7,_f8,_f9,_fa){
MochiKit.Base.comparatorRegistry.register(_f7,_f8,_f9,_fa);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _fd=(typeof (a)=="undefined"||a===null);
var _fe=(typeof (b)=="undefined"||b===null);
if(_fd&&_fe){
return 0;
}else{
if(_fd){
return -1;
}else{
if(_fe){
return 1;
}
}
}
var m=MochiKit.Base;
var prim=m._primitives;
if(!(typeof (a) in prim&&typeof (b) in prim)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var repr=m.repr;
throw new TypeError(repr(a)+" and "+repr(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _106=MochiKit.Base.compare;
var _107=a.length;
var rval=0;
if(_107>b.length){
rval=1;
_107=b.length;
}else{
if(_107<b.length){
rval=-1;
}
}
for(var i=0;i<_107;i++){
var cmp=_106(a[i],b[i]);
if(cmp){
return cmp;
}
}
return rval;
},registerRepr:function(name,_10c,wrap,_10e){
MochiKit.Base.reprRegistry.register(name,_10c,wrap,_10e);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
try{
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
catch(ignore){
}
}
try{
var _110=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_110=_110.replace(/^\s+/,"").replace(/\s+/g," ");
_110=_110.replace(/,(\S)/,", $1");
var idx=_110.indexOf("{");
if(idx!=-1){
_110=_110.substr(0,idx)+"{...}";
}
}
return _110;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(name,_117,wrap,_119){
MochiKit.Base.jsonRegistry.register(name,_117,wrap,_119);
},evalJSON:function(_11a){
return eval("("+MochiKit.Base._filterJSON(_11a)+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
return (m)?m[1]:s;
},serializeJSON:function(o){
var _11e=typeof (o);
if(_11e=="number"||_11e=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_11e=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _124;
if(typeof (o.toJSON)=="function"){
_124=o.toJSON();
if(o!==_124){
return me(_124);
}
}
if(typeof (o.__json__)=="function"){
_124=o.__json__();
if(o!==_124){
return me(_124);
}
}
if(typeof (o.json)=="function"){
_124=o.json();
if(o!==_124){
return me(_124);
}
}
if(_11e!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_124=m.jsonRegistry.match(o);
if(o!==_124){
return me(_124);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_11e=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_11e=="function"){
return null;
}
res=[];
for(var k in o){
if(o.hasOwnProperty(k)){
var _128;
if(typeof (k)=="number"){
_128="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_128=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_128+":"+val);
}
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(self,arr){
if(self.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(self,arr)===0);
},concat:function(lst,_12e){
var rval=[];
var _130=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_130(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _134=m.compare;
if(arguments.length==1){
return function(a,b){
return _134(a[key],b[key]);
};
}
var _137=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_137.length);i++){
var key=_137[i];
rval=_134(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _13e=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _13e(b,a);
};
},partial:function(func,_142){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_144,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _147=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_147(o,cur)==_144){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_14b,_14c,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_14c)=="undefined"||_14c===null){
_14c=0;
}
for(var i=_14c;i<end;i++){
if(lst[i]===_14b){
return i;
}
}
return -1;
},mean:function(val,_150){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _154=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_154+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_154<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_154;
},median:function(val,_158){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(MochiKit.Base.compare);
if(data.length%2==0){
var _15a=data.length/2;
return (data[_15a]+data[_15a-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_15c,_15d,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_15d)=="undefined"||_15d===null){
_15d=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_15d;i<end;i++){
if(cmp(lst[i],_15c)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_162){
var _163=[node];
var _164=MochiKit.Base.extend;
while(_163.length){
var res=_162(_163.shift());
if(res){
_164(_163,res);
}
}
},nameFunctions:function(_166){
var base=_166.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _166){
var o=_166[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_16a,_16b){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_16a)=="string"||(typeof (_16a.nodeType)!="undefined"&&_16a.nodeType>0))){
var kv=MochiKit.DOM.formContents(_16a);
_16a=kv[0];
_16b=kv[1];
}else{
if(arguments.length==1){
if(typeof (_16a.length)=="number"&&_16a.length==2){
return arguments.callee(_16a[0],_16a[1]);
}
var o=_16a;
_16a=[];
_16b=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_16a.push(k);
_16b.push(v[i]);
}
}else{
_16a.push(k);
_16b.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_16a.length,_16b.length);
var _173=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_16b[i];
if(typeof (v)!="undefined"&&v!==null){
if(MochiKit.Base.isDateLike(v)){
v=MochiKit.DateTime.toISOTimestamp(v,true);
}
rval.push(_173(_16a[i])+"="+_173(v));
}
}
return rval.join("&");
},parseQueryString:function(_174,_175){
var qstr=(_174.charAt(0)=="?")?_174.substring(1):_174;
var _177=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _179;
if(typeof (decodeURIComponent)!="undefined"){
_179=decodeURIComponent;
}else{
_179=unescape;
}
if(_175){
for(var i=0;i<_177.length;i++){
var pair=_177[i].split("=");
var name=_179(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_179(pair.join("=")));
}
}else{
for(var i=0;i<_177.length;i++){
pair=_177[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_179(name)]=_179(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_17f,wrap,_181){
if(_181){
this.pairs.unshift([name,_17f,wrap]);
}else{
this.pairs.push([name,_17f,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.moduleExport=function(_187,_188){
var SKIP={toString:true,NAME:true,VERSION:true};
var mods=MochiKit.Base.extend([],arguments,1);
while((_188=mods.shift())!=null){
for(var k in _188){
var v=_188[k];
if(v!=null){
var _18d=(typeof (v.__export__)=="boolean");
var _18e=(k[0]!=="_"&&!SKIP[k]);
if(_18d?v.__export__:_18e){
if(typeof (v)=="object"&&v.NAME&&v.VERSION){
mods.push(v);
}else{
_187[k]=_188[k];
}
}
}
}
}
return _187;
};
MochiKit.Base._exportSymbols=function(_18f,_190){
if(MochiKit.__export__!==false&&_190.__export__!==false){
MochiKit.Base.moduleExport(_18f,_190);
}
};
MochiKit.Base._deprecated=function(_191,name,_193,_194,_195){
if(typeof (_191)==="string"){
if(_191.indexOf("MochiKit.")===0){
_191=_191.substring(9);
}
_191=MochiKit[_191];
}
var _196=_193.split(".")[1];
var _197=_193.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_191.NAME+"."+name+" is deprecated since version "+_194+". Use "+_193+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_196]){
throw new Error(msg);
}
return MochiKit[_196][_197].apply(this,arguments);
};
func.__export__=(_195===true);
_191[name]=func;
};
MochiKit.Base._getBaseFn=function(fn){
if(typeof fn.im_func=="function"){
return MochiKit.Base._getBaseFn(fn.im_func);
}
return fn;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=function(){
};
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3");
m._deprecated(m,"find","MochiKit.Base.findValue","1.3");
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_19d){
return encodeURIComponent(_19d).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_19e){
return escape(_19e).replace(/\+/g,"%2B").replace(/\"/g,"%22").replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.NamedError.prototype.constructor=m.NamedError;
m.NamedError.prototype.repr=function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
};
m.NamedError.prototype.toString=m.forwardCall("repr");
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.isValue=m.typeMatcher("boolean","number","string");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
m.nameFunctions(this.operator);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
window.compare=MochiKit.Base.compare;
window.compose=MochiKit.Base.compose;
window.serializeJSON=MochiKit.Base.serializeJSON;
window.mean=MochiKit.Base.mean;
window.median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Iter","1.5",["Base"]);
MochiKit.Iter.registerIteratorFactory=function(name,_1a1,_1a2,_1a3){
MochiKit.Iter.iteratorRegistry.register(name,_1a1,_1a2,_1a3);
};
MochiKit.Iter.isIterable=function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
};
MochiKit.Iter.iter=function(_1a5,_1a6){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_1a6;
},_1a5);
}
if(typeof (_1a5.next)=="function"){
return _1a5;
}else{
if(typeof (_1a5.iter)=="function"){
return _1a5.iter();
}else{
if(typeof (_1a5.__iterator__)=="function"){
return _1a5.__iterator__(false);
}
}
}
try{
return self.iteratorRegistry.match(_1a5);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_1a5)+": "+m.repr(_1a5)+" is not iterable");
}
throw e;
}
};
MochiKit.Iter.count=function(n,step){
if(!n){
n=0;
}
if(arguments.length<2){
step=1;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n,step)};
};
MochiKit.Iter.cycle=function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _1b1=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_1b1.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
};
MochiKit.Iter.repeat=function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
};
MochiKit.Iter.next=function(_1b7){
return _1b7.next();
};
MochiKit.Iter.izip=function(p,_1b9){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _1bd=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_1bd);
}};
};
MochiKit.Iter.ifilter=function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
};
MochiKit.Iter.ifilterfalse=function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
};
MochiKit.Iter.islice=function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _1c9=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_1c9=arguments[1];
stop=arguments[2];
}else{
_1c9=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_1c9,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
if(_1c9>=stop){
throw self.StopIteration;
}
var rval;
while(i<_1c9){
rval=seq.next();
i++;
}
_1c9+=step;
return rval;
}};
};
MochiKit.Iter.imap=function(fun,p,_1d0){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _1d3=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_1d3));
}};
};
MochiKit.Iter.applymap=function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
};
MochiKit.Iter.chain=function(p,_1db){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1de=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1de.length>1){
try{
return _1de[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1de.shift();
}
}
if(_1de.length==1){
var arg=_1de.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
};
MochiKit.Iter.takewhile=function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
};
MochiKit.Iter.dropwhile=function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
};
MochiKit.Iter._tee=function(_1e9,sync,_1eb){
sync.pos[_1e9]=-1;
var m=MochiKit.Base;
var _1ed=m.listMin;
return {repr:function(){
return "tee("+_1e9+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1e9];
if(i==sync.max){
rval=_1eb.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1e9]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1e9]+=1;
if(i==sync.min&&_1ed(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
};
MochiKit.Iter.tee=function(_1f0,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1f0=self.iter(_1f0);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1f0));
}
return rval;
};
MochiKit.Iter.list=function(_1f7){
var rval;
if(_1f7 instanceof Array){
return _1f7.slice();
}
if(typeof (_1f7)=="function"&&!(_1f7 instanceof Function)&&typeof (_1f7.length)=="number"){
rval=[];
for(var i=0;i<_1f7.length;i++){
rval.push(_1f7[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1f7=self.iter(_1f7);
rval=[];
var _1fb;
try{
while(true){
_1fb=_1f7.next();
rval.push(_1fb);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
};
MochiKit.Iter.reduce=function(fn,_1fd,_1fe){
var x=_1fe;
var self=MochiKit.Iter;
_1fd=self.iter(_1fd);
if(arguments.length<3){
try{
x=_1fd.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
}
try{
while(true){
x=fn(x,_1fd.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
};
MochiKit.Iter.range=function(){
var _201=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_201=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_201=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_201>=stop)||(step<0&&_201<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_201;
_201+=step;
return rval;
},repr:function(){
return "range("+[_201,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
};
MochiKit.Iter.sum=function(_205,_206){
if(typeof (_206)=="undefined"||_206===null){
_206=0;
}
var x=_206;
var self=MochiKit.Iter;
_205=self.iter(_205);
try{
while(true){
x+=_205.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
};
MochiKit.Iter.exhaust=function(_209){
var self=MochiKit.Iter;
_209=self.iter(_209);
try{
while(true){
_209.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
};
MochiKit.Iter.forEach=function(_20b,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_20b)&&!self.isIterable(_20b)){
try{
for(var i=0;i<_20b.length;i++){
func(_20b[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_20b));
}
};
MochiKit.Iter.every=function(_211,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_211).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
};
MochiKit.Iter.sorted=function(_214,cmp){
var rval=MochiKit.Iter.list(_214);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
};
MochiKit.Iter.reversed=function(_217){
var rval=MochiKit.Iter.list(_217);
rval.reverse();
return rval;
};
MochiKit.Iter.some=function(_219,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_219).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
};
MochiKit.Iter.iextend=function(lst,_21d,skip){
skip=skip||0;
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_21d)&&!self.isIterable(_21d)){
for(var i=skip;i<_21d.length;i++){
lst.push(_21d[i]);
}
}else{
_21d=self.iter(_21d);
try{
while(skip-->0){
_21d.next();
}
while(true){
lst.push(_21d.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
};
MochiKit.Iter.groupby=function(_222,_223){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_223=m.operator.identity;
}
_222=self.iter(_222);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_222.next();
k=_223(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _22a=true;
var _22b=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_22b(k,pk)===0){
fetch();
if(_22a){
_22a=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_22b(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
};
MochiKit.Iter.groupby_as_array=function(_22c,_22d){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_22d=m.operator.identity;
}
_22c=self.iter(_22c);
var _230=[];
var _231=true;
var _232;
var _233=m.compare;
while(true){
try{
var _234=_22c.next();
var key=_22d(_234);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_231||_233(key,_232)!==0){
var _236=[];
_230.push([key,_236]);
}
_236.push(_234);
_231=false;
_232=key;
}
return _230;
};
MochiKit.Iter.arrayLikeIter=function(_237){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_237.length){
throw MochiKit.Iter.StopIteration;
}
return _237[i++];
}};
};
MochiKit.Iter.hasIterateNext=function(_239){
return (_239&&typeof (_239.iterateNext)=="function");
};
MochiKit.Iter.iterateNextIter=function(_23a){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_23a.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
};
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
MochiKit.Iter.StopIteration=StopIteration;
}else{
MochiKit.Iter.StopIteration=new m.NamedError("StopIteration");
}
MochiKit.Iter.iteratorRegistry=new m.AdapterRegistry();
MochiKit.Iter.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
MochiKit.Iter.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
window.reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Logging");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_23e,info){
this.num=num;
this.level=_23e;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_241){
var self=MochiKit.Logging;
if(typeof (_241)=="string"){
_241=self.LogLevel[_241];
}
return function(msg){
var _244=msg.level;
if(typeof (_244)=="string"){
_244=self.LogLevel[_244];
}
return _244>=_241;
};
},isLogMessage:function(_245){
var _246=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _246)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_24b){
this.counter=0;
if(typeof (_24b)=="undefined"||_24b===null){
_24b=-1;
}
this.maxSize=_24b;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(_24c,msg){
msg=_24c+": "+msg;
if(typeof (window)!="undefined"&&window.console&&window.console.log){
var _24e=null;
switch(_24c){
case "INFO":
_24e=typeof window.console.info=="function"?"info":null;
break;
case "DEBUG":
_24e=typeof window.console.debug=="function"?"debug":null;
break;
case "WARNING":
_24e=typeof window.console.warn=="function"?"warn":null;
break;
case "ERROR":
_24e=typeof window.console.error=="function"?"error":null;
break;
case "FATAL":
_24e=typeof window.console.error=="function"?"error":null;
break;
}
_24e=_24e||"log";
window.console[_24e](msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_252,_253,_254){
if(typeof (_253)=="string"){
_253=MochiKit.Logging.logLevelAtLeast(_253);
}
var _255=[_253,_254];
_255.ident=_252;
this.listeners[_252]=_255;
},removeListener:function(_256){
delete this.listeners[_256];
},baseLog:function(_257,_258,_259){
if(typeof (_257)=="number"){
if(_257>=MochiKit.Logging.LogLevel.FATAL){
_257="FATAL";
}else{
if(_257>=MochiKit.Logging.LogLevel.ERROR){
_257="ERROR";
}else{
if(_257>=MochiKit.Logging.LogLevel.WARNING){
_257="WARNING";
}else{
if(_257>=MochiKit.Logging.LogLevel.INFO){
_257="INFO";
}else{
_257="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_257,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level,msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_25b){
var _25c=0;
if(!(typeof (_25b)=="undefined"||_25b===null)){
_25c=Math.max(0,this._messages.length-_25b);
}
return this._messages.slice(_25c);
},getMessageText:function(_25d){
if(typeof (_25d)=="undefined"||_25d===null){
_25d=30;
}
var _25e=this.getMessages(_25d);
if(_25e.length){
var lst=MochiKit.Base.map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_25e);
lst.unshift("LAST "+_25e.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_261){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_261||false);
}
}};
MochiKit.Logging.__new__=function(){
MochiKit.Logging.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _263=m.partial;
var _264=this.Logger;
var _265=_264.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_263(_265,"DEBUG"),log:_263(_265,"INFO"),error:_263(_265,"ERROR"),fatal:_263(_265,"FATAL"),warning:_263(_265,"WARNING")});
var self=this;
var _267=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
MochiKit.Logging.log=_267("log");
MochiKit.Logging.logError=_267("error");
MochiKit.Logging.logDebug=_267("debug");
MochiKit.Logging.logFatal=_267("fatal");
MochiKit.Logging.logWarning=_267("warning");
this.logger=new _264();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DateTime");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var y=parseInt(iso[0],10),m=parseInt(iso[1],10)-1,d=parseInt(iso[2],10);
var date=new Date(y,m,d);
date.setFullYear(y);
date.setMonth(m);
date.setDate(d);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_272,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_272=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_272,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_272,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_272,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_27a){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _27b=MochiKit.DateTime._padTwo;
if(_27a){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
var lst=[(_27a?_27b(date.getHours()):""+date.getHours()),_27b(date.getMinutes()),_27b(date.getSeconds())];
return lst.join(":")+(_27a?"Z":"");
};
MochiKit.DateTime.toISOTimestamp=function(date,_27e){
if(typeof (date)=="undefined"||date===null){
return null;
}
var time=MochiKit.DateTime.toISOTime(date,_27e);
var sep=_27e?"T":" ";
if(_27e){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+time;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _282=MochiKit.DateTime._padTwo;
var _283=MochiKit.DateTime._padFour;
return [_283(date.getFullYear()),_282(date.getMonth()+1),_282(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?""+n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return ""+n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _289=MochiKit.DateTime._padTwo;
return [_289(d.getMonth()+1),_289(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Format");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_28b,_28c,_28d,_28e,_28f,_290,_291,_292,_293){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _28b;
}
var _295=_28c;
var _296=_28d;
if(num<0){
num=-num;
}else{
_295=_295.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_28e);
if(_28f){
num=num*100;
_296=fmt.percent+_296;
}
num=MochiKit.Format.roundToFixed(num,_290);
var _299=num.split(/\./);
var _29a=_299[0];
var frac=(_299.length==1)?"":_299[1];
var res="";
while(_29a.length<_291){
_29a="0"+_29a;
}
if(_292){
while(_29a.length>_292){
var i=_29a.length-_292;
res=fmt.separator+_29a.substring(i,_29a.length)+res;
_29a=_29a.substring(0,i);
}
}
res=_29a+res;
if(_290>0){
while(frac.length<_293){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _295+res+_296;
};
};
MochiKit.Format.numberFormatter=function(_29e,_29f,_2a0){
if(typeof (_29f)=="undefined"){
_29f="";
}
var _2a1=_29e.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_2a1){
throw TypeError("Invalid pattern");
}
var _2a2=_29e.substr(0,_2a1.index);
var _2a3=_29e.substr(_2a1.index+_2a1[0].length);
if(_2a2.search(/-/)==-1){
_2a2=_2a2+"-";
}
var _2a4=_2a1[1];
var frac=(typeof (_2a1[2])=="string"&&_2a1[2]!="")?_2a1[2]:"";
var _2a6=(typeof (_2a1[3])=="string"&&_2a1[3]!="");
var tmp=_2a4.split(/,/);
var _2a8;
if(typeof (_2a0)=="undefined"){
_2a0="default";
}
if(tmp.length==1){
_2a8=null;
}else{
_2a8=tmp[1].length;
}
var _2a9=_2a4.length-_2a4.replace(/0/g,"").length;
var _2aa=frac.length-frac.replace(/0/g,"").length;
var _2ab=frac.length;
var rval=MochiKit.Format._numberFormatter(_29f,_2a2,_2a3,_2a0,_2a6,_2ab,_2a9,_2a8,_2aa);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",m.map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_2b0){
if(typeof (_2b0)=="undefined"||_2b0===null){
_2b0="default";
}
if(typeof (_2b0)=="string"){
var rval=MochiKit.Format.LOCALE[_2b0];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_2b0]=rval;
}
return rval;
}else{
return _2b0;
}
};
MochiKit.Format.twoDigitAverage=function(_2b2,_2b3){
if(_2b3){
var res=_2b2/_2b3;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_2b5){
var res=MochiKit.Format.roundToFixed(_2b5,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_2b8){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2b8){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_2b8+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_2ba){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_2ba){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_2ba+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_2bc){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_2bc),_2bc);
};
MochiKit.Format.truncToFixed=function(_2be,_2bf){
var _2c0=MochiKit.Format._numberToFixed(_2be,_2bf);
var _2c1=_2c0.indexOf(".");
if(_2c1>0&&_2c1+_2bf+1<_2c0.length){
_2c0=_2c0.substring(0,_2c1+_2bf+1);
_2c0=MochiKit.Format._shiftNumber(_2c0,0);
}
return _2c0;
};
MochiKit.Format.roundToFixed=function(_2c2,_2c3){
var _2c4=MochiKit.Format._numberToFixed(_2c2,_2c3);
var _2c5=_2c4.indexOf(".");
if(_2c5>0&&_2c5+_2c3+1<_2c4.length){
var str=MochiKit.Format._shiftNumber(_2c4,_2c3);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_2c4=MochiKit.Format._shiftNumber(str,-_2c3);
}
return _2c4;
};
MochiKit.Format._numberToFixed=function(_2c7,_2c8){
var str=_2c7.toString();
var _2ca=str.split(/[eE]/);
var exp=(_2ca.length===1)?0:parseInt(_2ca[1],10)||0;
var _2cc=MochiKit.Format._shiftNumber(_2ca[0],exp);
_2ca=_2cc.split(/\./);
var _2cd=_2ca[0];
var frac=(_2ca.length===1)?"":_2ca[1];
while(frac.length<_2c8){
frac+="0";
}
if(frac.length>0){
return _2cd+"."+frac;
}else{
return _2cd;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_2d2){
return MochiKit.Format.twoDigitFloat(100*_2d2)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text");
goog.require("MochiKit.Base");
goog.require("MochiKit.Format");
}
MochiKit.Base.module(MochiKit,"Text","1.5",["Base","Format"]);
MochiKit.Text.startsWith=function(_2d7,str){
return str!=null&&_2d7!=null&&str.indexOf(_2d7)==0;
};
MochiKit.Text.endsWith=function(_2d9,str){
return str!=null&&_2d9!=null&&str.lastIndexOf(_2d9)==Math.max(str.length-_2d9.length,0);
};
MochiKit.Text.contains=function(_2db,str){
return str!=null&&_2db!=null&&str.indexOf(_2db)>=0;
};
MochiKit.Text.padLeft=function(str,_2de,_2df){
str=str||"";
_2df=_2df||" ";
while(str.length<_2de){
str=_2df+str;
}
return str;
};
MochiKit.Text.padRight=function(str,_2e1,_2e2){
str=str||"";
_2e2=_2e2||" ";
while(str.length<_2e1){
str+=_2e2;
}
return str;
};
MochiKit.Text.truncate=function(str,_2e4,tail){
if(str==null||str.length<=_2e4||_2e4<0){
return str;
}else{
if(tail!=null){
str=str.slice(0,Math.max(0,_2e4-tail.length));
if(typeof (str)=="string"){
return str+tail;
}else{
return MochiKit.Base.extend(str,tail);
}
}else{
return str.slice(0,_2e4);
}
}
};
MochiKit.Text.split=function(str,_2e7,max){
if(str==null){
return str;
}
_2e7=_2e7||"\n";
var bits=str.split(_2e7);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(max,bits.length,bits.slice(max,bits.length).join(_2e7));
return bits;
};
MochiKit.Text.rsplit=function(str,_2eb,max){
if(str==null){
return str;
}
_2eb=_2eb||"\n";
var bits=str.split(_2eb);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(0,bits.length-max,bits.slice(0,bits.length-max).join(_2eb));
return bits;
};
MochiKit.Text.formatter=function(_2ee,_2ef){
if(_2ef==null){
_2ef=MochiKit.Format.formatLocale();
}else{
if(typeof (_2ef)=="string"){
_2ef=MochiKit.Format.formatLocale(_2ef);
}
}
var _2f0=MochiKit.Text._parsePattern(_2ee);
return function(){
var _2f1=MochiKit.Base.extend([],arguments);
var res=[];
for(var i=0;i<_2f0.length;i++){
if(typeof (_2f0[i])=="string"){
res.push(_2f0[i]);
}else{
res.push(MochiKit.Text.formatValue(_2f0[i],_2f1,_2ef));
}
}
return res.join("");
};
};
MochiKit.Text.format=function(_2f4,_2f5){
var func=MochiKit.Text.formatter(_2f4);
return func.apply(this,MochiKit.Base.extend([],arguments,1));
};
MochiKit.Text.formatValue=function(spec,_2f8,_2f9){
var self=MochiKit.Text;
if(typeof (spec)==="string"){
spec=self._parseFormatFlags(spec,0,spec.length);
}
for(var i=0;spec.path!=null&&i<spec.path.length;i++){
if(_2f8!=null){
_2f8=_2f8[spec.path[i]];
}
}
if(_2f9==null){
_2f9=MochiKit.Format.formatLocale();
}else{
if(typeof (_2f9)=="string"){
_2f9=MochiKit.Format.formatLocale(_2f9);
}
}
var str="";
if(spec.type=="number"){
if(_2f8 instanceof Number){
_2f8=_2f8.valueOf();
}
if(typeof (_2f8)!="number"||isNaN(_2f8)){
str="";
}else{
if(_2f8===Number.POSITIVE_INFINITY){
str="\u221e";
}else{
if(_2f8===Number.NEGATIVE_INFINITY){
str="-\u221e";
}else{
var sign=(_2f8<0)?"-":spec.sign;
_2f8=Math.abs(_2f8);
if(spec.format==="%"){
str=self._truncToPercent(_2f8,spec.precision);
}else{
if(spec.format==="d"){
str=MochiKit.Format.roundToFixed(_2f8,0);
}else{
if(spec.radix!=10){
str=Math.floor(_2f8).toString(spec.radix);
if(spec.format==="x"){
str=str.toLowerCase();
}else{
if(spec.format==="X"){
str=str.toUpperCase();
}
}
}else{
if(spec.precision>=0){
str=MochiKit.Format.roundToFixed(_2f8,spec.precision);
}else{
str=_2f8.toString();
}
}
}
}
if(spec.padding==="0"&&spec.format==="%"){
str=self.padLeft(str,spec.width-sign.length-1,"0");
}else{
if(spec.padding=="0"){
str=self.padLeft(str,spec.width-sign.length,"0");
}
}
str=self._localizeNumber(str,_2f9,spec.group);
str=sign+str;
}
}
}
if(str!==""&&spec.format==="%"){
str=str+_2f9.percent;
}
}else{
if(spec.format=="r"){
str=MochiKit.Base.repr(_2f8);
}else{
str=(_2f8==null)?"":_2f8.toString();
}
str=self.truncate(str,spec.precision);
}
if(spec.align=="<"){
str=self.padRight(str,spec.width);
}else{
str=self.padLeft(str,spec.width);
}
return str;
};
MochiKit.Text._localizeNumber=function(num,_2ff,_300){
var _301=num.split(/\./);
var _302=_301[0];
var frac=(_301.length==1)?"":_301[1];
var res=(frac.length>0)?_2ff.decimal:"";
while(_300&&frac.length>3){
res=res+frac.substring(0,3)+_2ff.separator;
frac=frac.substring(3);
if(_302.charAt(0)=="0"){
_302=_302.substring(1);
}
}
if(frac.length>0){
res=res+frac;
}
while(_300&&_302.length>3){
var pos=_302.length-3;
res=_2ff.separator+_302.substring(pos)+res;
_302=_302.substring((_302.charAt(0)=="0")?1:0,pos);
}
return _302+res;
};
MochiKit.Text._parsePattern=function(_306){
var self=MochiKit.Text;
var _308=[];
var re=/{[^{}]*}|{{?|}}?/g;
var _30a=re.lastIndex=0;
var m;
while((m=re.exec(_306))!=null){
if(_30a<m.index){
_308.push(_306.substring(_30a,m.index));
}
var str=m[0];
_30a=m.index+str.length;
if(self.startsWith("{",str)&&self.endsWith("}",str)){
_308.push(self._parseFormat(_306,m.index+1,_30a-1));
}else{
if(self.startsWith("{{",str)||self.startsWith("}}",str)){
_308.push(str.substring(1));
}else{
if(self.startsWith("{",str)){
var msg="unescaped { char, should be escaped as {{";
throw new self.FormatPatternError(_306,m.index,msg);
}else{
if(self.startsWith("}",str)){
var msg="unescaped } char, should be escaped as }}";
throw new self.FormatPatternError(_306,m.index,msg);
}
}
}
}
}
if(_30a<_306.length){
_308.push(_306.substring(_30a));
}
return _308;
};
MochiKit.Text._parseFormat=function(_30e,_30f,_310){
var self=MochiKit.Text;
var text=_30e.substring(_30f,_310);
var _313=self.split(text,":",1);
var path=_313[0];
var _315=_30f+path.length+((_313.length==1)?0:1);
var info=self._parseFormatFlags(_30e,_315,_310);
info.path=(path=="")?[]:path.split(".");
for(var i=0;i<info.path.length;i++){
var v=info.path[i];
v=v.replace(/^\s+/,"").replace(/\s+$/,"");
if(v==""&&info.path.length==1){
v=0;
}else{
if(v==""){
var msg="format value path contains blanks";
throw new self.FormatPatternError(_30e,_30f,msg);
}else{
if(/^\d+$/.test(v)){
v=parseInt(v,10);
}
}
}
info.path[i]=v;
}
if(info.path.length<=0||typeof (info.path[0])!="number"){
info.path.unshift(0);
}
return info;
};
MochiKit.Text._parseFormatFlags=function(_31a,_31b,_31c){
var _31d=MochiKit.Base.update;
var info={type:"string",format:"s",width:0,precision:-1,align:">",sign:"",padding:" ",group:false};
var text=_31a.substring(_31b,_31c).replace(/\s+$/,"");
var m=/^([<>+ 0,-]+)?(\d+)?(\.\d*)?([srbdoxXf%])?(.*)$/.exec(text);
var _321=m[1];
var _322=m[2];
var _323=m[3];
var type=m[4];
var _325=m[5];
for(var i=0;_321&&i<_321.length;i++){
var chr=_321.charAt(i);
if(chr=="<"||chr==">"){
info.align=chr;
}else{
if(chr=="+"||chr=="-"||chr==" "){
info.sign=(chr=="-")?"":chr;
}else{
if(chr=="0"){
info.padding=chr;
}else{
if(chr==","){
info.group=true;
}
}
}
}
}
if(_322){
info.width=parseInt(_322,10);
}
if(_323&&_323.length>1){
info.precision=parseInt(_323.substring(1),10);
}
if(type=="s"||type=="r"){
info.format=type;
}else{
if(type=="b"){
_31d(info,{type:"number",format:type,radix:2});
}else{
if(type=="o"){
_31d(info,{type:"number",format:type,radix:8});
}else{
if(type=="x"||type=="X"){
_31d(info,{type:"number",format:type,radix:16});
}else{
if(type=="d"||type=="f"||type=="%"){
_31d(info,{type:"number",format:type,radix:10});
}
}
}
}
}
if(_325){
var msg="unsupported format flag: "+_325.charAt(0);
throw new MochiKit.Text.FormatPatternError(_31a,_31b,msg);
}
return info;
};
MochiKit.Text._truncToPercent=function(_329,_32a){
var str;
if(_32a>=0){
str=MochiKit.Format.roundToFixed(_329,_32a+2);
}else{
str=(_329==null)?"0":_329.toString();
}
var arr=MochiKit.Text.split(str,".",2);
var frac=MochiKit.Text.padRight(arr[1],2,"0");
var _32e=arr[0]+frac.substring(0,2);
frac=frac.substring(2);
while(/^0[0-9]/.test(_32e)){
_32e=_32e.substring(1);
}
return (frac.length<=0)?_32e:_32e+"."+frac;
};
MochiKit.Text.FormatPatternError=function(_32f,pos,_331){
this.pattern=_32f;
this.pos=pos;
this.message=_331;
};
MochiKit.Text.FormatPatternError.prototype=new MochiKit.Base.NamedError("MochiKit.Text.FormatPatternError");
MochiKit.Text.FormatPatternError.constructor=MochiKit.Text.FormatPatternError;
if(MochiKit.__export__){
window.formatter=MochiKit.Text.formatter;
window.format=MochiKit.Text.format;
window.formatValue=MochiKit.Text.formatValue;
}
MochiKit.Base.nameFunctions(MochiKit.Text);
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Async");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_332){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_332;
this.silentlyCancelled=false;
this.chained=false;
this.finalized=false;
};
MochiKit.Async.Deferred.prototype.repr=function(){
return "Deferred("+this.id+", "+this.state()+")";
};
MochiKit.Async.Deferred.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.Deferred.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.Deferred.prototype.state=function(){
if(this.fired==-1){
return "unfired";
}else{
if(this.fired===0){
return "success";
}else{
return "error";
}
}
};
MochiKit.Async.Deferred.prototype.cancel=function(e){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(typeof (e)==="string"){
e=new self.GenericError(e);
}else{
if(!(e instanceof Error)){
e=new self.CancelledError(this);
}
}
this.errback(e);
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel(e);
}
}
};
MochiKit.Async.Deferred.prototype._resback=function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
if(this.paused===0){
this._fire();
}
};
MochiKit.Async.Deferred.prototype._check=function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
}
};
MochiKit.Async.Deferred.prototype.callback=function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.errback=function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
};
MochiKit.Async.Deferred.prototype.addBoth=function(fn,_33a){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
};
MochiKit.Async.Deferred.prototype.addCallback=function(fn,_33c){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
};
MochiKit.Async.Deferred.prototype.addErrback=function(fn,_33e){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
};
MochiKit.Async.Deferred.prototype.addCallbacks=function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype.setFinalizer=function(fn){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
this._finalizer=fn;
if(this.fired>=0){
this._fire();
}
return this;
};
MochiKit.Async.Deferred.prototype._fire=function(){
var _342=this.chain;
var _343=this.fired;
var res=this.results[_343];
var self=this;
var cb=null;
while(_342.length>0&&this.paused===0){
var pair=_342.shift();
var f=pair[_343];
if(f===null){
continue;
}
try{
var ret=f(res);
if(ret!==undefined){
res=ret;
}
_343=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self.paused--;
self._resback(res);
};
this.paused++;
}
}
catch(err){
_343=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_343;
this.results[_343]=res;
if(this.chain.length==0&&this.paused===0&&this._finalizer){
this.finalized=true;
this._finalizer(res);
}
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
};
MochiKit.Async.evalJSONRequest=function(req){
return MochiKit.Base.evalJSON(req.responseText);
};
MochiKit.Async.succeed=function(_34c){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
};
MochiKit.Async.fail=function(_34e){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
};
MochiKit.Async.getXMLHttpRequest=function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _351=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_351.length;i++){
var func=_351[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
};
MochiKit.Async._xhr_onreadystatechange=function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e2){
}
}
var _356=null;
try{
_356=this.status;
if(!_356&&(this.response||m.isNotEmpty(this.responseText))){
_356=304;
}
}
catch(e){
}
if(_356==200||_356==201||_356==204||_356==304||_356==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
};
MochiKit.Async._xhr_canceller=function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e2){
}
}
req.abort();
};
MochiKit.Async.sendXMLHttpRequest=function(req,_35a){
if(typeof (_35a)=="undefined"||_35a===null){
_35a="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_35a);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
};
MochiKit.Async.doXHR=function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:"",async:true},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,opts.async,opts.username,opts.password);
}else{
req.open(opts.method,url,opts.async);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _364=opts.headers;
if(!m.isArrayLike(_364)){
_364=m.items(_364);
}
for(var i=0;i<_364.length;i++){
var _366=_364[i];
var name=_366[0];
var _368=_366[1];
req.setRequestHeader(name,_368);
}
}
if("responseType" in opts&&"responseType" in req){
req.responseType=opts.responseType;
}
if(opts.withCredentials){
req.withCredentials="true";
}
return self.sendXMLHttpRequest(req,opts.sendContent);
};
MochiKit.Async._buildURL=function(url,_36a){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
};
MochiKit.Async.doSimpleXMLHttpRequest=function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
};
MochiKit.Async.loadJSONDoc=function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
};
MochiKit.Async.loadScript=function(url){
var d=new MochiKit.Async.Deferred();
var _374=document.createElement("script");
_374.type="text/javascript";
_374.onload=function(){
_374.onload=null;
_374.onerror=null;
_374.onreadystatechange=null;
_374=null;
d.callback();
};
_374.onerror=function(msg){
_374.onload=null;
_374.onerror=null;
_374.onreadystatechange=null;
_374=null;
msg="Failed to load script at "+url+": "+msg;
d.errback(new URIError(msg,url));
};
_374.onreadystatechange=function(){
if(_374.readyState=="loaded"||_374.readyState=="complete"){
_374.onload();
}else{
MochiKit.Async.callLater(10,_374.onerror,"Script loading timed out");
}
};
document.getElementsByTagName("head")[0].appendChild(_374);
_374.src=url;
return d;
};
MochiKit.Async.wait=function(_376,_377){
var d=new MochiKit.Async.Deferred();
var cb=MochiKit.Base.bind("callback",d,_377);
var _37a=setTimeout(cb,Math.floor(_376*1000));
d.canceller=function(){
try{
clearTimeout(_37a);
}
catch(e){
}
};
return d;
};
MochiKit.Async.callLater=function(_37b,func,_37d){
var m=MochiKit.Base;
var _37f=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_37b).addCallback(function(res){
return _37f();
});
};
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype.__class__=MochiKit.Async.DeferredLock;
MochiKit.Async.DeferredLock.prototype.acquire=function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
};
MochiKit.Async.DeferredLock.prototype.release=function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
};
MochiKit.Async.DeferredLock.prototype._nextId=MochiKit.Base.counter();
MochiKit.Async.DeferredLock.prototype.repr=function(){
var _382;
if(this.locked){
_382="locked, "+this.waiting.length+" waiting";
}else{
_382="unlocked";
}
return "DeferredLock("+this.id+", "+_382+")";
};
MochiKit.Async.DeferredLock.prototype.toString=MochiKit.Base.forwardCall("repr");
MochiKit.Async.DeferredList=function(list,_384,_385,_386,_387){
MochiKit.Async.Deferred.apply(this,[_387]);
this.list=list;
var _388=[];
this.resultList=_388;
this.finishedCount=0;
this.fireOnOneCallback=_384;
this.fireOnOneErrback=_385;
this.consumeErrors=_386;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_388.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_384){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype.constructor=MochiKit.Async.DeferredList;
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_38c,_38d,_38e){
this.resultList[_38c]=[_38d,_38e];
this.finishedCount+=1;
if(this.fired==-1){
if(_38d&&this.fireOnOneCallback){
this.callback([_38c,_38e]);
}else{
if(!_38d&&this.fireOnOneErrback){
this.errback(_38e);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_38d&&this.consumeErrors){
_38e=null;
}
return _38e;
};
MochiKit.Async.gatherResults=function(_38f,_390){
var _391=MochiKit.Base.flattenArguments(arguments);
var d=new MochiKit.Async.DeferredList(_391,false,true,false);
d.addCallback(function(_393){
var ret=[];
for(var i=0;i<_393.length;i++){
ret.push(_393[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _398;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_398=r;
}else{
if(r instanceof Error){
_398=self.fail(r);
}else{
_398=self.succeed(r);
}
}
}
catch(e){
_398=self.fail(e);
}
return _398;
};
MochiKit.Async.when=function(_39a){
if(typeof _39a!="undefined"&&typeof _39a.addCallback=="function"){
return _39a;
}
return MochiKit.Async.succeed(_39a);
};
MochiKit.Async.timeout=function(d,ms){
var dt=new MochiKit.Async.Deferred();
var h=setTimeout(function(){
dt.cancel();
},ms);
d.addBoth(function(){
clearTimeout(h);
}).addCallbacks(MochiKit.Base.bind(dt.callback,dt),MochiKit.Base.bind(dt.errback,dt));
return dt;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_3a1){
this.deferred=_3a1;
});
ne("CancelledError",function(_3a2){
this.deferred=_3a2;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DOM");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _3aa=self._document;
var _3ab=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_3ab;
self._document=_3aa;
throw e;
}
self._window=_3ab;
self._document=_3aa;
return rval;
},formContents:function(elem){
var _3ae=[];
var _3af=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _3b4=elem.tagName.toUpperCase();
if(_3b4==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_3b4==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_3ae.push(name);
_3af.push(v);
return null;
}
_3ae.push(name);
_3af.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_3ae.push(name);
_3af.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_3ae.push(name);
_3af.push(v);
}
return null;
}
}
if(_3b4==="FORM"||_3b4==="P"||_3b4==="SPAN"||_3b4==="DIV"){
return elem.childNodes;
}
_3ae.push(name);
_3af.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_3ae,_3af];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _3bd=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_3bd;
throw e;
}
self._document=_3bd;
return rval;
},registerDOMConverter:function(name,_3c0,wrap,_3c2){
MochiKit.DOM.domConverters.register(name,_3c0,wrap,_3c2);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _3c9=im.repeat;
}
var map=m.map;
var _3cb=self.domConverters;
var _3cc=arguments.callee;
var _3cd=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _3ce=null;
try{
_3ce=iter(node);
}
catch(e){
}
if(_3ce){
return map(_3cc,_3ce,_3c9(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _3cc(n,ctx);
};
return map(func,node);
}
}
try{
node=_3cb.match(node,ctx);
continue;
}
catch(e){
if(e!=_3cd){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_3d2){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_3d2)=="string"){
_3d2=self.getElement(_3d2);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_3d2){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_3d6){
var o={};
o[attr]=_3d6;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3db=self.attributeArray.renames[attr];
var _3dc=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_3db){
return node[_3db];
}
var _3dd=node.getAttribute(attr);
if(_3dd!=_3dc){
return _3dd;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _3e1=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_3e1){
return node[_3e1];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_3e3){
var elem=node;
var self=MochiKit.DOM;
var base=MochiKit.Base;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_3e3){
if(self.attributeArray.compliant){
for(var k in _3e3){
var v=_3e3[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _3e9=self.attributeArray.renames;
for(var k in _3e3){
v=_3e3[k];
var _3ea=_3e9[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_3ea)=="string"){
elem[_3ea]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node,_3ec,_3ed){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3f0=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3f1=MochiKit.Base.concat;
while(_3f0.length){
var n=_3f0.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_3f0=_3f1(n,_3f0);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node,_3f4,_3f5){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3f8=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3f9=elem.parentNode;
var _3fa=MochiKit.Base.concat;
while(_3f8.length){
var n=_3f8.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_3f9.insertBefore(n,elem);
}else{
_3f8=_3fa(n,_3f8);
}
}
}
return _3f9;
},insertSiblingNodesAfter:function(node,_3fd,_3fe){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _401=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_401);
}else{
return self.appendChildNodes(elem.parentNode,_401);
}
},replaceChildNodes:function(node,_403){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _406;
while((_406=elem.firstChild)){
elem.removeChild(_406);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_408){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_408)=="string"||typeof (_408)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _40d=self._xhtml;
if(_408&&!self.attributeArray.compliant){
var _40e="";
if("name" in _408){
_40e+=" name=\""+self.escapeHTML(_408.name)+"\"";
}
if(name=="input"&&"type" in _408){
_40e+=" type=\""+self.escapeHTML(_408.type)+"\"";
}
if(_40e){
name="<"+name+_40e+">";
_40d=false;
}
}
var d=self._document;
if(_40d&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_408){
self.updateNodeAttributes(elem,_408);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
if(e&&e.parentNode){
e.parentNode.removeChild(e);
}
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _417=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_417);
_417.replaceChild(src,dest);
}else{
_417.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByClassName:function(_41a,_41b){
var self=MochiKit.DOM;
if(self._document.getElementsByClassName){
self.getElementsByClassName=function(_41d,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _41f=elm.getElementsByClassName(_41d);
return MochiKit.Base.extend([],_41f);
};
}else{
if(self._document.evaluate){
self.getElementsByClassName=function(_420,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _422=_420.split(" ");
var _423="";
for(var k=0,kl=_422.length;k<kl;++k){
_423+="[contains(concat(' ', @class, ' '), ' "+_422[k]+" ')]";
}
var tag="*";
var _427=[];
try{
var _428="http://www.w3.org/1999/xhtml";
var _429=(self._document.documentElement.namespaceURI===_428)?_428:null;
_427=self._document.evaluate(".//"+tag+_423,elm,_429,0,null);
}
catch(e){
_427=self._document.evaluate(".//"+tag+_423,elm,null,0,null);
}
return MochiKit.Iter.list(_427);
};
}else{
self.getElementsByClassName=function(_42a,elm){
elm=elm||self._document;
elm=self.getElement(elm);
var _42c=_42a.split(" ");
var _42d=[];
for(var k=0,kl=_42c.length;k<kl;++k){
_42d.push(new RegExp("(^|\\s)"+_42c[k]+"(\\s|$)"));
}
var _430=elm.all?elm.all:elm.getElementsByTagName("*");
var _431=[];
for(var l=0,ll=_430.length;l<ll;++l){
var _434=_430[l];
var _435=false;
for(var m=0,ml=_42d.length;m<ml;++m){
_435=_42d[m].test(_434.className);
if(!_435){
break;
}
}
if(_435){
_431.push(_434);
}
}
return _431;
};
}
}
return self.getElementsByClassName(_41a,_41b);
},getElementsByTagAndClassName:function(_438,_439,_43a){
var self=MochiKit.DOM;
if(typeof (_438)=="undefined"||_438===null){
_438="*";
}
if(typeof (_43a)=="undefined"||_43a===null){
_43a=self._document;
}
_43a=self.getElement(_43a);
if(_43a==null){
return [];
}
if(_438=="*"){
return self.getElementsByClassName(_439,_43a);
}
var _43c=(_43a.getElementsByTagName(_438)||self._document.all);
if(typeof (_439)=="undefined"||_439===null){
return MochiKit.Base.extend(null,_43c);
}
var _43d=[];
for(var i=0;i<_43c.length;i++){
var _43f=_43c[i];
var cls=_43f.className;
if(typeof (cls)!="string"){
cls=_43f.getAttribute("class");
}
if(typeof (cls)=="string"){
var _441=cls.split(" ");
for(var j=0;j<_441.length;j++){
if(_441[j]==_439){
_43d.push(_43f);
break;
}
}
}
}
return _43d;
},_newCallStack:function(path,once){
var rval=function(){
var _446=arguments.callee.callStack;
for(var i=0;i<_446.length;i++){
if(_446[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_448,path,func,once){
var self=MochiKit.DOM;
var _44d=_448[path];
var _44e=_44d;
if(!(typeof (_44d)=="function"&&typeof (_44d.callStack)=="object"&&_44d.callStack!==null)){
_44e=self._newCallStack(path,once);
if(typeof (_44d)=="function"){
_44e.callStack.push(_44d);
}
_448[path]=_44e;
}
_44e.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_451){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_451=self.getElement(_451);
if(_451){
_451.focus();
}
});
},setElementClass:function(_453,_454){
var self=MochiKit.DOM;
var obj=self.getElement(_453);
if(self.attributeArray.compliant){
obj.setAttribute("class",_454);
}else{
obj.setAttribute("className",_454);
}
},toggleElementClass:function(_457,_458,_459){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_457)){
self.removeElementClass(obj,_457);
}
}
},addElementClass:function(_45d,_45e){
var self=MochiKit.DOM;
var obj=self.getElement(_45d);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_45e);
return true;
}
if(cls==_45e){
return false;
}
var _462=cls.split(" ");
for(var i=0;i<_462.length;i++){
if(_462[i]==_45e){
return false;
}
}
self.setElementClass(obj,cls+" "+_45e);
return true;
},removeElementClass:function(_464,_465){
var self=MochiKit.DOM;
var obj=self.getElement(_464);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_465){
self.setElementClass(obj,"");
return true;
}
var _469=cls.split(" ");
for(var i=0;i<_469.length;i++){
if(_469[i]==_465){
_469.splice(i,1);
self.setElementClass(obj,_469.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_46b,_46c,_46d){
var obj=MochiKit.DOM.getElement(_46b);
var res=MochiKit.DOM.removeElementClass(obj,_46c);
if(res){
MochiKit.DOM.addElementClass(obj,_46d);
}
return res;
},hasElementClass:function(_470,_471,_472){
var obj=MochiKit.DOM.getElement(_470);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _475=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_475.length;j++){
if(_475[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _47d=[dom];
var self=MochiKit.DOM;
var _47f=self.escapeHTML;
var _480=self.attributeArray;
while(_47d.length){
dom=_47d.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _481=[];
var _482=_480(dom);
for(var i=0;i<_482.length;i++){
var a=_482[i];
_481.push([" ",a.name,"=\"",_47f(a.value),"\""]);
}
_481.sort();
for(i=0;i<_481.length;i++){
var _485=_481[i];
for(var j=0;j<_485.length;j++){
lst.push(_485[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_47d.push("</"+dom.tagName.toLowerCase()+">");
var _487=dom.childNodes;
for(i=_487.length-1;i>=0;i--){
_47d.push(_487[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_47f(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_489){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _48e=node.nodeValue;
if(typeof (_48e)=="string"){
rval.push(_48e);
}
})(MochiKit.DOM.getElement(node));
if(_489){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_48f){
_48f=MochiKit.DOM.getElement(_48f);
for(var i=0;i<_48f.childNodes.length;i++){
var node=_48f.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_492,_493,_494){
var self=MochiKit.DOM;
if(typeof (_492)=="undefined"||_492===null){
_492="*";
}
if(typeof (_494)=="undefined"||_494===null){
_494=self._document;
}
_494=self.getElement(_494);
if(_494==null){
return null;
}
var _496=(_494.getElementsByTagName(_492)||self._document.all);
if(_496.length<=0){
return null;
}else{
if(typeof (_493)=="undefined"||_493===null){
return _496[0];
}
}
for(var i=0;i<_496.length;i++){
var _498=_496[i];
var cls=_498.className;
if(typeof (cls)!="string"){
cls=_498.getAttribute("class");
}
if(typeof (cls)=="string"){
var _49a=cls.split(" ");
for(var j=0;j<_49a.length;j++){
if(_49a[j]==_493){
return _498;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_49d,_49e){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_49d)=="undefined"||_49d===null){
_49d="*";
}else{
_49d=_49d.toUpperCase();
}
if(typeof (_49e)=="undefined"||_49e===null){
_49e=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _4a0=elem.tagName.toUpperCase();
if((_49d==="*"||_49d==_4a0)&&(_49e===null||self.hasElementClass(elem,_49e))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _4a3="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
MochiKit.DOM._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_4a3);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
MochiKit.DOM.domConverters=new m.AdapterRegistry();
var _4a4=this._document.createElement("span");
var _4a5;
if(_4a4&&_4a4.attributes&&_4a4.attributes.length>0){
var _4a6=m.filter;
_4a5=function(node){
return _4a6(_4a5.ignoreAttrFilter,node.attributes);
};
_4a5.ignoreAttr={};
var _4a8=_4a4.attributes;
var _4a9=_4a5.ignoreAttr;
for(var i=0;i<_4a8.length;i++){
var a=_4a8[i];
_4a9[a.name]=a.value;
}
_4a5.ignoreAttrFilter=function(a){
return (_4a5.ignoreAttr[a.name]!=a.value);
};
_4a5.compliant=false;
_4a5.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","rowspan":"rowSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_4a5=function(node){
return node.attributes;
};
_4a5.compliant=true;
_4a5.ignoreAttr={};
_4a5.renames={};
}
_4a5.__export__=false;
MochiKit.DOM.attributeArray=_4a5;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _4ae=this.createDOMFunc;
MochiKit.DOM.A=_4ae("a");
MochiKit.DOM.ARTICLE=_4ae("article");
MochiKit.DOM.ASIDE=_4ae("aside");
MochiKit.DOM.AUDIO=_4ae("audio");
MochiKit.DOM.BR=_4ae("br");
MochiKit.DOM.BUTTON=_4ae("button");
MochiKit.DOM.CANVAS=_4ae("canvas");
MochiKit.DOM.CAPTION=_4ae("caption");
MochiKit.DOM.CITE=_4ae("cite");
MochiKit.DOM.CODE=_4ae("code");
MochiKit.DOM.DD=_4ae("dd");
MochiKit.DOM.DEL=_4ae("del");
MochiKit.DOM.DFN=_4ae("dfn");
MochiKit.DOM.DIV=_4ae("div");
MochiKit.DOM.DL=_4ae("dl");
MochiKit.DOM.DT=_4ae("dt");
MochiKit.DOM.EM=_4ae("em");
MochiKit.DOM.EMBED=_4ae("embed");
MochiKit.DOM.FIELDSET=_4ae("fieldset");
MochiKit.DOM.FIGURE=_4ae("figure");
MochiKit.DOM.FIGCAPTION=_4ae("figcaption");
MochiKit.DOM.FOOTER=_4ae("footer");
MochiKit.DOM.FORM=_4ae("form");
MochiKit.DOM.H1=_4ae("h1");
MochiKit.DOM.H2=_4ae("h2");
MochiKit.DOM.H3=_4ae("h3");
MochiKit.DOM.H4=_4ae("h4");
MochiKit.DOM.H5=_4ae("h5");
MochiKit.DOM.H6=_4ae("h6");
MochiKit.DOM.HEADER=_4ae("header");
MochiKit.DOM.HGROUP=_4ae("hgroup");
MochiKit.DOM.HR=_4ae("hr");
MochiKit.DOM.IFRAME=_4ae("iframe");
MochiKit.DOM.IMG=_4ae("img");
MochiKit.DOM.INPUT=_4ae("input");
MochiKit.DOM.KBD=_4ae("kbd");
MochiKit.DOM.LABEL=_4ae("label");
MochiKit.DOM.LEGEND=_4ae("legend");
MochiKit.DOM.LI=_4ae("li");
MochiKit.DOM.LINK=_4ae("link");
MochiKit.DOM.MARK=_4ae("mark");
MochiKit.DOM.METER=_4ae("meter");
MochiKit.DOM.NAV=_4ae("nav");
MochiKit.DOM.OL=_4ae("ol");
MochiKit.DOM.OPTGROUP=_4ae("optgroup");
MochiKit.DOM.OPTION=_4ae("option");
MochiKit.DOM.P=_4ae("p");
MochiKit.DOM.PRE=_4ae("pre");
MochiKit.DOM.PROGRESS=_4ae("progress");
MochiKit.DOM.SAMP=_4ae("samp");
MochiKit.DOM.SCRIPT=_4ae("script");
MochiKit.DOM.SECTION=_4ae("section");
MochiKit.DOM.SELECT=_4ae("select");
MochiKit.DOM.SOURCE=_4ae("source");
MochiKit.DOM.SPAN=_4ae("span");
MochiKit.DOM.STRONG=_4ae("strong");
MochiKit.DOM.STYLE=_4ae("style");
MochiKit.DOM.SUB=_4ae("sub");
MochiKit.DOM.SUP=_4ae("sup");
MochiKit.DOM.TABLE=_4ae("table");
MochiKit.DOM.TBODY=_4ae("tbody");
MochiKit.DOM.TD=_4ae("td");
MochiKit.DOM.TEXTAREA=_4ae("textarea");
MochiKit.DOM.TFOOT=_4ae("tfoot");
MochiKit.DOM.TH=_4ae("th");
MochiKit.DOM.THEAD=_4ae("thead");
MochiKit.DOM.TIME=_4ae("time");
MochiKit.DOM.TR=_4ae("tr");
MochiKit.DOM.TT=_4ae("tt");
MochiKit.DOM.UL=_4ae("ul");
MochiKit.DOM.VAR=_4ae("var");
MochiKit.DOM.VIDEO=_4ae("video");
MochiKit.DOM.NBSP="\xa0";
MochiKit.DOM.$=this.getElement;
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
window.withWindow=MochiKit.DOM.withWindow;
window.withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Selector");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_4af){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_4af.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_4b0){
throw "Parse error in selector: "+_4b0;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _4b2=this.params;
var expr=this.expression;
var _4b4,_4b5,_4b6,rest;
while(_4b4=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_4b2.attributes=_4b2.attributes||[];
_4b2.attributes.push({name:_4b4[2],operator:_4b4[3],value:_4b4[4]||_4b4[5]||""});
expr=_4b4[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_4b4=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_4b5=_4b4[1];
_4b6=_4b4[2];
rest=_4b4[3];
switch(_4b5){
case "#":
_4b2.id=_4b6;
break;
case ".":
_4b2.classNames.push(_4b6);
break;
case ":":
_4b2.pseudoClassNames.push(_4b6);
break;
case "":
case undefined:
_4b2.tagName=_4b6.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _4b9=this.params;
var _4ba=[];
var _4bb,i;
function childElements(_4bd){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_4bd+".childNodes)";
}
if(_4b9.wildcard){
_4ba.push("true");
}
if(_4bb=_4b9.id){
_4ba.push("element.id == "+repr(_4bb));
}
if(_4bb=_4b9.tagName){
_4ba.push("element.tagName.toUpperCase() == "+repr(_4bb));
}
if((_4bb=_4b9.classNames).length>0){
for(i=0;i<_4bb.length;i++){
_4ba.push("MochiKit.DOM.hasElementClass(element, "+repr(_4bb[i])+")");
}
}
if((_4bb=_4b9.pseudoClassNames).length>0){
for(i=0;i<_4bb.length;i++){
var _4be=_4bb[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _4bf=_4be[1];
var _4c0=_4be[2];
switch(_4bf){
case "root":
_4ba.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_4be=_4c0.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_4be){
throw "Invalid argument to pseudo element nth-child: "+_4c0;
}
var a,b;
if(_4be[0]=="odd"){
a=2;
b=1;
}else{
if(_4be[0]=="even"){
a=2;
b=0;
}else{
a=_4be[2]&&parseInt(_4be,10)||null;
b=parseInt(_4be[3],10);
}
}
_4ba.push("this.nthChild(element,"+a+","+b+","+!!_4bf.match("^nth-last")+","+!!_4bf.match("of-type$")+")");
break;
case "first-child":
_4ba.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_4ba.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_4ba.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_4ba.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_4ba.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_4ba.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_4ba.push("element.childNodes.length == 0");
break;
case "enabled":
_4ba.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_4ba.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_4ba.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _4c3=new MochiKit.Selector.Selector(_4c0);
_4ba.push("!( "+_4c3.buildMatchExpression()+")");
break;
}
}
}
if(_4bb=_4b9.attributes){
MochiKit.Base.map(function(_4c4){
var _4c5="MochiKit.DOM.getNodeAttribute(element, "+repr(_4c4.name)+")";
var _4c6=function(_4c7){
return _4c5+".split("+repr(_4c7)+")";
};
_4ba.push(_4c5+" != null");
switch(_4c4.operator){
case "=":
_4ba.push(_4c5+" == "+repr(_4c4.value));
break;
case "~=":
_4ba.push("MochiKit.Base.findValue("+_4c6(" ")+", "+repr(_4c4.value)+") > -1");
break;
case "^=":
_4ba.push(_4c5+".substring(0, "+_4c4.value.length+") == "+repr(_4c4.value));
break;
case "$=":
_4ba.push(_4c5+".substring("+_4c5+".length - "+_4c4.value.length+") == "+repr(_4c4.value));
break;
case "*=":
_4ba.push(_4c5+".match("+repr(_4c4.value)+")");
break;
case "|=":
_4ba.push(_4c6("-")+"[0].toUpperCase() == "+repr(_4c4.value.toUpperCase()));
break;
case "!=":
_4ba.push(_4c5+" != "+repr(_4c4.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_4c4.operator+" in selector";
}
},_4bb);
}
return _4ba.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_4c9,a,b,_4cc,_4cd){
var _4ce=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4c9.parentNode.childNodes);
if(_4cd){
_4ce=MochiKit.Base.filter(function(node){
return node.tagName==_4c9.tagName;
},_4ce);
}
if(_4cc){
_4ce=MochiKit.Iter.reversed(_4ce);
}
if(a){
var _4d1=MochiKit.Base.findIdentical(_4ce,_4c9);
return ((_4d1+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_4ce,_4c9)+1;
}
},isUIElement:function(_4d2){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_4d2.tagName.toLowerCase())>-1;
},findElements:function(_4d3,axis){
var _4d5;
if(axis==undefined){
axis="";
}
function inScope(_4d6,_4d7){
if(axis==""){
return MochiKit.DOM.isChildNode(_4d6,_4d7);
}else{
if(axis==">"){
return _4d6.parentNode===_4d7;
}else{
if(axis=="+"){
return _4d6===nextSiblingElement(_4d7);
}else{
if(axis=="~"){
var _4d8=_4d7;
while(_4d8=nextSiblingElement(_4d8)){
if(_4d6===_4d8){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_4d5=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_4d5)){
if(!_4d3||inScope(_4d5,_4d3)){
return [_4d5];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_4d3=(_4d3||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_4d3){
throw "> combinator not allowed without preceeding expression";
}
_4d3=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_4d3.childNodes);
}else{
if(axis=="+"){
if(!_4d3){
throw "+ combinator not allowed without preceeding expression";
}
_4d3=nextSiblingElement(_4d3)&&[nextSiblingElement(_4d3)];
}else{
if(axis=="~"){
if(!_4d3){
throw "~ combinator not allowed without preceeding expression";
}
var _4db=[];
while(nextSiblingElement(_4d3)){
_4d3=nextSiblingElement(_4d3);
_4db.push(_4d3);
}
_4d3=_4db;
}
}
}
}
if(!_4d3){
return [];
}
var _4dc=MochiKit.Base.filter(MochiKit.Base.bind(function(_4dd){
return this.match(_4dd);
},this),_4d3);
return _4dc;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_4de,_4df){
_4de=MochiKit.DOM.getElement(_4de);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_4e4){
try{
var res=_4de.querySelectorAll(_4e4);
return Array.prototype.slice.call(res,0);
}
catch(ignore){
}
var _4e6="";
var _4e7=function(_4e8,expr){
var _4ea=expr.match(/^[>+~]$/);
if(_4ea){
_4e6=_4ea[0];
return _4e8;
}else{
var _4eb=new MochiKit.Selector.Selector(expr);
var _4ec=MochiKit.Iter.reduce(function(_4ed,_4ee){
return MochiKit.Base.extend(_4ed,_4eb.findElements(_4ee||_4de,_4e6));
},_4e8,[]);
_4e6="";
return _4ec;
}
};
var _4ef=_4e4.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_4e7,_4ef,[null]));
},_4df));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Style");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_4f7){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_4f7=MochiKit.Base.camelize(_4f7);
if(!elem||elem==d){
return undefined;
}
if(_4f7=="opacity"&&typeof (elem.filters)!="undefined"){
var _4fa=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_4fa&&_4fa[1]){
return parseFloat(_4fa[1])/100;
}
return 1;
}
if(_4f7=="float"||_4f7=="cssFloat"||_4f7=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _4fb=elem.style?elem.style[_4f7]:null;
if(!_4fb){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_4f7=_4f7.replace(/([A-Z])/g,"-$1").toLowerCase();
_4fb=css?css.getPropertyValue(_4f7):null;
}else{
if(elem.currentStyle){
_4fb=elem.currentStyle[_4f7];
if(/^\d/.test(_4fb)&&!/px$/.test(_4fb)&&_4f7!="fontWeight"){
var left=elem.style.left;
var _4fe=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_4fb||0;
_4fb=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_4fe;
}
}
}
}
if(_4f7=="opacity"){
_4fb=parseFloat(_4fb);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_4f7)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_4fb="auto";
}
}
return _4fb=="auto"?null:_4fb;
},setStyle:function(elem,_500){
elem=MochiKit.DOM.getElement(elem);
for(var name in _500){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_500[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_500[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_500[name];
}else{
elem.style.styleFloat=_500[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_500[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _505=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_505?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_507){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _50a=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(typeof (elem)=="string"){
elem=dom.getElement(elem);
}
if(elem==null||(!_50a(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _50e=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(_50a(elem)){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_50e=elem.offsetParent;
if(_50e!=elem){
while(_50e){
c.x+=parseInt(_50e.style.borderLeftWidth,10)||0;
c.y+=parseInt(_50e.style.borderTopWidth,10)||0;
c.x+=_50e.offsetLeft;
c.y+=_50e.offsetTop;
_50e=_50e.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_50e=elem.parentNode;
}else{
_50e=null;
}
while(_50e){
var _513=_50e.tagName.toUpperCase();
if(_513==="BODY"||_513==="HTML"){
break;
}
var disp=self.getStyle(_50e,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_50e.scrollLeft;
c.y-=_50e.scrollTop;
}
if(_50e.parentNode){
_50e=_50e.parentNode;
}else{
_50e=null;
}
}
}
}
}
if(_507){
_507=arguments.callee(_507);
if(_507){
c.x-=(_507.x||0);
c.y-=(_507.y||0);
}
}
return c;
},setElementPosition:function(elem,_516,_517){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_517)=="undefined"){
_517="px";
}
var _518={};
var _519=MochiKit.Base.isUndefinedOrNull;
if(!_519(_516.x)){
_518["left"]=_516.x+_517;
}
if(!_519(_516.y)){
_518["top"]=_516.y+_517;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_518});
},makePositioned:function(_51a){
_51a=MochiKit.DOM.getElement(_51a);
var pos=MochiKit.Style.getStyle(_51a,"position");
if(pos=="static"||!pos){
_51a.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_51a.style.top=0;
_51a.style.left=0;
}
}
},undoPositioned:function(_51c){
_51c=MochiKit.DOM.getElement(_51c);
if(_51c.style.position=="relative"){
_51c.style.position=_51c.style.top=_51c.style.left=_51c.style.bottom=_51c.style.right="";
}
},makeClipping:function(_51d){
_51d=MochiKit.DOM.getElement(_51d);
var s=_51d.style;
var _51f={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_51d,"overflow")||"visible")!="hidden"){
_51d.style.overflow="hidden";
_51d.style.overflowX="hidden";
_51d.style.overflowY="hidden";
}
return _51f;
},undoClipping:function(_520,_521){
_520=MochiKit.DOM.getElement(_520);
if(typeof (_521)=="string"){
_520.style.overflow=_521;
}else{
if(_521!=null){
_520.style.overflow=_521["overflow"];
_520.style.overflowX=_521["overflow-x"];
_520.style.overflowY=_521["overflow-y"];
}
}
},getElementDimensions:function(elem,_523){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _528=s.visibility;
var _529=s.position;
var _52a=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _52b=elem.offsetWidth;
var _52c=elem.offsetHeight;
s.display=_52a;
s.position=_529;
s.visibility=_528;
}else{
_52b=elem.offsetWidth||0;
_52c=elem.offsetHeight||0;
}
if(_523){
var _52d="colSpan" in elem&&"rowSpan" in elem;
var _52e=(_52d&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_52e){
if(/MSIE/.test(navigator.userAgent)){
var _52f=elem.previousSibling?0.5:1;
var _530=elem.nextSibling?0.5:1;
}else{
var _52f=0.5;
var _530=0.5;
}
}else{
var _52f=1;
var _530=1;
}
_52b-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_52f*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_530*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_52d){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _531=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _531=1;
}else{
var _531=_52e?0.5:1;
}
}
}else{
var _531=1;
}
_52c-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_531*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_52b,_52c);
},setElementDimensions:function(elem,_533,_534){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_534)=="undefined"){
_534="px";
}
var _535={};
var _536=MochiKit.Base.isUndefinedOrNull;
if(!_536(_533.w)){
_535["width"]=_533.w+_534;
}
if(!_536(_533.h)){
_535["height"]=_533.h+_534;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_535});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _53a=elem.tagName.toUpperCase();
return self._defaultDisplay[_53a]||"block";
},setDisplayForElement:function(_53b,_53c,_53d){
var _53e=MochiKit.Base.extend(null,arguments,1);
var _53f=MochiKit.DOM.getElement;
for(var i=0;i<_53e.length;i++){
_53c=_53f(_53e[i]);
if(_53c){
_53c.style.display=_53b;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _549=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_549.length;i++){
this._defaultDisplay[_549[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3",true);
MochiKit.Style.hideElement=m.partial(MochiKit.Style.setDisplayForElement,"none");
MochiKit.Style.showElement=m.partial(MochiKit.Style.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.LoggingPane");
goog.require("MochiKit.Base");
goog.require("MochiKit.Logging");
}
MochiKit.Base.module(MochiKit,"LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_54d){
var m=MochiKit.LoggingPane;
_54d=!(!_54d);
if(m._loggingPane&&m._loggingPane.inline!=_54d){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_54d,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_54f,_550){
if(typeof (_550)=="undefined"||_550===null){
_550=MochiKit.Logging.logger;
}
this.logger=_550;
var _551=MochiKit.Base.update;
var _552=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _554=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_54f){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _55b=doc.getElementById(uid);
var _55c=!!_55b;
if(_55b&&typeof (_55b.loggingPane)!="undefined"){
_55b.loggingPane.logger=this.logger;
_55b.loggingPane.buildAndApplyFilter();
return _55b.loggingPane;
}
if(_55c){
var _55d;
while((_55d=_55b.firstChild)){
_55b.removeChild(_55d);
}
}else{
_55b=doc.createElement("div");
_55b.id=uid;
}
_55b.loggingPane=this;
var _55e=doc.createElement("input");
var _55f=doc.createElement("input");
var _560=doc.createElement("button");
var _561=doc.createElement("button");
var _562=doc.createElement("button");
var _563=doc.createElement("button");
var _564=doc.createElement("div");
var _565=doc.createElement("div");
var _566=uid+"_Listener";
this.colorTable=_554(this.colorTable);
var _567=[];
var _568=null;
var _569=function(msg){
var _56b=msg.level;
if(typeof (_56b)=="number"){
_56b=MochiKit.Logging.LogLevel[_56b];
}
return _56b;
};
var _56c=function(msg){
return msg.info.join(" ");
};
var _56e=bind(function(msg){
var _570=_569(msg);
var text=_56c(msg);
var c=this.colorTable[_570];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_570;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_570+": "+text));
_565.appendChild(p);
_565.appendChild(doc.createElement("br"));
if(_564.offsetHeight>_564.scrollHeight){
_564.scrollTop=0;
}else{
_564.scrollTop=_564.scrollHeight;
}
},this);
var _574=function(msg){
_567[_567.length]=msg;
_56e(msg);
};
var _576=function(){
var _577,_578;
try{
_577=new RegExp(_55e.value);
_578=new RegExp(_55f.value);
}
catch(e){
MochiKit.Logging.logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_577.test(_569(msg))&&_578.test(_56c(msg)));
};
};
var _57a=function(){
while(_565.firstChild){
_565.removeChild(_565.firstChild);
}
};
var _57b=function(){
_567=[];
_57a();
};
var _57c=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_566);
try{
try{
_55b.loggingPane=null;
}
catch(e){
MochiKit.Logging.logFatal("Bookmarklet was closed incorrectly.");
}
if(_54f){
_55b.parentNode.removeChild(_55b);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _57d=function(){
_57a();
for(var i=0;i<_567.length;i++){
var msg=_567[i];
if(_568===null||_568(msg)){
_56e(msg);
}
}
};
this.buildAndApplyFilter=function(){
_568=_576();
_57d();
this.logger.removeListener(_566);
this.logger.addListener(_566,_568,_574);
};
var _580=bind(function(){
_567=this.logger.getMessages();
_57d();
},this);
var _581=bind(function(_582){
_582=_582||window.event;
var key=_582.which||_582.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _584="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_54f){
_584+="; height: 10em; border-top: 2px solid black";
}else{
_584+="; height: 100%;";
}
_55b.style.cssText=_584;
if(!_55c){
doc.body.appendChild(_55b);
}
_584={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_552(_55e,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_581,"style":_584});
_55b.appendChild(_55e);
_552(_55f,{"value":".*","onkeypress":_581,"style":_584});
_55b.appendChild(_55f);
_584="width: 8%; display:inline; font: "+this.logFont;
_560.appendChild(doc.createTextNode("Filter"));
_560.onclick=bind("buildAndApplyFilter",this);
_560.style.cssText=_584;
_55b.appendChild(_560);
_561.appendChild(doc.createTextNode("Load"));
_561.onclick=_580;
_561.style.cssText=_584;
_55b.appendChild(_561);
_562.appendChild(doc.createTextNode("Clear"));
_562.onclick=_57b;
_562.style.cssText=_584;
_55b.appendChild(_562);
_563.appendChild(doc.createTextNode("Close"));
_563.onclick=_57c;
_563.style.cssText=_584;
_55b.appendChild(_563);
_564.style.cssText="overflow: auto; width: 100%";
_565.style.cssText="width: 100%; height: "+(_54f?"8em":"100%");
_564.appendChild(_565);
_55b.appendChild(_564);
this.buildAndApplyFilter();
_580();
if(_54f){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_54f;
this.closePane=_57c;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Color");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_586,blue,_588){
if(typeof (_588)=="undefined"||_588===null){
_588=1;
}
this.rgb={r:red,g:_586,b:blue,a:_588};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_589){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_589);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_58f){
var hsl=this.asHSL();
hsl.s=_58f;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_592){
var hsl=this.asHSL();
hsl.l=_592;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_595){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_595,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_598){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_598,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_59b,_59c){
if(typeof (_59c)=="undefined"||_59c===null){
_59c=0.5;
}
var sf=1-_59c;
var s=this.rgb;
var d=_59b.rgb;
var df=_59c;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_5a1){
var a=this.asRGB();
var b=_5a1.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().l>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_5b8,blue,_5ba){
var _5bb=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_5b8=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_5ba=undefined;
}else{
_5ba=rgb.a;
}
}
return new _5bb(red,_5b8,blue,_5ba);
},fromHSL:function(hue,_5be,_5bf,_5c0){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_5c3,_5c4,_5c5){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _5c8=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _5c9=_5c8._namedColors[name.toLowerCase()];
if(typeof (_5c9)=="string"){
return _5c8.fromHexString(_5c9);
}else{
if(name=="transparent"){
return _5c8.transparentColor();
}
}
return null;
},fromString:function(_5ca){
var self=MochiKit.Color.Color;
var _5cc=_5ca.substr(0,3);
if(_5cc=="rgb"){
return self.fromRGBString(_5ca);
}else{
if(_5cc=="hsl"){
return self.fromHSLString(_5ca);
}else{
if(_5ca.charAt(0)=="#"){
return self.fromHexString(_5ca);
}
}
}
return self.fromName(_5ca);
},fromHexString:function(_5cd){
if(_5cd.charAt(0)=="#"){
_5cd=_5cd.substring(1);
}
var _5ce=[];
var i,hex;
if(_5cd.length==3){
for(i=0;i<3;i++){
hex=_5cd.substr(i,1);
_5ce.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_5cd.substr(i,2);
_5ce.push(parseInt(hex,16)/255);
}
}
var _5d1=MochiKit.Color.Color;
return _5d1.fromRGB.apply(_5d1,_5ce);
},_fromColorString:function(pre,_5d3,_5d4,_5d5){
if(_5d5.indexOf(pre)===0){
_5d5=_5d5.substring(_5d5.indexOf("(",3)+1,_5d5.length-1);
}
var _5d6=_5d5.split(/\s*,\s*/);
var _5d7=[];
for(var i=0;i<_5d6.length;i++){
var c=_5d6[i];
var val;
var _5db=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_5db=="deg"){
val=parseFloat(c)/360;
}else{
if(_5db=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_5d4[i]*parseFloat(c);
}
}
}
_5d7.push(val);
}
return this[_5d3].apply(this,_5d7);
},fromComputedStyle:function(elem,_5dd){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _5e0=MochiKit.Style.getStyle.apply(d,arguments);
if(!_5e0){
continue;
}
var _5e1=cls.fromString(_5e0);
if(!_5e1){
break;
}
if(_5e1.asRGB().a>0){
return _5e1;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_5e7){
v*=_5e7;
if(v<0){
return 0;
}else{
if(v>_5e7){
return _5e7;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_5ed,_5ee,_5ef){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_5ed=hsv.s;
_5ee=hsv.v;
_5ef=hsv.a;
}
var red;
var _5f2;
var blue;
if(_5ed===0){
red=_5ee;
_5f2=_5ee;
blue=_5ee;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_5ee*(1-_5ed);
var q=_5ee*(1-(_5ed*f));
var t=_5ee*(1-(_5ed*(1-f)));
switch(i){
case 1:
red=q;
_5f2=_5ee;
blue=p;
break;
case 2:
red=p;
_5f2=_5ee;
blue=t;
break;
case 3:
red=p;
_5f2=q;
blue=_5ee;
break;
case 4:
red=t;
_5f2=p;
blue=_5ee;
break;
case 5:
red=_5ee;
_5f2=p;
blue=q;
break;
case 6:
case 0:
red=_5ee;
_5f2=t;
blue=p;
break;
}
}
return {r:red,g:_5f2,b:blue,a:_5ef};
},hslToRGB:function(hue,_5fa,_5fb,_5fc){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_5fa=hsl.s;
_5fb=hsl.l;
_5fc=hsl.a;
}
var red;
var _5ff;
var blue;
if(_5fa===0){
red=_5fb;
_5ff=_5fb;
blue=_5fb;
}else{
var m2;
if(_5fb<=0.5){
m2=_5fb*(1+_5fa);
}else{
m2=_5fb+_5fa-(_5fb*_5fa);
}
var m1=(2*_5fb)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_5ff=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_5ff,b:blue,a:_5fc};
},rgbToHSV:function(red,_606,blue,_608){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_606=rgb.g;
blue=rgb.b;
_608=rgb.a;
}
var max=Math.max(Math.max(red,_606),blue);
var min=Math.min(Math.min(red,_606),blue);
var hue;
var _60d;
var _60e=max;
if(min==max){
hue=0;
_60d=0;
}else{
var _60f=(max-min);
_60d=_60f/max;
if(red==max){
hue=(_606-blue)/_60f;
}else{
if(_606==max){
hue=2+((blue-red)/_60f);
}else{
hue=4+((red-_606)/_60f);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_60d,v:_60e,a:_608};
},rgbToHSL:function(red,_611,blue,_613){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_611=rgb.g;
blue=rgb.b;
_613=rgb.a;
}
var max=Math.max(red,Math.max(_611,blue));
var min=Math.min(red,Math.min(_611,blue));
var hue;
var _618;
var _619=(max+min)/2;
var _61a=max-min;
if(_61a===0){
hue=0;
_618=0;
}else{
if(_619<=0.5){
_618=_61a/(max+min);
}else{
_618=_61a/(2-max-min);
}
if(red==max){
hue=(_611-blue)/_61a;
}else{
if(_611==max){
hue=2+((blue-red)/_61a);
}else{
hue=4+((red-_611)/_61a);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_618,l:_619,a:_613};
},toColorPart:function(num){
num=Math.round(num);
var _61c=num.toString(16);
if(num<16){
return "0"+_61c;
}
return _61c;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _61e=1/3;
var _61f={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_61e,_61e,_61e],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_61e,2*_61e,2*_61e],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
for(var k in _61f){
var name=k+"Color";
var _622=this.Color.fromRGB.apply(this.Color,_61f[k]);
this.Color[name]=m.partial(m.operator.identity,_622);
}
var _623=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _625=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_623,_625);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Signal");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
}
MochiKit.Base.module(MochiKit,"Signal","1.5",["Base","DOM"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Signal.Event.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
};
MochiKit.Signal.Event.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Signal.Event.prototype.src=function(){
return this._src;
};
MochiKit.Signal.Event.prototype.event=function(){
return this._event;
};
MochiKit.Signal.Event.prototype.type=function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
};
MochiKit.Signal.Event.prototype.target=function(){
return this._event.target||this._event.srcElement;
};
MochiKit.Signal.Event.prototype._relatedTarget=null;
MochiKit.Signal.Event.prototype.relatedTarget=function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
};
MochiKit.Signal.Event.prototype._modifier=null;
MochiKit.Signal.Event.prototype.modifier=function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
};
MochiKit.Signal.Event.prototype._key=null;
MochiKit.Signal.Event.prototype.key=function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
};
MochiKit.Signal.Event.prototype._mouse=null;
MochiKit.Signal.Event.prototype.mouse=function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("drag")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client={x:0,y:0};
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page={x:0,y:0};
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel={x:0,y:0};
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
};
MochiKit.Signal.Event.prototype.stop=function(){
this.stopPropagation();
this.preventDefault();
};
MochiKit.Signal.Event.prototype.stopPropagation=function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
};
MochiKit.Signal.Event.prototype.preventDefault=function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
};
MochiKit.Signal.Event.prototype._confirmUnload=null;
MochiKit.Signal.Event.prototype.confirmUnload=function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
};
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _634=MochiKit.Signal._specialMacKeys;
for(var i=63236;i<=63242;i++){
_634[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _636=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_636[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_636[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_636[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_636[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_638){
this.source=_638.source;
this.signal=_638.signal;
this.listener=_638.listener;
this.isDOM=_638.isDOM;
this.objOrFunc=_638.objOrFunc;
this.funcOrStr=_638.funcOrStr;
this.connected=_638.connected;
this.namespace=_638.namespace;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Signal.Ident.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "src:"+repr(this.source)+", sig: "+repr(this.signal)+", isDOM: "+repr(this.isDOM)+", connected: "+repr(this.connected);
};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _63b=self._observers;
for(var i=0;i<_63b.length;i++){
if(_63b[i].signal!=="onload"&&_63b[i].signal!=="onunload"){
self._disconnect(_63b[i]);
}
}
},_listener:function(src,sig,func,obj,_641){
var self=MochiKit.Signal;
var E=self.Event;
if(!_641){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_644){
obj[func].apply(obj,[new E(src,_644)]);
var _645=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_645);
};
}else{
return function(_646){
obj[func].apply(obj,[new E(src,_646)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_647){
func.apply(obj,[new E(src,_647)]);
var _648=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_648);
};
}else{
return function(_649){
func.apply(obj,[new E(src,_649)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_64f){
var e=new E(src,_64f);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_651,_652){
var obj=null;
var func=null;
if(typeof (_652)!="undefined"){
obj=_651;
func=_652;
if(typeof (_652)=="string"){
if(typeof (_651[_652])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_652)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_651)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_651;
}
}
return [obj,func];
},connect:function(src,sig,_657,_658,_659){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _65b=sig.split(".");
if(_65b.length>=2){
sig=_65b[0];
}
var _65c=self._getDestPair(_657,_658);
var obj=_65c[0];
var func=_65c[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _65f=!!(src.addEventListener||src.attachEvent);
if(_65f&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _660=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_65f&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _660=self._listener(src,sig,func,obj,_65f);
sig="onDOMMouseScroll";
}else{
var _660=self._listener(src,sig,func,obj,_65f);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_660,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_660);
}
}
var _661=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_660,isDOM:_65f,objOrFunc:_657,funcOrStr:_658,connected:true,namespace:_65b[1]||""});
self._observers.push(_661);
if(!_65f&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_661],arguments,1);
src.__connect__.apply(src,args);
}
return _661;
},connectOnce:function(src,sig,_665,_666){
var self=MochiKit.Signal;
var _668=self.connect(src,sig,_665,_666);
var _669;
_669=self.connect(src,sig,function(){
self.disconnect(_668);
self.disconnect(_669);
});
return _668;
},_disconnect:function(_66a){
if(!_66a.connected){
return;
}
_66a.connected=false;
var src=_66a.source;
var sig=_66a.signal;
var _66d=_66a.listener;
if(!_66a.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_66a,sig,_66a.objOrFunc,_66a.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_66d,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_66d);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_66e){
var self=MochiKit.Signal;
var _670=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_670.length-1;i>=0;i--){
var o=_670[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(self._lock===0){
_670.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_670,_66e);
if(idx>=0){
self._disconnect(_66e);
if(self._lock===0){
_670.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_679,_67a){
var self=MochiKit.Signal;
var _67c=self._observers;
var _67d=self._disconnect;
var lock=self._lock;
var _67f=self._dirty;
if(typeof (_67a)==="undefined"){
_67a=null;
}
for(var i=_67c.length-1;i>=0;i--){
var _681=_67c[i];
if(_681.objOrFunc===_679&&(_67a===null||_681.funcOrStr===_67a)){
_67d(_681);
if(lock===0){
_67c.splice(i,1);
}else{
_67f=true;
}
}
}
self._dirty=_67f;
},disconnectAll:function(src,_683){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _685=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _687=self._disconnect;
var _688=self._observers;
var i,_68a;
var lock=self._lock;
var _68c=self._dirty;
if(_685.length===0){
for(i=_688.length-1;i>=0;i--){
_68a=_688[i];
if(_68a.source===src){
_687(_68a);
if(lock===0){
_688.splice(i,1);
}else{
_68c=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_685.length;i++){
sigs[_685[i]]=true;
}
for(i=_688.length-1;i>=0;i--){
_68a=_688[i];
if(_68a.source===src&&_68a.signal in sigs){
_687(_68a);
if(lock===0){
_688.splice(i,1);
}else{
_68c=true;
}
}
}
}
self._dirty=_68c;
},disconnectNS:function(_68e){
var self=MochiKit.Signal;
var _690=_68e.split(".");
if(_690.length!=2){
throw new Error("No namespace found in 'sigAndOrNS'");
}
var _691=_690[0];
var _692=_690[1];
var n=0;
var _694=self._observers;
for(var i=_694.length-1;i>=0;i--){
var _696=_694[i];
if((_696.namespace==_692)&&((_691!=""&&_696.signal==_691)||(_691==""))){
self._disconnect(_696);
if(self._lock===0){
_694.splice(i,1);
}else{
self._dirty=true;
}
n+=1;
}
}
return n;
},signal:function(src,sig,_699){
var self=MochiKit.Signal;
var _69b=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _69d=[];
self._lock++;
for(var i=0;i<_69b.length;i++){
var _69f=_69b[i];
if(_69f.source===src&&_69f.signal===sig&&_69f.connected){
try{
if(_69f.isDOM&&_69f.funcOrStr!=null){
var obj=_69f.objOrFunc;
obj[_69f.funcOrStr].apply(obj,args);
}else{
if(_69f.isDOM){
_69f.objOrFunc.apply(src,args);
}else{
_69f.listener.apply(src,args);
}
}
}
catch(e){
_69d.push(e);
}
}
}
self._lock--;
self._gc();
if(_69d.length==1){
throw _69d[0];
}else{
if(_69d.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_69d;
throw e;
}
}
},_gc:function(){
var self=MochiKit.Signal;
var _6a3=self._observers;
if(self._lock===0&&self._dirty){
for(var i=_6a3.length-1;i>=0;i--){
if(!_6a3[i].connected){
_6a3.splice(i,1);
}
}
self._dirty=false;
return true;
}
return false;
}});
MochiKit.Signal.disconnectAllFromTo=function(src,_6a6){
var self=MochiKit.Signal;
var _6a8=self._observers;
var _6a9=self._disconnect;
var lock=self._lock;
var _6ab=self._dirty;
for(var i=_6a8.length-1;i>=0;i--){
var _6ad=_6a8[i];
if(_6ad.objOrFunc===_6a6&&_6ad.source==src){
_6a9(_6ad);
if(lock===0){
_6a8.splice(i,1);
}else{
_6ab=true;
}
}
}
self._dirty=_6ab;
};
MochiKit.Signal.close=function(obj){
MochiKit.Signal.disconnectAll(obj);
MochiKit.Signal.disconnectAllTo(obj);
};
MochiKit.Signal._pubsub_topics={};
MochiKit.Signal.publish=function(_6af,_6b0){
MochiKit.Signal.signal.apply(MochiKit.Signal,MochiKit.Base.extend([MochiKit.Signal._pubsub_topics,_6af],arguments,1));
};
MochiKit.Signal.subscribe=function(_6b1,_6b2,_6b3){
return MochiKit.Signal.connect(MochiKit.Signal._pubsub_topics,_6b1,_6b2,_6b3);
};
MochiKit.Signal.unsubscribe=function(_6b4){
MochiKit.Signal.disconnect(_6b4);
};
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
MochiKit.Signal._lock=0;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
window.connect=MochiKit.Signal.connect;
window.disconnect=MochiKit.Signal.disconnect;
window.disconnectAll=MochiKit.Signal.disconnectAll;
window.signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Position");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
}
MochiKit.Base.module(MochiKit,"Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _6b7=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _6b8=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_6b7,_6b8);
},cumulativeOffset:function(_6b9){
var _6ba=0;
var _6bb=0;
do{
_6ba+=_6b9.offsetTop||0;
_6bb+=_6b9.offsetLeft||0;
_6b9=_6b9.offsetParent;
}while(_6b9);
return new MochiKit.Style.Coordinates(_6bb,_6ba);
},realOffset:function(_6bc){
var _6bd=0;
var _6be=0;
do{
_6bd+=_6bc.scrollTop||0;
_6be+=_6bc.scrollLeft||0;
_6bc=_6bc.parentNode;
}while(_6bc);
return new MochiKit.Style.Coordinates(_6be,_6bd);
},within:function(_6bf,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_6bf,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_6bf);
if(_6bf.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_6bf.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_6bf.offsetWidth);
},withinIncludingScrolloffsets:function(_6c2,x,y){
var _6c5=this.realOffset(_6c2);
this.xcomp=x+_6c5.x-this.windowOffset.x;
this.ycomp=y+_6c5.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_6c2);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_6c2.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_6c2.offsetWidth);
},overlap:function(mode,_6c7){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_6c7.offsetHeight)-this.ycomp)/_6c7.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_6c7.offsetWidth)-this.xcomp)/_6c7.offsetWidth;
}
},absolutize:function(_6c8){
_6c8=MochiKit.DOM.getElement(_6c8);
if(_6c8.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _6c9=MochiKit.Position.positionedOffset(_6c8);
var _6ca=_6c8.clientWidth;
var _6cb=_6c8.clientHeight;
var _6cc={"position":_6c8.style.position,"left":_6c9.x-parseFloat(_6c8.style.left||0),"top":_6c9.y-parseFloat(_6c8.style.top||0),"width":_6c8.style.width,"height":_6c8.style.height};
_6c8.style.position="absolute";
_6c8.style.top=_6c9.y+"px";
_6c8.style.left=_6c9.x+"px";
_6c8.style.width=_6ca+"px";
_6c8.style.height=_6cb+"px";
return _6cc;
},positionedOffset:function(_6cd){
var _6ce=0,_6cf=0;
do{
_6ce+=_6cd.offsetTop||0;
_6cf+=_6cd.offsetLeft||0;
_6cd=_6cd.offsetParent;
if(_6cd){
var p=MochiKit.Style.getStyle(_6cd,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_6cd);
return new MochiKit.Style.Coordinates(_6cf,_6ce);
},relativize:function(_6d1,_6d2){
_6d1=MochiKit.DOM.getElement(_6d1);
if(_6d1.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_6d1.style.top||0)-(_6d2["top"]||0);
var left=parseFloat(_6d1.style.left||0)-(_6d2["left"]||0);
_6d1.style.position=_6d2["position"];
_6d1.style.top=top+"px";
_6d1.style.left=left+"px";
_6d1.style.width=_6d2["width"];
_6d1.style.height=_6d2["height"];
},clone:function(_6d5,_6d6){
_6d5=MochiKit.DOM.getElement(_6d5);
_6d6=MochiKit.DOM.getElement(_6d6);
_6d6.style.position="absolute";
var _6d7=this.cumulativeOffset(_6d5);
_6d6.style.top=_6d7.y+"px";
_6d6.style.left=_6d7.x+"px";
_6d6.style.width=_6d5.offsetWidth+"px";
_6d6.style.height=_6d5.offsetHeight+"px";
},page:function(_6d8){
var _6d9=0;
var _6da=0;
var _6db=_6d8;
do{
_6d9+=_6db.offsetTop||0;
_6da+=_6db.offsetLeft||0;
if(_6db.offsetParent==document.body&&MochiKit.Style.getStyle(_6db,"position")=="absolute"){
break;
}
}while(_6db=_6db.offsetParent);
_6db=_6d8;
do{
_6d9-=_6db.scrollTop||0;
_6da-=_6db.scrollLeft||0;
}while(_6db=_6db.parentNode);
return new MochiKit.Style.Coordinates(_6da,_6d9);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Visual");
goog.require("MochiKit.Base");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Style");
goog.require("MochiKit.Color");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_6de){
e=MochiKit.DOM.getElement(e);
this._setOptions(_6de);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _6df=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_6df=C.fromBackground(e);
}else{
if(!(_6df instanceof C)){
_6df=C.fromString(_6df);
}
}
this.isTransparent=(_6df.asRGB().a<=0);
var _6e1=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_6e1=C.fromBackground(e.offsetParent);
}else{
if(!(_6e1 instanceof C)){
_6e1=C.fromString(_6e1);
}
}
this._roundCornersImpl(e,_6df,_6e1);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _6e3=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _6e5=doc.defaultView.getComputedStyle(e,null);
if(typeof (_6e5)==="undefined"||_6e5===null){
return e;
}
var _6e6=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_6e5.getPropertyValue("padding-top"),marginRight:_6e5.getPropertyValue("padding-right"),marginBottom:_6e5.getPropertyValue("padding-bottom"),marginLeft:_6e5.getPropertyValue("padding-left"),padding:"0px"}});
_6e6.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_6e6);
return e;
},_roundCornersImpl:function(e,_6e8,_6e9){
if(this.options.border){
this._renderBorder(e,_6e9);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_6e8,_6e9);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_6e8,_6e9);
}
},_renderBorder:function(el,_6eb){
var _6ec="1px solid "+this._borderColor(_6eb);
var _6ed="border-left: "+_6ec;
var _6ee="border-right: "+_6ec;
var _6ef="style='"+_6ed+";"+_6ee+"'";
el.innerHTML="<div "+_6ef+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_6f1,_6f2){
var _6f3=this._createCorner(_6f2);
for(var i=0;i<this.options.numSlices;i++){
_6f3.appendChild(this._createCornerSlice(_6f1,_6f2,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_6f3,el.firstChild);
},_roundBottomCorners:function(el,_6f6,_6f7){
var _6f8=this._createCorner(_6f7);
for(var i=(this.options.numSlices-1);i>=0;i--){
_6f8.appendChild(this._createCornerSlice(_6f6,_6f7,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_6f8);
},_createCorner:function(_6fa){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_6fa.toString()}});
},_createCornerSlice:function(_6fc,_6fd,n,_6ff){
var _700=MochiKit.DOM.SPAN();
var _701=_700.style;
_701.backgroundColor=_6fc.toString();
_701.display="block";
_701.height="1px";
_701.overflow="hidden";
_701.fontSize="1px";
var _702=this._borderColor(_6fc,_6fd);
if(this.options.border&&n===0){
_701.borderTopStyle="solid";
_701.borderTopWidth="1px";
_701.borderLeftWidth="0px";
_701.borderRightWidth="0px";
_701.borderBottomWidth="0px";
_701.height="0px";
_701.borderColor=_702.toString();
}else{
if(_702){
_701.borderColor=_702.toString();
_701.borderStyle="solid";
_701.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_701.height="2px";
}
this._setMargin(_700,n,_6ff);
this._setBorder(_700,n,_6ff);
return _700;
},_setOptions:function(_703){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_703);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _704=this.options.corners;
if(this._hasString(_704,"all","top")){
return "";
}
var _705=(_704.indexOf("tl")!=-1);
var _706=(_704.indexOf("tr")!=-1);
if(_705&&_706){
return "";
}
if(_705){
return "left";
}
if(_706){
return "right";
}
return "";
},_whichSideBottom:function(){
var _707=this.options.corners;
if(this._hasString(_707,"all","bottom")){
return "";
}
var _708=(_707.indexOf("bl")!=-1);
var _709=(_707.indexOf("br")!=-1);
if(_708&&_709){
return "";
}
if(_708){
return "left";
}
if(_709){
return "right";
}
return "";
},_borderColor:function(_70a,_70b){
if(_70a=="transparent"){
return _70b;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _70b.blendedColor(_70a);
}
}
}
return "";
},_setMargin:function(el,n,_70e){
var _70f=this._marginSize(n)+"px";
var _710=(_70e=="top"?this._whichSideTop():this._whichSideBottom());
var _711=el.style;
if(_710=="left"){
_711.marginLeft=_70f;
_711.marginRight="0px";
}else{
if(_710=="right"){
_711.marginRight=_70f;
_711.marginLeft="0px";
}else{
_711.marginLeft=_70f;
_711.marginRight=_70f;
}
}
},_setBorder:function(el,n,_714){
var _715=this._borderSize(n)+"px";
var _716=(_714=="top"?this._whichSideTop():this._whichSideBottom());
var _717=el.style;
if(_716=="left"){
_717.borderLeftWidth=_715;
_717.borderRightWidth="0px";
}else{
if(_716=="right"){
_717.borderRightWidth=_715;
_717.borderLeftWidth="0px";
}else{
_717.borderLeftWidth=_715;
_717.borderRightWidth=_715;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _71a=[1,0];
return _71a[n];
}else{
if(o.compact){
var _71b=[2,1];
return _71b[n];
}else{
if(o.blend){
var _71c=[3,2,1,0];
return _71c[n];
}else{
var _71d=[5,3,2,1];
return _71d[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _720;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_720=[1,0];
}else{
if(o.blend){
_720=[2,1,1,1];
}else{
if(o.border){
_720=[0,2,0,0];
}else{
if(this.isTransparent){
_720=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _720[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_725){
new MochiKit.Visual._RoundCorners(e,_725);
};
MochiKit.Visual.roundClass=function(_726,_727,_728){
var _729=MochiKit.DOM.getElementsByTagAndClassName(_726,_727);
for(var i=0;i<_729.length;i++){
MochiKit.Visual.roundElement(_729[i],_728);
}
};
MochiKit.Visual.tagifyText=function(_72b,_72c){
_72c=_72c||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_72c+=";zoom:1";
}
_72b=MochiKit.DOM.getElement(_72b);
var ma=MochiKit.Base.map;
ma(function(_72e){
if(_72e.nodeType==3){
ma(function(_72f){
_72b.insertBefore(MochiKit.DOM.SPAN({style:_72c},_72f==" "?String.fromCharCode(160):_72f),_72e);
},_72e.nodeValue.split(""));
MochiKit.DOM.removeElement(_72e);
}
},_72b.childNodes);
};
MochiKit.Visual._forceRerendering=function(_730){
try{
_730=MochiKit.DOM.getElement(_730);
var n=document.createTextNode(" ");
_730.appendChild(n);
_730.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_732,_733,_734){
_734=MochiKit.Base.update({speed:0.1,delay:0},_734);
var _735=_734.delay;
var _736=0;
MochiKit.Base.map(function(_737){
_734.delay=_736*_734.speed+_735;
new _733(_737,_734);
_736+=1;
},_732);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_738,_739,_73a){
_738=MochiKit.DOM.getElement(_738);
_739=(_739||"appear").toLowerCase();
_73a=MochiKit.Base.update({queue:{position:"end",scope:(_738.id||"global"),limit:1}},_73a);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_738,"display")!="none"?v.PAIRS[_739][1]:v.PAIRS[_739][0]](_738,_73a);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_742){
if(_742){
pos*=2*_742;
}else{
pos*=10;
}
var _743=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_743:1-_743;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.spring=function(pos){
return 1-(Math.cos(pos*2.5*Math.PI)*Math.exp(-pos*6));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_749){
var _74a=new Date().getTime();
var _74b=(typeof (_749.options.queue)=="string")?_749.options.queue:_749.options.queue.position;
var ma=MochiKit.Base.map;
switch(_74b){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_749.finishOn;
e.finishOn+=_749.finishOn;
}
},this.effects);
break;
case "end":
var _74e;
ma(function(e){
var i=e.finishOn;
if(i>=(_74e||i)){
_74e=i;
}
},this.effects);
_74a=_74e||_74a;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
case "replace":
ma(function(e){
e.cancel();
},this.effects);
break;
}
_749.startOn+=_74a;
_749.finishOn+=_74a;
if(!_749.options.queue.limit||this.effects.length<_749.options.queue.limit){
this.effects.push(_749);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_754){
return setInterval(func,_754);
},remove:function(_755){
this.effects=MochiKit.Base.filter(function(e){
return e!=_755;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_757){
clearInterval(_757);
},loop:function(){
var _758=new Date().getTime();
MochiKit.Base.map(function(_759){
_759.loop(_758);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_75a){
if(typeof (_75a)!="string"){
return _75a;
}
if(!this.instances[_75a]){
this.instances[_75a]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_75a];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_75b){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_75b,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_75d){
if(_75d>=this.startOn){
if(_75d>=this.finishOn){
return this.finalize();
}
var pos=(_75d-this.startOn)/(this.finishOn-this.startOn);
var _75f=Math.round(pos*this.options.fps*this.options.duration);
if(_75f>this.currentFrame){
this.render(pos);
this.currentFrame=_75f;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
var _761=this.options.transition;
if(typeof (_761)=="string"){
_761=MochiKit.Visual.Transitions[_761];
}
if(typeof (_761)=="function"){
pos=_761(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_762){
},event:function(_763){
if(this.options[_763+"Internal"]){
this.options[_763+"Internal"](this);
}
if(this.options[_763]){
this.options[_763](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_764,_765){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_764,_765);
}
this.__init__(_764,_765);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_767,_768){
this.effects=_767||[];
this.start(_768);
},update:function(_769){
MochiKit.Base.map(function(_76a){
_76a.render(_769);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_76b){
_76b.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_76c,_76d){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_76c,_76d);
}
this.__init__(_76c,_76d);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_76f,_770){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_76f||[];
MochiKit.Base.map(function(_772){
defs.duration+=_772.options.duration;
},this.effects);
MochiKit.Base.setdefault(_770,defs);
this.start(_770);
},update:function(_773){
var time=_773*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _776=this.effects[i];
if(time<=_776.options.duration){
_776.render(time/_776.options.duration);
break;
}else{
time-=_776.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_777){
_777.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_778,_779){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_778,_779);
}
this.__init__(_778,_779);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_77b,_77c){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_77b);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_77c=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_77c);
this.start(_77c);
},update:function(_77f){
MochiKit.Style.setStyle(this.element,{"opacity":_77f});
}});
MochiKit.Visual.Move=function(_780,_781){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_780,_781);
}
this.__init__(_780,_781);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_783,_784){
this.element=MochiKit.DOM.getElement(_783);
_784=MochiKit.Base.update({x:0,y:0,mode:"relative"},_784);
this.start(_784);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _786=s.visibility;
var _787=s.display;
if(_787=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_787=="none"){
s.visibility=_786;
s.display=_787;
}
},update:function(_788){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_788+this.originalLeft)+"px",top:Math.round(this.options.y*_788+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_789,_78a,_78b){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_789,_78a,_78b);
}
this.__init__(_789,_78a,_78b);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_78d,_78e,_78f){
this.element=MochiKit.DOM.getElement(_78d);
_78f=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_78e},_78f);
this.start(_78f);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _793=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_794){
if(_793.indexOf(_794)>0){
this.fontSize=parseFloat(_793);
this.fontSizeType=_794;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_795){
var _796=(this.options.scaleFrom/100)+(this.factor*_795);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_796+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_796,this.dims[1]*_796);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_797,_798){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_798)+"px";
}
if(this.options.scaleY){
d.height=r(_797)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_797-this.dims[0])/2;
var _79c=(_798-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_79c+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_79c+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_79d,_79e){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_79d,_79e);
}
this.__init__(_79d,_79e);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_7a0,_7a1){
this.element=MochiKit.DOM.getElement(_7a0);
_7a1=MochiKit.Base.update({startcolor:"#ffff99"},_7a1);
this.start(_7a1);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_7a6){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_7a6));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_7a9,_7aa){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_7a9,_7aa);
}
this.__init__(_7a9,_7aa);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_7ac,_7ad){
this.element=MochiKit.DOM.getElement(_7ac);
this.start(_7ad);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _7af=p.cumulativeOffset(this.element);
if(this.options.offset){
_7af.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_7af.y>max?max:_7af.y)-this.scrollStart;
},update:function(_7b1){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_7b1*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_7b3,_7b4){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_7b3,_7b4);
}
this.__init__(_7b3,_7b4);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_7b6,_7b7){
this.element=MochiKit.DOM.getElement(_7b6);
this.start(_7b7);
},setup:function(){
var b=MochiKit.Base;
var _7b9=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _7ba,unit;
for(var s in _7b9){
_7ba=_7b9[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_7ba)){
var _7bd=_7ba.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_7ba=parseFloat(_7bd[1]);
unit=(_7bd.length==3)?_7bd[2]:null;
this.styleEnd[s]=_7ba;
this.units[s]=unit;
_7ba=MochiKit.Style.getStyle(this.element,s);
_7bd=_7ba.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_7ba=parseFloat(_7bd[1]);
this.styleStart[s]=_7ba;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_7ba=c.fromString(_7ba);
if(_7ba){
this.units[s]="color";
this.styleEnd[s]=_7ba.toHexString();
_7ba=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_7ba).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_7ba;
}
}
}
},update:function(_7c1){
var _7c2;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _7c5=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_7c5[i]+(end[i]-_7c5[i])*_7c1));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_7c2=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_7c1*1000)/1000+this.units[s];
this.element.style[s]=_7c2;
}
}
}});
MochiKit.Visual.fade=function(_7c8,_7c9){
var s=MochiKit.Style;
var _7cb=s.getStyle(_7c8,"opacity");
_7c9=MochiKit.Base.update({from:s.getStyle(_7c8,"opacity")||1,to:0,afterFinishInternal:function(_7cc){
if(_7cc.options.to!==0){
return;
}
s.hideElement(_7cc.element);
s.setStyle(_7cc.element,{"opacity":_7cb});
}},_7c9);
return new MochiKit.Visual.Opacity(_7c8,_7c9);
};
MochiKit.Visual.appear=function(_7cd,_7ce){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_7ce=MochiKit.Base.update({from:(s.getStyle(_7cd,"display")=="none"?0:s.getStyle(_7cd,"opacity")||0),to:1,afterFinishInternal:function(_7d1){
v._forceRerendering(_7d1.element);
},beforeSetupInternal:function(_7d2){
s.setStyle(_7d2.element,{"opacity":_7d2.options.from});
s.showElement(_7d2.element);
}},_7ce);
return new v.Opacity(_7cd,_7ce);
};
MochiKit.Visual.puff=function(_7d3,_7d4){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_7d3=MochiKit.DOM.getElement(_7d3);
var _7d7=MochiKit.Style.getElementDimensions(_7d3,true);
var _7d8={position:s.getStyle(_7d3,"position"),top:_7d3.style.top,left:_7d3.style.left,width:_7d3.style.width,height:_7d3.style.height,opacity:s.getStyle(_7d3,"opacity")};
_7d4=MochiKit.Base.update({beforeSetupInternal:function(_7d9){
MochiKit.Position.absolutize(_7d9.effects[0].element);
},afterFinishInternal:function(_7da){
s.hideElement(_7da.effects[0].element);
s.setStyle(_7da.effects[0].element,_7d8);
},scaleContent:true,scaleFromCenter:true},_7d4);
return new v.Parallel([new v.Scale(_7d3,200,{sync:true,scaleFromCenter:_7d4.scaleFromCenter,scaleMode:{originalHeight:_7d7.h,originalWidth:_7d7.w},scaleContent:_7d4.scaleContent,restoreAfterFinish:true}),new v.Opacity(_7d3,{sync:true,to:0})],_7d4);
};
MochiKit.Visual.blindUp=function(_7db,_7dc){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7db=d.getElement(_7db);
var _7df=s.getElementDimensions(_7db,true);
var _7e0=s.makeClipping(_7db);
_7dc=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7df.h,originalWidth:_7df.w},restoreAfterFinish:true,afterFinishInternal:function(_7e1){
s.hideElement(_7e1.element);
s.undoClipping(_7e1.element,_7e0);
}},_7dc);
return new MochiKit.Visual.Scale(_7db,0,_7dc);
};
MochiKit.Visual.blindDown=function(_7e2,_7e3){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7e2=d.getElement(_7e2);
var _7e6=s.getElementDimensions(_7e2,true);
var _7e7;
_7e3=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_7e6.h,originalWidth:_7e6.w},restoreAfterFinish:true,afterSetupInternal:function(_7e8){
_7e7=s.makeClipping(_7e8.element);
s.setStyle(_7e8.element,{height:"0px"});
s.showElement(_7e8.element);
},afterFinishInternal:function(_7e9){
s.undoClipping(_7e9.element,_7e7);
}},_7e3);
return new MochiKit.Visual.Scale(_7e2,100,_7e3);
};
MochiKit.Visual.switchOff=function(_7ea,_7eb){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7ea=d.getElement(_7ea);
var _7ee=s.getElementDimensions(_7ea,true);
var _7ef=s.getStyle(_7ea,"opacity");
var _7f0;
_7eb=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_7f1){
s.makePositioned(_7ea);
_7f0=s.makeClipping(_7ea);
},afterFinishInternal:function(_7f2){
s.hideElement(_7ea);
s.undoClipping(_7ea,_7f0);
s.undoPositioned(_7ea);
s.setStyle(_7ea,{"opacity":_7ef});
}},_7eb);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_7ea,{sync:true,duration:0.57*_7eb.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_7ea,1,{sync:true,duration:0.43*_7eb.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_7ee.h,originalWidth:_7ee.w},scaleContent:false,restoreAfterFinish:true})],_7eb);
};
MochiKit.Visual.dropOut=function(_7f4,_7f5){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_7f4=d.getElement(_7f4);
var _7f8={top:s.getStyle(_7f4,"top"),left:s.getStyle(_7f4,"left"),opacity:s.getStyle(_7f4,"opacity")};
_7f5=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_7f9){
s.makePositioned(_7f9.effects[0].element);
},afterFinishInternal:function(_7fa){
s.hideElement(_7fa.effects[0].element);
s.undoPositioned(_7fa.effects[0].element);
s.setStyle(_7fa.effects[0].element,_7f8);
}},_7f5);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_7f4,{x:0,y:_7f5.distance,sync:true}),new v.Opacity(_7f4,{sync:true,to:0})],_7f5);
};
MochiKit.Visual.shake=function(_7fc,_7fd){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7fc=d.getElement(_7fc);
var _801={top:s.getStyle(_7fc,"top"),left:s.getStyle(_7fc,"left")};
_7fd=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_802){
s.undoPositioned(_7fc);
s.setStyle(_7fc,_801);
}},_7fd);
return new v.Sequence([new v.Move(_7fc,{sync:true,duration:0.1*_7fd.duration,x:20,y:0}),new v.Move(_7fc,{sync:true,duration:0.2*_7fd.duration,x:-40,y:0}),new v.Move(_7fc,{sync:true,duration:0.2*_7fd.duration,x:40,y:0}),new v.Move(_7fc,{sync:true,duration:0.2*_7fd.duration,x:-40,y:0}),new v.Move(_7fc,{sync:true,duration:0.2*_7fd.duration,x:40,y:0}),new v.Move(_7fc,{sync:true,duration:0.1*_7fd.duration,x:-20,y:0})],_7fd);
};
MochiKit.Visual.slideDown=function(_803,_804){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_803=d.getElement(_803);
if(!_803.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_803);
var _808=s.getStyle(_803.firstChild,"bottom")||0;
var _809=s.getElementDimensions(_803,true);
var _80a;
_804=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_809.h,originalWidth:_809.w},restoreAfterFinish:true,afterSetupInternal:function(_80b){
s.makePositioned(_80b.element);
s.makePositioned(_80b.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_80b.element,{top:""});
}
_80a=s.makeClipping(_80b.element);
s.setStyle(_80b.element,{height:"0px"});
s.showElement(_80b.element);
},afterUpdateInternal:function(_80c){
var _80d=s.getElementDimensions(_80c.element,true);
s.setStyle(_80c.element.firstChild,{bottom:(_80c.dims[0]-_80d.h)+"px"});
},afterFinishInternal:function(_80e){
s.undoClipping(_80e.element,_80a);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_80e.element);
s.undoPositioned(_80e.element.firstChild);
}else{
s.undoPositioned(_80e.element.firstChild);
s.undoPositioned(_80e.element);
}
s.setStyle(_80e.element.firstChild,{bottom:_808});
}},_804);
return new MochiKit.Visual.Scale(_803,100,_804);
};
MochiKit.Visual.slideUp=function(_80f,_810){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_80f=d.getElement(_80f);
if(!_80f.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_80f);
var _814=s.getStyle(_80f.firstChild,"bottom");
var _815=s.getElementDimensions(_80f,true);
var _816;
_810=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_815.h,originalWidth:_815.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_817){
s.makePositioned(_817.element);
s.makePositioned(_817.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_817.element,{top:""});
}
_816=s.makeClipping(_817.element);
s.showElement(_817.element);
},afterUpdateInternal:function(_818){
var _819=s.getElementDimensions(_818.element,true);
s.setStyle(_818.element.firstChild,{bottom:(_818.dims[0]-_819.h)+"px"});
},afterFinishInternal:function(_81a){
s.hideElement(_81a.element);
s.undoClipping(_81a.element,_816);
s.undoPositioned(_81a.element.firstChild);
s.undoPositioned(_81a.element);
s.setStyle(_81a.element.firstChild,{bottom:_814});
}},_810);
return new MochiKit.Visual.Scale(_80f,0,_810);
};
MochiKit.Visual.squish=function(_81b,_81c){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _820=s.getElementDimensions(_81b,true);
var _821;
_81c=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_820.h,originalWidth:_820.w},beforeSetupInternal:function(_822){
_821=s.makeClipping(_822.element);
},afterFinishInternal:function(_823){
s.hideElement(_823.element);
s.undoClipping(_823.element,_821);
}},_81c);
return new MochiKit.Visual.Scale(_81b,/Opera/.test(navigator.userAgent)?1:0,_81c);
};
MochiKit.Visual.grow=function(_824,_825){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_824=d.getElement(_824);
_825=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_825);
var _829={top:_824.style.top,left:_824.style.left,height:_824.style.height,width:_824.style.width,opacity:s.getStyle(_824,"opacity")};
var dims=s.getElementDimensions(_824,true);
var _82b,_82c;
var _82d,_82e;
switch(_825.direction){
case "top-left":
_82b=_82c=_82d=_82e=0;
break;
case "top-right":
_82b=dims.w;
_82c=_82e=0;
_82d=-dims.w;
break;
case "bottom-left":
_82b=_82d=0;
_82c=dims.h;
_82e=-dims.h;
break;
case "bottom-right":
_82b=dims.w;
_82c=dims.h;
_82d=-dims.w;
_82e=-dims.h;
break;
case "center":
_82b=dims.w/2;
_82c=dims.h/2;
_82d=-dims.w/2;
_82e=-dims.h/2;
break;
}
var _82f=MochiKit.Base.update({beforeSetupInternal:function(_830){
s.setStyle(_830.effects[0].element,{height:"0px"});
s.showElement(_830.effects[0].element);
},afterFinishInternal:function(_831){
s.undoClipping(_831.effects[0].element);
s.undoPositioned(_831.effects[0].element);
s.setStyle(_831.effects[0].element,_829);
}},_825);
return new v.Move(_824,{x:_82b,y:_82c,duration:0.01,beforeSetupInternal:function(_832){
s.hideElement(_832.element);
s.makeClipping(_832.element);
s.makePositioned(_832.element);
},afterFinishInternal:function(_833){
new v.Parallel([new v.Opacity(_833.element,{sync:true,to:1,from:0,transition:_825.opacityTransition}),new v.Move(_833.element,{x:_82d,y:_82e,sync:true,transition:_825.moveTransition}),new v.Scale(_833.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_825.scaleTransition,scaleContent:_825.scaleContent,scaleFromCenter:_825.scaleFromCenter,restoreAfterFinish:true})],_82f);
}});
};
MochiKit.Visual.shrink=function(_834,_835){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_834=d.getElement(_834);
_835=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_835);
var _839={top:_834.style.top,left:_834.style.left,height:_834.style.height,width:_834.style.width,opacity:s.getStyle(_834,"opacity")};
var dims=s.getElementDimensions(_834,true);
var _83b,_83c;
switch(_835.direction){
case "top-left":
_83b=_83c=0;
break;
case "top-right":
_83b=dims.w;
_83c=0;
break;
case "bottom-left":
_83b=0;
_83c=dims.h;
break;
case "bottom-right":
_83b=dims.w;
_83c=dims.h;
break;
case "center":
_83b=dims.w/2;
_83c=dims.h/2;
break;
}
var _83d;
var _83e=MochiKit.Base.update({beforeStartInternal:function(_83f){
s.makePositioned(_83f.effects[0].element);
_83d=s.makeClipping(_83f.effects[0].element);
},afterFinishInternal:function(_840){
s.hideElement(_840.effects[0].element);
s.undoClipping(_840.effects[0].element,_83d);
s.undoPositioned(_840.effects[0].element);
s.setStyle(_840.effects[0].element,_839);
}},_835);
return new v.Parallel([new v.Opacity(_834,{sync:true,to:0,from:1,transition:_835.opacityTransition}),new v.Scale(_834,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_835.scaleTransition,scaleContent:_835.scaleContent,scaleFromCenter:_835.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_834,{x:_83b,y:_83c,sync:true,transition:_835.moveTransition})],_83e);
};
MochiKit.Visual.pulsate=function(_841,_842){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _846=MochiKit.Style.getStyle(_841,"opacity");
_842=b.update({duration:3,from:0,afterFinishInternal:function(_847){
MochiKit.Style.setStyle(_847.element,{"opacity":_846});
}},_842);
var _848=_842.transition||v.Transitions.sinoidal;
_842.transition=function(pos){
return _848(1-v.Transitions.pulse(pos,_842.pulses));
};
return new v.Opacity(_841,_842);
};
MochiKit.Visual.fold=function(_84a,_84b){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_84a=d.getElement(_84a);
var _84f=s.getElementDimensions(_84a,true);
var _850={top:_84a.style.top,left:_84a.style.left,width:_84a.style.width,height:_84a.style.height};
var _851=s.makeClipping(_84a);
_84b=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_84f.h,originalWidth:_84f.w},afterFinishInternal:function(_852){
new v.Scale(_84a,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_84f.h,originalWidth:_84f.w},afterFinishInternal:function(_853){
s.hideElement(_853.element);
s.undoClipping(_853.element,_851);
s.setStyle(_853.element,_850);
}});
}},_84b);
return new v.Scale(_84a,5,_84b);
};
MochiKit.Base.nameFunctions(MochiKit.Visual);
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.DragAndDrop");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Signal");
goog.require("MochiKit.Visual");
goog.require("MochiKit.Position");
}
MochiKit.Base.module(MochiKit,"DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_854){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_854);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_859){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_859)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_859);
}
},this.drops);
},findDeepestChild:function(_85b){
var _85c=_85b[0];
for(var i=1;i<_85b.length;++i){
if(MochiKit.DOM.isChildNode(_85b[i].element,_85c.element)){
_85c=_85b[i];
}
}
return _85c;
},show:function(_85e,_85f){
if(!this.drops.length){
return;
}
var _860=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_85e,_85f)){
_860.push(drop);
}
});
if(_860.length>0){
var drop=this.findDeepestChild(_860);
MochiKit.Position.within(drop.element,_85e.page.x,_85e.page.y);
drop.options.onhover(_85f,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_863,_864){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_863.mouse(),_864)){
this.last_active.options.ondrop(_864,this.last_active.element,_863);
}
},reset:function(_865){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_865);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_867,_868){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_867,_868);
}
this.__init__(_867,_868);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_86a,_86b){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_86a);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_86b);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_86f){
if(this.options._containers.length){
var _870;
if(this.options.tree){
_870=_86f.treeNode;
}else{
_870=_86f.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _870==c;
});
}else{
return true;
}
},isAccepted:function(_872){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_872,c);
}));
},isAffected:function(_874,_875){
return ((this.element!=_875)&&this.isContained(_875)&&this.isAccepted(_875)&&MochiKit.Position.within(this.element,_874.page.x,_874.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_876){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_876);
},unregister:function(_878){
this.drags=MochiKit.Base.filter(function(d){
return d!=_878;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_87b){
window.focus();
this.activeDraggable=_87b;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_87c){
if(!this.activeDraggable){
return;
}
var _87d=_87c.mouse();
if(this._lastPointer&&this._lastPointer.page.x==_87d.page.x&&this._lastPointer.page.y==_87d.page.y){
return;
}
this._lastPointer=_87d;
this.activeDraggable.updateDrag(_87c,_87d);
},endDrag:function(_87e){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_87e);
this.activeDraggable=null;
},keyPress:function(_87f){
if(this.activeDraggable){
this.activeDraggable.keyPress(_87f);
}
},notify:function(_880,_881,_882){
MochiKit.Signal.signal(this,_880,_881,_882);
}};
MochiKit.DragAndDrop.Draggable=function(_883,_884){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_883,_884);
}
this.__init__(_883,_884);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_886,_887){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_887=b.update({handle:false,starteffect:function(_88a){
this._savedOpacity=MochiKit.Style.getStyle(_88a,"opacity")||1;
new v.Opacity(_88a,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_88b,_88c,_88d){
var dur=Math.sqrt(Math.abs(_88c^2)+Math.abs(_88d^2))*0.02;
return new v.Move(_88b,{x:-_88d,y:-_88c,duration:dur});
},endeffect:function(_88f){
new v.Opacity(_88f,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_887);
var d=MochiKit.DOM;
this.element=d.getElement(_886);
if(_887.handle&&(typeof (_887.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_887.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_887.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_887.scroll&&!_887.scroll.scrollTo&&!_887.scroll.outerHTML){
_887.scroll=d.getElement(_887.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_887.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_887;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0",10),parseInt(s(this.element,"top")||"0",10)];
},initDrag:function(_892){
if(!_892.mouse().button.left){
return;
}
var src=_892.target();
var _894=(src.tagName||"").toUpperCase();
if(_894==="INPUT"||_894==="SELECT"||_894==="OPTION"||_894==="BUTTON"||_894==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _895=_892.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_895.page.x-pos.x,_895.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_892.stop();
},startDrag:function(_897){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=MochiKit.Style.getStyle(this.element,"z-index");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _898=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_898.left;
this.originalScrollTop=_898.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_897);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_899,_89a){
if(!this.dragging){
this.startDrag(_899);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_89a,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_899);
this.draw(_89a);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _89e=[0,0];
if(_89a.page.x>(q.x-this.options.scrollSensitivity)){
_89e[0]=_89a.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_89a.page.x<(p.x+this.options.scrollSensitivity)){
_89e[0]=_89a.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_89a.page.y>(q.y-this.options.scrollSensitivity)){
_89e[1]=_89a.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_89a.page.y<(p.y+this.options.scrollSensitivity)){
_89e[1]=_89a.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_89e);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_899.stop();
},finishDrag:function(_89f,_8a0){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_8a0){
dr.Droppables.fire(_89f,this.element);
}
dr.Draggables.notify("end",this,_89f);
var _8a2=this.options.revert;
if(_8a2&&typeof (_8a2)=="function"){
_8a2=_8a2(this.element);
}
var d=this.currentDelta();
if(_8a2&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_8a4){
if(_8a4.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_8a4,false);
_8a4.stop();
},endDrag:function(_8a5){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_8a5,true);
_8a5.stop();
},draw:function(_8a6){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_8a6.page.x-pos.x-this.offset[0],_8a6.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _8ad=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_8ad.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_8ad.top=p[1]+"px";
}
if(_8ad.visibility=="hidden"){
_8ad.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_8ae){
if(!_8ae[0]&&!_8ae[1]){
return;
}
this.scrollSpeed=[_8ae[0]*this.options.scrollSpeed,_8ae[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _8af=new Date();
var _8b0=_8af-this.lastScrolled;
this.lastScrolled=_8af;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_8b0/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_8b0/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_8b0/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_8b0/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_8b0/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Sortable");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
goog.require("MochiKit.DOM");
goog.require("MochiKit.Position");
goog.require("MochiKit.DragAndDrop");
}
MochiKit.Base.module(MochiKit,"Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_8b8){
while(_8b8.tagName.toUpperCase()!="BODY"){
if(_8b8.id&&MochiKit.Sortable.sortables[_8b8.id]){
return _8b8;
}
_8b8=_8b8.parentNode;
}
},_createElementId:function(_8b9){
if(_8b9.id==null||_8b9.id==""){
var d=MochiKit.DOM;
var id;
var _8bc=1;
while(d.getElement(id="sortable"+_8bc)!=null){
_8bc+=1;
}
d.setNodeAttribute(_8b9,"id",id);
}
},options:function(_8bd){
_8bd=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_8bd));
if(!_8bd){
return;
}
return MochiKit.Sortable.sortables[_8bd.id];
},destroy:function(_8be){
var s=MochiKit.Sortable.options(_8be);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_8c4,_8c5){
_8c4=MochiKit.DOM.getElement(_8c4);
var self=MochiKit.Sortable;
self._createElementId(_8c4);
_8c5=MochiKit.Base.update({element:_8c4,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_8c4],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_8c5);
self.destroy(_8c4);
var _8c7={revert:true,ghosting:_8c5.ghosting,scroll:_8c5.scroll,scrollSensitivity:_8c5.scrollSensitivity,scrollSpeed:_8c5.scrollSpeed,constraint:_8c5.constraint,handle:_8c5.handle};
if(_8c5.starteffect){
_8c7.starteffect=_8c5.starteffect;
}
if(_8c5.reverteffect){
_8c7.reverteffect=_8c5.reverteffect;
}else{
if(_8c5.ghosting){
_8c7.reverteffect=function(_8c8){
_8c8.style.top=0;
_8c8.style.left=0;
};
}
}
if(_8c5.endeffect){
_8c7.endeffect=_8c5.endeffect;
}
if(_8c5.zindex){
_8c7.zindex=_8c5.zindex;
}
var _8c9={overlap:_8c5.overlap,containment:_8c5.containment,hoverclass:_8c5.hoverclass,onhover:self.onHover,tree:_8c5.tree,accept:_8c5.accept};
var _8ca={onhover:self.onEmptyHover,overlap:_8c5.overlap,containment:_8c5.containment,hoverclass:_8c5.hoverclass,accept:_8c5.accept};
MochiKit.DOM.removeEmptyTextNodes(_8c4);
_8c5.draggables=[];
_8c5.droppables=[];
if(_8c5.dropOnEmpty||_8c5.tree){
new MochiKit.DragAndDrop.Droppable(_8c4,_8ca);
_8c5.droppables.push(_8c4);
}
MochiKit.Base.map(function(e){
var _8cc=_8c5.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_8c5.handle,e):e;
_8c5.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_8c7,{handle:_8cc})));
new MochiKit.DragAndDrop.Droppable(e,_8c9);
if(_8c5.tree){
e.treeNode=_8c4;
}
_8c5.droppables.push(e);
},(self.findElements(_8c4,_8c5)||[]));
if(_8c5.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_8ca);
e.treeNode=_8c4;
_8c5.droppables.push(e);
},(self.findTreeElements(_8c4,_8c5)||[]));
}
self.sortables[_8c4.id]=_8c5;
_8c5.lastValue=self.serialize(_8c4);
_8c5.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_8c4));
_8c5.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_8c4));
},onStart:function(_8ce,_8cf){
var self=MochiKit.Sortable;
var _8d1=self.options(_8ce);
_8d1.lastValue=self.serialize(_8d1.element);
},onEnd:function(_8d2,_8d3){
var self=MochiKit.Sortable;
self.unmark();
var _8d5=self.options(_8d2);
if(_8d5.lastValue!=self.serialize(_8d5.element)){
_8d5.onUpdate(_8d5.element);
}
},findElements:function(_8d6,_8d7){
return MochiKit.Sortable.findChildren(_8d6,_8d7.only,_8d7.tree,_8d7.tag);
},findTreeElements:function(_8d8,_8d9){
return MochiKit.Sortable.findChildren(_8d8,_8d9.only,_8d9.tree?true:false,_8d9.treeTag);
},findChildren:function(_8da,only,_8dc,_8dd){
if(!_8da.hasChildNodes()){
return null;
}
_8dd=_8dd.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _8de=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_8dd&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_8de.push(e);
}
if(_8dc){
var _8e1=MochiKit.Sortable.findChildren(e,only,_8dc,_8dd);
if(_8e1&&_8e1.length>0){
_8de=_8de.concat(_8e1);
}
}
},_8da.childNodes);
return _8de;
},onHover:function(_8e2,_8e3,_8e4){
if(MochiKit.DOM.isChildNode(_8e3,_8e2)){
return;
}
var self=MochiKit.Sortable;
if(_8e4>0.33&&_8e4<0.66&&self.options(_8e3).tree){
return;
}else{
if(_8e4>0.5){
self.mark(_8e3,"before");
if(_8e3.previousSibling!=_8e2){
var _8e6=_8e2.parentNode;
_8e2.style.visibility="hidden";
_8e3.parentNode.insertBefore(_8e2,_8e3);
if(_8e3.parentNode!=_8e6){
self.options(_8e6).onChange(_8e2);
}
self.options(_8e3.parentNode).onChange(_8e2);
}
}else{
self.mark(_8e3,"after");
var _8e7=_8e3.nextSibling||null;
if(_8e7!=_8e2){
var _8e6=_8e2.parentNode;
_8e2.style.visibility="hidden";
_8e3.parentNode.insertBefore(_8e2,_8e7);
if(_8e3.parentNode!=_8e6){
self.options(_8e6).onChange(_8e2);
}
self.options(_8e3.parentNode).onChange(_8e2);
}
}
}
},_offsetSize:function(_8e8,type){
if(type=="vertical"||type=="height"){
return _8e8.offsetHeight;
}else{
return _8e8.offsetWidth;
}
},onEmptyHover:function(_8ea,_8eb,_8ec){
var _8ed=_8ea.parentNode;
var self=MochiKit.Sortable;
var _8ef=self.options(_8eb);
if(!MochiKit.DOM.isChildNode(_8eb,_8ea)){
var _8f0;
var _8f1=self.findElements(_8eb,{tag:_8ef.tag,only:_8ef.only});
var _8f2=null;
if(_8f1){
var _8f3=self._offsetSize(_8eb,_8ef.overlap)*(1-_8ec);
for(_8f0=0;_8f0<_8f1.length;_8f0+=1){
if(_8f3-self._offsetSize(_8f1[_8f0],_8ef.overlap)>=0){
_8f3-=self._offsetSize(_8f1[_8f0],_8ef.overlap);
}else{
if(_8f3-(self._offsetSize(_8f1[_8f0],_8ef.overlap)/2)>=0){
_8f2=_8f0+1<_8f1.length?_8f1[_8f0+1]:null;
break;
}else{
_8f2=_8f1[_8f0];
break;
}
}
}
}
_8eb.insertBefore(_8ea,_8f2);
self.options(_8ed).onChange(_8ea);
_8ef.onChange(_8ea);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_8f5,_8f6){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _8f9=self.options(_8f5.parentNode);
if(_8f9&&!_8f9.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _8fa=MochiKit.Position.cumulativeOffset(_8f5);
self._marker.style.left=_8fa.x+"px";
self._marker.style.top=_8fa.y+"px";
if(_8f6=="after"){
if(_8f9.overlap=="horizontal"){
self._marker.style.left=(_8fa.x+_8f5.clientWidth)+"px";
}else{
self._marker.style.top=(_8fa.y+_8f5.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_8fb,_8fc,_8fd){
var self=MochiKit.Sortable;
var _8ff=self.findElements(_8fb,_8fc)||[];
for(var i=0;i<_8ff.length;++i){
var _901=_8ff[i].id.match(_8fc.format);
if(!_901){
continue;
}
var _902={id:encodeURIComponent(_901?_901[1]:null),element:_8fb,parent:_8fd,children:[],position:_8fd.children.length,container:self._findChildrenElement(_8ff[i],_8fc.treeTag.toUpperCase())};
if(_902.container){
self._tree(_902.container,_8fc,_902);
}
_8fd.children.push(_902);
}
return _8fd;
},_findChildrenElement:function(_903,_904){
if(_903&&_903.hasChildNodes){
_904=_904.toUpperCase();
for(var i=0;i<_903.childNodes.length;++i){
if(_903.childNodes[i].tagName.toUpperCase()==_904){
return _903.childNodes[i];
}
}
}
return null;
},tree:function(_906,_907){
_906=MochiKit.DOM.getElement(_906);
var _908=MochiKit.Sortable.options(_906);
_907=MochiKit.Base.update({tag:_908.tag,treeTag:_908.treeTag,only:_908.only,name:_906.id,format:_908.format},_907||{});
var root={id:null,parent:null,children:new Array,container:_906,position:0};
return MochiKit.Sortable._tree(_906,_907,root);
},setSequence:function(_90a,_90b,_90c){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_90a=MochiKit.DOM.getElement(_90a);
_90c=b.update(self.options(_90a),_90c||{});
var _90f={};
b.map(function(n){
var m=n.id.match(_90c.format);
if(m){
_90f[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_90a,_90c));
b.map(function(_912){
var n=_90f[_912];
if(n){
n[1].appendChild(n[0]);
delete _90f[_912];
}
},_90b);
},_constructIndex:function(node){
var _915="";
do{
if(node.id){
_915="["+node.position+"]"+_915;
}
}while((node=node.parent)!=null);
return _915;
},sequence:function(_916,_917){
_916=MochiKit.DOM.getElement(_916);
var self=MochiKit.Sortable;
var _917=MochiKit.Base.update(self.options(_916),_917||{});
return MochiKit.Base.map(function(item){
return item.id.match(_917.format)?item.id.match(_917.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_916,_917)||[]));
},serialize:function(_91a,_91b){
_91a=MochiKit.DOM.getElement(_91a);
var self=MochiKit.Sortable;
_91b=MochiKit.Base.update(self.options(_91a),_91b||{});
var name=encodeURIComponent(_91b.name||_91a.id);
if(_91b.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_91a,_91b).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_91a,_91b)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Base_ext");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Base_ext","1.5",["Base"]);
MochiKit.Base._arg_placeholder=function(_920){
this.index=_920;
};
var _1=new MochiKit.Base._arg_placeholder(0);
var _2=new MochiKit.Base._arg_placeholder(1);
var _3=new MochiKit.Base._arg_placeholder(2);
var _4=new MochiKit.Base._arg_placeholder(3);
var _5=new MochiKit.Base._arg_placeholder(4);
var _6=new MochiKit.Base._arg_placeholder(5);
var _7=new MochiKit.Base._arg_placeholder(6);
var _8=new MochiKit.Base._arg_placeholder(7);
var _9=new MochiKit.Base._arg_placeholder(8);
var _10=new MochiKit.Base._arg_placeholder(9);
MochiKit.Base._rebind_preargs=function(_921,args,_923){
_923=_923||{};
for(var i=0;i<_921.length;++i){
var pa=_921[i];
if(pa instanceof MochiKit.Base._arg_placeholder){
if(pa.index<args.length){
_921[i]=args[pa.index];
_923[pa.index]=pa.index;
}
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
MochiKit.Base._rebind_preargs(pa.im_preargs,args,_923);
}
}
}
return _923;
};
MochiKit.Base.bind2=function(func,self,_928){
if(typeof (func)=="string"){
func=self[func];
}
var _929=func.im_func;
var _92a=func.im_preargs;
var _92b=func.im_self;
var m=MochiKit.Base;
if(typeof (func)=="function"&&typeof (func.apply)=="undefined"){
func=m._wrapDumbFunction(func);
}
if(typeof (_929)!="function"){
_929=func;
}
if(typeof (self)!="undefined"){
_92b=self;
}
if(typeof (_92a)=="undefined"){
_92a=[];
}else{
_92a=_92a.slice();
}
var args=Array.prototype.slice.call(arguments,self instanceof m._arg_placeholder?1:2);
var _92e=MochiKit.Base._rebind_preargs(_92a,args);
for(var _92f in _92e){
args.splice(_92e[_92f],1);
}
m.extend(_92a,args);
var _930=function(){
var me=arguments.callee;
var self=me.im_self;
if(!self){
self=this;
}
var args=[];
if(me.im_preargs.length>0){
var imax=0;
for(var i=0;i<me.im_preargs.length;++i){
var pa=me.im_preargs[i];
if(pa instanceof m._arg_placeholder){
imax=Math.max(imax,pa.index+1);
pa=arguments[pa.index];
}else{
if(typeof pa=="function"&&typeof pa.im_func=="function"){
pa=pa.apply(self,arguments);
}
}
args.push(pa);
}
for(var j=imax;j<arguments.length;++j){
args.push(arguments[j]);
}
}else{
args=arguments;
}
if(self instanceof m._arg_placeholder){
self=arguments[self.index];
}
return me.im_func.apply(self,args);
};
_930.im_self=_92b;
_930.im_func=_929;
_930.im_preargs=_92a;
if(typeof (_929.NAME)=="string"){
_930.NAME="bind2("+_929.NAME+",...)";
}
return _930;
};
MochiKit.Base.partial2=function(func,_939){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,undefined],arguments,1));
};
MochiKit.Base.method2=function(self,func,_93d){
var m=MochiKit.Base;
return m.bind2.apply(this,m.extend([func,self],arguments,2));
};
MochiKit.Base.bindLate2=function(func,self,_941){
var m=MochiKit.Base;
var args=arguments;
if(typeof (func)==="string"){
args=m.extend([m.forwardCall(func)],arguments,1);
return m.bind2.apply(this,args);
}
return m.bind2.apply(this,args);
};
MochiKit.Base.isBoundFunction=function(fn){
return typeof fn=="function"&&typeof fn.im_func=="function";
};
MochiKit.Base.protect=function(_945){
return function(){
return _945.apply(this,arguments);
};
};
MochiKit.Base.apply=function(fn,_947){
var args=MochiKit.Base.extend([],arguments,1);
return fn.apply(this,args);
};
MochiKit.Base.partition=function(_949,cmp,left,_94c,_94d){
cmp=cmp||MochiKit.Base.operator.cle;
left=left||0;
_94c=_94c||_949.length-1;
_94d=_94d||(left+Math.floor((_94c-left)/2));
var swap=function(i,j){
var tmp=_949[i];
_949[i]=_949[j];
_949[j]=tmp;
};
var _952=_949[_94d];
swap(_94d,_94c);
var _953=left;
for(var i=left;i<=_94c;++i){
if(cmp(_949[i],_952)){
swap(i,_953);
++_953;
}
}
swap(_953,_94c);
return _953;
};
MochiKit.Base.negateComparator=function(cmp){
return function(){
return -1*cmp.apply(this,arguments);
};
};
MochiKit.Base_ext.__new__=function(){
};
MochiKit.Base_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Iter_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"Iter_ext","1.5",["Base","Iter"]);
MochiKit.Iter.treePreOrder=function(_956,_957){
var _958=[_956];
return {repr:function(){
return "treePreOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_958.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_958.pop();
MochiKit.Iter.iextend(_958,_957(node));
return node;
}};
};
MochiKit.Iter.treeLevelOrder=function(_95a,_95b){
var _95c=[_95a];
return {repr:function(){
return "treeLevelOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_95c.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_95c.shift();
MochiKit.Iter.iextend(_95c,_95b(node));
return node;
}};
};
MochiKit.Iter.treePostOrder=function(_95e,_95f){
var _960=[[_95e,false]];
return {repr:function(){
return "treePostOrder(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_960.length==0){
throw MochiKit.Iter.StopIteration;
}
var n=_960.pop();
if(n[1]){
return n[0];
}
n[1]=true;
_960.push(n);
MochiKit.Iter.iextend(_960,MochiKit.Iter.imap(function(node){
return [node,false];
},_95f(n[0])));
}
}};
};
MochiKit.Iter.pairView=function(_963,_964){
_964=_964||false;
var it=MochiKit.Iter.iter(_963);
try{
var _966=it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return MochiKit.Iter.EmptyIter;
}
if(_964){
it=MochiKit.Iter.chain(it,[_966]);
}
return {repr:function(){
return "pairView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _967=it.next();
var pair=[_966,_967];
_966=_967;
return pair;
}};
};
MochiKit.Iter.windowView=function(_969,_96a,_96b){
_96a=_96a||2;
_96b=_96b||1;
var it=MochiKit.Iter.iter(_969);
var win=[];
return {repr:function(){
return "windowView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(win.length<_96a){
while(win.length<_96a){
win.push(it.next());
}
}else{
for(var i=0;i<_96b;++i){
win.shift();
win.push(it.next());
}
}
return win.slice();
}};
};
MochiKit.Iter.filterMap=function(_96f,_970,_971){
_971=_971||function(item){
return typeof item!=="undefined"&&item!==null;
};
return MochiKit.Iter.ifilter(_971,MochiKit.Iter.imap(_96f,_970));
};
MochiKit.Iter.iflattenArray=function(root){
var _974=[root];
return {repr:function(){
return "iflattenArray(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(_974.length==0){
throw MochiKit.Iter.StopIteration;
}
var node=_974.shift();
if(node instanceof Array){
Array.prototype.splice.apply(_974,[0,0].concat(node));
}else{
return node;
}
}
}};
};
MochiKit.Iter.chainFromIter=function(seq,_977){
_977=_977||MochiKit.Iter.iter;
var it=MochiKit.Iter.iter(seq);
var jt=null;
return {repr:function(){
return "chainFromIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(jt==null){
jt=MochiKit.Iter.iter(_977(it.next()));
}
while(true){
try{
var val=jt.next();
return val;
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=MochiKit.Iter.iter(_977(it.next()));
}
}
}};
};
MochiKit.Iter.uniqueView=function(_97b,pred){
pred=pred||MochiKit.Base.operator.ceq;
var it=MochiKit.Iter.iter(_97b);
var _97e=true;
var prev;
return {repr:function(){
return "uniqueView(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(_97e){
_97e=false;
prev=it.next();
return prev;
}
var val=it.next();
while(pred(prev,val)){
val=it.next();
}
prev=val;
return val;
}};
};
MochiKit.Iter.iproduct=function(_981,_982){
var sa=arguments[0],sb=arguments[1];
var it=MochiKit.Iter.iter(sa);
var jt=null;
var a,b;
return {repr:function(){
return "iproduct(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(jt==null){
a=it.next();
jt=MochiKit.Iter.iter(sb);
}
try{
b=jt.next();
return [a,b];
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
jt=null;
}
}
}};
};
MochiKit.Iter.enumerate=function(_989,_98a){
return MochiKit.Iter.izip(MochiKit.Iter.count(_98a),_989);
};
MochiKit.Iter.breakIt=function(){
throw MochiKit.Iter.StopIteration;
};
MochiKit.Iter.EmptyIter={repr:function(){
return "EmptyIter";
},toString:MochiKit.Base.forwardCall("repr"),next:MochiKit.Iter.breakIt};
MochiKit.Iter.generateN=function(_98b,n){
return MochiKit.Iter.imap(function(){
return _98b();
},MochiKit.Iter.range(n));
};
MochiKit.Iter.izipLongest=function(_98d,_98e){
_98e=_98e||null;
_98d=MochiKit.Base.map(MochiKit.Iter.iter,_98d);
var _98f=_98d.length;
return {repr:function(){
return "izipLongest(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var _990=new Array(_98d.length);
for(var i=0;i<_98d.length;++i){
try{
_990[i]=_98d[i].next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
_98d[i]=MochiKit.Iter.repeat(_98e);
_990[i]=_98e;
--_98f;
}
}
if(_98f==0){
throw MochiKit.Iter.StopIteration;
}
return _990;
}};
};
MochiKit.Iter.any=function(){
return MochiKit.Iter.some.apply(this,arguments);
};
MochiKit.Iter.all=function(){
return MochiKit.Iter.every.apply(this,arguments);
};
MochiKit.Iter.starmap=function(){
return MochiKit.Iter.applymap.apply(this,arguments);
};
MochiKit.Iter.advance=function(iter,n){
while(n-->0){
iter.next();
}
return iter;
};
MochiKit.Iter.isSorted=function(_994,cmp){
return MochiKit.Iter.every(MochiKit.Iter.windowView(_994),cmp||MochiKit.Base.operator.cle);
};
MochiKit.Iter.interleave=function(_996,_997){
return MochiKit.Iter.chainFromIter(MochiKit.Iter.izip.apply(this,arguments));
};
MochiKit.Iter.remapView=function(_998,lst){
return MochiKit.Iter.imap(MochiKit.Base.partial(MochiKit.Base.operator.getitem,lst),_998);
};
MochiKit.Iter.compressIter=function(data,_99b){
return MochiKit.Iter.imap(function(d_s){
return d_s[0];
},MochiKit.Iter.ifilter(function(d_s){
return d_s[1]?true:false;
},MochiKit.Iter.izip(data,_99b)));
};
MochiKit.Iter.combinations=function(_99e,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_99e);
var n=pool.length;
if(r>n){
return MochiKit.Iter.EmptyIter;
}
var _9a4=mi.list(mi.range(r));
var _9a5=true;
return {repr:function(){
return "combinations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_9a5){
_9a5=false;
return mi.list(mi.remapView(_9a4,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_9a4[i]!=(i+n-r)){
done=false;
break;
}
}
if(done){
throw MochiKit.Iter.StopIteration;
}
_9a4[i]+=1;
for(var j=i+1;j<r;++j){
_9a4[j]=_9a4[j-1]+1;
}
return mi.list(mi.remapView(_9a4,pool));
}
}};
};
MochiKit.Iter.combinationsWithReplacement=function(_9a9,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_9a9);
var n=pool.length;
if(n==0||r==0){
return mi.EmptyIter;
}
var _9af=mi.list(mi.repeat(0,r));
var _9b0=true;
return {repr:function(){
return "combinationsWithReplacement(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_9b0){
_9b0=false;
return mi.list(mi.remapView(_9af,pool));
}
while(true){
var done=true;
for(var i=r-1;i>=0;--i){
if(_9af[i]!=n-1){
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
_9af=_9af.slice(0,i).concat(mi.list(mi.repeat(_9af[i]+1,r-i)));
return mi.list(mi.remapView(_9af,pool));
}
}};
};
MochiKit.Iter.repeatSeq=function(_9b3,n){
if(n==0){
return MochiKit.Iter.EmptyIter;
}
var it=MochiKit.Iter.iter(_9b3);
return {next:function(){
try{
return it.next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration||--n<=0){
throw e;
}
it=MochiKit.Iter.iter(_9b3);
return it.next();
}
}};
};
MochiKit.Iter.permutations=function(_9b6,r){
var m=MochiKit,mi=MochiKit.Iter;
var pool=mi.list(_9b6);
var n=pool.length;
r=r||n;
if(r>n){
return mi.EmptyIter;
}
var _9bc=mi.list(mi.range(n));
var _9bd=mi.list(mi.range(n,n-r,-1));
var _9be=true;
return {repr:function(){
return "permutations(...)";
},toString:m.Base.forwardCall("repr"),next:function(){
if(_9be){
_9be=false;
return mi.list(mi.remapView(mi.islice(_9bc,0,r),pool));
}
if(n==0){
throw mi.StopIteration;
}
var done=true;
for(var i=r-1;i>=0;--i){
_9bd[i]-=1;
if(_9bd[i]==0){
_9bc=_9bc.slice(0,i).concat(_9bc.slice(i+1),_9bc[i]);
_9bd[i]=n-i;
}else{
var j=_9bd[i];
var jdx=_9bc.length-j;
var tmp=_9bc[i];
_9bc[i]=_9bc[jdx];
_9bc[jdx]=tmp;
done=false;
break;
}
}
if(done){
throw mi.StopIteration;
}
return mi.list(mi.remapView(mi.islice(_9bc,0,r),pool));
}};
};
MochiKit.Iter._Range=function(_9c4,stop,step){
this.start=_9c4;
this.stop=stop;
this.step=step;
};
MochiKit.Iter._Range.prototype.__iterator__=function(){
return new MochiKit.Iter.range(this.start,this.stop,this.step);
};
MochiKit.Iter.xrange=function(){
var _9c7=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_9c7=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_9c7=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("xrange() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("xrange() step must not be 0");
}
return new MochiKit.Iter._Range(_9c7,stop,step);
};
MochiKit.Iter.isJavaLikeIterator=function(_9ca){
return _9ca&&typeof _9ca.hasNext=="function"&&typeof _9ca.next=="function";
};
MochiKit.Iter.javaLikeIterator=function(_9cb){
return {repr:function(){
return "javaLikeIterator";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(!_9cb.hasNext()){
throw MochiKit.Iter.StopIteration;
}
return _9cb.next();
}};
};
MochiKit.Iter.registerJavaLikeIteratorSupport=function(){
MochiKit.Iter.registerIteratorFactory("javaLikeIterator",MochiKit.Iter.isJavaLikeIterator,MochiKit.Iter.javaLikeIterator);
};
MochiKit.Iter.countValue=function(_9cc,elem,cmp){
cmp=cmp||MochiKit.Base.operator.ceq;
var n=0;
MochiKit.Iter.forEach(_9cc,function(e){
if(cmp(e,elem)){
++n;
}
});
return n;
};
MochiKit.Iter.limit=function(iter,n){
return MochiKit.Iter.takewhile(function(){
return n-->0;
},iter);
};
MochiKit.Iter.accumulate=function(_9d3,func){
var iter=MochiKit.Iter.iter(_9d3);
func=func||MochiKit.Base.operator.add;
var _9d6;
var _9d7=true;
return {next:function(){
if(_9d7){
_9d7=false;
_9d6=iter.next();
return _9d6;
}
_9d6=func(_9d6,iter.next());
return _9d6;
}};
};
MochiKit.Iter.pluck=function(_9d8,_9d9){
return MochiKit.Iter.imap(MochiKit.Base.itemgetter(_9d9),_9d8);
};
MochiKit.Iter.chunked=function(_9da,n){
return MochiKit.Iter.windowView(_9da,n,n);
};
MochiKit.Iter.zipWith=function(fn,p,_9de){
return MochiKit.Iter.imap(function(item){
return fn.apply(this,item);
},MochiKit.Iter.izip.apply(null,MochiKit.Base.extend(null,arguments,1)));
};
MochiKit.Iter_ext.__new__=function(){
};
MochiKit.Iter_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Text_ext");
goog.require("MochiKit.Base");
goog.require("MochiKit.Text");
}
MochiKit.Base.module(MochiKit,"Text_ext","1.5",["Base","Text"]);
MochiKit.Text.levenshteinDistance=function(s,t,_9e2){
_9e2=_9e2||false;
var n=s.length,m=t.length;
if(n==0){
return m;
}
if(m==0){
return n;
}
var d=new Array(n+1);
for(var r=0;r<n+1;++r){
d[r]=new Array(m+1);
}
for(var i=0;i<=n;++i){
d[i][0]=i;
}
for(var j=0;j<=m;++j){
d[0][j]=j;
}
for(var i=1;i<=n;++i){
for(var j=1;j<=m;++j){
var cost=(t[j-1]==s[i-1]?0:1);
var cell=Math.min(Math.min(d[i-1][j]+1,d[i][j-1]+1),d[i-1][j-1]+cost);
if(_9e2&&(i>2&&j>2)){
var _9eb=d[i-2][j-2]+1;
if(s[i-2]!=t[j-1]){
++_9eb;
}
if(s[i-1]!=t[j-2]){
++_9eb;
}
if(cell>_9eb){
cell=_9eb;
}
}
d[i][j]=cell;
}
}
return d[n][m];
};
MochiKit.Text.humanStringCompare=function(a,b){
if(a==b){
return 0;
}
var _9ee=/^(\+|\-)?\d+/;
var _9ef=/^\D+/;
while(a.length>0&&b.length>0){
var a0=null,ainc=-1;
var b0=null,binc=-1;
var ma=a.match(_9ef);
var mb=b.match(_9ef);
if(ma!=null&&mb!=null){
a0=ma[0].toLowerCase();
ainc=a0.length;
b0=mb[0].toLowerCase();
binc=b0.length;
}else{
if(ma==null){
ma=a.match(_9ee);
a0=parseInt(ma[0],10)+2<<15;
ainc=ma[0].length;
}else{
a0=a.charAt(0).toLowerCase().charCodeAt(0);
ainc=1;
}
if(mb==null){
mb=b.match(_9ee);
b0=parseInt(mb[0],10)+2<<15;
binc=mb[0].length;
}else{
b0=b.charAt(0).toLowerCase().charCodeAt(0);
binc=1;
}
}
if(a0<b0){
return -1;
}
if(a0>b0){
return +1;
}
a=a.substring(ainc);
b=b.substring(binc);
}
if(a.length>0){
return +1;
}
if(b.length>0){
return -1;
}
return 0;
};
MochiKit.Text_ext.__new__=function(){
};
MochiKit.Text_ext.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Text);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.HeapQ");
goog.require("MochiKit.Base");
goog.require("MochiKit.Iter");
}
MochiKit.Base.module(MochiKit,"HeapQ","1.5",["Base","Iter"]);
MochiKit.HeapQ.heapify=function(x,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var n=x.length;
for(var i=Math.floor(n/2)-1;i>=0;--i){
MochiKit.HeapQ._siftup(x,i,cmp);
}
return x;
};
MochiKit.HeapQ._siftdown=function(heap,_9fb,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _9fe=heap[pos];
while(pos>_9fb){
var _9ff=(pos-1)>>1;
var _a00=heap[_9ff];
if(cmp(_9fe,_a00)){
heap[pos]=_a00;
pos=_9ff;
continue;
}
break;
}
heap[pos]=_9fe;
};
MochiKit.HeapQ._siftup=function(heap,pos,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _a04=heap.length;
var _a05=pos;
var _a06=heap[pos];
var _a07=2*pos+1;
while(_a07<_a04){
var _a08=_a07+1;
if(_a08<_a04&&!(cmp(heap[_a07],heap[_a08]))){
_a07=_a08;
}
heap[pos]=heap[_a07];
pos=_a07;
_a07=2*pos+1;
}
heap[pos]=_a06;
MochiKit.HeapQ._siftdown(heap,_a05,pos,cmp);
};
MochiKit.HeapQ.heapPush=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
heap.push(item);
MochiKit.HeapQ._siftdown(heap,0,heap.length-1,cmp);
};
MochiKit.HeapQ.heapPop=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _a0e=heap.pop();
var _a0f;
if(heap.length>0){
_a0f=heap[0];
heap[0]=_a0e;
MochiKit.HeapQ._siftup(heap,0,cmp);
}else{
_a0f=_a0e;
}
return _a0f;
};
MochiKit.HeapQ.heapReplace=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
var _a13=heap[0];
heap[0]=item;
MochiKit.HeapQ._siftup(heap,0,cmp);
return _a13;
};
MochiKit.HeapQ.heapPushPop=function(heap,item,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
if(heap.length>0&&cmp(heap[0],item)){
var tmp=heap[0];
heap[0]=item;
item=tmp;
MochiKit.HeapQ._siftup(heap,0,cmp);
}
return item;
};
MochiKit.HeapQ.imergeSorted=function(_a18,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var _cmp=function(a,b){
var c=cmp(a[0],b[0]);
return c;
};
var h=[];
mi.forEach(mi.izip(mi.count(),mi.imap(mi.iter,_a18)),function(pair){
var _a22=pair[0],it=pair[1];
try{
var next=it.next;
h.push([next(),_a22,next]);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
}
});
m.HeapQ.heapify(h,_cmp);
return {repr:function(){
return "imergeSorted(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
while(true){
if(h.length==0){
throw mi.StopIteration;
}
var s=h[0];
var v=s[0];
var next=s[2];
try{
s[0]=next();
m.HeapQ.heapReplace(h,s,_cmp);
}
catch(e){
if(e!=mi.StopIteration){
throw e;
}
m.HeapQ.heapPop(h,_cmp);
}
return v;
}
}};
};
MochiKit.HeapQ.heapIter=function(heap,cmp){
cmp=cmp||MochiKit.Base.operator.clt;
return {next:function(){
if(heap.length==0){
throw MochiKit.Iter.StopIteration;
}
return MochiKit.HeapQ.heapPop(heap,cmp);
}};
};
MochiKit.HeapQ.nLargest=function(n,_a2b,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var it=mi.iter(_a2b);
var _a30=mi.list(mi.islice(it,n));
if(_a30.length==0){
return _a30;
}
m.HeapQ.heapify(_a30,cmp);
mi.forEach(it,function(elem){
m.HeapQ.heapPushPop(_a30,elem,cmp);
});
_a30.sort(function(a,b){
return -1*m.Base.compare(a,b);
});
return _a30;
};
MochiKit.HeapQ.nSmallest=function(n,_a35,cmp){
var m=MochiKit,mi=m.Iter;
cmp=cmp||m.Base.operator.clt;
var h=mi.list(_a35);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),mi.range(Math.min(n,h.length)));
};
MochiKit.HeapQ.isHeap=function(lst,cmp){
cmp=cmp||MochiKit.Base.operator.cle;
for(var pos=1;pos<lst.length;++pos){
var _a3d=(pos-1)>>1;
if(!cmp(lst[_a3d],lst[pos])){
return false;
}
}
return true;
};
MochiKit.HeapQ.heapSort=function(_a3e,cmp){
var m=MochiKit;
var h=m.Iter.list(_a3e);
m.HeapQ.heapify(h,cmp);
return m.Base.map(m.Base.partial(m.HeapQ.heapPop,h,cmp),m.Iter.range(h.length));
};
MochiKit.HeapQ.__new__=function(){
};
MochiKit.HeapQ.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.HeapQ);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit._MersenneTwister19937");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"_MersenneTwister19937","1.5",["Base"]);
MochiKit._MersenneTwister19937=function(){
var N=624;
var M=397;
var _a44=2567483615;
var _a45=2147483648;
var _a46=2147483647;
var mt=new Array(N);
var mti=N+1;
function unsigned32(n1){
return n1<0?(n1^_a45)+_a45:n1;
}
function subtraction32(n1,n2){
return n1<n2?unsigned32((4294967296-(n2-n1))&4294967295):n1-n2;
}
function addition32(n1,n2){
return unsigned32((n1+n2)&4294967295);
}
function multiplication32(n1,n2){
var sum=0;
for(var i=0;i<32;++i){
if((n1>>>i)&1){
sum=addition32(sum,unsigned32(n2<<i));
}
}
return sum;
}
this.init_genrand=function(s){
mt[0]=unsigned32(s&4294967295);
for(mti=1;mti<N;mti++){
mt[mti]=addition32(multiplication32(1812433253,unsigned32(mt[mti-1]^(mt[mti-1]>>>30))),mti);
mt[mti]=unsigned32(mt[mti]&4294967295);
}
};
this.init_by_array=function(_a53,_a54){
var i,j,k;
this.init_genrand(19650218);
i=1;
j=0;
k=(N>_a54?N:_a54);
for(;k;k--){
mt[i]=addition32(addition32(unsigned32(mt[i]^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1664525)),_a53[j]),j);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=_a54){
j=0;
}
}
for(k=N-1;k;k--){
mt[i]=subtraction32(unsigned32((mt[i])^multiplication32(unsigned32(mt[i-1]^(mt[i-1]>>>30)),1566083941)),i);
mt[i]=unsigned32(mt[i]&4294967295);
i++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
}
mt[0]=2147483648;
};
this.genrand_int32=function(){
var y;
var _a59=new Array(0,_a44);
if(mti>=N){
var kk;
if(mti==N+1){
this.init_genrand(5489);
}
for(kk=0;kk<N-M;kk++){
y=unsigned32((mt[kk]&_a45)|(mt[kk+1]&_a46));
mt[kk]=unsigned32(mt[kk+M]^(y>>>1)^_a59[y&1]);
}
for(;kk<N-1;kk++){
y=unsigned32((mt[kk]&_a45)|(mt[kk+1]&_a46));
mt[kk]=unsigned32(mt[kk+(M-N)]^(y>>>1)^_a59[y&1]);
}
y=unsigned32((mt[N-1]&_a45)|(mt[0]&_a46));
mt[N-1]=unsigned32(mt[M-1]^(y>>>1)^_a59[y&1]);
mti=0;
}
y=mt[mti++];
y=unsigned32(y^(y>>>11));
y=unsigned32(y^((y<<7)&2636928640));
y=unsigned32(y^((y<<15)&4022730752));
y=unsigned32(y^(y>>>18));
return y;
};
this.genrand_int31=function(){
return (this.genrand_int32()>>>1);
};
this.genrand_real1=function(){
return this.genrand_int32()*(1/4294967295);
};
this.genrand_real2=function(){
return this.genrand_int32()*(1/4294967296);
};
this.genrand_real3=function(){
return ((this.genrand_int32())+0.5)*(1/4294967296);
};
this.genrand_res53=function(){
var a=this.genrand_int32()>>>5,b=this.genrand_int32()>>>6;
return (a*67108864+b)*(1/9007199254740992);
};
this._getState=function(){
return {mt:mt.slice(),mti:mti};
};
this._setState=function(_a5d){
mt=_a5d.mt;
mti=_a5d.mti;
};
};
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Random");
goog.require("MochiKit.Base");
goog.require("MochiKit._MersenneTwister19937");
}
MochiKit.Base.module(MochiKit,"Random","1.5",["Base","_MersenneTwister19937"]);
MochiKit.Random.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
MochiKit.Random._generator.seed(x);
};
MochiKit.Random.getState=function(){
return MochiKit.Random._generator.getState();
};
MochiKit.Random.setState=function(_a5f){
MochiKit.Random._generator.setState(_a5f);
};
MochiKit.Random.random=function(){
return MochiKit.Random._generator.random();
};
MochiKit.Random.randRange=function(_a60,_a61,step){
var self=MochiKit.Random;
if(arguments.length==1){
_a61=_a60;
_a60=0;
}
step=step||1;
var _a64=_a61-_a60;
if(step==1&&_a64>0){
return Math.floor(_a60+Math.floor(self.random()*_a64));
}
if(step>0){
var n=Math.floor((_a64+step-1)/step);
}else{
if(step<0){
var n=Math.floor((_a64+step+1)/step);
}
}
return _a60+step*Math.floor(self.random()*n);
};
MochiKit.Random.uniform=function(a,b){
return a+(b-a)*MochiKit.Random.random();
};
MochiKit.Random.shuffle=function(_a68){
for(var i=_a68.length-1;i>0;--i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
var tmp=_a68[i];
_a68[i]=_a68[j];
_a68[j]=tmp;
}
return _a68;
};
MochiKit.Random.deal=function(_a6c,func){
func=func||MochiKit.Base.operator.identity;
var deck=new Array(_a6c);
for(var i=0;i<_a6c;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
deck[i]=deck[j];
deck[j]=func(i);
}
return deck;
};
MochiKit.Random.choice=function(seq){
return seq[Math.floor(MochiKit.Random.random()*seq.length)];
};
MochiKit.Random.shuffled=function(_a72){
var n=_a72.length;
var a=new Array(n);
a[0]=_a72[0];
for(var i=1;i<n-1;++i){
var j=Math.floor(MochiKit.Random.random()*(i+1));
a[i]=a[j];
a[j]=_a72[i];
}
return a;
};
MochiKit.Random.sample=function(_a77,k){
var n=_a77.length;
var _a7a=new Array(k);
var _a7b={};
for(var i=0;i<k;++i){
var j=MochiKit.Random.randRange(n);
while(j in _a7b){
j=MochiKit.Random.randRange(n);
}
_a7b[j]=true;
_a7a[i]=_a77[j];
}
return _a7a;
};
MochiKit.Random._IRndGenerator=function(){
};
MochiKit.Random._IRndGenerator.prototype.seed=function(x){
};
MochiKit.Random._IRndGenerator.prototype.getState=function(){
};
MochiKit.Random._IRndGenerator.prototype.setState=function(_a7f){
};
MochiKit.Random._IRndGenerator.prototype.random=function(){
};
MochiKit.Random.MersenneTwister=function(x){
this._mt=new MochiKit._MersenneTwister19937();
this.seed(x);
};
MochiKit.Random.MersenneTwister.prototype.seed=function(x){
x=typeof x=="number"?x:(new Date()).getTime();
this._mt.init_genrand(x);
};
MochiKit.Random.MersenneTwister.prototype.getState=function(){
return this._mt._getState();
};
MochiKit.Random.MersenneTwister.prototype.setState=function(_a82){
this._mt._setState(_a82);
};
MochiKit.Random.MersenneTwister.prototype.random=function(){
return this._mt.genrand_real2();
};
MochiKit.Random.SystemRandom=function(){
};
MochiKit.Random.SystemRandom.prototype.seed=function(x){
};
MochiKit.Random.SystemRandom.prototype.getState=function(){
};
MochiKit.Random.SystemRandom.prototype.setState=function(_a84){
};
MochiKit.Random.SystemRandom.prototype.random=function(){
return Math.random();
};
MochiKit.Random._generator=null;
MochiKit.Random._setGenerator=function(_a85){
MochiKit.Random._generator=_a85;
};
MochiKit.Random.__new__=function(){
MochiKit.Random._setGenerator(new MochiKit.Random.MersenneTwister());
};
MochiKit.Random.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Random);
if(typeof goog!="undefined"&&typeof goog.provide=="function"){
goog.provide("MochiKit.Bisect");
goog.require("MochiKit.Base");
}
MochiKit.Base.module(MochiKit,"Bisect","1.5",["Base"]);
MochiKit.Bisect.bisectRight=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(x,a[mid])<0){
hi=mid;
}else{
lo=mid+1;
}
}
return lo;
};
MochiKit.Bisect.insortRight=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectRight(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisectLeft=function(a,x,lo,hi){
lo=lo||0;
hi=hi||a.length;
while(lo<hi){
var mid=Math.floor((lo+hi)/2);
if(MochiKit.Base.compare(a[mid],x)<0){
lo=mid+1;
}else{
hi=mid;
}
}
return lo;
};
MochiKit.Bisect.insortLeft=function(a,x,lo,hi){
lo=MochiKit.Bisect.bisectLeft(a,x,lo,hi);
a.splice(lo,0,x);
return a;
};
MochiKit.Bisect.bisect=MochiKit.Bisect.bisectRight;
MochiKit.Bisect.insort=MochiKit.Bisect.insortRight;
MochiKit.Bisect.__new__=function(){
};
MochiKit.Bisect.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Bisect);


